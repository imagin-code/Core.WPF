<i:MainWindow x:Class="Demo.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:g="urn:gong-wpf-dragdrop"
    xmlns:i="http://imagin.tech/imagin/wpf"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Demo"
    xmlns:Analytics="clr-namespace:Imagin.Core.Analytics;assembly=Imagin.Core"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    Height="{i:Options WindowHeight, Mode=TwoWay}"
    i:LocalizeDictionary.DesignCulture="en"
    i:ResxLocalizationProvider.DefaultAssembly="{i:DefaultAssemblyName}"
    i:ResxLocalizationProvider.DefaultDictionary="Main"
    i:XWindow.FooterVisibility="Collapsed"
    i:XWindow.TitleIcon="{i:ProjectImage Logo.png}"
    Title="{i:AssemblyProduct}"
    Width="{i:Options WindowWidth, Mode=TwoWay}"
    WindowState="{i:Options WindowState, Mode=TwoWay}">
    <i:XWindow.HeaderButtons>
        <i:WindowButtons>
            <i:WindowButton
                Command="{Binding ShowAboutWindowCommand}"
                Content="{i:InternalImage Image=Info}"
                ContentSize="12,12"
                IsCheckable="False"
                ToolTip="About"/>
            <i:WindowButton
                Content="{i:InternalImage Image=Options}"
                ContentSize="12,12"
                IsCheckable="True"
                IsChecked="{i:PanelBinding IsVisible, i:OptionsPanel, Mode=TwoWay}"
                ToolTip="Options"/>
        </i:WindowButtons>
    </i:XWindow.HeaderButtons>
    <i:DockControl
        ActiveContent="{i:TwoWay ActiveContent}"
        ActiveDocument="{i:TwoWay ActiveDocument}"
        ActivePanel="{i:TwoWay ActivePanel}"
        AutoSave="{i:Options AutoSaveLayout}"
        Documents="{Binding Documents}"
        Layouts="{i:Options Layouts}"
        Margin="5"
        Panels="{Binding Panels}">
        <i:DockControl.PanelTemplateSelector>
            <i:PanelTemplateSelector>
                <DataTemplate DataType="{x:Type local:ControlsPanel}">
                    <local:ElementView Panel="{Binding}" SelectedElement="{Binding SelectedElement, Mode=TwoWay}">
                        <local:ElementView.Elements>
                            <!-- ... Adorners -->
                            <local:Element Category="Adorner" Type="i:DropAdorner">
                                <local:Element.Options>
                                    <TextBox 
                                        AllowDrop="True"
                                        g:DragDrop.DropHandler="{i:Self Path=(i:XElement.DefaultDropHandler)}"
                                        g:DragDrop.IsDropTarget="True"
                                        i:XControl.DropTemplateVisibility="Visible"
                                        i:XTextBoxBase.Placeholder="Drag something over me..."
                                        VerticalAlignment="Top"/>
                                </local:Element.Options>
                            </local:Element>
                            <local:Element Category="Adorner" Type="i:ResizeAdorner">
                                <local:Element.Options>
                                    <Canvas>
                                        <Rectangle
                                            Canvas.Left="100"
                                            Canvas.Top="100"
                                            Fill="Red"
                                            Height="64"
                                            Stroke="Green"
                                            StrokeThickness="2"
                                            Width="64"
                                            i:XElement.CanResize="True"
                                            i:XElement.ResizeSnap="4">
                                            <i:XElement.ResizeThumbStyle>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Border
                                                                    Background="Blue"
                                                                    Cursor="{TemplateBinding Cursor}">
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </i:XElement.ResizeThumbStyle>
                                        </Rectangle>
                                    </Canvas>
                                </local:Element.Options>
                            </local:Element>
                            <local:Element Category="Adorner" Type="i:RippleAdorner">
                                <local:Element.Options>
                                    <Button Content="Click me"
                                        HorizontalAlignment="Center"
                                        i:XElement.Ripple="True"
                                        i:XElement.RippleLocation="Cursor"
                                        i:XElement.RippleStroke="#007acc"
                                        VerticalAlignment="Center"/>
                                </local:Element.Options>
                            </local:Element>
                            <local:Element Category="Adorner" Type="i:SelectionAdorner">
                                <local:Element.Options>
                                    <Grid Background="#11000000"
                                        i:XElement.CanSelect="True"/>
                                </local:Element.Options>
                            </local:Element>
                            <!-- ... Border -->
                            <local:Element Category="Border" Type="Border">
                                <local:Element.Options>
                                    <StackPanel i:XPanel.Spacing="0,0,0,5"
                                        i:XPanel.SpacingExcept="Last">
                                        <i:TitleLabel Content="{x:Type i:AllBorder}" 
                                            Step="6"/>
                                        <i:AllBorder Background="White"
                                            Padding="16"/>
                                        <i:TitleLabel Content="{x:Type i:LeftBorder}" 
                                            Step="6"/>
                                        <i:LeftBorder Background="White"
                                            Padding="16"/>
                                        <i:TitleLabel Content="{x:Type i:TopBorder}" 
                                            Step="6"/>
                                        <i:TopBorder Background="White"
                                            Padding="16"/>
                                        <i:TitleLabel Content="{x:Type i:RightBorder}" 
                                            Step="6"/>
                                        <i:RightBorder Background="White"
                                            Padding="16"/>
                                        <i:TitleLabel Content="{x:Type i:BottomBorder}" 
                                            Step="6"/>
                                        <i:BottomBorder Background="White"
                                            Padding="16"/>
                                    </StackPanel>
                                </local:Element.Options>
                            </local:Element>
                            <local:Element Category="Border" Type="i:DashedBorder">
                                <i:DashedBorder Background="White"
                                    BorderBrush="{i:ThemeKey Key=Border}" 
                                    BorderThickness="3"
                                    Padding="16"/>
                            </local:Element>
                            <!-- ... Brush -->
                            <local:Element Category="Brush" Type="i:CheckerBrush">
                                <local:Element.Options>
                                    <Border Background="{x:Static i:CheckerBrush.Default}"/>
                                </local:Element.Options>
                            </local:Element>
                            <!-- ... Button -->
                            <local:Element Category="Button" Type="Button">
                                <Button Content="Click me"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="Button" Type="i:FolderButton">
                                <i:FolderButton
                                    HorizontalAlignment="Left"
                                    i:XExplorer.Path="{i:SpecialFolder Folder=MyDocuments}"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="Button" Type="i:ImageButton">
                                <i:ImageButton 
                                    ButtonToolTip="Dropdown tip"
                                    ButtonVisibility="Visible"
                                    Content="Options"
                                    HorizontalAlignment="Left"
                                    Source="{i:InternalImage Image=Options}" 
                                    ToolTip="Button tip"
                                    VerticalAlignment="Top">
                                    <i:ImageButton.Menu>
                                        <ContextMenu>
                                            <MenuItem Header="Option 1"/>
                                            <MenuItem Header="Option 2"/>
                                            <MenuItem Header="Option 3"/>
                                            <MenuItem Header="Option 4"/>
                                            <MenuItem Header="Option 5"/>
                                            <MenuItem Header="Option 6"/>
                                            <MenuItem Header="Option 7"/>
                                            <MenuItem Header="Option 8"/>
                                        </ContextMenu>
                                    </i:ImageButton.Menu>
                                </i:ImageButton>
                            </local:Element>
                            <!-- ... ColorSelector -->
                            <local:Element Category="ColorSelector" Type="i:AlphaSlider">
                                <i:AlphaSlider
                                    Color="Red"
                                    Value="1"
                                    Width="32"/>
                            </local:Element>
                            <local:Element Category="ColorSelector" Type="i:ComponentSelector2D">
                                <i:ComponentSelector2D
                                    Model="{i:RemoteBinding RemoteSource=MainViewModel, Path=ColorConverter.VisualModel}"
                                    X="{i:RemoteBinding RemoteSource=MainViewModel, Path=Color.X, Mode=TwoWay}"
                                    Y="{i:RemoteBinding RemoteSource=MainViewModel, Path=Color.Y, Mode=TwoWay}"
                                    Z="{i:RemoteBinding RemoteSource=MainViewModel, Path=Color.Z, Mode=TwoWay}"/>
                            </local:Element>
                            <local:Element Category="ColorSelector" Type="i:ComponentSlider">
                                <i:ComponentSlider
                                    Component="{i:RemoteBinding RemoteSource=MainViewModel, Path=Color.Component}"
                                    Model="{i:RemoteBinding RemoteSource=MainViewModel, Path=Color.Model}"
                                    X="{i:RemoteBinding RemoteSource=MainViewModel, Path=Color.X, Mode=TwoWay}"
                                    Y="{i:RemoteBinding RemoteSource=MainViewModel, Path=Color.Y, Mode=TwoWay}"
                                    Z="{i:RemoteBinding RemoteSource=MainViewModel, Path=Color.Z, Mode=TwoWay}"
                                    Width="32"/>
                            </local:Element>
                            <!-- ... ComboBox -->
                            <local:Element Category="ComboBox" Type="i:AddressBox">
                                <i:AddressBox 
                                    Favorites="{i:Options Favorites}"
                                    i:XExplorer.Path="{i:SpecialFolder Desktop}"
                                    Padding="2.5"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="ComboBox" Type="ComboBox">
                                <local:Element.Options>
                                    <StackPanel i:XPanel.Spacing="0,0,0,5" i:XPanel.SpacingExcept="Last">
                                        <i:TitleLabel Content="{x:Type i:SelectionMode}" Step="5"/>
                                        
                                        <i:TitleLabel Content="{x:Static i:SelectionMode.Multiple}" Step="6"/>
                                        <ComboBox ItemsSource="{i:Enumerate i:ItemType}"
                                            i:XComboBox.Placeholder="(no selection)"
                                            i:XComboBox.SelectionMode="Multiple"/>
                                        <i:TitleLabel Content="{x:Static i:SelectionMode.Single}" Step="6"/>
                                        <ComboBox ItemsSource="{i:Enumerate i:ItemType}"
                                            i:XComboBox.Placeholder="(no selection)"
                                            i:XComboBox.SelectionMode="Single"/>
                                        <i:TitleLabel Content="{x:Static i:SelectionMode.SingleOrNone}" Step="6"/>
                                        <ComboBox ItemsSource="{i:Enumerate i:ItemType}"
                                            i:XComboBox.Placeholder="(no selection)"
                                            i:XComboBox.SelectionMode="SingleOrNone"/>

                                        <i:TitleLabel Content="{x:Static i:XComboBox.FlagsProperty}" Step="5"/>
                                        <ComboBox
                                            ItemsSource="{i:Enumerate i:ItemType}"
                                            i:XComboBox.Placeholder="(no selection)"
                                            i:XComboBox.SelectionMode="Multiple">
                                            <i:XComboBox.SelectedItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{i:Ancestor ComboBox, Path=(i:XComboBox.Flags)}"/>
                                                </DataTemplate>
                                            </i:XComboBox.SelectedItemTemplate>
                                        </ComboBox>
                                    </StackPanel>
                                </local:Element.Options>
                                <ComboBox ItemsSource="{i:Enumerate i:ItemType}"
                                    i:XComboBox.Placeholder="(no selection)"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="ComboBox" Type="i:FolderBox">
                                <i:FolderBox
                                    HorizontalAlignment="Left"
                                    i:XComboBox.Placeholder="Choose something..."
                                    i:XExplorer.Path="{i:SpecialFolder Folder=MyDocuments}"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="ComboBox" Type="i:FontFamilyBox">
                                <i:FontFamilyBox
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="ComboBox" Type="i:FontSizeBox">
                                <i:FontSizeBox 
                                    IsEditable="True"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="ComboBox" Type="i:FontStyleBox">
                                <i:FontStyleBox
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="ComboBox" Type="i:FontWeightBox">
                                <i:FontWeightBox
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="ComboBox" Type="i:TimeZoneBox">
                                <i:TimeZoneBox
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <!-- ... ContentControl -->
                            <local:Element Category="ContentControl" Type="i:ContentControl3D">
                                <local:Element.Options>
                                    <i:SwitchButton Content="Flip"
                                        HorizontalAlignment="Center"
                                        IsChecked="{i:RemoteBinding RemoteSource=MainViewModel, Path=FlipContent, Mode=TwoWay}"
                                        VerticalAlignment="Center"/>
                                </local:Element.Options>
                                <i:ContentControl3D 
                                    BackContent="{i:True}"
                                    Content="{i:True}"
                                    Flip="{i:RemoteBinding RemoteSource=MainViewModel, Path=FlipContent}">
                                    <i:ContentControl3D.BackContentTemplate>
                                        <DataTemplate>
                                            <Grid Background="Blue" Height="128" Width="128"/>
                                        </DataTemplate>
                                    </i:ContentControl3D.BackContentTemplate>
                                    <i:ContentControl3D.ContentTemplate>
                                        <DataTemplate>
                                            <Grid Background="Red" Height="128" Width="128"/>
                                        </DataTemplate>
                                    </i:ContentControl3D.ContentTemplate>
                                </i:ContentControl3D>
                            </local:Element>
                            <local:Element Category="ContentControl" Type="Expander">
                                <Expander Header="Expand me" Content="This can be expanded..." VerticalContentAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="ContentControl" Type="GroupBox">
                                <GroupBox Header="This is the header" VerticalAlignment="Top">
                                    This is the content...
                                </GroupBox>
                            </local:Element>
                            <local:Element Category="ContentControl" Type="i:ResultControl">
                                <local:Element.Options>
                                    <StackPanel i:XPanel.Spacing="0,0,0,5" i:XPanel.SpacingExcept="Last">
                                        <ComboBox
                                            ItemsSource="{i:Enumerate {x:Type Analytics:ResultTypes}}"
                                            SelectedItem="{i:RemoteBinding RemoteSource=MainViewModel, Path=ResultType, Mode=TwoWay}"/>
                                        <TextBox i:XTextBoxBase.Placeholder="Write a message..."
                                            Text="{i:RemoteBinding RemoteSource=MainViewModel, Path=ResultText, Mode=TwoWay}"/>
                                        <Button
                                            Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=AddResultCommand}"
                                            Content="Add"/>
                                    </StackPanel>
                                </local:Element.Options>
                                <i:ResultControl
                                    VerticalAlignment="Top">
                                    <Analytics:Message Text="This is a simple message."/>
                                </i:ResultControl>
                            </local:Element>
                            <local:Element Category="ContentControl" Type="i:TransitionControl">
                                <i:TransitionControl Content="{i:True}" Transition="Left">
                                    <i:TransitionControl.ContentTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid 
                                                    Background="Red"
                                                    Visibility="{Binding Converter={x:Static i:BooleanToVisibilityConverter.Default}}"/>
                                                <Grid 
                                                    Background="Blue"
                                                    Visibility="{Binding Converter={x:Static i:BooleanToVisibilityConverter.Default}, ConverterParameter=1}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </i:TransitionControl.ContentTemplate>
                                </i:TransitionControl>
                            </local:Element>
                            <!-- ... Control -->
                            <local:Element Category="Control" Type="i:AngleControl">
                                <i:AngleControl
                                    Height="256"
                                    HorizontalAlignment="Center"
                                    Width="256"/>
                            </local:Element>
                            <local:Element Category="Control" Type="i:Browser">
                                <i:Browser DataContext="{i:Options ExplorerOptions}"
                                    FileAttributes="{Binding BrowserOptions.FileAttributes}"
                                    FileExtensions="{Binding BrowserOptions.FileExtensions}"
                                    FolderAttributes="{Binding BrowserOptions.FolderAttributes}"
                                    FooterVisibility="Visible"
                                    GroupDirection="{Binding BrowserOptions.GroupDirection, Converter={x:Static i:SortDirectionConverter.Default}, Mode=TwoWay}"
                                    GroupName="{Binding BrowserOptions.GroupName, Mode=TwoWay}"
                                    History="{Binding History, Mode=TwoWay}"
                                    OpenFilesOnClick="True"
                                    i:XExplorer.Path="{Binding Path, Mode=TwoWay}"
                                    SortDirection="{Binding BrowserOptions.SortDirection, Converter={x:Static i:SortDirectionConverter.Default}, Mode=TwoWay}"
                                    SortName="{Binding BrowserOptions.SortName, Mode=TwoWay}"
                                    View="{Binding BrowserOptions.View, Mode=TwoWay}"
                                    ViewCheckBoxes="{Binding BrowserOptions.ViewCheckBoxes, Mode=TwoWay}"
                                    ViewFileExtensions="{Binding BrowserOptions.ViewFileExtensions, Mode=TwoWay}"
                                    ViewFiles="{Binding BrowserOptions.ViewFiles, Mode=TwoWay}"
                                    ViewSize="{Binding BrowserOptions.ViewSize, Mode=TwoWay}"/>
                            </local:Element>
                            <local:Element Category="Control" Type="Calendar">
                                <Viewbox>
                                    <Calendar/>
                                </Viewbox>
                            </local:Element>
                            <local:Element Category="Control" Type="i:CarouselControl">
                                <i:CarouselControl
                                    BorderBrush="#11000000"
                                    BorderThickness="1"
                                    Columns="7"
                                    ItemsSource="{i:RemoteBinding RemoteSource=MainViewModel, Path=Items}"
                                    Padding="5"
                                    SortName="Path"
                                    VerticalAlignment="Center">
                                    <i:CarouselControl.ItemTemplate>
                                        <DataTemplate>
                                            <i:Thumbnail
                                                Height="32"
                                                Path="{Binding Path}"
                                                Width="32"/>
                                        </DataTemplate>
                                    </i:CarouselControl.ItemTemplate>
                                </i:CarouselControl>
                            </local:Element>
                            <local:Element Category="Control" Type="i:Clock">
                                <Viewbox>
                                    <i:Clock/>
                                </Viewbox>
                            </local:Element>
                            <local:Element Category="Control" Type="i:ColorControl">
                                <i:ColorControl>
                                    <i:ColorControl.Documents>
                                        <i:ColorDocument/>
                                    </i:ColorControl.Documents>
                                </i:ColorControl>
                            </local:Element>
                            <local:Element Category="Control" Type="i:Console">
                                <i:Console i:XExplorer.Path="{i:SpecialFolder Desktop}"/>
                            </local:Element>
                            <local:Element Category="Control" Type="DatePicker">
                                <DatePicker VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="Control" Type="i:DirectionControl">
                                <i:DirectionControl 
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="Control" Type="i:DownloadControl">
                                <i:DownloadControl/>
                            </local:Element>
                            <local:Element Category="Control" Type="i:DualColorControl">
                                <i:DualColorControl
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="Control" Type="i:Explorer">
                                <i:Explorer
                                    BrowserOptions="{i:Options ExplorerOptions.BrowserOptions}"
                                    Favorites="{i:Options ExplorerOptions.Favorites, Mode=OneWay}"
                                    FavoriteSortDirection="{i:Options ExplorerOptions.FavoriteSortDirection, Mode=OneWay}"
                                    FavoriteSortName="{i:Options ExplorerOptions.FavoriteSortName, Mode=OneWay}"
                                    i:XExplorer.Path="{Binding Path, Mode=TwoWay}"
                                    ShowFavoriteBar="True"/>
                            </local:Element>
                            <local:Element Category="Control" Type="i:GradientControl">
                                <i:GradientControl VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="Control" Type="i:GridLines">
                                <local:Element.Options>
                                    <Slider
                                        Maximum="5"
                                        Minimum="0.01"
                                        TickFrequency="0.01"
                                        Value="{i:RemoteBinding RemoteSource=MainViewModel, Path=GridLineZoom, Mode=TwoWay}"
                                        VerticalAlignment="Top"/>
                                </local:Element.Options>
                                <i:GridLines>
                                    <i:GridLines.LayoutTransform>
                                        <ScaleTransform ScaleX="{i:RemoteBinding RemoteSource=MainViewModel, Path=GridLineZoom, Mode=OneWay}" ScaleY="{i:RemoteBinding RemoteSource=MainViewModel, Path=GridLineZoom, Mode=OneWay}"/>
                                    </i:GridLines.LayoutTransform>
                                </i:GridLines>
                            </local:Element>
                            <local:Element Category="Control" Type="PasswordBox">
                                <PasswordBox
                                    Password="This is the default password"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="Control" Type="i:PatternControl">
                                <i:PatternControl/>
                            </local:Element>
                            <local:Element Category="Control" Type="i:ProgressCircle">
                                <i:ProgressCircle/>
                            </local:Element>
                            <local:Element Category="Control" Type="i:SlideControl">
                                <i:SlideControl Path="{i:SpecialFolder Folder=MyPictures}"/>
                            </local:Element>
                            <local:Element Category="Control" Type="Slider">
                                <Slider
                                    Maximum="1"
                                    Minimum="0"
                                    TickFrequency="0.01"
                                    Value="0"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="Control" Type="i:ThicknessControl">
                                <i:ThicknessControl VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="Control" Type="i:Thumbnail">
                                <i:Thumbnail
                                    Height="128"
                                    Path="{i:SpecialFolder Desktop}"
                                    Width="128"/>
                            </local:Element>
                            <local:Element Category="Control" Type="i:UnitControl">
                                <i:UnitControl
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <!-- ... DataGrid -->
                            <local:Element Category="DataGrid" Type="DataGrid">
                                <DataGrid
                                    ItemsSource="{i:RemoteBinding RemoteSource=MainViewModel, Path=Items}"
                                    SelectionMode="Extended">
                                    <DataGrid.Columns>
                                        <DataGridCheckBoxColumn
                                            Header="{x:Null}" 
                                            Binding="{Binding IsSelected, Mode=TwoWay}"
                                            SortMemberPath="IsSelected"/>
                                        <DataGridTemplateColumn
                                            Header="{x:Null}" 
                                            SortMemberPath="Path">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <i:Thumbnail
                                                        Height="16"
                                                        Path="{Binding Path}"
                                                        Width="16"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridComboBoxColumn
                                            Header="Type" 
                                            IsReadOnly="True"
                                            ItemsSource="{i:Enumerate {x:Type i:ItemType}}"
                                            SelectedItemBinding="{Binding Type, Mode=OneWay}"
                                            SortMemberPath="Type"/>
                                        <DataGridTextColumn 
                                            Binding="{Binding Path, Converter={x:Static i:FileNameConverter.Default}, Mode=OneWay}"
                                            Header="Name" 
                                            SortMemberPath="Path"/>
                                        <DataGridTextColumn 
                                            Binding="{Binding Size, Converter={x:Static i:FileSizeConverter.Default}, Mode=OneWay}"
                                            Header="Size"
                                            SortMemberPath="Size"/>
                                        <DataGridTextColumn 
                                            Binding="{Binding Accessed, Converter={x:Static i:RelativeTimeConverter.Default}, Mode=OneWay}"
                                            Header="Accessed"
                                            SortMemberPath="Accessed"/>
                                        <DataGridTextColumn 
                                            Binding="{Binding Created, Converter={x:Static i:RelativeTimeConverter.Default}, Mode=OneWay}"
                                            Header="Created"
                                            SortMemberPath="Created"/>
                                        <DataGridTextColumn 
                                            Binding="{Binding Modified, Converter={x:Static i:RelativeTimeConverter.Default}, Mode=OneWay}"
                                            Header="Modified"
                                            SortMemberPath="Modified"/>
                                        <DataGridCheckBoxColumn
                                            Binding="{Binding IsHidden, Mode=TwoWay}"
                                            Header="Hidden" 
                                            SortMemberPath="IsHidden"/>
                                        <DataGridHyperlinkColumn
                                            Binding="{Binding Path, Mode=OneWay}"
                                            ContentBinding="{Binding Source=Open}"
                                            Header="{x:Null}" 
                                            SortMemberPath="{x:Null}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </local:Element>
                            <local:Element Category="DataGrid" Type="i:MemberGrid">
                                <local:Element.Options>
                                    <StackPanel
                                        i:XPanel.Spacing="0,0,0,5"
                                        i:XPanel.SpacingExcept="Last">
                                        <Button Content="Anonymous"
                                            Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=MemberGridSourceCommand}"
                                            CommandParameter="0"/>
                                        <Button Content="Dependency"
                                            Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=MemberGridSourceCommand}"
                                            CommandParameter="1"/>
                                        <Button Content="Reference"
                                            Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=MemberGridSourceCommand}"
                                            CommandParameter="2"/>
                                        <Button Content="Value"
                                            Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=MemberGridSourceCommand}"
                                            CommandParameter="3"/>
                                    </StackPanel>
                                </local:Element.Options>
                                <i:MemberGrid
                                    BorderThickness="0"
                                    HeaderVisibility="Visible"
                                    HeadersVisibility="Column"
                                    Margin="-10"
                                    Source="{i:RemoteBinding RemoteSource=MainViewModel, Path=MemberGridSource}"/>
                            </local:Element>
                            <!-- ... FrameworkElement -->
                            <local:Element Category="FrameworkElement" Type="i:FillElement">
                                <i:FillElement Fill="Red"/>
                            </local:Element>
                            <local:Element Category="FrameworkElement" Type="i:ImageElement">
                                <i:ImageElement
                                    HorizontalAlignment="Left"
                                    Source="{i:InternalImage Image=Options}"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="FrameworkElement" Type="i:LineElement">
                                <i:LineElement
                                    Stroke="Black" 
                                    StrokeThickness="1"
                                    Orientation="Vertical"/>
                            </local:Element>
                            <local:Element Category="FrameworkElement" Type="i:RotateElement">
                                <i:RotateElement
                                    HorizontalAlignment="Left"
                                    Rotate="{i:Self Child.IsChecked}"
                                    Rotation="-90,0"
                                    VerticalAlignment="Top">
                                    <i:ImageToggleButton Source="{i:InternalImage Image=TriangleDown}"/>
                                </i:RotateElement>
                            </local:Element>
                            <local:Element Category="FrameworkElement" Type="i:Ruler">
                                <i:Ruler
                                    HorizontalAlignment="Stretch" 
                                    VerticalAlignment="Top"
                                    Height="64"
                                    Zoom="1"/>
                            </local:Element>
                            <!-- ... Grid -->
                            <local:Element Category="Grid" Type="GridSplitter">
                                <Grid i:XGrid.AutoColumns="True"
                                    i:XGrid.Columns="*,4,*">
                                    <Grid Background="Red"/>
                                    <GridSplitter ResizeDirection="Columns"/>
                                    <Grid Background="Blue"/>
                                </Grid>
                            </local:Element>
                            <local:Element Category="Grid" Type="i:SplitGrid">
                                <i:SplitGrid Orientation="Vertical">
                                    <i:SplitGrid.Panel1>
                                        <Grid Background="Red"/>
                                    </i:SplitGrid.Panel1>
                                    <i:SplitGrid.Panel2>
                                        <Grid Background="Blue"/>
                                    </i:SplitGrid.Panel2>
                                </i:SplitGrid>
                            </local:Element>
                            <!-- ... Image -->
                            <local:Element Category="Image" Type="Image">
                                <Image
                                    i:ImageBehavior.AnimatedSource="{i:Image Demo, Matrix.gif}"
                                    i:ImageBehavior.AnimationDuration="0:0:3"
                                    i:ImageBehavior.RepeatBehavior="Forever"
                                    i:ImageBehavior.AutoStart="True"
                                    Height="512"
                                    Width="512"/>
                            </local:Element>
                            <!-- ... ItemsControl -->
                            <local:Element Category="ItemsControl" Type="i:FlagGroup">
                                <i:FlagGroup
                                    Type="i:ItemType"
                                    Value="{x:Static i:ItemType.File}"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="ItemsControl" Type="i:RadioGroup">
                                <i:RadioGroup
                                    GroupName="Numbers"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <RadioButton Content="First" IsChecked="True"/>
                                    <RadioButton Content="Second"/>
                                    <RadioButton Content="Third"/>
                                    <RadioButton Content="Fourth"/>
                                    <RadioButton Content="Fifth"/>
                                </i:RadioGroup>
                            </local:Element>
                            <!-- ... Label -->
                            <local:Element Category="Label" Type="i:AccentLabel">
                                <i:AccentLabel
                                    Content="This is shaded"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="Label" Type="i:TitleLabel">
                                <StackPanel
                                    i:XPanel.Spacing="0,0,0,5"
                                    i:XPanel.SpacingExcept="Last">
                                    <i:TitleLabel
                                        Content="Heading 1"
                                        Step="1"/>
                                    <i:TitleLabel
                                        Content="Heading 2"
                                        Step="2"/>
                                    <i:TitleLabel
                                        Content="Heading 3"
                                        Step="3"/>
                                    <i:TitleLabel
                                        Content="Heading 4"
                                        Step="4"/>
                                    <i:TitleLabel
                                        Content="Heading 5"
                                        Step="5"/>
                                    <i:TitleLabel
                                        Content="Heading 6"
                                        Step="6"/>
                                </StackPanel>
                            </local:Element>
                            <!-- ... ListBox -->
                            <local:Element Category="ListBox" Type="ListBox">
                                <ListBox/>
                            </local:Element>
                            <local:Element Category="ListBox" Type="ListView">
                                <ListView/>
                            </local:Element>
                            <!-- ... Menu -->
                            <local:Element Category="Menu" Type="i:EnumMenuItem"/>
                            <local:Element Category="Menu" Type="i:FlagMenuItem"/>
                            <local:Element Category="Menu" Type="i:SliderMenuItem"/>
                            <local:Element Category="Menu" Type="MenuItem"/>
                            <local:Element Category="Menu" Type="Menu">
                                <Menu>
                                    <MenuItem Header="Item 1">
                                        <MenuItem Header="Item 1">
                                            <MenuItem Header="Item 1"/>
                                            <MenuItem Header="Item 2"/>
                                            <MenuItem Header="Item 3"/>
                                        </MenuItem>
                                        <MenuItem Header="Item 2">
                                            <MenuItem Header="Item 1"/>
                                            <MenuItem Header="Item 2"/>
                                            <MenuItem Header="Item 3"/>
                                        </MenuItem>
                                        <MenuItem Header="Item 3">
                                            <MenuItem Header="Item 1"/>
                                            <MenuItem Header="Item 2"/>
                                            <MenuItem Header="Item 3"/>
                                        </MenuItem>
                                    </MenuItem>
                                    <MenuItem Header="Item 2">
                                        <MenuItem Header="Item 1">
                                            <MenuItem Header="Item 1"/>
                                            <MenuItem Header="Item 2"/>
                                            <MenuItem Header="Item 3"/>
                                        </MenuItem>
                                        <MenuItem Header="Item 2">
                                            <MenuItem Header="Item 1"/>
                                            <MenuItem Header="Item 2"/>
                                            <MenuItem Header="Item 3"/>
                                        </MenuItem>
                                        <MenuItem Header="Item 3">
                                            <MenuItem Header="Item 1"/>
                                            <MenuItem Header="Item 2"/>
                                            <MenuItem Header="Item 3"/>
                                        </MenuItem>
                                    </MenuItem>
                                    <MenuItem Header="Item 3">
                                        <MenuItem Header="Item 1">
                                            <MenuItem Header="Item 1"/>
                                            <MenuItem Header="Item 2"/>
                                            <MenuItem Header="Item 3"/>
                                        </MenuItem>
                                        <MenuItem Header="Item 2">
                                            <MenuItem Header="Item 1"/>
                                            <MenuItem Header="Item 2"/>
                                            <MenuItem Header="Item 3"/>
                                        </MenuItem>
                                        <MenuItem Header="Item 3">
                                            <MenuItem Header="Item 1"/>
                                            <MenuItem Header="Item 2"/>
                                            <MenuItem Header="Item 3"/>
                                        </MenuItem>
                                    </MenuItem>
                                </Menu>
                            </local:Element>
                            <!-- ... Panel -->
                            <local:Element Category="Panel" Type="i:AlignableWrapPanel">
                                <i:AlignableWrapPanel 
                                    HorizontalContentAlignment="Center"
                                    i:XPanel.Spacing="0,0,5,5">
                                    <Button Content="Button 1"/>
                                    <Button Content="Button 2"/>
                                    <Button Content="Button 3"/>
                                    <Button Content="Button 4"/>
                                    <Button Content="Button 5"/>
                                </i:AlignableWrapPanel>
                            </local:Element>
                            <local:Element Category="Panel" Type="Canvas">
                                <Canvas i:XCanvas.CanDrag="True">
                                    <Ellipse
                                        Canvas.Left="16"
                                        Canvas.Top="32"
                                        Fill="Red"
                                        Height="32"
                                        Width="32"/>
                                    <Ellipse
                                        Canvas.Left="48"
                                        Canvas.Top="32"
                                        Fill="Green"
                                        Height="32"
                                        Width="32"/>
                                    <Ellipse
                                        Canvas.Left="80"
                                        Canvas.Top="32"
                                        Fill="Blue"
                                        Height="32"
                                        Width="32"/>
                                </Canvas>
                            </local:Element>
                            <!-- ... PickerBox -->
                            <local:Element Category="PickerBox" Type="i:ColorBox">
                                <i:ColorBox 
                                    HorizontalAlignment="Left"
                                    Value="Red"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="PickerBox" Type="i:GradientBox">
                                <i:GradientBox 
                                    Height="30"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Width="256"/>
                            </local:Element>
                            <!-- ... PickerWindow -->
                            <local:Element Category="PickerWindow" Type="i:ColorWindow">
                                <local:Element.Options>
                                    <Button Content="Show"
                                        Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=ShowColorWindowCommand}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"/>
                                </local:Element.Options>
                            </local:Element>
                            <local:Element Category="PickerWindow" Type="i:GradientWindow">
                                <local:Element.Options>
                                    <Button Content="Show"
                                        Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=ShowGradientWindowCommand}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"/>
                                </local:Element.Options>
                            </local:Element>
                            <!-- ... ProgressBar -->
                            <local:Element Category="ProgressBar" Type="ProgressBar">
                                <ProgressBar
                                    Height="32"
                                    IsIndeterminate="True"
                                    VerticalAlignment="Center"/>
                            </local:Element>
                            <local:Element Category="ProgressBar" Type="i:ProgressLine">
                                <i:ProgressLine
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                            </local:Element>
                            <local:Element Category="ProgressBar" Type="i:ProgressRing">
                                <i:ProgressRing
                                    Value="0.75"/>
                            </local:Element>
                            <!-- ... RichTextBox -->
                            <local:Element Category="RichTextBox" Type="i:MultiPathBox">
                                <i:MultiPathBox
                                    BrowseMode="OpenFolder"
                                    i:XTextBoxBase.Placeholder="Drop item(s) here..."
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="RichTextBox" Type="RichTextBox">
                                <RichTextBox i:XTextBoxBase.Placeholder="Write something..."/>
                            </local:Element>
                            <local:Element Category="RichTextBox" Type="i:TokenBox">
                                <i:TokenBox Source="Bob;Joseph;Sally;Matilda;Ralph;Brittany;Luna;Ann;"
                                    i:XTextBoxBase.Placeholder="Write something..."
                                    VerticalAlignment="Top">
                                    <i:TokenBox.TokenStyle>
                                        <Style TargetType="{x:Type i:TokenButton}" BasedOn="{StaticResource {x:Type i:TokenButton}}">
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <i:ImageElement
                                                                Source="{i:InternalImage Image=Tag}"/>
                                                            <TextBlock 
                                                                Margin="10,0,0,0"
                                                                Text="{Binding Mode=OneWay}"/>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </i:TokenBox.TokenStyle>
                                </i:TokenBox>
                            </local:Element>
                            <!-- ... StorageWindow -->
                            <local:Element Category="StorageWindow" Type="i:ExplorerWindow">
                                <local:Element.Options>
                                    <Button Content="Show"
                                        Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=ShowExplorerWindowCommand}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"/>
                                </local:Element.Options>
                            </local:Element>
                            <!-- ... TabControl -->
                            <local:Element Category="TabControl" Type="TabControl">
                                <TabControl>
                                    <TabItem Header="Tab 1"/>
                                    <TabItem Header="Tab 2"/>
                                    <TabItem Header="Tab 3"/>
                                </TabControl>
                            </local:Element>
                            <!-- ... TextBox -->
                            <local:Element Category="TextBox" Type="i:PathBox">
                                <i:PathBox
                                    BrowseMode="OpenFolder"
                                    i:XTextBoxBase.Placeholder="Drop an item here..."
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="TextBox" Type="TextBox">
                                <TextBox
                                    i:XTextBoxBase.Placeholder="Click to show suggestions..."
                                    i:XTextBoxBase.Suggestions="{i:RemoteBinding RemoteSource=MainViewModel, Path=TextBoxSuggestions}"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <!-- ... TextElement -->
                            <local:Element Category="TextElement" Type="i:BulletElement">
                                <i:BulletElement
                                    Bullet="LetterLowerParenthesis"
                                    HorizontalAlignment="Left"
                                    Value="1"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="TextElement" Type="Hyperlink">
                                <local:Element.Options>
                                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top"><Hyperlink NavigateUri="https://stackoverflow.com">Click me</Hyperlink>...</TextBlock>
                                </local:Element.Options>
                            </local:Element>
                            <!-- ... ToggleButton -->
                            <local:Element Category="ToggleButton" Type="CheckBox">
                                <CheckBox Content="Check me"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="ToggleButton" Type="i:ImageToggleButton">
                                <i:ImageToggleButton 
                                    ButtonVisibility="Visible"
                                    CheckedContent="Checked"
                                    CheckedSource="{i:InternalImage Image=Info}"
                                    CheckedToolTip="Unchecked"
                                    Content="Unchecked"
                                    HorizontalAlignment="Left"
                                    Source="{i:InternalImage Image=Options}" 
                                    ToolTip="Unchecked"
                                    VerticalAlignment="Top">
                                    <i:ImageToggleButton.Menu>
                                        <ContextMenu>
                                            <MenuItem Header="Option 1"/>
                                            <MenuItem Header="Option 2"/>
                                            <MenuItem Header="Option 3"/>
                                            <MenuItem Header="Option 4"/>
                                            <MenuItem Header="Option 5"/>
                                            <MenuItem Header="Option 6"/>
                                            <MenuItem Header="Option 7"/>
                                            <MenuItem Header="Option 8"/>
                                        </ContextMenu>
                                    </i:ImageToggleButton.Menu>
                                </i:ImageToggleButton>
                            </local:Element>
                            <local:Element Category="ToggleButton" Type="RadioButton">
                                <RadioButton Content="Check me"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="ToggleButton" Type="i:SwipeButton">
                                <i:SwipeButton
                                    BorderThickness="0"
                                    Content="{i:RemoteBinding SwipeButtonNotification, RemoteSource=MainViewModel}"
                                    Left="{i:InternalImage Image=Read}"
                                    Right="{i:InternalImage Image=Trash}"
                                    SwipeDirection="Horizontal"
                                    SwipeMode="Default"
                                    VerticalAlignment="Top">
                                    <i:SwipeButton.ContentTemplate>
                                        <DataTemplate>
                                            <Grid i:XGrid.AutoColumns="True" i:XGrid.Columns="Auto,*">
                                                <i:ImageElement
                                                    Margin="10,0,0,0"
                                                    Source="{i:InternalImage 256-Info.png}"
                                                    SourceSize="32,32"
                                                    VerticalAlignment="Center"/>
                                                <StackPanel
                                                    i:XPanel.Spacing="0,0,0,5"
                                                    i:XPanel.SpacingExcept="Last"
                                                    Margin="10">
                                                    <TextBlock FontWeight="Bold" Text="{Binding Title}"/>
                                                    <TextBlock Opacity="0.5" Text="{Binding Message}"/>
                                                    <i:AccentLabel HorizontalAlignment="Left">
                                                        <TextBlock FontStyle="Italic" Opacity="0.8" Text="{i:RelativeTimeBinding Created}"/>
                                                    </i:AccentLabel>
                                                </StackPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </i:SwipeButton.ContentTemplate>
                                    <i:SwipeButton.LeftTemplate>
                                        <DataTemplate>
                                            <Border Background="#007acc">
                                                <i:ImageElement
                                                    Foreground="White"
                                                    HorizontalAlignment="Left" VerticalAlignment="Center"
                                                    Margin="20"
                                                    Source="{Binding}"/>
                                            </Border>
                                        </DataTemplate>
                                    </i:SwipeButton.LeftTemplate>
                                    <i:SwipeButton.RightTemplate>
                                        <DataTemplate>
                                            <Border Background="#900">
                                                <i:ImageElement
                                                    Foreground="White"
                                                    HorizontalAlignment="Right" VerticalAlignment="Center"
                                                    Margin="20"
                                                    Source="{Binding}"/>
                                            </Border>
                                        </DataTemplate>
                                    </i:SwipeButton.RightTemplate>
                                </i:SwipeButton>
                            </local:Element>
                            <local:Element Category="ToggleButton" Type="i:SwitchButton">
                                <i:SwitchButton
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <!-- ... ToolBar -->
                            <local:Element Category="ToolBar" Type="ToolBar">
                                <ToolBar
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="ToolBar" Type="i:FavoriteBar">
                                <i:FavoriteBar
                                    i:XItemsControl.SortDirection="{i:Options ExplorerOptions.FavoriteSortDirection, Converter={x:Static i:SortDirectionConverter.Default}}"
                                    i:XItemsControl.SortName="{i:Options ExplorerOptions.FavoriteSortName, Converter={x:Static i:ToStringConverter.Default}}"
                                    ItemsSource="{i:Options ExplorerOptions.Favorites}"
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <!-- ... TreeView -->
                            <local:Element Category="TreeView" Type="TreeView">
                                <TreeView 
                                    i:XItemsControl.CanDragSelect="True"
                                    i:XTreeView.Mode="Grid"
                                    i:XTreeView.SelectionMode="Multiple"
                                    ItemsSource="{i:RemoteBinding RemoteSource=MainViewModel, Path=Items}">
                                    <i:XTreeView.Columns>
                                        <i:TreeViewColumnCollection>
                                            <i:TreeViewExpanderColumn/>
                                            <i:TreeViewCheckBoxColumn
                                                Header="{x:Null}" 
                                                Member="IsSelected"
                                                Mode="TwoWay"
                                                SortName="IsSelected"/>
                                            <i:TreeViewThumbnailColumn
                                                Header="{x:Null}" 
                                                Member="Path"
                                                SortName="Path">
                                            </i:TreeViewThumbnailColumn>
                                            <i:TreeViewComboBoxColumn
                                                DataType="{x:Type i:ItemType}"
                                                Header="Type" 
                                                IsReadOnly="True"
                                                Member="Type"
                                                SortName="Type"/>
                                            <i:TreeViewTextColumn 
                                                Converter="{x:Static i:FileNameConverter.Default}"
                                                Header="Name" 
                                                Member="Path"
                                                SortName="Path"/>
                                            <i:TreeViewTextColumn 
                                                Converter="{x:Static i:FileSizeConverter.Default}"
                                                Header="Size"
                                                Member="Size"
                                                SortName="Size"/>
                                            <i:TreeViewTextColumn 
                                                Converter="{x:Static i:RelativeTimeConverter.Default}"
                                                Header="Accessed"
                                                Member="Accessed"
                                                SortName="Accessed"/>
                                            <i:TreeViewTextColumn 
                                                Converter="{x:Static i:RelativeTimeConverter.Default}"
                                                Header="Created"
                                                Member="Created"
                                                SortName="Created"/>
                                            <i:TreeViewTextColumn 
                                                Converter="{x:Static i:RelativeTimeConverter.Default}"
                                                Header="Modified"
                                                Member="Modified"
                                                SortName="Modified"/>
                                            <i:TreeViewSwitchButtonColumn
                                                Header="Hidden" 
                                                Member="IsHidden"
                                                Mode="TwoWay"
                                                SortName="IsHidden"/>
                                            <i:TreeViewHyperlinkColumn
                                                Command="{x:Null}"
                                                CommandParameter="{x:Null}"
                                                Header="{x:Null}" 
                                                Member="Path"
                                                SortName="{x:Null}"
                                                Text="Open"/>
                                        </i:TreeViewColumnCollection>
                                    </i:XTreeView.Columns>
                                    <TreeView.ItemTemplate>
                                        <HierarchicalDataTemplate ItemsSource="{Binding Items}"/>
                                    </TreeView.ItemTemplate>
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Converter={x:Static i:IsConverter.Default}, ConverterParameter={x:Type i:Container}}" Value="True">
                                                    <Setter Property="i:XTreeViewItem.ExpandedCommand" Value="{Binding Items.RefreshAsyncCommand}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                </TreeView>
                            </local:Element>
                            <local:Element Category="TreeView" Type="i:TreeViewBox">
                                <i:TreeViewBox 
                                    ItemsSource="{i:RemoteBinding RemoteSource=MainViewModel, Path=Items}"
                                    i:XTreeView.SelectionMode="Multiple"
                                    VerticalAlignment="Top">
                                    <i:TreeViewBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Converter={x:Static i:IsConverter.Default}, ConverterParameter={x:Type i:Container}}" Value="True">
                                                    <Setter Property="i:XTreeViewItem.SelectedCommand" Value="{Binding Items.RefreshAsyncCommand}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </i:TreeViewBox.ItemContainerStyle>
                                    <i:TreeViewBox.ItemTemplate>
                                        <HierarchicalDataTemplate DataType="{x:Type i:Item}" ItemsSource="{Binding Items}">
                                            <TextBlock Text="{Binding Path, Converter={x:Static i:FileNameConverter.Default}}"/>
                                        </HierarchicalDataTemplate>
                                    </i:TreeViewBox.ItemTemplate>
                                    <i:TreeViewBox.SelectedItemTemplate>
                                        <DataTemplate DataType="{x:Type i:Item}">
                                            <i:AccentLabel
                                                Margin="0,0,5,0">
                                                <Grid i:XGrid.Columns="Auto,*"
                                                    i:XPanel.VerticalContentAlignment="Center">
                                                    <i:Thumbnail Grid.Column="0"
                                                        Margin="0,0,5,0"
                                                        Path="{Binding Path}"/>
                                                    <TextBlock Grid.Column="1"
                                                        Text="{Binding Path, Converter={x:Static i:FileNameConverter.Default}, ConverterParameter=1}"/>
                                                </Grid>
                                            </i:AccentLabel>
                                        </DataTemplate>
                                    </i:TreeViewBox.SelectedItemTemplate>
                                </i:TreeViewBox>
                            </local:Element>
                            <!-- ... UpDown -->
                            <local:Element Category="UpDown" Type="i:ByteUpDown">
                                <i:ByteUpDown VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="UpDown" Type="i:DateTimeUpDown">
                                <i:DateTimeUpDown VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="UpDown" Type="i:DecimalUpDown">
                                <i:DecimalUpDown VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="UpDown" Type="i:DoubleUpDown">
                                <i:DoubleUpDown VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="UpDown" Type="i:Int16UpDown">
                                <i:Int16UpDown
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="UpDown" Type="i:Int32UpDown">
                                <i:Int32UpDown
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="UpDown" Type="i:Int64UpDown">
                                <i:Int64UpDown
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="UpDown" Type="i:TimeSpanUpDown">
                                <i:TimeSpanUpDown
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="UpDown" Type="i:UDoubleUpDown">
                                <i:UDoubleUpDown
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="UpDown" Type="i:UInt16UpDown">
                                <i:UInt16UpDown
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="UpDown" Type="i:UInt32UpDown">
                                <i:UInt32UpDown
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <local:Element Category="UpDown" Type="i:UInt64UpDown">
                                <i:UInt64UpDown
                                    VerticalAlignment="Top"/>
                            </local:Element>
                            <!-- ... Window -->
                            <local:Element Category="Window" Type="i:AboutWindow">
                                <local:Element.Options>
                                    <Button Content="Show"
                                        Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=ShowAboutWindowCommand}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"/>
                                </local:Element.Options>
                            </local:Element>
                            <local:Element Category="Window" Type="i:DialogWindow">
                                <local:Element.Options>
                                    <StackPanel
                                        HorizontalAlignment="Left"
                                        i:XPanel.Spacing="0,0,0,5"
                                        i:XPanel.SpacingExcept="Last"
                                        VerticalAlignment="Top">
                                        <Button Content="Show new window"
                                            Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=ShowDialogWindowCommand}"/>
                                        <Button Content="Show inside window [Text]"
                                            Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=ShowDialogPresenterCommand}"
                                            CommandParameter="0"/>
                                        <Button Content="Show inside window [Something else]"
                                            Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=ShowDialogPresenterCommand}"
                                            CommandParameter="1"/>
                                    </StackPanel>
                                </local:Element.Options>
                            </local:Element>
                            <local:Element Category="Window" Type="i:DownloadWindow">
                                <local:Element.Options>
                                    <StackPanel i:XPanel.Spacing="0,0,0,5" i:XPanel.SpacingExcept="Last">
                                        <TextBox Text="{i:RemoteBinding RemoteSource=MainViewModel, Path=DownloadWindowSource, Mode=TwoWay}"/>
                                        <Button Content="Show"
                                            Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=ShowDownloadWindowCommand}"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top"/>
                                    </StackPanel>
                                </local:Element.Options>
                            </local:Element>
                            <local:Element Category="Window" Type="i:LoadWindow">
                                <local:Element.Options>
                                    <Button Content="Show" 
                                        Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=ShowLoadWindowCommand}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"/>
                                </local:Element.Options>
                            </local:Element>
                            <local:Element Category="Window" Type="i:MemberWindow">
                                <local:Element.Options>
                                    <Button Content="Show"
                                        Command="{i:RemoteBinding RemoteSource=MainViewModel, Path=ShowMemberWindowCommand}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"/>
                                </local:Element.Options>
                            </local:Element>
                        </local:ElementView.Elements>
                    </local:ElementView>
                </DataTemplate>
                <DataTemplate DataType="{x:Type local:TestPanel}">
                    <TabControl ItemsSource="{Binding Tests}"
                        Margin="5" 
                        SelectedItem="{Binding SelectedItem, Mode=TwoWay}">
                        <TabControl.ItemContainerStyle>
                            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate DataType="{x:Type local:Test}">
                                            <Grid i:XGrid.AutoRows="True" i:XGrid.Rows="Auto,*"
                                                Margin="10">
                                                <i:TitleLabel Content="{Binding Type.FullName}"
                                                    Margin="0,0,0,10"
                                                    Step="1"/>
                                            </Grid>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate DataType="{x:Type local:Test}">
                                            <TextBlock Text="{Binding Type.Name}"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </TabControl.ItemContainerStyle>
                    </TabControl>
                </DataTemplate>
                <DataTemplate DataType="{x:Type local:InheritsPanel}">
                    <ScrollViewer
                        HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
                        <Grid i:XGrid.Rows="Auto,Auto"
                            Margin="10">
                            <i:TitleLabel Grid.Row="0"
                                Margin="0,0,0,10"
                                Step="2"
                                ToolTip="{Binding Element.Type.FullName}">
                                <TextBlock Text="{Binding Element.Type.FullName}"
                                    TextTrimming="CharacterEllipsis"/>
                            </i:TitleLabel>
                            <ItemsControl
                                Grid.Row="1"
                                ItemsSource="{Binding Types}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type System:Type}">
                                        <TextBlock 
                                            FontSize="16"
                                            FontStyle="Italic"
                                            Foreground="{i:ThemeKey Key=Text}"
                                            Margin="0,0,0,5"
                                            Opacity="0.6"
                                            Text="{Binding FullName}"
                                            TextTrimming="CharacterEllipsis"
                                            ToolTip="{Binding FullName}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </ScrollViewer>
                </DataTemplate>
                <DataTemplate DataType="{x:Type i:PropertiesPanel}">
                    <i:MemberGrid
                        BorderThickness="0"
                        GroupName="DeclaringType"
                        HorizontalScrollBarVisibility="Disabled"
                        Source="{i:PanelBinding Element.Instance, {x:Type local:InheritsPanel}}"
                        VerticalScrollBarVisibility="Auto"
                        View="Single">
                        <i:MemberGrid.DescriptionTemplate>
                            <DataTemplate DataType="{x:Type i:MemberModel}">
                                <GroupBox>
                                    <GroupBox.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock 
                                                FontSize="12"
                                                FontStyle="Italic"
                                                Opacity="0.5"
                                                Text="Member" 
                                                TextTrimming="CharacterEllipsis"/>
                                            <i:AccentLabel
                                                Content="{Binding ModelType}"
                                                Margin="5,0,0,0"/>
                                            <ContentControl Content="{Binding}">
                                                <ContentControl.Style>
                                                    <Style TargetType="ContentControl">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                                                                <Setter Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate>
                                                                            <i:ImageElement
                                                                                Source="{i:InternalImage Image=Lock}"
                                                                                Margin="5,0,0,0"/>
                                                                        </DataTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsReadOnly}" Value="False">
                                                                <Setter Property="ContentTemplate">
                                                                    <Setter.Value>
                                                                        <DataTemplate/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ContentControl.Style>
                                            </ContentControl>
                                        </StackPanel>
                                    </GroupBox.Header>
                                    <StackPanel 
                                        i:XPanel.Spacing="0,0,0,5"
                                        i:XPanel.SpacingExcept="Last">
                                        <TextBlock 
                                            FontSize="20"
                                            Text="{Binding DisplayName, Mode=OneWay}" 
                                            TextTrimming="CharacterEllipsis"/>
                                        <TextBlock 
                                            FontSize="12"
                                            FontStyle="Italic"
                                            Opacity="0.5"
                                            Text="Member type" 
                                            TextTrimming="CharacterEllipsis"/>
                                        <TextBlock 
                                            FontSize="14"
                                            Text="{Binding Type.FullName, Mode=OneWay}" 
                                            TextTrimming="CharacterEllipsis"/>
                                        <TextBlock 
                                            FontSize="12"
                                            FontStyle="Italic"
                                            Opacity="0.5"
                                            Text="Member type (Actual)" 
                                            TextTrimming="CharacterEllipsis"/>
                                        <TextBlock 
                                            FontSize="14"
                                            TextTrimming="CharacterEllipsis">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                    <Setter Property="Text" Value="{Binding ActualType.FullName, Mode=OneWay}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ActualType}" Value="{x:Null}">
                                                            <Setter Property="FontWeight" Value="Bold"/>
                                                            <Setter Property="Text" Value="&lt;null>"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock 
                                            FontSize="12"
                                            FontStyle="Italic"
                                            Opacity="0.5"
                                            Text="Member type (Base)" 
                                            TextTrimming="CharacterEllipsis"/>
                                        <TextBlock
                                            FontSize="14"
                                            Text="{Binding BaseType.FullName, Mode=OneWay}"
                                            TextTrimming="CharacterEllipsis"/>
                                        <TextBlock 
                                            FontSize="12"
                                            FontStyle="Italic"
                                            Opacity="0.5"
                                            Text="Member type (Declaring)" 
                                            TextTrimming="CharacterEllipsis"/>
                                        <TextBlock
                                            FontSize="14"
                                            Text="{Binding DeclaringType.FullName, Mode=OneWay}"
                                            TextTrimming="CharacterEllipsis"/>
                                        <TextBlock 
                                            FontSize="12"
                                            FontStyle="Italic"
                                            Opacity="0.5"
                                            Text="Member type (Template)" 
                                            TextTrimming="CharacterEllipsis"/>
                                        <TextBlock
                                            FontSize="14"
                                            Text="{Binding TemplateType.FullName, Mode=OneWay}"
                                            TextTrimming="CharacterEllipsis"/>
                                    </StackPanel>
                                </GroupBox>
                            </DataTemplate>
                        </i:MemberGrid.DescriptionTemplate>
                    </i:MemberGrid>
                </DataTemplate>
            </i:PanelTemplateSelector>
        </i:DockControl.PanelTemplateSelector>
    </i:DockControl>
</i:MainWindow>