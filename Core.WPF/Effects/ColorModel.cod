//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float Companding;
//   float Component;
//   float Gamma;
//   float HighlightAmount;
//   float3 LABk_LMSk_x;
//   float3 LABk_LMSk_y;
//   float3 LABk_LMSk_z;
//   float3 LMS_XYZ_x;
//   float3 LMS_XYZ_y;
//   float3 LMS_XYZ_z;
//   float3 LMSk_LABk_x;
//   float3 LMSk_LABk_y;
//   float3 LMSk_LABk_z;
//   float3 LMSk_XYZk_x;
//   float3 LMSk_XYZk_y;
//   float3 LMSk_XYZk_z;
//   float MidtoneAmount;
//   float MidtoneRange;
//   float Mode;
//   float Model;
//   float3 RGB_XYZ_x;
//   float3 RGB_XYZ_y;
//   float3 RGB_XYZ_z;
//   float ShadowAmount;
//   float ShadowRange;
//   float View;
//   float WhiteX;
//   float WhiteY;
//   float X;
//   float3 XYZ_LMS_x;
//   float3 XYZ_LMS_y;
//   float3 XYZ_LMS_z;
//   float3 XYZ_RGB_x;
//   float3 XYZ_RGB_y;
//   float3 XYZ_RGB_z;
//   float Y;
//   float Z;
//   sampler2D input;
//   float3 xyYC_exy;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   Model           c0       1
//   Component       c1       1
//   Mode            c2       1
//   X               c3       1
//   Y               c4       1
//   Z               c5       1
//   Companding      c6       1
//   Gamma           c7       1
//   WhiteX          c8       1
//   WhiteY          c9       1
//   LMS_XYZ_x       c10      1
//   LMS_XYZ_y       c11      1
//   LMS_XYZ_z       c12      1
//   RGB_XYZ_x       c13      1
//   RGB_XYZ_y       c14      1
//   RGB_XYZ_z       c15      1
//   XYZ_LMS_x       c16      1
//   XYZ_LMS_y       c17      1
//   XYZ_LMS_z       c18      1
//   XYZ_RGB_x       c19      1
//   XYZ_RGB_y       c20      1
//   XYZ_RGB_z       c21      1
//   View            c22      1
//   LABk_LMSk_x     c23      1
//   LABk_LMSk_y     c24      1
//   LABk_LMSk_z     c25      1
//   LMSk_LABk_x     c26      1
//   LMSk_LABk_y     c27      1
//   LMSk_LABk_z     c28      1
//   LMSk_XYZk_x     c29      1
//   LMSk_XYZk_y     c30      1
//   LMSk_XYZk_z     c31      1
//   xyYC_exy        c35      1
//   HighlightAmount c36      1
//   MidtoneAmount   c38      1
//   MidtoneRange    c39      1
//   ShadowAmount    c40      1
//   ShadowRange     c41      1
//   input           s0       1
//

    ps_3_0
    def c32, -18, -19, -20, -21
    def c33, -39, -40, -41, -42
    def c34, -8, -40, -9, -41
    def c37, -11, -12, -13, -14
    def c42, -14, -15, -16, -17
    def c43, -22, -23, -24, -25
    def c44, -0.0810000002, 0.0989999995, -0.0814500004, 0.0992999971
    def c45, 2.22222233, 0.0404499993, 0.0549999997, 0.947867334
    def c46, -2, -34, -3, -35
    def c47, 0.222222224, 0.0773993805, 0.909918129, 0.909669757
    def c48, -4, -36, -5, -37
    def c49, 0.00999999978, 0.00392156886, 120, 1
    def c50, 0.840000033, -2, -3, -4
    def c51, -0.0187292993, 0.0742610022, -0.212114394, 1.57072878
    def c52, -6, -38, -7, -39
    def c53, -26, -27, -28, -29
    def c54, -30, -31, -32, -33
    def c55, -34, -35, -36, -37
    def c56, -38, -10, -27, -42
    def c57, 50, 0.142857149, 0.156173766, 6.99999952
    def c58, 0.142857149, 7, 1, 0.159154937
    def c59, 18.8515625, 18.6875, 0.8359375, 1
    def c60, 0.00571428565, 0.0142857144, 0.560000002, 0.439999998
    def c61, 0.199075997, 1.29587495, 0.219999999, -1.62954997e-011
    def c62, 3, 1, 57.2957764, 60
    def c63, 360, 0.00277777785, -360, -0.00277777785
    def c64, 0.280000001, 1, 0.0208350997, -0.0851330012
    def c65, 0.180141002, -0.330299497, 0.999866009, 300
    def c66, -2, 1.57079637, -0, -3.14159274
    def c67, 0.159154937, 0.25, 0.75, 104
    def c68, -0.449999988, -1.33299994, 0.252999991, 0.5
    def c69, 1.11600006, 0.684000015, -0.5, 0.25
    def c70, 0.216999993, 0.063000001, 0.666666687, 1
    def c71, 0.596000016, 0.211999997, -0.147129998, 0.61500001
    def c72, -0.275000006, -0.527999997, -0.288859993, -0.514989972
    def c73, -0.32100001, 0.31099999, 0.43599999, -0.10001
    def c74, 0.0174532942, -2.09439516, -4.18879032, -9.99999994e-009
    def c75, -10, -6, 0, -0.5
    def c76, 9, 6, 5, 0.00999999978
    def c77, 8, 12, 6, 0.00885645207
    def c78, 0.00110705639, 769860, 52, 769859.875
    def c79, 1394988.5, -120846.469, 3.40282347e+038, 126452
    def c80, 100, 0, 6.40657674e-007, 13824.001
    def c81, 0.00277777785, -0.333333343, 0.666666687, -0.666666687
    def c82, 0.857142866, -6, 0.298999995, 0.587000012
    def c83, 1.62954997e-011, 17, -16, 0.47299999
    def c84, 1.39821029, 0.00499999989, 0.00110705639, 0.00200000009
    def c85, 6742.07861, 3827.99316, 475.70459, 9.99999975e-005
    def c86, 2313.62085, 15227.666, 0.0399999991, 0.00456620986
    def c87, 1.40199995, 1.77199996, 0.00456620986, 0.00703035761
    def c88, 0.129132897, 0.267899334, 0.66467905, 1.43099999
    def c89, 7.92025457e-005, 0.126000002, -0.569000006, 0.430999994
    def c90, 0.126000002, -1.87399995, 0.95599997, -0.272000015
    def c91, 0.620999992, -0.647000015, 1.70500004, -0.580600023
    def c92, -1.10800004, 1.57480001, 1.8556, 0.862069011
    def c93, 1.13982999, -0.394650012, 2.02310991, 12.9200001
    def c94, 0.0799999982, 0.00313080009, 0.110705636, 4500
    def c95, 0.159999996, -0.0179999992, -0.0181000009, 0.416666657
    def c96, 1.05499995, -0.0549999997, 1.41421354, 1
    def c97, -2, 3.14159274, 6.28318548, 0.333333343
    def c98, 0.0174532942, 1.04719758, 0.159154937, 0.5
    def c99, 0.00277777808, 0.5, 8.00000095, 0.0166666675
    def c100, 0.114, 0.666666687, 360, 0.5
    def c101, 200, -0.980705976, 1, -1.18224943
    def c102, 18.6875, -18.8515625, 6.27739477, -3250.75854
    def c103, 0.00862068962, 116, -16, 500
    def c104, 1.09899998, 1.09930003, -0.0989999995, -0.0992999971
    def c105, 88.3659897, 175, 32.0938988, 70
    def c106, 239.999985, 179.999985, 119.999992, 59.9999962
    def c107, -180, -240, -300, 0.00828392897
    def c108, 0.0199999996, -1, -299.999969, -359.999969
    def c109, 100, 224, 122, 9.0329628
    def c110, 0.538909256, 0.635001242, 1500, 400
    def c111, 0.587000012, 0.5, 0.883000016, 600
    def c112, 7.85398197, 1.57079673, 0, 0
    def c113, 0.00277777785, 1, 0.0097833341, 0.298999995
    def c114, 3.52200007, 0.684000015, 0.114, 0.298999995
    def c115, 1.79399991, 0.587000012, 0.684000015, 0.114
    def c116, 6, 0.166666672, -6, -0.166666672
    def c117, -0, -32, -1, -33
    def c118, 0.00703035761, 0.00828392897, 9.23037151e-005, 0.525912642
    def c119, 0.212599993, 0.715200007, 0.0722000003, 0.331263989
    def c120, 1.5, 3, 13, 0.185000002
    def c121, 13, 39, 0.00999999978, 0.0166666675
    def c122, 0.138605043, 0.0960192457, 0.058047317, 0.00746077253
    def c123, 52, 13, 39, 0.344139993
    def c124, 1394988.5, -120846.469, -315176.688, -210946.25
    def c125, 0.058047317, 0.811891913, 16613.7305, -909.828125
    def c126, 9145.23047, 15718.4707, 3127.28296, 2182.53833
    def c127, 0.00277777785, 0.666666687, 1, 0.714139998
    def c128, -986593.562, 694074.125, 6.40312433, 180
    def c129, 0.298999995, 0.25, -0.25, 0.114
    def c130, 4.06670809, 1.09679902, 3.52399993, 0.54270798
    def c131, 0.159301758, 134.034378, 1492.84155, 833.27301
    def c132, 7396.2832, 709.410828, 1747.68005, 6709.7002
    def c133, 0.418687999, 0.0813120008, 903.296326, 16
    def c134, 219, 16, 0.168735996, 128
    def c135, 120.715675, 142.24028, 128, 0.5
    def c136, 2.4000001, 0.166666672, 1, -1
    def c137, 0, -1, -128, 10
    def c138, 0, -134, -140, -1.33299994
    def c139, 0, -0.595700026, -0.522599995, 255
    def c140, 360, 100, 255, 128
    def c141, 1, 360, 76, 100
    def c142, 235, 240, 1, 0.5
    def c143, 1, 1.33299994, 0.595700026, 0.522599995
    def c144, 1, -1, 0, 2
    def c145, -15, -16, -17, -18
    def c146, -19, -20, -21, -22
    def c147, -23, -24, -25, -26
    def c148, -28, -29, -30, -31
    def c149, -24, -25, -26, -27
    def c150, -32, -33, -34, -35
    def c151, -36, -37, -38, -39
    def c152, -1, -2, -3, -4
    def c153, 0.00277777785, 0.5, 6.28318548, -3.14159274
    def c154, 2, 0.5, -2, -0.5
    def c155, -120846.469, -210946.25, 126452, 694074.125
    def c156, 0.00277777785, 0.00277777808, 0.5, 0.333333343
    def c157, 1, 0.5, 0, 0.00456620986
    dcl_texcoord v0.xy  // uv<0,1>
    dcl_2d s0

#line 2291 "C:\Users\james\GitHub\Core.WPF\Core.WPF\Effects\ColorModel.fx"
    texld r0, v0, s0  // ::color<0,1,2,3>

#line 2301
    frc r1.x, c0.x
    add r1.x, -r1.x, c0.x
    add r2, r1.x, c42
    add r3, r1.x, c32
    add r4, r1.x, c43
    add r5, r1.x, c53
    add r6, r1.x, c54
    add r7, r1.x, c55
    add r8, r1.x, c33
    add r9, r1.x, c56
    cmp r1.yzw, -r2_abs.x, c137.xxyy, c137.x
    cmp r1.yzw, -r2_abs.y, c137.x, r1
    cmp r1.yzw, -r2_abs.z, c137.x, r1
    cmp r1.yzw, -r2_abs.w, c137.x, r1
    cmp r1.yzw, -r3_abs.x, c137.xxzz, r1
    cmp r1.yzw, -r3_abs.y, c75.xxyx, r1
    cmp r1.yzw, -r3_abs.z, c137.xxyy, r1
    cmp r1.yzw, -r3_abs.w, c137.x, r1
    cmp r1.yzw, -r4_abs.x, c137.x, r1
    cmp r1.yzw, -r4_abs.y, c137.x, r1
    cmp r1.yzw, -r4_abs.z, c137.x, r1
    cmp r1.yzw, -r4_abs.w, c137.x, r1
    cmp r1.yzw, -r5_abs.x, c137.x, r1
    cmp r1.yzw, -r5_abs.y, c138.xxyz, r1
    cmp r1.yzw, -r5_abs.z, c137.x, r1
    cmp r1.yzw, -r5_abs.w, c137.x, r1
    cmp r1.yzw, -r6_abs.x, c138.xyzx, r1
    cmp r1.yzw, -r6_abs.y, c137.x, r1
    cmp r1.yzw, -r6_abs.z, c137.x, r1
    cmp r1.yzw, -r6_abs.w, c137.xwxx, r1
    cmp r1.yzw, -r7_abs.x, c137.x, r1
    cmp r1.yzw, -r7_abs.y, -c42.z, r1
    cmp r1.yzw, -r7_abs.z, c75.xzww, r1
    cmp r1.yzw, -r7_abs.w, c137.x, r1
    cmp r1.yzw, -r9_abs.x, c138.xxww, r1
    cmp r1.yzw, -r8_abs.x, c137.x, r1
    cmp r1.yzw, -r8_abs.y, c139.xxyz, r1
    cmp r1.yzw, -r8_abs.z, c75.xzww, r1
    cmp r1.yzw, -r8_abs.w, c75.xzww, r1  // ::min<0,1,2>
    add r2, r1.x, c52
    add r3, r1.x, c34
    add r4, r1.x, c37
    add r5, r1.x, c145
    add r6, r1.x, c146
    add r7, r1.x, c147
    add r8, r1.x, c148
    add r10, r1.x, c117
    add r11, r1.x, c46
    add r12, r1.x, c48
    cmp r1.x, -r10_abs.x, c137_abs.y, c137_abs.x
    cmp r13.xyz, -r10_abs.z, -c137.y, r1.x
    cmp r13.xyz, -r11_abs.x, c140.xyyw, r13
    cmp r13.xyz, -r11_abs.z, c140, r13
    cmp r13.xyz, -r12_abs.x, c140.xyyw, r13
    cmp r13.xyz, -r12_abs.z, c140.xyyw, r13
    cmp r13.xyz, -r2_abs.x, c140.xyyw, r13
    cmp r13.xyz, -r2_abs.z, c140.xyyw, r13
    cmp r13.xyz, -r3_abs.x, c140.xyyw, r13
    cmp r13.xyz, -r3_abs.z, c140.xyyw, r13
    cmp r13.xyz, -r9_abs.y, c140, r13
    cmp r13.xyz, -r4_abs.x, c140, r13
    cmp r13.xyz, -r4_abs.y, c140.xyyw, r13
    cmp r4.xyz, -r4_abs.z, c140.xyyw, r13
    cmp r4.xyz, -r4_abs.w, -c137.y, r4
    cmp r4.xyz, -r5_abs.x, -c137.y, r4
    cmp r4.xyz, -r5_abs.y, c139.w, r4
    cmp r4.xyz, -r5_abs.z, c140.y, r4
    cmp r4.xyz, -r5_abs.w, c140.ywww, r4
    cmp r4.xyz, -r6_abs.x, c77, r4
    cmp r4.xyz, -r6_abs.y, -c137.y, r4
    cmp r4.xyz, -r6_abs.z, -c137.y, r4
    cmp r4.xyz, -r6_abs.w, c140.yyxw, r4
    cmp r4.xyz, -r7_abs.x, c140.yyxw, r4
    cmp r4.xyz, -r7_abs.y, c141.xxyw, r4
    cmp r4.xyz, -r7_abs.z, c140.yyxw, r4
    cmp r4.xyz, -r7_abs.w, -c137.y, r4
    cmp r4.xyz, -r9_abs.z, c109, r4
    cmp r4.xyz, -r8_abs.x, -c137.y, r4
    cmp r4.xyz, -r8_abs.y, -c137.y, r4
    cmp r4.xyz, -r8_abs.z, c109.yzxw, r4
    cmp r4.xyz, -r8_abs.w, c139.w, r4
    cmp r4.xyz, -r10_abs.y, -c137.y, r4
    cmp r4.xyz, -r10_abs.w, c141.zwww, r4
    cmp r4.xyz, -r11_abs.y, -c137.y, r4
    cmp r4.xyz, -r11_abs.w, c142.xyyw, r4
    cmp r4.xyz, -r12_abs.y, c142.zwww, r4
    cmp r4.xyz, -r12_abs.w, -c137.y, r4
    cmp r2.xyz, -r2_abs.y, c143.xyyw, r4
    cmp r2.xyz, -r2_abs.w, -c137.y, r2
    cmp r2.xyz, -r3_abs.y, c143.xzww, r2
    cmp r2.xyz, -r3_abs.w, c142.zwww, r2
    cmp r2.xyz, -r9_abs.w, c142.zwww, r2  // ::max<0,1,2>

#line 2304
    mov r3.xy, c137
    if_eq c2.x, r3.x

#line 2073
      rcp r1.x, c7.x
      pow r4.x, r0.x, r1.x  // ::V<0>

#line 2078
      if_eq c6.x, r3.x

#line 2108
      else

#line 2078
        add r2.w, r3.y, c6.x

#line 2086
        if_eq c6.x, -r3.y

#line 2081
          add r3.z, -r0.x, c77.w
          mul r3.w, r0.x, c109.w
          cmp r3.z, r3.z, r3.w, c50.x  // ::V<0>
          cmp r4.x, -r2_abs.w, r3.z, r4.x  // ::CompandInverse<0>

#line 2108
        else

#line 2102
          mov r5.x, c6.x  // ::Companding<0>
          add r5.xyz, r5.x, c50.yzww

#line 2105
          mul r3.zw, r0.x, c47.xyxy

#line 2097
          add r6, r0.x, c44
          mul r6.yw, r6, c47.xzzw

#line 2089
          pow r2.w, r6.y, c45.x
          cmp r2.w, r6.x, r2.w, r3.z  // ::L<0>

#line 2097
          pow r4.w, r6.w, c45.x
          cmp r3.z, r6.z, r4.w, r3.z  // ::L<0>

#line 2105
          add r4.w, -r0.x, c45.y
          add r5.w, r0.x, c45.z
          mul r5.w, r5.w, c45.w
          pow r6.x, r5.w, c136.x
          cmp r3.w, r4.w, r3.w, r6.x  // ::v<0>

#line 2108
          cmp r3.w, -r5_abs.z, r3.w, r0.x  // ::CompandInverse<0>
          cmp r3.z, -r5_abs.y, r3.z, r3.w  // ::CompandInverse<0>
          cmp r4.x, -r5_abs.x, r2.w, r3.z  // ::CompandInverse<0>
        endif
      endif

#line 2073
      pow r4.y, r0.y, r1.x  // ::V<0>

#line 2078
      if_eq c6.x, r3.x

#line 2108
      else

#line 2078
        add r2.w, r3.y, c6.x

#line 2086
        if_eq c6.x, -r3.y

#line 2081
          add r3.z, -r0.y, c77.w
          mul r3.w, r0.y, c109.w
          cmp r3.z, r3.z, r3.w, c50.x  // ::V<0>
          cmp r4.y, -r2_abs.w, r3.z, r4.y  // ::CompandInverse<0>

#line 2108
        else

#line 2102
          mov r5.x, c6.x  // ::Companding<0>
          add r5.xyz, r5.x, c50.yzww

#line 2105
          mul r3.zw, r0.y, c47.xyxy

#line 2097
          add r6, r0.y, c44
          mul r6.yw, r6, c47.xzzw

#line 2089
          pow r2.w, r6.y, c45.x
          cmp r2.w, r6.x, r2.w, r3.z  // ::L<0>

#line 2097
          pow r4.w, r6.w, c45.x
          cmp r3.z, r6.z, r4.w, r3.z  // ::L<0>

#line 2105
          add r4.w, -r0.y, c45.y
          add r5.w, r0.y, c45.z
          mul r5.w, r5.w, c45.w
          pow r6.x, r5.w, c136.x
          cmp r3.w, r4.w, r3.w, r6.x  // ::v<0>

#line 2108
          cmp r3.w, -r5_abs.z, r3.w, r0.y  // ::CompandInverse<0>
          cmp r3.z, -r5_abs.y, r3.z, r3.w  // ::CompandInverse<0>
          cmp r4.y, -r5_abs.x, r2.w, r3.z  // ::CompandInverse<0>
        endif
      endif

#line 2073
      pow r4.z, r0.z, r1.x  // ::V<0>

#line 2078
      if_eq c6.x, r3.x

#line 2108
      else

#line 2078
        add r1.x, r3.y, c6.x

#line 2086
        if_eq c6.x, -r3.y

#line 2081
          add r2.w, -r0.z, c77.w
          mul r3.z, r0.z, c109.w
          cmp r2.w, r2.w, r3.z, c50.x  // ::V<0>
          cmp r4.z, -r1_abs.x, r2.w, r4.z  // ::CompandInverse<0>

#line 2108
        else

#line 2102
          mov r1.x, c6.x  // ::Companding<0>
          add r5.xyz, r1.x, c50.yzww

#line 2105
          mul r3.zw, r0.z, c47.xyxy

#line 2097
          add r6, r0.z, c44
          mul r6.yw, r6, c47.xzzw

#line 2089
          pow r1.x, r6.y, c45.x
          cmp r1.x, r6.x, r1.x, r3.z  // ::L<0>

#line 2097
          pow r2.w, r6.w, c45.x
          cmp r2.w, r6.z, r2.w, r3.z  // ::L<0>

#line 2105
          add r3.z, -r0.z, c45.y
          add r4.w, r0.z, c45.z
          mul r4.w, r4.w, c45.w
          pow r5.w, r4.w, c136.x
          cmp r3.z, r3.z, r3.w, r5.w  // ::v<0>

#line 2108
          cmp r3.z, -r5_abs.z, r3.z, r0.z  // ::CompandInverse<0>
          cmp r2.w, -r5_abs.y, r2.w, r3.z  // ::CompandInverse<0>
          cmp r4.z, -r5_abs.x, r1.x, r2.w  // ::CompandInverse<0>
        endif
      endif

#line 583
      add r5.xyz, -r4, -c137.y  // ::Lrgb_CMY<0,1,2>

#line 2172
      if_eq c0.x, -r3.y

#line 2213
      else

#line 2172
        mov r1.x, c0.x  // ::Model<0>
        add r2.w, r1.x, c46.x

#line 671
        add r6.xyz, -r4.zxyw, r4.yzxw

#line 409
        cmp r3.zw, r6.x, r4.xyzy, r4.xyyz
        min r5.w, r3.z, r4.x  // ::GetMinimum<0>
        max r6.w, r4.x, r3.w  // ::GetMaximum<0>

#line 653
        add r3.z, -r5.w, r6.w  // ::c<0>
        add r3.w, r3.z, c137.y
        add r4.w, -r3.z, -c137.y
        rcp r4.w, r4.w
        mul r4.w, r4.w, r5.w  // ::v<0>

#line 665
        add r7.xy, -r4, r6.w
        rcp r7.z, r3.z

#line 671
        mul r7.w, r6.x, r7.z

#line 663
        cmp r8.xy, r7.w, c116, c116.zwzw
        mul r8.y, r7.w, r8.y
        frc r8.y, r8.y
        mul r8.x, r8.y, r8.x  // ::h<0>

#line 667
        mad r6.y, r6.y, r7.z, -c46.x  // ::h<0>

#line 671
        mad r8.y, r6.z, r7.z, -c48.x  // ::h<0>
        cmp r7.y, -r7_abs.y, r6.y, r8.y  // ::h<0>
        cmp r7.x, -r7_abs.x, r8.x, r7.y  // ::h<0>
        mul r7.y, r7.x, c136.y  // ::h<0>
        cmp r7.x, r7.x, c136.z, c136.w
        mul r7.y, r7.x, r7.y
        frc r7.y, r7.y
        mul r7.x, r7.y, r7.x  // ::h<0>
        mul r7.x, r7.x, c140.x
        cmp r9.x, -r3.z, c137.x, r7.x  // ::Lrgb_HCV<0>
        mul r9.y, r3.z, c140.y  // ::Lrgb_HCV<1>
        mul r4.w, r4.w, c140.y
        cmp r9.z, r3.w, c137.x, r4.w  // ::Lrgb_HCV<2>

#line 2172
        cmp r5.xyz, -r2_abs.w, r9, r5  // ::FLrgb<0,1,2>
        if_eq r1.x, -c46.x

#line 2213
        else

#line 2173
          add r2.w, r1.x, c46.z

#line 415
          add r3.w, r4.y, r4.x
          add r3.w, r4.z, r3.w  // ::GetSum<0>

#line 716
          rcp r4.w, r3.w
          mul r8.xzw, r4.w, r4.xyyz  // ::r<0>, ::g<0>, ::b<0>
          mad r9.xyz, r4.xxyw, r4.w, -r8.zwww
          add r4.w, r9.y, r9.x
          mul r4.w, r4.w, -c75.w
          mul r7.xy, r9.xzzw, r9
          add r7.x, r7.y, r7.x
          rsq r7.x, r7.x
          mul r4.w, r4.w, r7.x
          add r7.x, -r4_abs.w, -c137.y
          rsq r7.x, r7.x
          rcp r7.x, r7.x
          mad r7.y, r4_abs.w, c51.x, c51.y
          mad r7.y, r7.y, r4_abs.w, c51.z
          mad r7.y, r7.y, r4_abs.w, c51.w
          mul r7.x, r7.x, r7.y
          mad r7.y, r7.x, c97.x, c97.y
          cmp r4.w, r4.w, c137_abs.x, c137_abs.y
          mad r4.w, r7.y, r4.w, r7.x  // ::h<0>

#line 721
          add r7.x, -r4.w, c97.z  // ::h<0>
          cmp r4.w, r9.z, r4.w, r7.x  // ::h<0>

#line 411
          min r7.x, r8.w, r8.z
          min r9.x, r7.x, r8.x  // ::GetMinimum<0>

#line 725
          mad r7.x, r9.x, -c62.x, c62.y  // ::s<0>
          mul r9.z, r3.w, c97.w  // ::i<0>
          mul r9.x, r4.w, c62.z  // ::Lrgb_HCY<0>
          mul r9.y, r7.x, c140.y  // ::Lrgb_HCY<1>

#line 2173
          cmp r5.xyz, -r2_abs.w, r9, r5  // ::FLrgb<0,1,2>
          if_eq r1.x, -c46.z

#line 2213
          else

#line 2174
            add r2.w, r1.x, c48.x

#line 954
            add r4.w, r5.w, r6.w

#line 957
            add r5.w, r4.w, c137.y
            rcp r7.x, r4.w
            add r7.y, -r4.w, -c46.x
            rcp r7.y, r7.y
            mul r7.xy, r3.z, r7
            cmp r7.y, r5.w, r7.y, r7.x  // ::s<0>

#line 971
            add r9.xyz, r4.xzyw, -r6.w

#line 965
            mad r5.w, r6.x, r7.z, -c75.y
            cmp r5.w, r6.x, r7.w, r5.w  // ::h<0>

#line 974
            cmp r7.z, -r9_abs.z, r6.y, c137.x  // ::h<0>
            cmp r7.z, -r9_abs.y, r8.y, r7.z  // ::h<0>
            cmp r7.z, -r9_abs.x, r5.w, r7.z  // ::h<0>
            mul r7.x, r7.z, c62.w  // ::h<0>
            cmp r7.xy, -r3_abs.z, c137.x, r7  // ::h<0>, ::s<0>
            mul r7.z, r4.w, c57.x  // ::Lrgb_HSL<2>

#line 2174
            mul r7.w, r7.y, c140.y
            cmp r5.xyz, -r2_abs.w, r7.xwzw, r5  // ::FLrgb<0,1,2>
            if_eq r1.x, -c48.x

#line 2213
            else

#line 2175
              add r2.w, r1.x, c48.z

#line 818
              rcp r4.w, r6.w
              mul r10.y, r3.z, r4.w  // ::_s<0>

#line 830
              cmp r4.w, -r9_abs.y, r8.y, c137.x  // ::_h<0>
              cmp r4.w, -r9_abs.z, r6.y, r4.w  // ::_h<0>
              cmp r4.w, -r9_abs.x, r5.w, r4.w  // ::_h<0>
              mul r10.x, r4.w, c62.w  // ::_h<0>
              cmp r9.xy, -r3_abs.z, c137.x, r10  // ::_h<0>, ::_s<0>
              mul r9.z, r6.w, c140.y  // ::Lrgb_HSB<2>

#line 2175
              mul r9.w, r9.y, c140.y
              cmp r5.xyz, -r2_abs.w, r9.xwzw, r5  // ::FLrgb<0,1,2>
              if_eq r1.x, -c48.z

#line 2213
              else

#line 2176
                add r2.w, r1.x, c75.y
                cmp r5.xyz, -r2_abs.w, r9.xwzw, r5  // ::FLrgb<0,1,2>
                if_eq r1.x, -c75.y

#line 2213
                else

#line 2177
                  add r2.w, r1.x, c52.z
                  cmp r5.xyz, -r2_abs.w, r7.xwzw, r5  // ::FLrgb<0,1,2>
                  if_eq r1.x, -c52.z

#line 2213
                  else

#line 2178
                    add r2.w, r1.x, c34.x
                    cmp r5.xyz, -r2_abs.w, r7.xwzw, r5  // ::FLrgb<0,1,2>
                    if_eq r1.x, -c34.x

#line 2213
                    else

#line 2179
                      add r2.w, r1.x, c34.z
                      cmp r5.xyz, -r2_abs.w, r7.xwzw, r5  // ::FLrgb<0,1,2>
                      if_eq r1.x, -c34.z

#line 2213
                      else

#line 2180
                        if_eq r1.x, -c56.y

#line 1003
                          add r2.w, r4.y, r4.y
                          mad r2.w, r4.x, -c48.x, r2.w
                          add r2.w, r4.z, r2.w

#line 1040
                          mul r3.z, r2.w, c57.y  // ::m<0>

#line 1007
                          mad r7.xyz, r2.w, -c57.y, r4
                          mul r4.w, r7.y, -c48.x
                          mad r4.w, r7.x, -c46.z, -r4.w
                          mad r4.w, r7.z, c48.x, r4.w
                          mul r4.w, r4.w, c57.z  // ::j<0>
                          mul r6.yw, r7.xxzy, r7.xxzy
                          add r5.w, r6.w, r6.y
                          mad r5.w, r7.z, r7.z, r5.w
                          rsq r5.w, r5.w
                          mul r4.w, r4.w, r5.w
                          add r6.y, -r4_abs.w, -c137.y
                          rsq r6.y, r6.y
                          rcp r6.y, r6.y
                          mad r6.w, r4_abs.w, c51.x, c51.y
                          mad r6.w, r6.w, r4_abs.w, c51.z
                          mad r6.w, r6.w, r4_abs.w, c51.w
                          mul r6.y, r6.y, r6.w
                          mad r6.w, r6.y, c97.x, c97.y
                          cmp r4.w, r4.w, c137_abs.x, c137_abs.y
                          mad r4.w, r6.w, r4.w, r6.y  // ::t<0>
                          add r6.y, -r4.w, c97.z
                          cmp r4.w, r6.x, r4.w, r6.y  // ::w<0>

#line 1040
                          mad r6.yw, r2.w, -c58.x, c58.xyzz  // Pow2::input<0,0>

#line 452
                          mul r6.y, r6.y, r6.y  // ::Pow2<0>

#line 1020
                          dp2add r6.y, r3.z, r3.z, r6.y  // ::v<0>

#line 286
                          add r7.x, -r2.w, c57.w

#line 1040
                          mad r7.y, r2.w, c82.x, c82.y  // Pow2::input<0>

#line 452
                          mul r7.y, r7.y, r7.y  // ::Pow2<0>

#line 1040
                          dp2add r6.w, r6.w, r6.w, r7.y  // ::v<0>
                          cmp r7.x, r7.x, -c137_abs.y, -c137_abs.x
                          cmp r7.x, -r2.w, c137.x, r7.x
                          cmp r6.w, r7.x, c137.x, r6.w  // ::v<0>
                          cmp r7.x, -r2.w, -c137_abs.y, -c137_abs.x
                          cmp r2.w, r2.w, r7.x, c137.x
                          cmp r2.w, r2.w, r6.w, r6.y  // ::v<0>
                          mul r4.w, r2.x, r4.w
                          rcp r5.w, r5.w
                          rsq r2.w, r2.w
                          mul r2.w, r2.w, r5.w  // ::s<0>
                          mul r5.x, r4.w, c58.w  // ::Lrgb_HSM<0>
                          mul r5.y, r2.y, r2.w  // ::Lrgb_HSM<1>
                          mul r5.z, r2.z, r3.z  // ::Lrgb_HSM<2>

#line 2180
                        else
                          if_eq r1.x, -c37.x

#line 1180
                            mul r7.xyz, r4, c139.w  // ::_input<0,1,2>

#line 1184
                            mul r10.xyz, r7, r7
                            mul r6.yw, r10.xxzy, c82.xzzw
                            add r2.w, r6.w, r6.y
                            mad r2.w, r10.z, c100.x, r2.w
                            rsq r2.w, r2.w
                            rcp r2.w, r2.w  // ::p<0>
                            mad r6.yw, r4.x, c139.w, -r7.xzzy
                            cmp r3.z, -r6_abs.y, c137_abs.y, c137_abs.x
                            cmp r3.z, -r6_abs.w, r3.z, c137.x
                            if_ne r3.z, -r3.z

#line 1189
                              mov r8.yw, c137.x  // ::h<0>, ::s<0>
                            else

#line 1202
                              mad r10.xy, r4.yzzw, c139.w, -r7.zyzw
                              mul r10.zw, r10.xyyx, c136.y

#line 1197
                              rcp r3.z, r6.w
                              mad r11.y, r10.z, -r3.z, -c137.y  // ::h<0>
                              rcp r3.z, r7.x

#line 1202
                              rcp r4.w, r6.y
                              mul r11.x, r4.w, r10.w  // ::h<0>
                              mad r11.zw, r7.xyyz, -r3.z, -c137.y  // ::s<0,0>
                              cmp r10.zw, r10.y, r11.xyyz, r11.xyxw  // ::h<0>, ::s<0>
                              cmp r3.z, r6.y, -c137_abs.y, -c137_abs.x
                              cmp r3.z, r6.w, r3.z, c137.x
                              cmp r10.zw, r3.z, c137.x, r10  // ::h<0>, ::s<0>

#line 1232
                              mul r11.xy, r6.ywzw, c136.y

#line 1212
                              rcp r3.z, r10.x
                              mad r12.y, r11.x, -r3.z, c97.w  // ::h<0>
                              rcp r3.z, r7.y

#line 1217
                              mad r11.xz, r4.yyzw, c139.w, -r7.x

#line 1227
                              mul r13.xy, r11.zxzw, c136.y

#line 1217
                              rcp r4.w, r11.x
                              mad r12.x, r13.x, r4.w, c97.w  // ::h<0>
                              mad r12.zw, r7.xyzx, -r3.z, -c137.y  // ::s<0,0>
                              cmp r6.yw, r6.y, r12.xyzz, r12.xxzw  // ::h<0>, ::s<0>

#line 1235
                              cmp r12.xy, r10, -c137_abs.y, -c137_abs.x
                              cmp r12.xy, r11.xzzw, r12, c137.x

#line 1220
                              cmp r6.yw, r12.x, r10.xzzw, r6  // ::h<0>, ::s<0>

#line 1227
                              rcp r3.z, r11.z
                              mad r13.y, r13.y, -r3.z, c100.y  // ::h<0>
                              rcp r3.z, r7.z

#line 1232
                              rcp r4.w, r10.y
                              mad r13.x, r11.y, r4.w, c100.y  // ::h<0>
                              mad r13.zw, r7.xyxy, -r3.z, -c137.y  // ::s<0,0>
                              cmp r7.xy, r11.x, r13.yzzw, r13.xwzw  // ::h<0>, ::s<0>
                              cmp r8.yw, r12.y, r6, r7.xxzy  // ::h<0>, ::s<0>
                            endif
                            mul r5.y, r8.w, c140.y  // ::Lrgb_HSP<1>
                            mad r3.z, r8.y, c100.z, c100.w
                            frc r4.w, r3.z
                            add r5.x, r3.z, -r4.w  // ::Lrgb_HSP<0>
                            add r2.w, r2.w, -c75.w
                            frc r3.z, r2.w
                            add r5.z, r2.w, -r3.z  // ::Lrgb_HSP<2>

#line 2181
                          else
                            add r2.w, r1.x, c37.y

#line 496
                            mad r3.z, r9.y, -c141.w, c141.x
                            mul r7.y, r9.z, r3.z  // ::w<0>

#line 2182
                            mad r7.xz, r9, c144.xyyw, c144.zyxw
                            cmp r5.xyz, -r2_abs.w, r7, r5  // ::FLrgb<0,1,2>
                            if_eq r1.x, -c37.y

#line 2213
                            else

#line 2183
                              add r2.w, r1.x, c37.z
                              cmp r5.xyz, -r2_abs.w, r7, r5  // ::FLrgb<0,1,2>
                              if_eq r1.x, -c37.z

#line 2213
                              else

#line 2184
                                add r2.w, r1.x, c42.x
                                mad r7.xyz, r4, c144.xwww, c144.zyyw
                                cmp r5.xyz, -r2_abs.w, r7, r5  // ::FLrgb<0,1,2>
                                if_eq r1.x, -c42.x

#line 2213
                                else

#line 2185
                                  add r2.w, r1.x, c42.y
                                  cmp r5.xyz, -r2_abs.w, r4, r5  // ::FLrgb<0,1,2>
                                  if_eq r1.x, -c42.y

#line 2213
                                  else

#line 2186
                                    add r2.w, r1.x, c42.z

#line 1953
                                    dp3 r7.x, r4, c119  // ::y<0>
                                    add r6.yw, r4.xzzx, -r7.x

#line 1997
                                    mad r9.x, r7.x, c134.x, c134.y  // ::Lrgb_YCbCr<0>
                                    mad r9.yz, r6.xyww, c135.xxyw, c135.z  // ::Lrgb_YCbCr<1,2>

#line 2017
                                    mul r3.z, r9.y, c82.w
                                    mad r3.z, r9.x, c82.z, r3.z
                                    mad r10.x, r9.z, c100.x, r3.z  // ::Lrgb_JPEG<0>
                                    mad r3.z, r9.x, -c134.z, c134.w
                                    mad r3.z, r9.y, -c119.w, r3.z
                                    mad r10.y, r9.z, -c75.w, r3.z  // ::Lrgb_JPEG<1>
                                    mad r3.z, r9.x, c135.w, c135.z
                                    mad r3.z, r9.y, -c133.x, r3.z
                                    mad r10.z, r9.z, -c133.y, r3.z  // ::Lrgb_JPEG<2>

#line 2186
                                    cmp r5.xyz, -r2_abs.w, r10, r5  // ::FLrgb<0,1,2>
                                    if_eq r1.x, -c42.z

#line 2213
                                    else

#line 2187
                                      add r2.w, r1.x, c42.w

#line 419
                                      rcp r3.z, c9.x
                                      mul r4.w, r3.z, c8.x  // ::GetWhite<0>
                                      add r5.w, -r3.y, -c8.x
                                      add r5.w, r5.w, -c9.x
                                      mul r7.w, r3.z, r5.w  // ::GetWhite<2>

#line 1328
                                      rcp r8.y, r4.w
                                      mul r8.w, r4.x, r8.y  // ::xr<0>
                                      rcp r9.w, r7.w
                                      mul r10.x, r4.z, r9.w  // ::zr<0>
                                      mad r10.y, r4.x, -r8.y, c77.w
                                      mad r8.w, r8.w, c133.z, c133.w
                                      mul r8.w, r8.w, c103.x
                                      cmp r8.w, r10.y, r8.w, -c137.y  // ::fx<0>
                                      add r10.y, -r4.y, c77.w
                                      mul r10.z, r4.y, c133.z
                                      mad r10.w, r4.y, c133.z, c133.w
                                      mul r10.w, r10.w, c103.x
                                      cmp r10.w, r10.y, r10.w, -c137.y  // ::fy<0>
                                      mad r11.x, r4.z, -r9.w, c77.w
                                      mad r10.x, r10.x, c133.z, c133.w
                                      mul r10.x, r10.x, c103.x
                                      mad r12.x, r10.w, c103.y, c103.z  // ::l<0>
                                      add r8.w, r8.w, -r10.w
                                      mul r12.y, r8.w, c103.w  // ::a<0>
                                      cmp r10.x, r11.x, -r10.x, c137.y
                                      add r10.x, r10.x, r10.w
                                      mul r12.z, r10.x, c101.x  // ::b<0>

#line 2187
                                      cmp r5.xyz, -r2_abs.w, r12, r5  // ::FLrgb<0,1,2>
                                      if_eq r1.x, -c42.w

#line 2213
                                      else

#line 2188
                                        if_eq r1.x, -c32.x

#line 428
                                          mul r11.xyz, r4.y, c14
                                          mad r11.xyz, r4.x, c13, r11
                                          mad r11.xyz, r4.z, c15, r11  // ::x<0>, ::y<0>, ::z<0>

#line 464
                                          mov r13.x, c8.x  // ::WhiteX<0>
                                          mad r13.xy, r3.z, r13.x, c101.yzzw

#line 474
                                          mad r13.zw, r3.z, r5.w, c101.xywz

#line 464
                                          cmp r2.w, -r13_abs.z, -c137_abs.y, -c137_abs.x
                                          cmp r2.w, -r13_abs.x, r2.w, c137.x
                                          mul r10.w, r13.y, c105.x  // ::Ka<0>
                                          cmp r10.w, r2.w, r10.w, c105.y  // ::ComputeKa<0>

#line 474
                                          mul r11.w, r13.w, c105.z  // ::Ka<0>
                                          cmp r2.w, r2.w, r11.w, c105.w  // ::ComputeKb<0>

#line 1381
                                          rsq r11.w, r11.y
                                          rcp r12.w, r11.w
                                          mul r5.x, r12.w, c140.y  // ::L<0>
                                          mad r11.x, r11.x, r8.y, -r11.y
                                          mul r11.x, r11.w, r11.x
                                          mul r5.y, r10.w, r11.x  // ::a<0>
                                          mad r10.w, r11.z, -r9.w, r11.y
                                          mul r10.w, r11.w, r10.w
                                          mul r5.z, r2.w, r10.w  // ::b<0>

#line 2188
                                        else
                                          add r2.w, r1.x, c32.y
                                          cmp r5.xyz, -r2_abs.w, r4, r5  // ::FLrgb<0,1,2>
                                          if_eq r1.x, -c32.y

#line 2213
                                          else

#line 2190
                                            if_eq r1.x, -c32.z

#line 428
                                              mul r11, r4.y, c14.yzxy
                                              mad r11, r4.x, c13.yzxy, r11
                                              mad r11, r4.z, c15.yzxy, r11  // ::y<0>, ::z<0>, ::x<0>, ::y<0>

#line 1430
                                              mul r13.xy, r11.zwzw, c85
                                              add r2.w, r13.y, r13.x
                                              mad r2.w, r11.y, -c85.z, r2.w  // PerceptualQuantizer::x<0>

#line 440
                                              mul r2.w, r2.w, c85.w
                                              pow r10.w, r2.w, c131.x  // ::xx<0>
                                              mad r13.xy, r10.w, c59, c59.zwzw
                                              rcp r2.w, r13.y
                                              mul r2.w, r2.w, r13.x
                                              pow r10.w, r2.w, c131.y  // ::result<0>

#line 1431
                                              mul r13.xyz, r11.xzww, c132
                                              mad r2.w, r11.z, c131.z, r13.x
                                              mad r2.w, r11.y, c131.w, r2.w  // PerceptualQuantizer::x<0>

#line 440
                                              mul r2.w, r2.w, c85.w
                                              pow r11.x, r2.w, c131.x  // ::xx<0>
                                              mad r11.xz, r11.x, c59.xyyw, c59.zyww
                                              rcp r2.w, r11.z
                                              mul r2.w, r2.w, r11.x
                                              pow r11.x, r2.w, c131.y  // ::result<0>

#line 1431
                                              add r2.w, r13.z, r13.y
                                              mad r2.w, r11.y, c132.w, r2.w  // PerceptualQuantizer::x<0>

#line 440
                                              mul r2.w, r2.w, c85.w
                                              pow r11.y, r2.w, c131.x  // ::xx<0>
                                              mad r11.yz, r11.y, c59.xxyw, c59.xzww
                                              rcp r2.w, r11.z
                                              mul r2.w, r2.w, r11.y
                                              pow r11.y, r2.w, c131.y  // ::result<0>

#line 1433
                                              add r2.w, r10.w, r11.x

#line 1436
                                              mul r11.xz, r11.x, c130.xyyw
                                              mad r11.x, r10.w, c130.z, -r11.x
                                              mad r5.y, r11.y, c130.w, r11.x  // ::az<0>
                                              mad r10.w, r10.w, c61.x, r11.z
                                              mad r5.z, r11.y, -c61.y, r10.w  // ::bz<0>
                                              mul r10.w, r2.w, c61.z
                                              mad r2.w, r2.w, -c64.x, c64.y
                                              rcp r2.w, r2.w
                                              mad r5.x, r10.w, r2.w, c61.w  // ::Jz<0>

#line 2190
                                            else
                                              add r2.w, r1.x, c32.w
                                              if_eq r1.x, -c32.w

#line 428
                                                mov r11.xyz, c26  // ::LMSk_LABk_x<0,1,2>
                                                add r11.xyz, r11, c27
                                                add r11.xyz, r11, c28  // ::x<0>, ::y<0>, ::z<0>

#line 2191
                                                cmp r5.xyz, -r2_abs.w, r11, r5  // ::FLrgb<0,1,2>

#line 2213
                                              else

#line 2192
                                                if_eq r1.x, -c43.x

#line 521
                                                  dp2add r2.w, r12.yzzw, r12.yzzw, c137.x
                                                  rsq r2.w, r2.w
                                                  rcp r5.y, r2.w  // ::c<0>
                                                  add r11.xy, -r12_abs.yzzw, r12_abs.zyzw
                                                  cmp r11.xz, r11.x, r12_abs.yyzw, r12_abs.zyyw
                                                  rcp r2.w, r11.z
                                                  mul r2.w, r2.w, r11.x
                                                  mul r10.w, r2.w, r2.w
                                                  mad r11.x, r10.w, c64.z, c64.w
                                                  mad r11.x, r10.w, r11.x, c65.x
                                                  mad r11.x, r10.w, r11.x, c65.y
                                                  mad r10.w, r10.w, r11.x, c65.z
                                                  mul r2.w, r2.w, r10.w
                                                  cmp r10.w, r11.y, c137_abs.x, c137_abs.y
                                                  mad r11.x, r2.w, c66.x, c66.y
                                                  mad r2.w, r11.x, r10.w, r2.w
                                                  cmp r8.w, r8.w, c66.z, c66.w
                                                  add r2.w, r2.w, r8.w
                                                  mad r8.w, r10.x, c101.x, -r12.y
                                                  cmp r10.xw, r8.w, r12.yyzz, r12.zyzy
                                                  cmp r8.w, r10.w, c137_abs.y, c137_abs.x
                                                  cmp r8.w, r10.x, c137.x, r8.w
                                                  add r10.x, r2.w, r2.w
                                                  mad r2.w, r8.w, -r10.x, r2.w  // ::h<0>

#line 401
                                                  mul r8.w, r2.w, c62.z  // ::GetDegree<0>

#line 434
                                                  cmp r10.xw, r2.w, c63.xyzy, c63.zyzw
                                                  mul r2.w, r8.w, r10.w
                                                  frc r2.w, r2.w
                                                  mul r8.w, r2.w, r10.x  // ::result<0>
                                                  mad r2.w, r10.x, r2.w, c140.x
                                                  cmp r5.z, r8.w, r8.w, r2.w  // ::NormalizeDegree<0>

#line 2213
                                                  mov r5.x, r12.x

#line 2192
                                                else
                                                  if_eq r1.x, -c43.y

#line 428
                                                    mul r11.xyz, r4.y, c14
                                                    mad r11.xyz, r4.x, c13, r11
                                                    mad r11.xyz, r4.z, c15, r11  // ::x<0>, ::y<0>, ::z<0>

#line 464
                                                    mov r10.x, c8.x  // ::WhiteX<0>
                                                    mad r10.xw, r3.z, r10.x, c101.yyzz

#line 474
                                                    mad r12.xy, r3.z, r5.w, c101.wzzw

#line 464
                                                    cmp r2.w, -r12_abs.x, -c137_abs.y, -c137_abs.x
                                                    cmp r2.w, -r10_abs.x, r2.w, c137.x
                                                    mul r5.w, r10.w, c105.x  // ::Ka<0>
                                                    cmp r5.w, r2.w, r5.w, c105.y  // ::ComputeKa<0>

#line 474
                                                    mul r8.w, r12.y, c105.z  // ::Ka<0>
                                                    cmp r2.w, r2.w, r8.w, c105.w  // ::ComputeKb<0>

#line 1381
                                                    rsq r8.w, r11.y
                                                    rcp r10.x, r8.w
                                                    mul r5.x, r10.x, c140.y  // ::L<0>
                                                    mad r8.y, r11.x, r8.y, -r11.y
                                                    mul r8.y, r8.w, r8.y
                                                    mul r5.w, r5.w, r8.y  // ::a<0>
                                                    mad r8.y, r11.z, -r9.w, r11.y
                                                    mul r8.y, r8.w, r8.y
                                                    mul r2.w, r2.w, r8.y  // ::b<0>

#line 521
                                                    mul r8.y, r2.w, r2.w
                                                    mad r8.y, r5.w, r5.w, r8.y
                                                    rsq r8.y, r8.y
                                                    rcp r5.y, r8.y  // ::c<0>
                                                    min r8.y, r5_abs.w, r2_abs.w
                                                    max r8.w, r2_abs.w, r5_abs.w
                                                    rcp r8.w, r8.w
                                                    mul r8.y, r8.w, r8.y
                                                    mul r8.w, r8.y, r8.y
                                                    mad r9.w, r8.w, c64.z, c64.w
                                                    mad r9.w, r8.w, r9.w, c65.x
                                                    mad r9.w, r8.w, r9.w, c65.y
                                                    mad r8.w, r8.w, r9.w, c65.z
                                                    mul r8.y, r8.w, r8.y
                                                    add r8.w, -r2_abs.w, r5_abs.w
                                                    cmp r8.w, r8.w, c137_abs.x, c137_abs.y
                                                    mad r9.w, r8.y, c66.x, c66.y
                                                    mad r8.y, r9.w, r8.w, r8.y
                                                    cmp r8.w, r5.w, c66.z, c66.w
                                                    add r8.y, r8.w, r8.y
                                                    min r8.w, r5.w, r2.w
                                                    max r9.w, r2.w, r5.w
                                                    cmp r2.w, r9.w, c137_abs.y, c137_abs.x
                                                    cmp r2.w, r8.w, c137.x, r2.w
                                                    add r5.w, r8.y, r8.y
                                                    mad r2.w, r2.w, -r5.w, r8.y  // ::h<0>

#line 401
                                                    mul r5.w, r2.w, c62.z  // ::GetDegree<0>

#line 434
                                                    cmp r8.yw, r2.w, c63.xxzy, c63.xzzw
                                                    mul r2.w, r5.w, r8.w
                                                    frc r2.w, r2.w
                                                    mul r5.w, r2.w, r8.y  // ::result<0>
                                                    mad r2.w, r8.y, r2.w, c140.x
                                                    cmp r5.z, r5.w, r5.w, r2.w  // ::NormalizeDegree<0>

#line 2193
                                                  else

#line 1955
                                                    mul r7.yz, r6.xyww, c110.xxyw  // ::pb<0>, ::pr<0>

#line 2197
                                                    add r11, r1.x, c149

#line 428
                                                    mul r12.xyz, r4.y, c14
                                                    mad r12.xyz, r4.x, c13, r12
                                                    mad r12.xyz, r4.z, c15, r12  // ::x<0>, ::y<0>, ::z<0>

#line 1430
                                                    mul r6.yw, r12.xxzy, c85.xxzy
                                                    add r2.w, r6.w, r6.y
                                                    mad r2.w, r12.z, -c85.z, r2.w  // PerceptualQuantizer::x<0>

#line 440
                                                    mul r2.w, r2.w, c85.w
                                                    pow r5.w, r2.w, c131.x  // ::xx<0>
                                                    mad r6.yw, r5.w, c59.xxzy, c59.xzzw
                                                    rcp r2.w, r6.w
                                                    mul r2.w, r2.w, r6.y
                                                    pow r5.w, r2.w, c131.y  // ::result<0>

#line 1431
                                                    mul r13.xyz, r12.yxyw, c132
                                                    mad r2.w, r12.x, c131.z, r13.x
                                                    mad r2.w, r12.z, c131.w, r2.w  // PerceptualQuantizer::x<0>

#line 440
                                                    mul r2.w, r2.w, c85.w
                                                    pow r6.y, r2.w, c131.x  // ::xx<0>
                                                    mad r6.yw, r6.y, c59.xxzy, c59.xzzw
                                                    rcp r2.w, r6.w
                                                    mul r2.w, r2.w, r6.y
                                                    pow r6.y, r2.w, c131.y  // ::result<0>

#line 1431
                                                    add r2.w, r13.z, r13.y
                                                    mad r2.w, r12.z, c132.w, r2.w  // PerceptualQuantizer::x<0>

#line 440
                                                    mul r2.w, r2.w, c85.w
                                                    pow r6.w, r2.w, c131.x  // ::xx<0>
                                                    mad r8.yw, r6.w, c59.xxzy, c59.xzzw
                                                    rcp r2.w, r8.w
                                                    mul r2.w, r2.w, r8.y
                                                    pow r6.w, r2.w, c131.y  // ::result<0>

#line 1433
                                                    add r2.w, r5.w, r6.y

#line 1436
                                                    mul r8.yw, r6.y, c130.xxzy
                                                    mad r6.y, r5.w, c130.z, -r8.y
                                                    mad r6.y, r6.w, c130.w, r6.y  // ::az<0>
                                                    mad r5.w, r5.w, c61.x, r8.w
                                                    mad r5.w, r6.w, -c61.y, r5.w  // ::bz<0>
                                                    mul r6.w, r2.w, c61.z
                                                    mad r2.w, r2.w, -c64.x, c64.y
                                                    rcp r2.w, r2.w
                                                    mad r13.x, r6.w, r2.w, c61.w  // ::Jz<0>

#line 521
                                                    mul r2.w, r5.w, r5.w
                                                    mad r2.w, r6.y, r6.y, r2.w
                                                    rsq r2.w, r2.w
                                                    rcp r13.y, r2.w  // ::c<0>
                                                    min r2.w, r6_abs.y, r5_abs.w
                                                    max r8.y, r5_abs.w, r6_abs.y
                                                    rcp r6.w, r8.y
                                                    mul r2.w, r2.w, r6.w
                                                    mul r6.w, r2.w, r2.w
                                                    mad r8.y, r6.w, c64.z, c64.w
                                                    mad r8.y, r6.w, r8.y, c65.x
                                                    mad r8.y, r6.w, r8.y, c65.y
                                                    mad r6.w, r6.w, r8.y, c65.z
                                                    mul r2.w, r2.w, r6.w
                                                    add r6.w, -r5_abs.w, r6_abs.y
                                                    cmp r6.w, r6.w, c137_abs.x, c137_abs.y
                                                    mad r8.y, r2.w, c66.x, c66.y
                                                    mad r2.w, r8.y, r6.w, r2.w
                                                    cmp r6.w, r6.y, c66.z, c66.w
                                                    add r2.w, r2.w, r6.w
                                                    min r8.y, r6.y, r5.w
                                                    max r8.w, r5.w, r6.y
                                                    cmp r5.w, r8.w, c137_abs.y, c137_abs.x
                                                    cmp r5.w, r8.y, c137.x, r5.w
                                                    add r6.y, r2.w, r2.w
                                                    mad r2.w, r5.w, -r6.y, r2.w  // ::h<0>

#line 401
                                                    mul r5.w, r2.w, c62.z  // ::GetDegree<0>

#line 434
                                                    cmp r6.yw, r2.w, c63.xxzy, c63.xzzw
                                                    mul r2.w, r5.w, r6.w
                                                    frc r2.w, r2.w
                                                    mul r5.w, r2.w, r6.y  // ::result<0>
                                                    mad r2.w, r6.y, r2.w, c140.x
                                                    cmp r13.z, r5.w, r5.w, r2.w  // ::NormalizeDegree<0>

#line 1837
                                                    mul r2.w, r4.x, -c48.x

#line 1866
                                                    mul r14.xyz, r4.y, c111

#line 480
                                                    mad r5.w, r4.y, -c42.y, r4.x

#line 1837
                                                    mul r6.y, r4.z, -c75.w

#line 480
                                                    mad r5.w, r4.z, -c46.z, r5.w
                                                    rcp r5.w, r5.w

#line 485
                                                    mul r6.w, r4.y, r5.w

#line 480
                                                    mul r4.w, r4.w, -c48.x
                                                    mov r8.y, c42.y
                                                    mad r3.z, r3.z, c8.x, -r8.y
                                                    mad r3.z, r7.w, -c46.z, r3.z
                                                    rcp r3.z, r3.z
                                                    mul r7.w, r3.z, r4.w  // ::ComputeKu<0>

#line 1754
                                                    mul r8.y, r3.z, -c34.z  // ::ComputeKv<0>

#line 1573
                                                    cmp r8.w, r10.y, r10.z, c140.y  // ::L<0>

#line 1576
                                                    max r10.x, r8.w, c137.x  // ::L<0>

#line 1579
                                                    mul r8.w, r10.x, -c37.z
                                                    mad r2.w, r2.w, r5.w, -r7.w
                                                    mul r10.y, r2.w, r8.w  // ::u<0>

#line 1582
                                                    mad r2.w, r6.w, -c34.z, -r8.y
                                                    mul r10.z, r2.w, r8.w  // ::v<0>

#line 521
                                                    dp2add r5.w, r10.yzzw, r10.yzzw, c137.x
                                                    rsq r5.w, r5.w
                                                    rcp r15.y, r5.w  // ::c<0>
                                                    add r16.xy, -r10_abs.yzzw, r10_abs.zyzw
                                                    cmp r16.xz, r16.x, r10_abs.yyzw, r10_abs.zyyw
                                                    rcp r5.w, r16.z
                                                    mul r5.w, r5.w, r16.x
                                                    mul r6.w, r5.w, r5.w
                                                    mad r7.w, r6.w, c64.z, c64.w
                                                    mad r7.w, r6.w, r7.w, c65.x
                                                    mad r7.w, r6.w, r7.w, c65.y
                                                    mad r6.w, r6.w, r7.w, c65.z
                                                    mul r5.w, r5.w, r6.w
                                                    cmp r6.w, r16.y, c137_abs.x, c137_abs.y
                                                    mad r7.w, r5.w, c66.x, c66.y
                                                    mad r5.w, r7.w, r6.w, r5.w
                                                    cmp r6.w, r10.y, c66.z, c66.w
                                                    add r5.w, r5.w, r6.w
                                                    mad r2.w, r8.w, r2.w, -r10.y
                                                    cmp r8.yw, r2.w, r10.xyzz, r10.xzzy
                                                    cmp r2.w, r8.w, c137_abs.y, c137_abs.x
                                                    cmp r2.w, r8.y, c137.x, r2.w
                                                    add r6.w, r5.w, r5.w
                                                    mad r2.w, r2.w, -r6.w, r5.w  // ::h<0>

#line 401
                                                    mul r5.w, r2.w, c62.z  // ::GetDegree<0>

#line 434
                                                    cmp r8.yw, r2.w, c63.xxzy, c63.xzzw
                                                    mul r2.w, r5.w, r8.w
                                                    frc r2.w, r2.w
                                                    mul r5.w, r2.w, r8.y  // ::result<0>
                                                    mad r2.w, r8.y, r2.w, c140.x
                                                    cmp r15.z, r5.w, r5.w, r2.w  // ::NormalizeDegree<0>

#line 428
                                                    mul r16.xyz, r12.y, c17
                                                    mad r16.xyz, r12.x, c16, r16
                                                    mad r16.xyz, r12.z, c18, r16  // ::x<0>, ::y<0>, ::z<0>

#line 2201
                                                    add r17, r1.x, c148

#line 1283
                                                    cmp r8.xy, -r3_abs.w, c137.x, r8.xzzw  // ::x<0>, ::y<0>

#line 1286
                                                    rcp r2.w, r8.y
                                                    mul r2.w, r2.w, r8.x
                                                    mov_sat r3.w, r2_abs.w
                                                    add r5.w, r2_abs.w, c137.y
                                                    rcp r6.w, r2_abs.w
                                                    cmp r5.w, r5.w, r6.w, -c137.y
                                                    mul r3.w, r3.w, r5.w
                                                    mul r5.w, r3.w, r3.w
                                                    mad r6.w, r5.w, c64.z, c64.w
                                                    mad r6.w, r5.w, r6.w, c65.x
                                                    mad r6.w, r5.w, r6.w, c65.y
                                                    mad r5.w, r5.w, r6.w, c65.z
                                                    mul r3.w, r3.w, r5.w
                                                    add r5.w, -r2_abs.w, -c137.y
                                                    cmp r5.w, r5.w, c137_abs.x, c137_abs.y
                                                    mad r6.w, r3.w, c66.x, c66.y
                                                    mad r3.w, r6.w, r5.w, r3.w
                                                    min r5.w, r2.w, -c137.y
                                                    cmp r2.w, r5.w, c137_abs.x, c137_abs.y
                                                    add r5.w, r3.w, r3.w
                                                    mad r2.w, r2.w, -r5.w, r3.w
                                                    mad r8.zw, r2.w, c67.x, c67.xyyz
                                                    cmp r2.w, r8.y, c137.x, r8.w
                                                    cmp r18.x, -r8.y, r2.w, r8.z  // ::tsl<0>
                                                    mul r8.xy, r8, r8
                                                    add r2.w, r8.y, r8.x
                                                    rsq r2.w, r2.w
                                                    rcp r18.y, r2.w  // ::tsl<1>

#line 1837
                                                    mad r8.xyz, r4.x, c129, r14.xyyw

#line 1715
                                                    mad r2.w, r12.y, -c46.z, -r12.x
                                                    add r2.w, r12.z, r2.w
                                                    mul r19.z, r2.w, -c75.w  // ::Lrgb_UCS<2>

#line 1757
                                                    mul r14.xy, r12.yxzw, c110.zwzw
                                                    mad r2.w, r12.x, c140.y, r14.x
                                                    mad r2.w, r12.z, c65.w, r2.w  // ::uv<0>
                                                    rcp r3.w, r2.w
                                                    mul r5.w, r3.w, r14.y
                                                    cmp r5.w, -r2_abs.w, c137.x, r5.w  // ::_u<0>
                                                    mul r3.w, r12.y, r3.w
                                                    mul r3.w, r3.w, c111.w
                                                    cmp r2.w, -r2_abs.w, c137.x, r3.w  // ::_v<0>

#line 1761
                                                    mad r3.w, r4.w, -r3.z, r5.w
                                                    mul r20.x, r3.w, c67.w  // ::u<0>
                                                    mad r2.w, r3.z, c75.y, r2.w
                                                    mul r20.y, r2.w, c67.w  // ::v<0>

#line 2205
                                                    add r21, r1.x, c150

#line 1782
                                                    add r2.w, r12.y, r12.x
                                                    add r2.w, r12.z, r2.w  // ::sum<0>

#line 1787
                                                    rcp r3.z, r2.w
                                                    mul r3.zw, r3.z, r12.xyxy  // ::Lrgb_xyY<0,1>
                                                    cmp r22.xy, -r2_abs.w, c137.x, r3.zwzw  // ::Lrgb_xyY<0,1>

#line 2209
                                                    add r23, r1.x, c151

#line 1837
                                                    mad r24.xy, r4.z, c129.wyzw, r8  // ::tsl<2>, ::Lrgb_YCoCg<0>
                                                    mad r8.y, r4.z, -c67.y, r8.z  // ::Lrgb_YCoCg<1>
                                                    mad r8.z, r4.x, -c75.w, -r6.y  // ::Lrgb_YCoCg<2>

#line 1866
                                                    mad r2.w, r4.x, c68.x, -r14.z
                                                    mad r14.y, r4.z, -c138.w, r2.w  // ::Lrgb_YDbDr<1>

#line 1901
                                                    mul r25, r4.y, c69
                                                    mad r26.xyw, r4.x, c68.yzzw, r25.xyzz  // ::Lrgb_YES<1>
                                                    mad r26.xy, r4.z, c70, r26  // ::Lrgb_YDbDr<2>, ::Lrgb_YES<0>
                                                    mad r2.w, r4.x, c67.y, r25.w
                                                    mad r26.z, r4.z, c75.w, r2.w  // ::Lrgb_YES<2>

#line 2212
                                                    add r25.xyz, r1.x, c33.yzww

#line 1924
                                                    cmp r3.zw, -r6_abs.xyzx, c137_abs.x, c137_abs.y
                                                    add r1.x, r3.w, r3.z

#line 2059
                                                    mul r6, r4.y, c72
                                                    mad r6, r4.x, c71, r6
                                                    mad r6, r4.z, c73, r6  // ::i<0>, ::q<0>, ::u<0>, ::v<0>

#line 1928
                                                    cmp r27.yz, -r1.x, c137.x, r6.xxyw  // ::i<0>, ::q<0>

#line 2213
                                                    mov r24.zw, r6
                                                    cmp r6.xyz, -r25_abs.z, r24.xzww, r4  // ::FLrgb<0,1,2>
                                                    cmp r6.xyz, -r25_abs.y, r7, r6  // ::FLrgb<0,1,2>
                                                    mov r27.x, r24.x
                                                    cmp r6.xyz, -r25_abs.x, r27, r6  // ::FLrgb<0,1,2>
                                                    cmp r6.xyz, -r23_abs.w, r26.ywzw, r6  // ::FLrgb<0,1,2>
                                                    mov r14.x, r27.x
                                                    mov r14.z, r26.x
                                                    cmp r6.xyz, -r23_abs.z, r14, r6  // ::FLrgb<0,1,2>
                                                    cmp r4.xyz, -r23_abs.y, r4, r6  // ::FLrgb<0,1,2>
                                                    mov r8.x, r24.y
                                                    cmp r4.xyz, -r23_abs.x, r8, r4  // ::FLrgb<0,1,2>
                                                    cmp r4.xyz, -r21_abs.w, r9, r4  // ::FLrgb<0,1,2>
                                                    cmp r4.xyz, -r21_abs.z, r12, r4  // ::FLrgb<0,1,2>
                                                    mov r22.z, r12.y
                                                    cmp r4.xyz, -r21_abs.y, r22, r4  // ::FLrgb<0,1,2>
                                                    cmp r4.xyz, -r21_abs.x, r22, r4  // ::FLrgb<0,1,2>
                                                    cmp r4.xyz, -r17_abs.w, r9, r4  // ::FLrgb<0,1,2>
                                                    mov r20.z, -c34.x
                                                    cmp r4.xyz, -r17_abs.z, r20, r4  // ::FLrgb<0,1,2>
                                                    mul r19.xy, r12, c70.zwzw
                                                    cmp r4.xyz, -r17_abs.y, r19, r4  // ::FLrgb<0,1,2>
                                                    mov r18.z, r14.x
                                                    cmp r4.xyz, -r17_abs.x, r18, r4  // ::FLrgb<0,1,2>
                                                    cmp r4.xyz, -r11_abs.w, r10, r4  // ::FLrgb<0,1,2>
                                                    cmp r4.xyz, -r11_abs.z, r16, r4  // ::FLrgb<0,1,2>
                                                    mov r15.x, r10.x
                                                    cmp r4.xyz, -r11_abs.y, r15, r4  // ::FLrgb<0,1,2>
                                                    cmp r5.xyz, -r11_abs.x, r13, r4  // ::FLrgb<0,1,2>
                                                  endif
                                                endif
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif

#line 409
      max r1.x, r0.y, r0.z
      max r2.w, r0.x, r1.x  // ::GetMaximum<0>

#line 2315
      add r1.x, -r2.w, c41.x
      mov r4.x, c3.x  // ::X<0>
      mul r3.z, r4.x, c40.x
      mul r6.x, r3.z, c49.x  // ::tx<0>
      mov r7.x, c4.x  // ::Y<0>
      mul r3.z, r7.x, c40.x
      mul r6.y, r3.z, c49.x  // ::ty<0>
      mov r8.x, c5.x  // ::Z<0>
      mul r3.z, r8.x, c40.x
      mul r6.z, r3.z, c49.x  // ::tz<0>

#line 2322
      add r2.w, -r2.w, c39.x
      mul r3.z, r4.x, c38.x
      mul r9.x, r3.z, c49.x  // ::tx<0>
      mul r3.z, r7.x, c38.x
      mul r9.y, r3.z, c49.x  // ::ty<0>
      mul r3.z, r8.x, c38.x
      mul r9.z, r3.z, c49.x  // ::tz<0>

#line 2331
      mul r3.z, r4.x, c36.x
      mul r4.x, r3.z, c49.x  // ::tx<0>
      mul r3.z, r7.x, c36.x
      mul r4.y, r3.z, c49.x  // ::ty<0>
      mul r3.z, r8.x, c36.x
      mul r4.z, r3.z, c49.x  // ::tz<0>
      cmp r4.xyz, r2.w, r9, r4  // ::tx<0>, ::ty<0>, ::tz<0>
      cmp r4.xyz, r1.x, r6, r4  // ::tx<0>, ::ty<0>, ::tz<0>

#line 307
      add r6.xyz, r1.yzww, r2
      add r7.xyz, r2, r5
      add r6.xyz, r6, -r7
      mad r4.xyz, r6, r4, r5  // ::FLerp<0,1,2>

#line 579
      add r5.xyz, -r4, -c137.y  // ::CMY_Lrgb<0,1,2>

#line 2221
      if_eq c0.x, -r3.y

#line 2262
        mov r6.xyz, r5  // ::TLrgb<0,1,2>
      else

#line 2221
        mov r1.x, c0.x  // ::Model<0>
        if_eq r1.x, -c46.x

#line 591
          mul r3.zw, r4.xyyz, c49.x  // ::c<0>, ::g<0>

#line 599
          if_eq r3.z, c137.x

#line 648
            mov r6.xyz, r3.w  // ::HCV_Lrgb<0,1,2>
          else

#line 591
            mul r2.w, r4.x, c63.y  // ::h<0>

#line 599
            cmp r4.w, r4.x, c136.z, c136.w
            mul r2.w, r2.w, r4.w
            frc r2.w, r2.w
            mul r2.w, r2.w, r4.w
            mul r4.w, r2.w, -c75.y  // ::hi<0>
            cmp r2.w, r2.w, c136.z, c136.w
            mul r5.w, r2.w, r4.w
            frc r5.w, r5.w
            mul r7.x, r2.w, r5.w  // ::v<0>

#line 604
            frc r6.w, r4.w
            add r4.w, r4.w, -r6.w  // ::fhi<0>

#line 630
            add r8, r4.w, c152

#line 641
            mov r7.yz, c137_abs.xxyw
            mad r7.w, r2.w, -r5.w, -c137.y
            cmp r9.xyz, -r8_abs.w, r7, r7.zyww  // ::pure<0,1,2>
            mad r10.xyz, r7.xzyw, c144.yxxw, c144.xzzw
            cmp r9.xyz, -r8_abs.z, r10.zxyw, r9  // ::pure<0,1,2>
            cmp r8.yzw, -r8_abs.y, r7.xyzx, r9.xxyz  // ::pure<0,1,2>
            cmp r8.xyz, -r8_abs.x, r10, r8.yzww  // ::pure<0,1,2>
            cmp r7.xyz, -r4_abs.w, r7.zxyw, r8  // ::pure<0,1,2>

#line 647
            lrp r6.xyz, r3.z, r7, r3.w  // ::result<0,1,2>
          endif

#line 2221
        else
          if_eq r1.x, -c46.z

#line 683
            cmp r3.zw, r4.x, c63.xyxy, c63
            mul r2.w, r3.w, r4.x
            frc r2.w, r2.w
            mad r3.z, r3.z, r2.w, c140.x
            mul r2.w, r2.w, c140.x
            cmp r2.w, r4.x, r2.w, r3.z
            mul r3.zw, r4.xyyz, c49.xyxy  // ::s<0>, ::i<0>

#line 690
            if_lt r2.w, c49.z
              mad r4.w, r4.y, -c49.x, c49.w
              mul r6.z, r3.w, r4.w  // ::b<0>
              mad r4.w, r2.w, c153.x, c153.y
              frc r4.w, r4.w
              mad r4.w, r4.w, c153.z, c153.w
              sincos r7.x, r4.w
              mul r4.w, r3.z, r7.x
              mad r5.w, r2.w, -c98.x, c98.y
              mad r5.w, r5.w, c98.z, c98.w
              frc r5.w, r5.w
              mad r5.w, r5.w, c153.z, c153.w
              sincos r8.x, r5.w
              rcp r5.w, r8.x
              mad r4.w, r4.w, r5.w, -c137.y
              mul r6.x, r3.w, r4.w  // ::r<0>
              mad r4.w, r7.x, -r5.w, -c137.y
              mad r4.w, r3.z, r4.w, -c137.y
              mul r6.y, r3.w, r4.w  // ::g<0>
            else
              if_lt r2.w, c142.y
                mad r4.w, r2.w, c74.x, c74.y  // ::h<0>
                mad r5.w, r4.y, -c49.x, c49.w
                mul r6.x, r3.w, r5.w  // ::r<0>
                mad r5.w, r4.w, c98.z, c98.w
                frc r5.w, r5.w
                mad r5.w, r5.w, c153.z, c153.w
                sincos r7.x, r5.w
                mul r5.w, r3.z, r7.x
                add r4.w, -r4.w, c98.y
                mad r4.w, r4.w, c98.z, c98.w
                frc r4.w, r4.w
                mad r4.w, r4.w, c153.z, c153.w
                sincos r8.x, r4.w
                rcp r4.w, r8.x
                mad r5.w, r5.w, r4.w, -c137.y
                mul r6.y, r3.w, r5.w  // ::g<0>

#line 701
                mad r4.w, r7.x, -r4.w, -c137.y
                mad r4.w, r3.z, r4.w, -c137.y
                mul r6.z, r3.w, r4.w  // ::b<0>
              else

#line 705
                mad r2.w, r2.w, c74.x, c74.z  // ::h<0>
                mad r4.w, r4.y, -c49.x, c49.w
                mul r6.y, r3.w, r4.w  // ::g<0>
                mad r4.w, r2.w, c98.z, c98.w
                frc r4.w, r4.w
                mad r4.w, r4.w, c153.z, c153.w
                sincos r7.x, r4.w
                mul r4.w, r3.z, r7.x
                add r2.w, -r2.w, c98.y
                mad r2.w, r2.w, c98.z, c98.w
                frc r2.w, r2.w
                mad r2.w, r2.w, c153.z, c153.w
                sincos r8.x, r2.w
                rcp r2.w, r8.x
                mad r4.w, r4.w, r2.w, -c137.y
                mul r6.z, r3.w, r4.w  // ::b<0>
                mad r2.w, r7.x, -r2.w, -c137.y
                mad r2.w, r3.z, r2.w, -c137.y
                mul r6.x, r2.w, r3.w  // ::r<0>
              endif
            endif

#line 2222
          else
            if_eq r1.x, -c48.x

#line 1608
              if_lt c140.y, r4.z

#line 1616
                mov r6.x, c140.y  // ::HPLuv_Lrgb<0>
                mov r6.y, c137.x  // ::HPLuv_Lrgb<1>
                mov r6.z, r4.x  // ::HPLuv_Lrgb<2>
              else

#line 1608
                add r2.w, r4.z, c74.w

#line 1611
                if_lt r4.z, -c74.w
                  cmp r6.x, r2.w, c80.x, c80.y  // ::HPLuv_Lrgb<0>

#line 1616
                  mov r6.y, c137.x  // ::HPLuv_Lrgb<1>
                  mov r6.z, r4.x  // ::HPLuv_Lrgb<2>
                else

#line 340
                  add r2.w, r4.z, -c42.z
                  mul r3.z, r2.w, r2.w
                  mul r3.w, r2.w, r3.z
                  mul r3.w, r3.w, c80.z  // ::s1<0>
                  mad r3.z, r2.w, -r3.z, c80.w

#line 1541
                  mul r7.xyz, r4.z, c78

#line 341
                  cmp r3.z, r3.z, r7.x, r3.w  // ::s2<0>

#line 326
                  mul r3.w, r4.z, r3.z
                  mul r4.w, r3.w, c78.w  // ::y<0>
                  mul r8.xy, r3.z, c79  // ::x<0>, ::z<0>
                  rcp r5.w, r8.y
                  mul r6.w, r5.w, r8.x  // ::GetBounds2<0>
                  mul r4.w, r4.w, r5.w  // ::GetBounds2<1>

#line 354
                  rcp r7.w, r6.w

#line 320
                  mad r5.w, r8.x, -r5.w, -r7.w
                  rcp r5.w, r5.w
                  mul r5.w, r4.w, r5.w  // ::GetIntersection<0>

#line 355
                  mad r4.w, r5.w, r6.w, r4.w  // GetDistance::input<1>

#line 315
                  mul r4.w, r4.w, r4.w
                  mad r4.w, r5.w, r5.w, r4.w
                  rsq r4.w, r4.w
                  rcp r4.w, r4.w  // ::GetDistance<0>

#line 357
                  min r5.w, r4.w, c79.z  // GetChroma2::result<0>

#line 326
                  mad r3.w, r3.w, c78.w, -r7.y  // ::y<0>
                  mad r3.z, r3.z, c79.y, c79.w  // ::z<0>
                  rcp r3.z, r3.z
                  mul r4.w, r3.z, r8.x  // ::GetBounds2<0>
                  mul r3.w, r3.z, r3.w  // ::GetBounds2<1>

#line 354
                  rcp r6.w, r4.w

#line 320
                  mad r3.z, r8.x, -r3.z, -r6.w
                  rcp r3.z, r3.z
                  mul r3.z, r3.z, r3.w  // ::GetIntersection<0>

#line 355
                  mad r3.w, r3.z, r4.w, r3.w  // GetDistance::input<1>

#line 315
                  mul r3.w, r3.w, r3.w
                  mad r3.z, r3.z, r3.z, r3.w
                  rsq r3.z, r3.z
                  rcp r3.z, r3.z  // ::GetDistance<0>

#line 357
                  min r4.w, r3.z, r5.w  // GetChroma2::result<0>

#line 1612
                  mul r3.z, r4.y, r4.w
                  mul r3.z, r3.z, c49.x  // ::C<0>

#line 514
                  mad r3.w, r4.x, c99.x, c99.y
                  frc r3.w, r3.w
                  mad r3.w, r3.w, c153.z, c153.w
                  sincos r8.xy, r3.w
                  mul r3.zw, r3.z, r8.xyxy  // ::a<0>, ::b<0>

#line 419
                  rcp r4.w, c9.x
                  mul r5.w, r4.w, c8.x  // ::GetWhite<0>
                  add r6.w, -r3.y, -c8.x
                  add r6.w, r6.w, -c9.x
                  mul r6.w, r4.w, r6.w  // ::GetWhite<2>

#line 480
                  mul r5.w, r5.w, -c48.x
                  mov r7.y, c42.y
                  mad r4.w, r4.w, c8.x, -r7.y
                  mad r4.w, r6.w, -c46.z, r4.w
                  rcp r4.w, r4.w
                  mul r5.w, r4.w, r5.w  // ::ComputeKu<0>

#line 485
                  mul r4.w, r4.w, -c34.z  // ::ComputeKv<0>

#line 1539
                  add r6.w, -r4.z, c99.z
                  mul r2.w, r2.w, c103.x
                  mul r7.y, r2.w, r2.w
                  mul r2.w, r2.w, r7.y
                  cmp r2.w, r6.w, r7.x, r2.w  // ::Y<0>

#line 1544
                  mul r7.xy, r4.z, c121

#line 1541
                  mad r3.z, r7.x, r5.w, r3.z
                  rcp r3.z, r3.z
                  mad r3.z, r7.z, r3.z, c137.y
                  mul r3.z, r3.z, c97.w  // ::a<0>
                  mul r5.w, r2.w, c48.z  // ::b<0>
                  mad r3.w, r7.x, r4.w, r3.w
                  rcp r3.w, r3.w
                  mad r3.w, r7.y, r3.w, c48.z
                  mad r3.w, r2.w, r3.w, -r5.w
                  rcp r4.w, r3.z
                  mul r3.w, r3.w, r4.w  // ::X<0>
                  mad r3.z, r3.w, r3.z, r5.w  // ::Z<0>

#line 1550
                  max r4.w, r3.w, c137.x  // ::X<0>

#line 1553
                  max r3.w, r2.w, c137.x  // ::Y<0>

#line 1556
                  max r2.w, r3.z, c137.x  // ::Z<0>

#line 428
                  mul r7.xyz, r3.w, c20
                  mad r7.xyz, r4.w, c19, r7
                  mad r6.xyz, r2.w, c21, r7  // ::x<0>, ::y<0>, ::z<0>

#line 1616
                endif
              endif

#line 2223
            else
              if_eq r1.x, -c48.z

#line 748
                mul r7.xyz, r4.yzxw, c121.zzww  // ::_s<0>, ::_b<0>, ::SectorPosition<0>
                frc r2.w, r7.z
                add r2.w, -r2.w, r7.z  // ::SectorNumber<0>

#line 752
                mad r3.z, r4.x, c99.w, -r2.w  // ::FractionalSector<0>

#line 755
                mad r3.w, r4.y, -c49.x, c49.w
                mul r8.y, r3.w, r7.y  // ::p<0>
                mad r3.w, r7.x, -r3.z, -c137.y
                add r3.z, -r3.z, -c137.y
                mad r3.z, r7.x, -r3.z, -c137.y
                mul r8.xz, r3.zyww, r7.y  // ::t<0>, ::q<0>

#line 784
                add r9, r2.w, c152

#line 790
                add r3.z, r2.w, c48.z

#line 795
                mov r8.w, r7.y
                cmp r10.xyz, -r3_abs.z, r8.wyzw, c137.x  // ::r<0>, ::g<0>, ::b<0>
                cmp r10.xyz, -r9_abs.w, r8.xyww, r10  // ::r<0>, ::g<0>, ::b<0>
                cmp r10.xyz, -r9_abs.z, r8.yzww, r10  // ::r<0>, ::g<0>, ::b<0>
                cmp r9.yzw, -r9_abs.y, r8.xywx, r10.xxyz  // ::r<0>, ::g<0>, ::b<0>
                cmp r9.xyz, -r9_abs.x, r8.zwyw, r9.yzww  // ::r<0>, ::g<0>, ::b<0>
                cmp r8.xyz, -r2_abs.w, r8.wxyw, r9  // ::r<0>, ::g<0>, ::b<0>
                cmp r6.xyz, -r7_abs.x, r7.y, r8  // ::r<0>, ::g<0>, ::b<0>

#line 2224
              else
                if_eq r1.x, -c75.y

#line 748
                  mul r7.xyz, r4.yzxw, c121.zzww  // ::_s<0>, ::_b<0>, ::SectorPosition<0>
                  frc r2.w, r7.z
                  add r2.w, -r2.w, r7.z  // ::SectorNumber<0>

#line 752
                  mad r3.z, r4.x, c99.w, -r2.w  // ::FractionalSector<0>

#line 755
                  mad r3.w, r4.y, -c49.x, c49.w
                  mul r8.y, r3.w, r7.y  // ::p<0>
                  mad r3.w, r7.x, -r3.z, -c137.y
                  add r3.z, -r3.z, -c137.y
                  mad r3.z, r7.x, -r3.z, -c137.y
                  mul r8.xz, r3.zyww, r7.y  // ::t<0>, ::q<0>

#line 784
                  add r9, r2.w, c152

#line 790
                  add r3.z, r2.w, c48.z

#line 795
                  mov r8.w, r7.y
                  cmp r10.xyz, -r3_abs.z, r8.wyzw, c137.x  // ::r<0>, ::g<0>, ::b<0>
                  cmp r10.xyz, -r9_abs.w, r8.xyww, r10  // ::r<0>, ::g<0>, ::b<0>
                  cmp r10.xyz, -r9_abs.z, r8.yzww, r10  // ::r<0>, ::g<0>, ::b<0>
                  cmp r9.yzw, -r9_abs.y, r8.xywx, r10.xxyz  // ::r<0>, ::g<0>, ::b<0>
                  cmp r9.xyz, -r9_abs.x, r8.zwyw, r9.yzww  // ::r<0>, ::g<0>, ::b<0>
                  cmp r8.xyz, -r2_abs.w, r8.wxyw, r9  // ::r<0>, ::g<0>, ::b<0>
                  cmp r6.xyz, -r7_abs.x, r7.y, r8  // ::r<0>, ::g<0>, ::b<0>

#line 2225
                else
                  if_eq r1.x, -c52.z

#line 889
                    mul r6.z, r4.z, c49.x  // ::l<0>

#line 894
                    if_lt -r4.y, c137.x
                      mul r3.zw, r4.xyyx, c121  // ::s<0>, ::h<0>
                      mad r2.w, r4.z, c108.x, c108.y
                      add r2.w, -r2_abs.w, -c137.y
                      mul r7.x, r3.z, r2.w  // ::chroma<0>
                      cmp r8.xy, r4.x, c154, c154.zwzw
                      mul r2.w, r3.w, r8.y
                      frc r2.w, r2.w
                      mad r2.w, r8.x, r2.w, c137.y
                      add r2.w, -r2_abs.w, -c137.y
                      mul r7.y, r2.w, r7.x  // ::v<0>

#line 917
                      add r8, -r4.x, c106

#line 923
                      add r9, r4.x, -c106.wzyx

#line 929
                      add r2.w, r4.x, c108.z
                      add r3.zw, -r4.x, -c108.xywz

#line 934
                      cmp r3.zw, r3, -c137_abs.y, -c137_abs.x
                      cmp r2.w, r2.w, r3.z, c137.x
                      mov r7.z, c137.x
                      cmp r10.xyz, r2.w, c137.x, r7.xzyw  // ::result<0,1,2>
                      cmp r2.w, r9.w, r3.w, c137.x
                      cmp r10.xyz, r2.w, r10, r7.yzxw  // ::result<0,1,2>
                      cmp r8, r8, -c137_abs.y, -c137_abs.x
                      cmp r8.xyz, r9.zyxw, r8, c137.x
                      cmp r9.xyz, r8.x, r10, r7.zyxw  // ::result<0,1,2>
                      cmp r9.xyz, r8.y, r9, r7.zxyw  // ::result<0,1,2>
                      cmp r8.xyz, r8.z, r9, r7.yxzw  // ::result<0,1,2>
                      cmp r2.w, r4.x, r8.w, c137.x
                      cmp r7.yzw, r2.w, r8.xxyz, r7.xxyz  // ::result<0,1,2>
                      mad r2.w, r7.x, c75.w, r6.z  // ::w<0>

#line 939
                      add r6.xyz, r2.w, r7.yzww  // ::result<0,1,2>
                    else

#line 944
                      mov r6.xy, r6.z  // ::result<0,1>
                    endif

#line 2226
                  else
                    if_eq r1.x, -c34.x

#line 889
                      mul r6.z, r4.z, c49.x  // ::l<0>

#line 894
                      if_lt -r4.y, c137.x
                        mul r3.zw, r4.xyyx, c121  // ::s<0>, ::h<0>
                        mad r2.w, r4.z, c108.x, c108.y
                        add r2.w, -r2_abs.w, -c137.y
                        mul r7.x, r3.z, r2.w  // ::chroma<0>
                        cmp r8.xy, r4.x, c154, c154.zwzw
                        mul r2.w, r3.w, r8.y
                        frc r2.w, r2.w
                        mad r2.w, r8.x, r2.w, c137.y
                        add r2.w, -r2_abs.w, -c137.y
                        mul r7.y, r2.w, r7.x  // ::v<0>

#line 917
                        add r8, -r4.x, c106

#line 923
                        add r9, r4.x, -c106.wzyx

#line 929
                        add r2.w, r4.x, c108.z
                        add r3.zw, -r4.x, -c108.xywz

#line 934
                        cmp r3.zw, r3, -c137_abs.y, -c137_abs.x
                        cmp r2.w, r2.w, r3.z, c137.x
                        mov r7.z, c137.x
                        cmp r10.xyz, r2.w, c137.x, r7.xzyw  // ::result<0,1,2>
                        cmp r2.w, r9.w, r3.w, c137.x
                        cmp r10.xyz, r2.w, r10, r7.yzxw  // ::result<0,1,2>
                        cmp r8, r8, -c137_abs.y, -c137_abs.x
                        cmp r8.xyz, r9.zyxw, r8, c137.x
                        cmp r9.xyz, r8.x, r10, r7.zyxw  // ::result<0,1,2>
                        cmp r9.xyz, r8.y, r9, r7.zxyw  // ::result<0,1,2>
                        cmp r8.xyz, r8.z, r9, r7.yxzw  // ::result<0,1,2>
                        cmp r2.w, r4.x, r8.w, c137.x
                        cmp r7.yzw, r2.w, r8.xxyz, r7.xxyz  // ::result<0,1,2>
                        mad r2.w, r7.x, c75.w, r6.z  // ::w<0>

#line 939
                        add r6.xyz, r2.w, r7.yzww  // ::result<0,1,2>
                      else

#line 944
                        mov r6.xy, r6.z  // ::result<0,1>
                      endif

#line 2227
                    else
                      if_eq r1.x, -c34.z

#line 1653
                        if_lt c140.y, r4.z

#line 1661
                          mov r6.x, c140.y  // ::HSLuv_Lrgb<0>
                          mov r6.y, c137.x  // ::HSLuv_Lrgb<1>
                          mov r6.z, r4.x  // ::HSLuv_Lrgb<2>
                        else

#line 1653
                          add r2.w, r4.z, c74.w

#line 1656
                          if_lt r4.z, -c74.w
                            cmp r6.x, r2.w, c80.x, c80.y  // ::HSLuv_Lrgb<0>

#line 1661
                            mov r6.y, c137.x  // ::HSLuv_Lrgb<1>
                            mov r6.z, r4.x  // ::HSLuv_Lrgb<2>
                          else

#line 340
                            add r2.w, r4.z, -c42.z
                            mul r3.z, r2.w, r2.w
                            mul r3.w, r2.w, r3.z
                            mul r3.w, r3.w, c80.z  // ::s1<0>
                            mad r3.z, r2.w, -r3.z, c80.w

#line 514
                            mul r7.xy, r4.z, c78

#line 341
                            cmp r3.z, r3.z, r7.x, r3.w  // ::s2<0>

#line 326
                            mul r3.w, r4.z, r3.z
                            mul r4.w, r3.w, c78.w  // ::y<0>
                            mul r8, r3.z, c124  // ::x<0>, ::z<0>, ::x<0>, ::z<0>
                            rcp r5.w, r8.y
                            mul r6.w, r5.w, r8.x  // ::GetBounds2<0>
                            mul r4.w, r4.w, r5.w  // ::GetBounds2<1>
                            mad r3.w, r3.w, c78.w, -r7.y  // ::y<0>
                            mad r7.zw, r3.z, c155.xyxy, c155.z  // ::z<0,0>
                            rcp r5.w, r7.z
                            mul r7.z, r5.w, r8.x  // ::GetBounds2<0>
                            mul r3.w, r3.w, r5.w  // ::GetBounds2<1>
                            mul r5.w, r3.z, r7.y  // ::y<0>
                            rcp r8.x, r8.w
                            mul r8.y, r8.x, r8.z  // ::GetBounds2<0>
                            mul r8.x, r5.w, r8.x  // ::GetBounds2<1>
                            mad r7.y, r7.y, r3.z, -r7.y  // ::y<0>
                            rcp r7.w, r7.w
                            mul r8.z, r7.w, r8.z  // ::GetBounds2<0>
                            mul r7.w, r7.w, r7.y  // ::GetBounds2<1>
                            mul r9.xy, r3.z, c128  // ::x<0>, ::z<0>
                            rcp r8.w, r9.y
                            mul r9.y, r8.w, r9.x  // ::GetBounds2<0>
                            mul r5.w, r5.w, r8.w  // ::GetBounds2<1>
                            mad r3.z, r3.z, c155.w, c155.z  // ::z<0>
                            rcp r3.z, r3.z
                            mul r8.w, r3.z, r9.x  // ::GetBounds2<0>
                            mul r3.z, r3.z, r7.y  // ::GetBounds2<1>

#line 514
                            mad r9.xz, r4.x, c156.xyyw, c156.z
                            frc r9.xz, r9
                            mad r9.xz, r9, c153.z, c153.w

#line 371
                            sincos r10.xy, r9.x
                            mad r6.w, r6.w, -r10.x, r10.y
                            rcp r6.w, r6.w
                            mul r4.w, r4.w, r6.w  // ::length<0>
                            min r6.w, r4.w, c79.z  // GetChroma4::result<0>
                            cmp r4.w, r4.w, r6.w, c79.z  // GetChroma4::result<0>
                            mad r6.w, r7.z, -r10.x, r10.y
                            rcp r6.w, r6.w
                            mul r3.w, r3.w, r6.w  // ::length<0>
                            min r6.w, r3.w, r4.w  // GetChroma4::result<0>
                            cmp r3.w, r3.w, r6.w, r4.w  // GetChroma4::result<0>
                            mad r4.w, r8.y, -r10.x, r10.y
                            rcp r4.w, r4.w
                            mul r4.w, r4.w, r8.x  // ::length<0>
                            min r6.w, r4.w, r3.w  // GetChroma4::result<0>
                            cmp r3.w, r4.w, r6.w, r3.w  // GetChroma4::result<0>
                            mad r4.w, r8.z, -r10.x, r10.y
                            rcp r4.w, r4.w
                            mul r4.w, r4.w, r7.w  // ::length<0>
                            min r6.w, r4.w, r3.w  // GetChroma4::result<0>
                            cmp r3.w, r4.w, r6.w, r3.w  // GetChroma4::result<0>
                            mad r4.w, r9.y, -r10.x, r10.y
                            rcp r4.w, r4.w
                            mul r4.w, r4.w, r5.w  // ::length<0>
                            min r5.w, r4.w, r3.w  // GetChroma4::result<0>
                            cmp r3.w, r4.w, r5.w, r3.w  // GetChroma4::result<0>
                            mad r4.w, r8.w, -r10.x, r10.y
                            rcp r4.w, r4.w
                            mul r3.z, r3.z, r4.w  // ::length<0>
                            min r4.w, r3.z, r3.w  // GetChroma4::result<0>
                            cmp r3.z, r3.z, r4.w, r3.w  // GetChroma4::result<0>

#line 1657
                            mul r3.z, r4.y, r3.z
                            mul r3.z, r3.z, c49.x  // ::C<0>

#line 514
                            sincos r8.xy, r9.z
                            mul r3.zw, r3.z, r8.xyxy  // ::a<0>, ::b<0>

#line 419
                            rcp r4.w, c9.x
                            mul r5.w, r4.w, c8.x  // ::GetWhite<0>
                            add r6.w, -r3.y, -c8.x
                            add r6.w, r6.w, -c9.x
                            mul r6.w, r4.w, r6.w  // ::GetWhite<2>

#line 480
                            mul r5.w, r5.w, -c48.x
                            mov r7.y, c42.y
                            mad r4.w, r4.w, c8.x, -r7.y
                            mad r4.w, r6.w, -c46.z, r4.w
                            rcp r4.w, r4.w
                            mul r5.w, r4.w, r5.w  // ::ComputeKu<0>

#line 485
                            mul r4.w, r4.w, -c34.z  // ::ComputeKv<0>

#line 1539
                            add r6.w, -r4.z, c99.z
                            mul r2.w, r2.w, c103.x
                            mul r7.y, r2.w, r2.w
                            mul r2.w, r2.w, r7.y
                            cmp r2.w, r6.w, r7.x, r2.w  // ::Y<0>

#line 1544
                            mul r7.xyz, r4.z, c123

#line 1541
                            mad r3.z, r7.y, r5.w, r3.z
                            rcp r3.z, r3.z
                            mad r3.z, r7.x, r3.z, c137.y
                            mul r3.z, r3.z, c97.w  // ::a<0>
                            mul r5.w, r2.w, c48.z  // ::b<0>
                            mad r3.w, r7.y, r4.w, r3.w
                            rcp r3.w, r3.w
                            mad r3.w, r7.z, r3.w, c48.z
                            mad r3.w, r2.w, r3.w, -r5.w
                            rcp r4.w, r3.z
                            mul r3.w, r3.w, r4.w  // ::X<0>
                            mad r3.z, r3.w, r3.z, r5.w  // ::Z<0>

#line 1550
                            max r4.w, r3.w, c137.x  // ::X<0>

#line 1553
                            max r3.w, r2.w, c137.x  // ::Y<0>

#line 1556
                            max r2.w, r3.z, c137.x  // ::Z<0>

#line 428
                            mul r7.xyz, r3.w, c20
                            mad r7.xyz, r4.w, c19, r7
                            mad r6.xyz, r2.w, c21, r7  // ::x<0>, ::y<0>, ::z<0>

#line 1661
                          endif
                        endif

#line 2228
                      else
                        add r2.w, r1.x, c56.y

#line 986
                        rcp r3.z, r2.x
                        rcp r3.w, r2.y
                        mul r3.zw, r3, r4.xyxy  // ::h<0>, ::s<0>
                        rcp r4.w, r2.z
                        mul r7.x, r4.w, r4.z  // ::m<0>

#line 989
                        mad r3.z, r3.z, c98.z, c98.w
                        frc r3.z, r3.z
                        mad r3.z, r3.z, c153.z, c153.w
                        sincos r8.x, r3.z  // ::u<0>
                        mul r3.z, r3.w, r8.x  // ::v<0>

#line 994
                        mul r3.w, r3.z, c128.z
                        mul r4.w, r7.x, -c43.y
                        mad r3.z, r3.z, c128.z, r4.w
                        mad r3.z, r7.x, c32.y, r3.z
                        mul r7.y, r3.z, c67.y  // ::g<0>
                        mad r3.z, r7.x, -c46.x, -r3.w
                        mul r7.z, r3.z, -c75.w  // ::b<0>

#line 2229
                        cmp r6.xyz, -r2_abs.w, r7, r5  // ::TLrgb<0,1,2>
                        if_eq r1.x, -c56.y

#line 2262
                        else

#line 2230
                          if_eq r1.x, -c37.x

#line 1061
                            mad r2.w, r4.y, -c49.x, c49.w  // ::minOverMax<0>
                            if_lt -r2.w, c137.x

#line 1066
                              if_lt r4.x, c62.w
                                mul r3.z, r4.x, c99.w  // ::h<0>
                                rcp r3.w, r2.w
                                lrp r4.w, r3.z, r3.w, -c137.y  // ::part<0>
                                mul r5.y, r3.w, r3.w
                                mul r4.w, r4.w, r4.w
                                mul r4.w, r4.w, c82.w
                                mad r4.w, r5.y, c82.z, r4.w
                                add r4.w, r4.w, c100.x
                                rsq r4.w, r4.w
                                mul r7.z, r4.w, r4.z  // ::b<0>
                                mul r7.x, r3.w, r7.z  // ::r<0>
                                mad r3.w, r7.z, r3.w, -r7.z
                                mad r7.y, r3.z, r3.w, r7.z  // ::g<0>
                              else
                                if_lt r4.x, c49.z

#line 1077
                                  mad r3.z, r4.x, -c156.x, c156.w
                                  mul r3.z, r3.z, -c75.y  // ::h<0>
                                  rcp r3.w, r2.w
                                  lrp r4.w, r3.z, r3.w, -c137.y  // ::part<0>
                                  mul r5.y, r3.w, r3.w
                                  mul r4.w, r4.w, r4.w
                                  mul r4.w, r4.w, c82.z
                                  mad r4.w, r5.y, c82.w, r4.w
                                  add r4.w, r4.w, c100.x
                                  rsq r4.w, r4.w
                                  mul r7.z, r4.w, r4.z  // ::b<0>
                                  mul r7.y, r3.w, r7.z  // ::g<0>
                                  mad r3.w, r7.z, r3.w, -r7.z
                                  mad r7.x, r3.z, r3.w, r7.z  // ::r<0>
                                else
                                  if_lt r4.x, c128.w
                                    mad r3.z, r4.x, c81.x, c81.y
                                    mul r3.z, r3.z, -c75.y  // ::h<0>
                                    rcp r3.w, r2.w
                                    lrp r4.w, r3.z, r3.w, -c137.y  // ::part<0>

#line 1088
                                    mul r5.y, r3.w, r3.w
                                    mul r4.w, r4.w, r4.w
                                    mul r4.w, r4.w, c100.x
                                    mad r4.w, r5.y, c82.w, r4.w
                                    add r4.w, r4.w, c82.z
                                    rsq r4.w, r4.w
                                    mul r7.x, r4.w, r4.z  // ::r<0>
                                    mul r7.y, r3.w, r7.x  // ::g<0>
                                    mad r3.w, r7.x, r3.w, -r7.x
                                    mad r7.z, r3.z, r3.w, r7.x  // ::b<0>
                                  else
                                    if_lt r4.x, c142.y
                                      mad r3.z, r4.x, -c81.x, c81.z
                                      mul r3.z, r3.z, -c75.y  // ::h<0>
                                      rcp r3.w, r2.w
                                      lrp r4.w, r3.z, r3.w, -c137.y  // ::part<0>
                                      mul r5.y, r3.w, r3.w
                                      mul r4.w, r4.w, r4.w
                                      mul r4.w, r4.w, c82.w
                                      mad r4.w, r5.y, c100.x, r4.w
                                      add r4.w, r4.w, c82.z
                                      rsq r4.w, r4.w
                                      mul r7.x, r4.w, r4.z  // ::r<0>
                                      mul r7.z, r3.w, r7.x  // ::b<0>

#line 1099
                                      mad r3.w, r7.x, r3.w, -r7.x
                                      mad r7.y, r3.z, r3.w, r7.x  // ::g<0>
                                    else
                                      add r3.z, r4.x, -c65.w
                                      mad r3.w, r4.x, c81.x, c81.w
                                      mul r3.w, r3.w, -c75.y  // ::h<0>
                                      rcp r2.w, r2.w
                                      lrp r4.w, r3.w, r2.w, -c137.y  // ::part<0>
                                      mul r5.y, r2.w, r2.w

#line 1115
                                      mul r5.yw, r5.y, c129.xwzx

#line 1106
                                      mul r4.w, r4.w, r4.w
                                      mad r4.w, r4.w, c82.z, r5.y
                                      add r4.w, r4.w, c82.w
                                      rsq r4.w, r4.w
                                      mul r8.y, r4.w, r4.z  // ::g<0>
                                      mul r8.z, r2.w, r8.y  // ::b<0>
                                      mad r4.w, r8.y, r2.w, -r8.y
                                      mad r8.x, r3.w, r4.w, r8.y  // ::r<0>

#line 1113
                                      mad r3.w, r4.x, -c113.x, c113.y
                                      mul r3.w, r3.w, -c75.y  // ::h<0>
                                      lrp r4.w, r3.w, r2.w, -c137.y  // ::part<0>
                                      mul r4.w, r4.w, r4.w
                                      mad r4.w, r4.w, c100.x, r5.w
                                      add r4.w, r4.w, c82.w
                                      rsq r4.w, r4.w
                                      mul r9.y, r4.w, r4.z  // ::g<0>
                                      mul r9.x, r2.w, r9.y  // ::r<0>
                                      mad r2.w, r9.y, r2.w, -r9.y
                                      mad r9.z, r3.w, r2.w, r9.y  // ::b<0>
                                      cmp r7.xyz, r3.z, r9, r8  // ::r<0>, ::g<0>, ::b<0>
                                    endif
                                  endif
                                endif
                              endif
                            else

#line 1123
                              if_lt r4.x, c62.w
                                mul r2.w, r4.x, c99.w  // ::h<0>
                                mul r3.z, r4.z, r4.z
                                mul r3.w, r4.x, r2.w
                                mad r3.w, r3.w, c113.z, c113.w
                                rcp r3.w, r3.w
                                mul r3.z, r3.w, r3.z
                                rsq r3.z, r3.z
                                rcp r7.x, r3.z  // ::r<0>
                                mul r7.y, r2.w, r7.x  // ::g<0>
                                mov r7.z, c137.x
                              else
                                if_lt r4.x, c49.z
                                  mad r2.w, r4.x, -c156.x, c156.w
                                  mul r3.z, r2.w, -c75.y  // ::h<0>

#line 1134
                                  mul r3.w, r4.z, r4.z
                                  mul r2.w, r2.w, r3.z
                                  mad r2.w, r2.w, c115.x, c115.y
                                  rcp r2.w, r2.w
                                  mul r2.w, r2.w, r3.w
                                  rsq r2.w, r2.w
                                  rcp r7.y, r2.w  // ::g<0>
                                  mul r7.x, r3.z, r7.y  // ::r<0>
                                  mov r7.z, c137.x
                                else

#line 1157
                                  mad r3.zw, r4.x, c81.x, c81.xyyw
                                  mul r5.yw, r3.xzzw, -c75.y  // ::h<0,0>

#line 1142
                                  mul r2.w, r4.z, r4.z

#line 1158
                                  mul r3.zw, r3, r5.xyyw
                                  mad r3.zw, r3, c115.xyzx, c115.xyyw

#line 1142
                                  rcp r3.z, r3.z
                                  mul r3.z, r2.w, r3.z
                                  rsq r3.z, r3.z
                                  rcp r8.y, r3.z  // ::g<0>
                                  mul r8.z, r5.y, r8.y  // ::b<0>

#line 1165
                                  mad r9.xy, r4.x, -c127.x, c127.yzzw
                                  mul r9.zw, r9.xyxy, -c75.y  // ::h<0,0>
                                  mul r9.xy, r9, r9.zwzw
                                  mad r9.xy, r9, c114, c114.zwzw

#line 1150
                                  rcp r3.z, r9.x
                                  mul r3.z, r2.w, r3.z
                                  rsq r3.z, r3.z
                                  rcp r10.z, r3.z  // ::b<0>
                                  mul r10.y, r9.z, r10.z  // ::g<0>

#line 1155
                                  add r11.xyz, r4.x, c107

#line 1158
                                  rcp r3.z, r3.w
                                  mul r3.z, r2.w, r3.z
                                  rsq r3.z, r3.z
                                  rcp r12.z, r3.z  // ::b<0>
                                  mul r12.x, r5.w, r12.z  // ::r<0>

#line 1166
                                  rcp r3.z, r9.y
                                  mul r2.w, r2.w, r3.z
                                  rsq r2.w, r2.w
                                  rcp r9.x, r2.w  // ::r<0>
                                  mul r9.z, r9.w, r9.x  // ::b<0>
                                  mov r9.y, c137.x
                                  mov r12.y, c137.x
                                  cmp r9.xyz, r11.z, r9, r12  // ::r<0>, ::g<0>, ::b<0>
                                  mov r10.x, c137.x
                                  cmp r9.xyz, r11.y, r9, r10  // ::r<0>, ::g<0>, ::b<0>
                                  mov r8.x, c137.x
                                  cmp r7.xyz, r11.x, r9, r8  // ::r<0>, ::g<0>, ::b<0>
                                endif
                              endif
                            endif

#line 1173
                            add r7.xyz, r7, -c75.w
                            frc r8.xyz, r7
                            add r7.xyz, r7, -r8
                            mul_sat r6.xyz, r7, c49.y  // ::result<0,1,2>

#line 2230
                          else
                            if_eq r1.x, -c37.y

#line 503
                              rcp r2.w, r5.z
                              mad r2.w, r4.y, -r2.w, -c137.y  // ::s<0>

#line 736
                              mul r3.z, r2.w, c49.x  // ::_s<0>
                              mul r7.y, r5.z, c49.x  // ::_b<0>

#line 748
                              mul r3.w, r4.x, c99.w  // ::SectorPosition<0>
                              frc r4.w, r3.w
                              add r3.w, r3.w, -r4.w  // ::SectorNumber<0>

#line 752
                              mad r4.w, r4.x, c99.w, -r3.w  // ::FractionalSector<0>

#line 755
                              mad r2.w, r2.w, -c49.x, c49.w
                              mul r7.z, r2.w, r7.y  // ::p<0>
                              mad r2.w, r3.z, -r4.w, -c137.y
                              mul r7.w, r2.w, r7.y  // ::q<0>
                              add r2.w, -r4.w, -c137.y
                              mad r2.w, r3.z, -r2.w, -c137.y
                              mul r7.x, r2.w, r7.y  // ::t<0>

#line 784
                              add r8, r3.w, c152

#line 790
                              add r2.w, r3.w, c48.z

#line 795
                              cmp r9.xyz, -r2_abs.w, r7.yzww, c137.x  // ::r<0>, ::g<0>, ::b<0>
                              cmp r9.xyz, -r8_abs.w, r7.xzyw, r9  // ::r<0>, ::g<0>, ::b<0>
                              cmp r9.xyz, -r8_abs.z, r7.zwyw, r9  // ::r<0>, ::g<0>, ::b<0>
                              cmp r8.yzw, -r8_abs.y, r7.xzyx, r9.xxyz  // ::r<0>, ::g<0>, ::b<0>
                              cmp r8.xyz, -r8_abs.x, r7.wyzw, r8.yzww  // ::r<0>, ::g<0>, ::b<0>
                              cmp r7.xzw, -r3_abs.w, r7.yyxz, r8.xyyz  // ::r<0>, ::g<0>, ::b<0>
                              cmp r6.xyz, -r3_abs.z, r7.y, r7.xzww  // ::r<0>, ::g<0>, ::b<0>

#line 2231
                            else
                              if_eq r1.x, -c37.z

#line 503
                                rcp r2.w, r5.z
                                mad r2.w, r4.y, -r2.w, -c137.y  // ::s<0>

#line 736
                                mul r3.z, r2.w, c49.x  // ::_s<0>
                                mul r7.y, r5.z, c49.x  // ::_b<0>

#line 748
                                mul r3.w, r4.x, c99.w  // ::SectorPosition<0>
                                frc r4.w, r3.w
                                add r3.w, r3.w, -r4.w  // ::SectorNumber<0>

#line 752
                                mad r4.w, r4.x, c99.w, -r3.w  // ::FractionalSector<0>

#line 755
                                mad r2.w, r2.w, -c49.x, c49.w
                                mul r7.z, r2.w, r7.y  // ::p<0>
                                mad r2.w, r3.z, -r4.w, -c137.y
                                mul r7.w, r2.w, r7.y  // ::q<0>
                                add r2.w, -r4.w, -c137.y
                                mad r2.w, r3.z, -r2.w, -c137.y
                                mul r7.x, r2.w, r7.y  // ::t<0>

#line 784
                                add r8, r3.w, c152

#line 790
                                add r2.w, r3.w, c48.z

#line 795
                                cmp r5.yzw, -r2_abs.w, r7, c137.x  // ::r<0>, ::g<0>, ::b<0>
                                cmp r5.yzw, -r8_abs.w, r7.xxzy, r5  // ::r<0>, ::g<0>, ::b<0>
                                cmp r5.yzw, -r8_abs.z, r7.xzwy, r5  // ::r<0>, ::g<0>, ::b<0>
                                cmp r5.yzw, -r8_abs.y, r7.xzyx, r5  // ::r<0>, ::g<0>, ::b<0>
                                cmp r5.yzw, -r8_abs.x, r7.xwyz, r5  // ::r<0>, ::g<0>, ::b<0>
                                cmp r5.yzw, -r3_abs.w, r7.xyxz, r5  // ::r<0>, ::g<0>, ::b<0>
                                cmp r6.xyz, -r3_abs.z, r7.y, r5.yzww  // ::r<0>, ::g<0>, ::b<0>

#line 2232
                              else
                                add r2.w, r1.x, c42.x
                                mad r5.yzw, r4.xxyz, c157.xxyy, c157.xzyy
                                cmp r6.xyz, -r2_abs.w, r5.yzww, r6  // ::TLrgb<0,1,2>
                                if_eq r1.x, -c42.x

#line 2262
                                else

#line 2234
                                  add r2.w, r1.x, c42.y
                                  cmp r6.xyz, -r2_abs.w, r4, r6  // ::TLrgb<0,1,2>
                                  if_eq r1.x, -c42.y

#line 2262
                                  else

#line 2235
                                    add r2.w, r1.x, c42.z

#line 2005
                                    add r3.zw, r4.xyzy, c137.z
                                    mad r4.w, r3.w, -c123.w, r4.x
                                    mad r4.w, r3.z, -c127.w, r4.w  // ::ycbcr<1>
                                    mad r5.yz, r3.xzww, c87.xxyw, r4.x  // ::ycbcr<0,2>

#line 1985
                                    add r5.yz, r5, -c134.xyww
                                    add r4.w, r4.w, c137.z

#line 1940
                                    mul r5.zw, r5.xyyz, c87  // ::ypbpr<0>
                                    add r7.x, r5.w, r5.z  // ::r<0>
                                    mad r7.z, r4.w, c107.w, r5.z  // ::b<0>
                                    mul r4.w, r7.x, c119.x
                                    mad r4.w, r5.y, c157.w, -r4.w
                                    mad r4.w, r7.z, -c119.z, r4.w
                                    mul r7.y, r4.w, c84.x  // ::g<0>

#line 2235
                                    cmp r5.yzw, -r2_abs.w, r7.xxyz, r6.xxyz  // ::TLrgb<0,1,2>
                                    if_eq r1.x, -c42.z

#line 2262
                                      mov r6.xyz, r5.yzww  // ::TLrgb<0,1,2>
                                    else

#line 2236
                                      add r2.w, r1.x, c42.w

#line 1309
                                      add r4.w, r4.x, -c42.z
                                      mul r6.w, r4.w, c103.x  // ::fy<0>

#line 1317
                                      mul r7.xy, r4.zxzw, c84.yzzw

#line 1310
                                      mad r7.z, r4.y, c84.w, r6.w  // ::fx<0>
                                      mad r7.x, r4.w, c103.x, -r7.x  // ::fz<0>
                                      mul r7.w, r7.z, r7.z
                                      mul r8.xy, r7.wxzw, r7.zxzw  // ::fx3<0>
                                      mul r8.z, r7.x, r8.y  // ::fz3<0>
                                      mad r7.w, r7.z, -r7.w, c77.w
                                      mad r7.z, r7.z, c103.y, c103.z
                                      mul r7.z, r7.z, c78.x
                                      cmp r7.z, r7.w, r7.z, r8.x  // ::xr<0>
                                      add r7.w, -r4.x, c99.z
                                      mul r8.x, r6.w, r6.w
                                      mul r8.x, r6.w, r8.x
                                      cmp r6.y, r7.w, r7.y, r8.x  // ::yr<0>
                                      mad r7.y, r7.x, -r8.y, c77.w
                                      mad r7.x, r7.x, c103.y, c103.z
                                      mul r7.x, r7.x, c78.x
                                      cmp r7.x, r7.y, r7.x, r8.z  // ::zr<0>

#line 419
                                      rcp r7.y, c9.x
                                      mul r8.x, r7.y, c8.x  // ::GetWhite<0>
                                      add r7.w, -r3.y, -c8.x
                                      add r7.w, r7.w, -c9.x
                                      mul r8.z, r7.w, r7.y  // ::GetWhite<2>

#line 1321
                                      mul r6.xz, r7.zyxw, r8  // ::Lab_Lrgb<0,2>

#line 2236
                                      cmp r5.yzw, -r2_abs.w, r6.xxyz, r5  // ::TLrgb<0,1,2>
                                      if_eq r1.x, -c42.w

#line 2262
                                        mov r6.xyz, r5.yzww  // ::TLrgb<0,1,2>
                                      else

#line 2237
                                        if_eq r1.x, -c32.x

#line 464
                                          mov r7.x, c8.x  // ::WhiteX<0>
                                          mad r7.xz, r7.y, r7.x, c101.yyzw

#line 474
                                          mad r9.xy, r7.y, r7.w, c101.wzzw

#line 464
                                          cmp r2.w, -r9_abs.x, -c137_abs.y, -c137_abs.x
                                          cmp r2.w, -r7_abs.x, r2.w, c137.x
                                          mul r7.x, r7.z, c105.x  // ::Ka<0>

#line 474
                                          mul r7.z, r9.y, c105.z  // ::Ka<0>

#line 1363
                                          mul r8.w, r4.x, c49.x
                                          mul r8.w, r8.w, r8.w  // ::Y<0>
                                          rcp r7.x, r7.x
                                          cmp r7.x, r2.w, r7.x, c60.x
                                          mul r7.x, r4.y, r7.x
                                          rsq r9.x, r8.w
                                          rcp r9.x, r9.x
                                          mad r7.x, r7.x, r9.x, r8.w
                                          mul r7.x, r8.x, r7.x  // ::X<0>
                                          rcp r7.z, r7.z
                                          cmp r2.w, r2.w, r7.z, c60.y
                                          mul r2.w, r2.w, r4.z
                                          mad r2.w, r2.w, r9.x, -r8.w
                                          mul r2.w, -r8.z, r2.w  // ::Z<0>

#line 428
                                          mul r9.xyz, r8.w, c20
                                          mad r9.xyz, r7.x, c19, r9
                                          mad r6.xyz, r2.w, c21, r9  // ::x<0>, ::y<0>, ::z<0>

#line 2237
                                        else
                                          add r2.w, r1.x, c32.y
                                          cmp r5.yzw, -r2_abs.w, r4.xxyz, r5  // ::TLrgb<0,1,2>
                                          if_eq r1.x, -c32.y

#line 2262
                                            mov r6.xyz, r5.yzww  // ::TLrgb<0,1,2>
                                          else

#line 2239
                                            if_eq r1.x, -c32.z

#line 1409
                                              add r2.w, r4.x, -c61.w  // ::Jz<0>
                                              mad r7.x, r2.w, c60.z, c60.w
                                              rcp r7.x, r7.x

#line 1414
                                              mul r9.xy, r4.y, c122
                                              mad r7.z, r2.w, r7.x, r9.x
                                              mad r7.z, r4.z, c122.z, r7.z  // PerceptualQuantizerInverse::X<0>

#line 447
                                              pow r8.w, r7.z, c122.w  // ::XX<0>
                                              add r7.z, -r8.w, c59.z
                                              mad r8.w, r8.w, c102.x, c102.y
                                              rcp r8.w, r8.w
                                              mul r7.z, r7.z, r8.w
                                              pow r8.w, r7.z, c102.z

#line 1414
                                              mad r7.xz, r2.w, r7.x, -r9.xyyw
                                              mad r7.xz, r4.z, -c125.xyyw, r7  // PerceptualQuantizerInverse::X<0,0>

#line 447
                                              pow r2.w, r7.x, c122.w  // ::XX<0>
                                              add r7.x, -r2.w, c59.z
                                              mad r2.w, r2.w, c102.x, c102.y
                                              rcp r2.w, r2.w
                                              mul r2.w, r2.w, r7.x
                                              pow r7.x, r2.w, c102.z
                                              pow r2.w, r7.z, c122.w  // ::XX<0>
                                              add r7.z, -r2.w, c59.z
                                              mad r2.w, r2.w, c102.x, c102.y
                                              rcp r2.w, r2.w
                                              mul r2.w, r2.w, r7.z
                                              pow r7.z, r2.w, c102.z

#line 1418
                                              mul r9.xyz, r7.x, c126
                                              mad r9.xz, r8.w, c125.zyww, -r9
                                              mad r2.w, r8.w, c102.w, r9.y
                                              mad r2.w, r7.z, -c126.w, r2.w  // ::Y<0>
                                              mad r7.xz, r7.z, c86.xyyw, r9  // ::X<0>, ::Z<0>
                                              mul r2.w, r2.w, c85.w  // ::xyz<1>
                                              mul r7.xz, r7, c85.w  // ::xyz<0,2>

#line 428
                                              mul r9.xyz, r2.w, c20
                                              mad r9.xyz, r7.x, c19, r9
                                              mad r6.xyz, r7.z, c21, r9  // ::x<0>, ::y<0>, ::z<0>

#line 2239
                                            else
                                              add r2.w, r1.x, c32.w
                                              if_eq r1.x, -c32.w

#line 428
                                                mul r9.xyz, r4.y, c24
                                                mad r9.xyz, r4.x, c23, r9
                                                mad r9.xyz, r4.z, c25, r9  // ::x<0>, ::y<0>, ::z<0>

#line 454
                                                mul r10.xyz, r9, r9
                                                mul r9.xyz, r9, r10  // ::Pow3<0,0,0>

#line 428
                                                mul r10.xyz, r9.y, c30
                                                mad r9.xyw, r9.x, c29.xyzz, r10.xyzz
                                                mad r9.xyz, r9.z, c31, r9.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 1467
                                                mov r8.y, -c137.y
                                                mul r9.xyz, r8, r9  // ::xyz<0,1,2>

#line 428
                                                mul r10.xyz, r9.y, c20
                                                mad r9.xyw, r9.x, c19.xyzz, r10.xyzz
                                                mad r9.xyz, r9.z, c21, r9.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 2240
                                                cmp r6.xyz, -r2_abs.w, r9, r5.yzww  // ::TLrgb<0,1,2>

#line 2262
                                              else

#line 2241
                                                if_eq r1.x, -c43.x

#line 514
                                                  mad r2.w, r4.z, c99.x, c99.y
                                                  frc r2.w, r2.w
                                                  mad r2.w, r2.w, c153.z, c153.w
                                                  sincos r9.xy, r2.w
                                                  mul r5.yz, r4.y, r9.xxyw  // ::a<0>, ::b<0>

#line 1311
                                                  mul r2.w, r5.z, c84.y
                                                  mad r5.y, r5.y, c84.w, r6.w  // ::fx<0>
                                                  mad r2.w, r4.w, c103.x, -r2.w  // ::fz<0>
                                                  mul r4.w, r5.y, r5.y
                                                  mul r5.z, r4.w, r5.y  // ::fx3<0>
                                                  mul r5.w, r2.w, r2.w
                                                  mul r6.w, r2.w, r5.w  // ::fz3<0>
                                                  mad r4.w, r5.y, -r4.w, c77.w
                                                  mad r5.y, r5.y, c103.y, c103.z
                                                  mul r5.y, r5.y, c78.x
                                                  cmp r4.w, r4.w, r5.y, r5.z  // ::xr<0>
                                                  mad r5.y, r2.w, -r5.w, c77.w
                                                  mad r2.w, r2.w, c103.y, c103.z
                                                  mul r2.w, r2.w, c78.x
                                                  cmp r2.w, r5.y, r2.w, r6.w  // ::zr<0>

#line 1321
                                                  mul r6.x, r8.x, r4.w  // ::Lab_Lrgb<0>
                                                  mul r6.z, r8.z, r2.w  // ::Lab_Lrgb<2>

#line 2241
                                                else
                                                  if_eq r1.x, -c43.y

#line 1363
                                                    mul r2.w, r4.x, c49.x

#line 514
                                                    mad r4.w, r4.z, c99.x, c99.y
                                                    frc r4.w, r4.w
                                                    mad r4.w, r4.w, c153.z, c153.w
                                                    sincos r9.xy, r4.w
                                                    mul r5.yz, r4.y, r9.xxyw  // ::a<0>, ::b<0>

#line 464
                                                    mov r7.x, c8.x  // ::WhiteX<0>
                                                    mad r7.xz, r7.y, r7.x, c101.yyzw

#line 474
                                                    mad r8.yw, r7.y, r7.w, c101.xwzz

#line 464
                                                    cmp r4.w, -r8_abs.y, -c137_abs.y, -c137_abs.x
                                                    cmp r4.w, -r7_abs.x, r4.w, c137.x
                                                    mul r5.w, r7.z, c105.x  // ::Ka<0>

#line 474
                                                    mul r6.w, r8.w, c105.z  // ::Ka<0>

#line 1363
                                                    mul r2.w, r2.w, r2.w  // ::Y<0>
                                                    rcp r5.w, r5.w
                                                    cmp r5.w, r4.w, r5.w, c60.x
                                                    mul r5.y, r5.w, r5.y
                                                    rsq r5.w, r2.w
                                                    rcp r5.w, r5.w
                                                    mad r5.y, r5.y, r5.w, r2.w
                                                    mul r5.y, r8.x, r5.y  // ::X<0>
                                                    rcp r6.w, r6.w
                                                    cmp r4.w, r4.w, r6.w, c60.y
                                                    mul r4.w, r4.w, r5.z
                                                    mad r4.w, r4.w, r5.w, -r2.w
                                                    mul r4.w, -r8.z, r4.w  // ::Z<0>

#line 428
                                                    mul r7.xzw, r2.w, c20.xyyz
                                                    mad r5.yzw, r5.y, c19.xxyz, r7.xxzw
                                                    mad r6.xyz, r4.w, c21, r5.yzww  // ::x<0>, ::y<0>, ::z<0>

#line 2242
                                                  else

#line 2246
                                                    add r9, r1.x, c149

#line 1544
                                                    mul r5.yzw, r4.x, c123.xxyz

#line 514
                                                    mad r2.w, r4.z, c99.x, c99.y
                                                    frc r2.w, r2.w
                                                    mad r2.w, r2.w, c153.z, c153.w
                                                    sincos r10.xy, r2.w
                                                    mul r11, r4.y, r10.xyxy  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1965
                                                    add r7.xzw, r4.xyzx, c83.xyyz  // ::Jz<0>
                                                    mul r8.yw, r7.xzzw, c86.xzzw  // ::ypbpr<0>

#line 1410
                                                    mad r2.w, r7.x, c60.z, c60.w
                                                    rcp r2.w, r2.w

#line 1414
                                                    mul r10.zw, r11.xyxz, c122.xyxy
                                                    mad r4.w, r7.x, r2.w, r10.z
                                                    mad r4.w, r11.y, c122.z, r4.w  // PerceptualQuantizerInverse::X<0>

#line 447
                                                    pow r6.w, r4.w, c122.w  // ::XX<0>
                                                    add r4.w, -r6.w, c59.z
                                                    mad r6.w, r6.w, c102.x, c102.y
                                                    rcp r6.w, r6.w
                                                    mul r4.w, r4.w, r6.w
                                                    pow r6.w, r4.w, c102.z

#line 1414
                                                    mad r7.xz, r7.x, r2.w, -r10.zyww
                                                    mad r7.xz, r11.yyww, -c125.xyyw, r7  // PerceptualQuantizerInverse::X<0,0>

#line 447
                                                    pow r2.w, r7.x, c122.w  // ::XX<0>
                                                    add r4.w, -r2.w, c59.z
                                                    mad r2.w, r2.w, c102.x, c102.y
                                                    rcp r2.w, r2.w
                                                    mul r2.w, r2.w, r4.w
                                                    pow r4.w, r2.w, c102.z
                                                    pow r2.w, r7.z, c122.w  // ::XX<0>
                                                    add r7.x, -r2.w, c59.z
                                                    mad r2.w, r2.w, c102.x, c102.y
                                                    rcp r2.w, r2.w
                                                    mul r2.w, r2.w, r7.x
                                                    pow r7.x, r2.w, c102.z

#line 1418
                                                    mul r11.xyz, r4.w, c126
                                                    mad r10.zw, r6.w, c125, -r11.xyxz
                                                    mad r2.w, r6.w, c102.w, r11.y
                                                    mad r2.w, r7.x, -c126.w, r2.w  // ::Y<0>
                                                    mad r7.xz, r7.x, c86.xyyw, r10.zyww  // ::X<0>, ::Z<0>
                                                    mul r2.w, r2.w, c85.w  // ::xyz<1>
                                                    mul r7.xz, r7, c85.w  // ::xyz<0,2>

#line 428
                                                    mul r11.xyz, r2.w, c20
                                                    mad r11.xyz, r7.x, c19, r11
                                                    mad r11.xyz, r7.z, c21, r11  // ::x<0>, ::y<0>, ::z<0>

#line 480
                                                    mov r12.y, c42.y
                                                    mad r2.w, r7.y, c8.x, -r12.y
                                                    mul r4.w, r8.x, -c48.x
                                                    mad r2.w, r8.z, -c46.z, r2.w
                                                    rcp r2.w, r2.w
                                                    mul r4.w, r2.w, r4.w  // ::ComputeKu<0>

#line 1731
                                                    mul r7.xz, r2.w, c76.xyyw  // ::ComputeKv<0>, ::vN<0>

#line 1541
                                                    mul r2.w, r4.w, r5.z
                                                    mad r2.w, r4.y, r10.x, r2.w
                                                    rcp r2.w, r2.w
                                                    mad r2.w, r5.y, r2.w, c137.y
                                                    mul r2.w, r2.w, c97.w  // ::a<0>
                                                    mul r6.w, r6.y, c48.z  // ::b<0>
                                                    mul r8.x, r5.z, r7.x
                                                    mad r8.x, r4.y, r10.y, r8.x
                                                    rcp r8.x, r8.x
                                                    mad r8.x, r5.w, r8.x, c48.z
                                                    mad r8.x, r6.y, r8.x, -r6.w
                                                    rcp r10.x, r2.w
                                                    mul r8.x, r8.x, r10.x  // ::X<0>
                                                    mad r2.w, r8.x, r2.w, r6.w  // ::Z<0>

#line 1550
                                                    max r10.x, r8.x, c137.x  // ::X<0>

#line 1553
                                                    max r8.x, r6.y, c137.x  // ::Y<0>

#line 1556
                                                    max r10.y, r2.w, c137.x  // ::Z<0>

#line 428
                                                    mul r12.xyz, r8.x, c20
                                                    mad r10.xzw, r10.x, c19.xyyz, r12.xyyz
                                                    mad r10.xyz, r10.y, c21, r10.xzww  // ::x<0>, ::y<0>, ::z<0>
                                                    mul r13.xyz, r4.y, c11
                                                    mad r13.xyz, r4.x, c10, r13
                                                    mad r13.xyz, r4.z, c12, r13  // ::x<0>, ::y<0>, ::z<0>
                                                    mul r14.xyz, r13.y, c20
                                                    mad r13.xyw, r13.x, c19.xyzz, r14.xyzz
                                                    mad r13.xyz, r13.z, c21, r13.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 1541
                                                    mad r2.w, r5.z, r4.w, r4.y
                                                    rcp r2.w, r2.w
                                                    mad r2.w, r5.y, r2.w, c137.y
                                                    mul r2.w, r2.w, c97.w  // ::a<0>

#line 1544
                                                    mad r5.y, r5.z, r7.x, r4.z
                                                    rcp r5.y, r5.y
                                                    mad r5.y, r5.w, r5.y, c48.z
                                                    mad r5.y, r6.y, r5.y, -r6.w
                                                    rcp r5.z, r2.w
                                                    mul r5.y, r5.z, r5.y  // ::X<0>
                                                    mad r2.w, r5.y, r2.w, r6.w  // ::Z<0>

#line 1550
                                                    max r6.w, r5.y, c137.x  // ::X<0>

#line 1556
                                                    max r5.y, r2.w, c137.x  // ::Z<0>

#line 428
                                                    mad r12.xyz, r6.w, c19, r12
                                                    mad r5.yzw, r5.y, c21.xxyz, r12.xxyz  // ::x<0>, ::y<0>, ::z<0>

#line 2250
                                                    add r12, r1.x, c148

#line 1735
                                                    mul r14.xyz, r4, c120  // XYZ_Lrgb::input<0>

#line 1265
                                                    mad r2.w, r4.x, c69_abs.w, c69_abs.z
                                                    frc r2.w, r2.w
                                                    mad r2.w, r2.w, c153.z, c153.w
                                                    sincos r15.xy, r2.w
                                                    rcp r2.w, r15.x
                                                    mul r2.w, r2.w, r15.y  // ::x<0>
                                                    mul r6.w, r2.w, r2.w  // ::x<0>

#line 1805
                                                    mul r15.xyz, r4.yzzw, r4.yxzw
                                                    mul r15.xw, r15.xyzz, c76.zyzw  // ::Y<0>

#line 1268
                                                    rcp r6.w, r6.w
                                                    add r6.w, r6.w, -c137.y
                                                    mul r6.w, r6.w, -c34.z
                                                    rcp r6.w, r6.w
                                                    mul r6.w, r6.w, r15.x
                                                    rsq r6.w, r6.w
                                                    rcp r6.w, r6.w  // ::r<0>
                                                    mad r2.w, r2.w, r2.w, -c137.y
                                                    mul r2.w, r2.w, -c34.z
                                                    rcp r2.w, r2.w
                                                    mul r2.w, r2.w, r15.x
                                                    rsq r2.w, r2.w
                                                    rcp r2.w, r2.w  // ::g<0>
                                                    mul r7.x, r2.w, c83.w
                                                    mad r7.x, r6.w, c120.w, r7.x
                                                    add r7.x, r7.x, c100.x
                                                    rcp r7.x, r7.x
                                                    mul r7.x, r4.z, r7.x  // ::k<0>
                                                    add r8.x, -r6.w, -c137.y
                                                    add r8.x, -r2.w, r8.x
                                                    mul r16.z, r7.x, r8.x  // ::B<0>
                                                    mul r16.y, r2.w, r7.x  // ::G<0>
                                                    mul r16.x, r6.w, r7.x  // ::R<0>

#line 1709
                                                    mad r2.w, r4.x, c120.x, -r14.y

#line 1832
                                                    add r17.z, r4.y, r4.x  // ::YCoCg_Lrgb<1>

#line 1709
                                                    mad r2.w, r4.z, -c46.x, r2.w  // XYZ_Lrgb::input<2>

#line 426
                                                    mul r18, r4.yyyz, c20.xyzx
                                                    mad r14.xyw, r14.x, c19.xyzz, r18.xyzz
                                                    mad r14.xyw, r2.w, c21.xyzz, r14  // ::x<0>, ::y<0>, ::z<0>

#line 1733
                                                    mul r2.w, r8.y, r8.y
                                                    mul r2.w, r2.w, r8.y  // ::y<0>
                                                    rcp r6.w, r14.z
                                                    mad r4.w, r4.x, r6.w, r4.w
                                                    cmp r4.w, -r14_abs.z, c137.x, r4.w  // ::_u<0>
                                                    mad r6.w, r4.y, r6.w, r7.z
                                                    cmp r6.w, -r14_abs.z, c137.x, r6.w  // ::_v<0>
                                                    mul r7.x, r2.w, r4.w
                                                    rcp r6.w, r6.w
                                                    mul r7.x, r6.w, r7.x  // ::x<0>
                                                    add r7.z, r6.w, r6.w
                                                    mul r4.w, r4.w, r6.w
                                                    mad r4.w, r4.w, c75.w, r7.z
                                                    add r4.w, r4.w, c48.z
                                                    mul r4.w, r2.w, r4.w  // ::z<0>
                                                    mul r6.w, r7.x, c49.x  // ::xyz<0>
                                                    mul r2.w, r2.w, c49.x  // ::xyz<1>
                                                    mul r4.w, r4.w, c49.x  // ::xyz<2>

#line 428
                                                    mul r19.xyz, r2.w, c20
                                                    mad r19.xyz, r6.w, c19, r19
                                                    mad r19.xyz, r4.w, c21, r19  // ::x<0>, ::y<0>, ::z<0>

#line 1742
                                                    cmp r19.xyz, -r4_abs.z, c137.x, r19  // ::UVW_Lrgb<0,1,2>

#line 1941
                                                    mad r20.xz, r3.zyww, c118.xyyw, r8.w  // ::r<0>, ::b<0>
                                                    mul r2.w, r20.x, c119.x
                                                    mad r2.w, r7.w, c157.w, -r2.w
                                                    mad r2.w, r20.z, -c119.z, r2.w
                                                    mul r20.y, r2.w, c84.x  // ::g<0>

#line 2254
                                                    add r21, r1.x, c150

#line 1774
                                                    rcp r2.w, r4.y
                                                    mul r3.z, r2.w, r15.y  // XYZ_Lrgb::input<0>
                                                    add r3.w, -r4.y, r5.x
                                                    mul r3.w, r4.z, r3.w
                                                    mul r2.w, r2.w, r3.w  // XYZ_Lrgb::input<2>

#line 428
                                                    mul r7.xz, r3.z, c19.yyzw
                                                    mad r3.z, r3.z, c19.x, r18.w
                                                    mad r22.x, r2.w, c21.x, r3.z  // ::x<0>
                                                    mad r3.zw, r4.z, c20.xyyz, r7.xyxz
                                                    mad r22.yz, r2.w, c21, r3.xzww  // ::y<0>, ::z<0>

#line 1774
                                                    cmp r7.xzw, -r4_abs.y, c137.x, r22.xyyz  // ::xyY_Lrgb<0,1,2>

#line 1800
                                                    mad r2.w, r7.y, c8.x, r8.z
                                                    add r2.w, r2.w, -c137.y
                                                    rcp r3.z, r2.w  // ::xM<0>
                                                    mul r2.w, r2.w, c49.x  // ::zM<0>

#line 1809
                                                    mul r8.xy, c35.yxzw, c35.xzzw
                                                    mul r3.w, r3.z, r15.z
                                                    mul r8.xy, r4.y, r8
                                                    mul r8.xz, r8.xyyw, c140.y
                                                    mad r3.w, r3.w, r2.w, r8.x
                                                    mul r3.z, r3.z, r8.z
                                                    mad r3.z, r3.z, -r2.w, r3.w

#line 1856
                                                    mul r3.w, r4.y, c140.y

#line 1810
                                                    mul r8.xw, r3.w, c35.xyzz
                                                    mul r4.w, r2.w, r8.z
                                                    mad r3.w, r3.w, c35.x, -r4.w
                                                    mad r3.w, r15.z, r2.w, r3.w
                                                    rcp r3.w, r3.w
                                                    mul r3.z, r3.w, r3.z  // ::x<0>
                                                    mad r3.w, r8.w, c35.x, r15.z
                                                    mad r3.w, r8.y, -c140.y, r3.w
                                                    mul r4.w, r2.w, r15.w
                                                    mad r4.w, r4.w, c140.y, r8.x
                                                    mad r2.w, r8.z, -r2.w, r4.w
                                                    rcp r2.w, r2.w
                                                    mul r4.w, r2.w, r3.w  // ::y<0>

#line 1774
                                                    mul r5.x, r15.w, r3.z
                                                    rcp r6.w, r4.w
                                                    mul r5.x, r5.x, r6.w  // XYZ_Lrgb::input<0>
                                                    mad r2.w, r3.w, -r2.w, -r3.z
                                                    add r2.w, r2.w, -c137.y
                                                    mul r2.w, r15.w, r2.w
                                                    mul r2.w, r6.w, r2.w  // XYZ_Lrgb::input<2>

#line 428
                                                    mul r8.xyz, r15.w, c20
                                                    mad r8.xyz, r5.x, c19, r8
                                                    mad r8.xyz, r2.w, c21, r8  // ::x<0>, ::y<0>, ::z<0>

#line 1774
                                                    cmp r8.xyz, -r4_abs.w, c137.x, r8  // ::xyY_Lrgb<0,1,2>

#line 428
                                                    mad r15.xyz, r4.x, c19, r18
                                                    mad r15.xyz, r4.z, c21, r15  // ::x<0>, ::y<0>, ::z<0>

#line 2258
                                                    add r18, r1.x, c151

#line 1831
                                                    add r2.w, -r4.y, r4.x  // ::c<0>
                                                    add r17.x, r4.z, r2.w  // ::YCoCg_Lrgb<0>
                                                    add r17.w, -r4.z, r2.w  // ::YCoCg_Lrgb<2>

#line 1855
                                                    mad r2.w, r4.y, c118.z, r4.x
                                                    mad r22.x, r4.z, -c118.w, r2.w  // ::r<0>
                                                    mad r2.w, r4.y, -c88.x, r4.x
                                                    mad r22.y, r4.z, c88.y, r2.w  // ::g<0>

#line 1884
                                                    mad r3.zw, r4.y, c88, r4.x

#line 1857
                                                    mad r22.z, r4.z, -c89.x, r3.z  // ::b<0>

#line 1884
                                                    mad r23.x, r4.z, c89.y, r3.w  // ::r<0>
                                                    mad r3.zw, r4.y, c89, r4.x
                                                    mad r23.yz, r4.z, c90.xxyw, r3.xzww  // ::g<0>, ::b<0>

#line 2261
                                                    add r24.xyz, r1.x, c33.yzww

#line 1909
                                                    mad r3.zw, r4.y, c90, r4.x
                                                    mad r3.zw, r4.z, c91.xyxy, r3  // ::r<0>, ::g<0>

#line 1941
                                                    mad r25.xyz, r4.yzyw, c92, r4.x  // ::r<0>, ::b<0>

#line 1910
                                                    mad r1.x, r4.z, c91.z, r25.x  // ::b<0>

#line 1913
                                                    mov_sat r26.xy, r3.zwzw
                                                    cmp r26.xy, r3.zwzw, r26, c137.x  // ::r<0>, ::g<0>
                                                    mov_sat r2.w, r1.x
                                                    cmp r26.z, r1.x, r2.w, c137.x  // ::b<0>

#line 1942
                                                    mad r1.x, r25.y, -c119.x, r4.x
                                                    mad r1.x, r25.z, -c119.z, r1.x
                                                    mul r25.w, r1.x, c84.x  // ::g<0>

#line 2035
                                                    mad r27.xyz, r4.zyyw, c93, r4.x  // ::r<0>, ::b<0>

#line 2032
                                                    mad r1.x, r4.z, c91.w, r27.y  // ::g<0>

#line 2041
                                                    mov_sat r3.zw, r27.xyxz
                                                    mov_sat r2.w, r1.x
                                                    cmp r28.y, r1.x, r2.w, c137.x  // ::g<0>
                                                    cmp r28.xz, r27, r3.zyww, c137.x  // ::r<0>, ::b<0>

#line 2262
                                                    cmp r27.xyz, -r24_abs.z, r28, r4  // ::TLrgb<0,1,2>
                                                    cmp r24.yzw, -r24_abs.y, r25.xywz, r27.xxyz  // ::TLrgb<0,1,2>
                                                    cmp r24.xyz, -r24_abs.x, r26, r24.yzww  // ::TLrgb<0,1,2>
                                                    cmp r23.xyz, -r18_abs.w, r23, r24  // ::TLrgb<0,1,2>
                                                    cmp r22.xyz, -r18_abs.z, r22, r23  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r18_abs.y, r4, r22  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r18_abs.x, r17.xzww, r4  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r21_abs.w, r20, r4  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r21_abs.z, r15, r4  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r21_abs.y, r8, r4  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r21_abs.x, r7.xzww, r4  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r12_abs.w, r20, r4  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r12_abs.z, r19, r4  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r12_abs.y, r14.xyww, r4  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r12_abs.x, r16, r4  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r9_abs.w, r5.yzww, r4  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r9_abs.z, r13, r4  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r9_abs.y, r10, r4  // ::TLrgb<0,1,2>
                                                    cmp r6.xyz, -r9_abs.x, r11, r4  // ::TLrgb<0,1,2>
                                                  endif
                                                endif
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif

#line 2124
      log r1.x, r6.x

#line 2129
      if_eq c6.x, r3.x

#line 2124
        mul r2.w, r1.x, c7.x
        exp r0.x, r2.w  // ::v<0>

#line 2159
      else

#line 2153
        mov r4, c152
        add r4, r4, c6.x

#line 2156
        add r3.zw, -r6.x, c94.xyxy

#line 2148
        mul r5.xy, r6.x, c94.zwzw
        add r7.xyz, r6.x, c95

#line 2132
        mul r2.w, r7.x, c92.w
        mul r5.z, r2.w, r2.w
        mul r2.w, r2.w, r5.z
        cmp r2.w, r3.z, r5.x, r2.w  // ::v<0>

#line 2148
        mad r5.xz, r6.x, c104.xyyw, c104.zyww
        cmp r5.xy, r7.yzzw, r5.xzzw, r5.y  // ::V<0,0>

#line 2156
        mul r3.z, r6.x, c93.w
        mul r1.x, r1.x, c95.w
        exp r1.x, r1.x
        mad r1.x, r1.x, c96.x, c96.y
        cmp r1.x, r3.w, r3.z, r1.x  // ::V<0>

#line 2159
        cmp r1.x, -r4_abs.w, r1.x, r6.x  // ::Compand<0>
        cmp r1.x, -r4_abs.z, r5.y, r1.x  // ::Compand<0>
        cmp r1.x, -r4_abs.y, r5.x, r1.x  // ::Compand<0>
        cmp r0.x, -r4_abs.x, r2.w, r1.x  // ::Compand<0>
      endif

#line 2124
      log r1.x, r6.y

#line 2129
      if_eq c6.x, r3.x

#line 2124
        mul r2.w, r1.x, c7.x
        exp r0.y, r2.w  // ::v<0>

#line 2159
      else

#line 2153
        mov r4, c152
        add r4, r4, c6.x

#line 2156
        add r3.zw, -r6.y, c94.xyxy

#line 2148
        mul r5.xy, r6.y, c94.zwzw
        add r7.xyz, r6.y, c95

#line 2132
        mul r2.w, r7.x, c92.w
        mul r5.z, r2.w, r2.w
        mul r2.w, r2.w, r5.z
        cmp r2.w, r3.z, r5.x, r2.w  // ::v<0>

#line 2148
        mad r5.xz, r6.y, c104.xyyw, c104.zyww
        cmp r5.xy, r7.yzzw, r5.xzzw, r5.y  // ::V<0,0>

#line 2156
        mul r3.z, r6.y, c93.w
        mul r1.x, r1.x, c95.w
        exp r1.x, r1.x
        mad r1.x, r1.x, c96.x, c96.y
        cmp r1.x, r3.w, r3.z, r1.x  // ::V<0>

#line 2159
        cmp r1.x, -r4_abs.w, r1.x, r6.y  // ::Compand<0>
        cmp r1.x, -r4_abs.z, r5.y, r1.x  // ::Compand<0>
        cmp r1.x, -r4_abs.y, r5.x, r1.x  // ::Compand<0>
        cmp r0.y, -r4_abs.x, r2.w, r1.x  // ::Compand<0>
      endif

#line 2124
      log r1.x, r6.z

#line 2129
      if_eq c6.x, r3.x

#line 2124
        mul r2.w, r1.x, c7.x
        exp r0.z, r2.w  // ::v<0>

#line 2159
      else

#line 2153
        mov r4, c152
        add r4, r4, c6.x

#line 2156
        add r3.zw, -r6.z, c94.xyxy

#line 2148
        mul r5.xy, r6.z, c94.zwzw
        add r6.xyw, r6.z, c95.xyzz

#line 2132
        mul r2.w, r6.x, c92.w
        mul r5.z, r2.w, r2.w
        mul r2.w, r2.w, r5.z
        cmp r2.w, r3.z, r5.x, r2.w  // ::v<0>

#line 2148
        mad r5.xz, r6.z, c104.xyyw, c104.zyww
        cmp r5.xy, r6.ywzw, r5.xzzw, r5.y  // ::V<0,0>

#line 2156
        mul r3.z, r6.z, c93.w
        mul r1.x, r1.x, c95.w
        exp r1.x, r1.x
        mad r1.x, r1.x, c96.x, c96.y
        cmp r1.x, r3.w, r3.z, r1.x  // ::V<0>

#line 2159
        cmp r1.x, -r4_abs.w, r1.x, r6.z  // ::Compand<0>
        cmp r1.x, -r4_abs.z, r5.y, r1.x  // ::Compand<0>
        cmp r1.x, -r4_abs.y, r5.x, r1.x  // ::Compand<0>
        cmp r0.z, -r4_abs.x, r2.w, r1.x  // ::Compand<0>
      endif

#line 2343
    else

#line 2353
      add r1.x, r3.y, c22.x

#line 2356
      add r4.xyz, c142.zwww, -v0.yxyw  // ::y<0>

#line 403
      add r2.w, -r4.x, -c75.w
      mul r2.w, r2_abs.w, r2_abs.w
      mad r2.w, r4_abs.y, r4_abs.y, r2.w
      rsq r2.w, r2.w
      rcp r2.w, r2.w  // ::GetDistance<0>

#line 2355
      mad r4.x, r2.w, -c96.z, c96.w  // ::xN<0>
      add r2.w, c75.w, v0.x
      min r3.z, r2_abs.w, r4_abs.z
      max r3.w, r4_abs.z, r2_abs.w
      rcp r3.w, r3.w
      mul r3.z, r3.w, r3.z
      mul r3.w, r3.z, r3.z
      mad r4.w, r3.w, c64.z, c64.w
      mad r4.w, r3.w, r4.w, c65.x
      mad r4.w, r3.w, r4.w, c65.y
      mad r3.w, r3.w, r4.w, c65.z
      mul r3.z, r3.w, r3.z
      add r3.w, -r4_abs.z, r2_abs.w
      cmp r3.w, r3.w, c137_abs.x, c137_abs.y
      mad r4.w, r3.z, c66.x, c66.y
      mad r3.z, r4.w, r3.w, r3.z
      cmp r3.w, r2.w, c66.z, c66.w
      add r3.z, r3.w, r3.z
      min r3.w, r2.w, r4.z
      max r5.x, r4.z, r2.w
      cmp r2.w, r5.x, c137_abs.y, c137_abs.x
      cmp r2.w, r3.w, c137.x, r2.w
      add r3.w, r3.z, r3.z
      mad r2.w, r2.w, -r3.w, r3.z
      add r3.zw, r2.w, c112.xyxy  // ::yN<0>
      add r2.w, -r3.z, c97.z
      cmp r2.w, r2.w, r3.z, r3.w  // ::yN<0>
      mul r4.y, r2.w, c58.w  // ::yN<0>

#line 2363
      mad r3.zw, v0.xyxy, c144.xyxy, c144.xyzx
      cmp r4.xy, -r1_abs.x, r4, r3.zwzw  // ::x<0>, ::y<0>

#line 2366
      mov r5.xz, c46
      add r1.x, r5.x, c2.x

#line 2369
      mov r6.x, c3.x
      mov r6.y, c4.x
      add r6.z, -c137.y, -v0.y
      mov r4.z, c5.x
      cmp r4.xyz, -r1_abs.x, r6, r4  // ::x<0>, ::y<0>, ::z<0>

#line 2379
      mov r6.xw, c144
      add r3.zw, -r6.xyxw, c1.x
      cmp r6.xy, -r3_abs.z, r4.xzzw, r4.zxzw  // ::input<0,1>

#line 2382
      mov r6.z, r4.y
      cmp r4.xyz, -r3_abs.w, r4, r6  // ::input<0,1,2>

#line 291
      lrp r6.xyz, r4, r2, r1.yzww  // ::ConvertRange<0,0,0>

#line 579
      add r1.xyz, -r6, -c137.y  // ::CMY_Lrgb<0,1,2>

#line 2221
      if_eq c0.x, -r3.y

#line 2262
        mov r4.xyz, r1  // ::TLrgb<0,1,2>
      else

#line 2221
        if_eq c0.x, -r5.x

#line 591
          mul r3.zw, r6.xyyz, c49.x  // ::c<0>, ::g<0>

#line 599
          if_eq r3.z, c137.x

#line 648
            mov r4.xyz, r3.w  // ::HCV_Lrgb<0,1,2>
          else

#line 591
            mul r1.w, r6.x, c63.y  // ::h<0>

#line 599
            cmp r2.w, r6.x, c136.z, c136.w
            mul r1.w, r1.w, r2.w
            frc r1.w, r1.w
            mul r1.w, r1.w, r2.w
            mul r2.w, r1.w, -c75.y  // ::hi<0>
            cmp r1.w, r1.w, c136.z, c136.w
            mul r4.w, r1.w, r2.w
            frc r4.w, r4.w
            mul r7.x, r1.w, r4.w  // ::v<0>

#line 604
            frc r5.x, r2.w
            add r2.w, r2.w, -r5.x  // ::fhi<0>

#line 630
            add r8, r2.w, c152

#line 641
            mov r7.yz, c137_abs.xxyw
            mad r7.w, r1.w, -r4.w, -c137.y
            cmp r5.xyw, -r8_abs.w, r7.xyzz, r7.zyzw  // ::pure<0,1,2>
            mad r9.xyz, r7.xzyw, c144.yxxw, c144.xzzw
            cmp r5.xyw, -r8_abs.z, r9.zxzy, r5  // ::pure<0,1,2>
            cmp r5.xyw, -r8_abs.y, r7.yzzx, r5  // ::pure<0,1,2>
            cmp r5.xyw, -r8_abs.x, r9.xyzz, r5  // ::pure<0,1,2>
            cmp r5.xyw, -r2_abs.w, r7.zxzy, r5  // ::pure<0,1,2>

#line 647
            lrp r4.xyz, r3.z, r5.xyww, r3.w  // ::result<0,1,2>
          endif

#line 2221
        else
          if_eq c0.x, -r5.z

#line 683
            cmp r3.zw, r6.x, c63.xyxy, c63
            mul r1.w, r3.w, r6.x
            frc r1.w, r1.w
            mad r2.w, r3.z, r1.w, c140.x
            mul r1.w, r1.w, c140.x
            cmp r1.w, r6.x, r1.w, r2.w
            mul r3.zw, r6.xyyz, c49.xyxy  // ::s<0>, ::i<0>

#line 690
            if_lt r1.w, c49.z
              mad r2.w, r6.y, -c49.x, c49.w
              mul r4.z, r2.w, r3.w  // ::b<0>
              mad r2.w, r1.w, c153.x, c153.y
              frc r2.w, r2.w
              mad r2.w, r2.w, c153.z, c153.w
              sincos r5.x, r2.w
              mul r2.w, r3.z, r5.x
              mad r4.w, r1.w, -c98.x, c98.y
              mad r4.w, r4.w, c98.z, c98.w
              frc r4.w, r4.w
              mad r4.w, r4.w, c153.z, c153.w
              sincos r7.x, r4.w
              rcp r4.w, r7.x
              mad r2.w, r2.w, r4.w, -c137.y
              mul r4.x, r2.w, r3.w  // ::r<0>
              mad r2.w, r5.x, -r4.w, -c137.y
              mad r2.w, r3.z, r2.w, -c137.y
              mul r4.y, r2.w, r3.w  // ::g<0>
            else
              if_lt r1.w, c142.y
                mad r2.w, r1.w, c74.x, c74.y  // ::h<0>
                mad r4.w, r6.y, -c49.x, c49.w
                mul r4.x, r3.w, r4.w  // ::r<0>
                mad r4.w, r2.w, c98.z, c98.w
                frc r4.w, r4.w
                mad r4.w, r4.w, c153.z, c153.w
                sincos r5.x, r4.w
                mul r4.w, r3.z, r5.x
                add r2.w, -r2.w, c98.y
                mad r2.w, r2.w, c98.z, c98.w
                frc r2.w, r2.w
                mad r2.w, r2.w, c153.z, c153.w
                sincos r7.x, r2.w
                rcp r2.w, r7.x
                mad r4.w, r4.w, r2.w, -c137.y
                mul r4.y, r3.w, r4.w  // ::g<0>

#line 701
                mad r2.w, r5.x, -r2.w, -c137.y
                mad r2.w, r3.z, r2.w, -c137.y
                mul r4.z, r2.w, r3.w  // ::b<0>
              else

#line 705
                mad r1.w, r1.w, c74.x, c74.z  // ::h<0>
                mad r2.w, r6.y, -c49.x, c49.w
                mul r4.y, r2.w, r3.w  // ::g<0>
                mad r2.w, r1.w, c98.z, c98.w
                frc r2.w, r2.w
                mad r2.w, r2.w, c153.z, c153.w
                sincos r5.x, r2.w
                mul r2.w, r3.z, r5.x
                add r1.w, -r1.w, c98.y
                mad r1.w, r1.w, c98.z, c98.w
                frc r1.w, r1.w
                mad r1.w, r1.w, c153.z, c153.w
                sincos r7.x, r1.w
                rcp r1.w, r7.x
                mad r2.w, r2.w, r1.w, -c137.y
                mul r4.z, r2.w, r3.w  // ::b<0>
                mad r1.w, r5.x, -r1.w, -c137.y
                mad r1.w, r3.z, r1.w, -c137.y
                mul r4.x, r1.w, r3.w  // ::r<0>
              endif
            endif

#line 2222
          else
            mov r5.x, c0.x  // ::Model<0>
            if_eq r5.x, -c48.x

#line 1608
              if_lt c140.y, r6.z

#line 1616
                mov r4.x, c140.y  // ::HPLuv_Lrgb<0>
                mov r4.y, c137.x  // ::HPLuv_Lrgb<1>
                mov r4.z, r6.x  // ::HPLuv_Lrgb<2>
              else

#line 1608
                add r1.w, r6.z, c74.w

#line 1611
                if_lt r6.z, -c74.w
                  cmp r4.x, r1.w, c80.x, c80.y  // ::HPLuv_Lrgb<0>

#line 1616
                  mov r4.y, c137.x  // ::HPLuv_Lrgb<1>
                  mov r4.z, r6.x  // ::HPLuv_Lrgb<2>
                else

#line 340
                  add r1.w, r6.z, -c42.z
                  mul r2.w, r1.w, r1.w
                  mul r3.z, r1.w, r2.w
                  mul r3.z, r3.z, c80.z  // ::s1<0>
                  mad r2.w, r1.w, -r2.w, c80.w

#line 1541
                  mul r5.yzw, r6.z, c78.xxyz

#line 341
                  cmp r2.w, r2.w, r5.y, r3.z  // ::s2<0>

#line 326
                  mul r3.z, r6.z, r2.w
                  mul r3.w, r3.z, c78.w  // ::y<0>
                  mul r7.xy, r2.w, c79  // ::x<0>, ::z<0>
                  rcp r4.w, r7.y
                  mul r6.w, r4.w, r7.x  // ::GetBounds2<0>
                  mul r3.w, r3.w, r4.w  // ::GetBounds2<1>

#line 354
                  rcp r7.y, r6.w

#line 320
                  mad r4.w, r7.x, -r4.w, -r7.y
                  rcp r4.w, r4.w
                  mul r4.w, r3.w, r4.w  // ::GetIntersection<0>

#line 355
                  mad r3.w, r4.w, r6.w, r3.w  // GetDistance::input<1>

#line 315
                  mul r3.w, r3.w, r3.w
                  mad r3.w, r4.w, r4.w, r3.w
                  rsq r3.w, r3.w
                  rcp r3.w, r3.w  // ::GetDistance<0>

#line 357
                  min r4.w, r3.w, c79.z  // GetChroma2::result<0>

#line 326
                  mad r3.z, r3.z, c78.w, -r5.z  // ::y<0>
                  mad r2.w, r2.w, c79.y, c79.w  // ::z<0>
                  rcp r2.w, r2.w
                  mul r3.w, r2.w, r7.x  // ::GetBounds2<0>
                  mul r3.z, r2.w, r3.z  // ::GetBounds2<1>

#line 354
                  rcp r5.z, r3.w

#line 320
                  mad r2.w, r7.x, -r2.w, -r5.z
                  rcp r2.w, r2.w
                  mul r2.w, r2.w, r3.z  // ::GetIntersection<0>

#line 355
                  mad r3.z, r2.w, r3.w, r3.z  // GetDistance::input<1>

#line 315
                  mul r3.z, r3.z, r3.z
                  mad r2.w, r2.w, r2.w, r3.z
                  rsq r2.w, r2.w
                  rcp r2.w, r2.w  // ::GetDistance<0>

#line 357
                  min r3.z, r2.w, r4.w  // GetChroma2::result<0>

#line 1612
                  mul r2.w, r6.y, r3.z
                  mul r2.w, r2.w, c49.x  // ::C<0>

#line 514
                  mad r3.z, r6.x, c99.x, c99.y
                  frc r3.z, r3.z
                  mad r3.z, r3.z, c153.z, c153.w
                  sincos r7.xy, r3.z
                  mul r3.zw, r2.w, r7.xyxy  // ::a<0>, ::b<0>

#line 419
                  rcp r2.w, c9.x
                  mul r4.w, r2.w, c8.x  // ::GetWhite<0>
                  add r5.z, -r3.y, -c8.x
                  add r5.z, r5.z, -c9.x
                  mul r5.z, r2.w, r5.z  // ::GetWhite<2>

#line 480
                  mul r4.w, r4.w, -c48.x
                  mov r7.y, c42.y
                  mad r2.w, r2.w, c8.x, -r7.y
                  mad r2.w, r5.z, -c46.z, r2.w
                  rcp r2.w, r2.w
                  mul r4.w, r2.w, r4.w  // ::ComputeKu<0>

#line 485
                  mul r2.w, r2.w, -c34.z  // ::ComputeKv<0>

#line 1539
                  add r5.z, -r6.z, c99.z
                  mul r1.w, r1.w, c103.x
                  mul r6.w, r1.w, r1.w
                  mul r1.w, r1.w, r6.w
                  cmp r1.w, r5.z, r5.y, r1.w  // ::Y<0>

#line 1544
                  mul r5.yz, r6.z, c121.xxyw

#line 1541
                  mad r3.z, r5.y, r4.w, r3.z
                  rcp r3.z, r3.z
                  mad r3.z, r5.w, r3.z, c137.y
                  mul r3.z, r3.z, c97.w  // ::a<0>
                  mul r4.w, r1.w, c48.z  // ::b<0>
                  mad r2.w, r5.y, r2.w, r3.w
                  rcp r2.w, r2.w
                  mad r2.w, r5.z, r2.w, c48.z
                  mad r2.w, r1.w, r2.w, -r4.w
                  rcp r3.w, r3.z
                  mul r2.w, r2.w, r3.w  // ::X<0>
                  mad r3.z, r2.w, r3.z, r4.w  // ::Z<0>

#line 1550
                  max r3.w, r2.w, c137.x  // ::X<0>

#line 1553
                  max r2.w, r1.w, c137.x  // ::Y<0>

#line 1556
                  max r1.w, r3.z, c137.x  // ::Z<0>

#line 428
                  mul r5.yzw, r2.w, c20.xxyz
                  mad r5.yzw, r3.w, c19.xxyz, r5
                  mad r4.xyz, r1.w, c21, r5.yzww  // ::x<0>, ::y<0>, ::z<0>

#line 1616
                endif
              endif

#line 2223
            else
              if_eq r5.x, -c48.z

#line 748
                mul r5.yzw, r6.xyzx, c121.xzzw  // ::_s<0>, ::_b<0>, ::SectorPosition<0>
                frc r1.w, r5.w
                add r1.w, -r1.w, r5.w  // ::SectorNumber<0>

#line 752
                mad r2.w, r6.x, c99.w, -r1.w  // ::FractionalSector<0>

#line 755
                mad r3.z, r6.y, -c49.x, c49.w
                mul r7.y, r3.z, r5.z  // ::p<0>
                mad r3.z, r5.y, -r2.w, -c137.y
                mul r7.z, r3.z, r5.z  // ::q<0>
                add r2.w, -r2.w, -c137.y
                mad r2.w, r5.y, -r2.w, -c137.y
                mul r7.x, r2.w, r5.z  // ::t<0>

#line 784
                add r8, r1.w, c152

#line 790
                add r2.w, r1.w, c48.z

#line 795
                mov r7.w, r5.z
                cmp r9.xyz, -r2_abs.w, r7.wyzw, c137.x  // ::r<0>, ::g<0>, ::b<0>
                cmp r9.xyz, -r8_abs.w, r7.xyww, r9  // ::r<0>, ::g<0>, ::b<0>
                cmp r9.xyz, -r8_abs.z, r7.yzww, r9  // ::r<0>, ::g<0>, ::b<0>
                cmp r8.yzw, -r8_abs.y, r7.xywx, r9.xxyz  // ::r<0>, ::g<0>, ::b<0>
                cmp r8.xyz, -r8_abs.x, r7.zwyw, r8.yzww  // ::r<0>, ::g<0>, ::b<0>
                cmp r7.xyz, -r1_abs.w, r7.wxyw, r8  // ::r<0>, ::g<0>, ::b<0>
                cmp r4.xyz, -r5_abs.y, r5.z, r7  // ::r<0>, ::g<0>, ::b<0>

#line 2224
              else
                if_eq r5.x, -c75.y

#line 748
                  mul r5.yzw, r6.xyzx, c121.xzzw  // ::_s<0>, ::_b<0>, ::SectorPosition<0>
                  frc r1.w, r5.w
                  add r1.w, -r1.w, r5.w  // ::SectorNumber<0>

#line 752
                  mad r2.w, r6.x, c99.w, -r1.w  // ::FractionalSector<0>

#line 755
                  mad r3.z, r6.y, -c49.x, c49.w
                  mul r7.y, r3.z, r5.z  // ::p<0>
                  mad r3.z, r5.y, -r2.w, -c137.y
                  mul r7.z, r3.z, r5.z  // ::q<0>
                  add r2.w, -r2.w, -c137.y
                  mad r2.w, r5.y, -r2.w, -c137.y
                  mul r7.x, r2.w, r5.z  // ::t<0>

#line 784
                  add r8, r1.w, c152

#line 790
                  add r2.w, r1.w, c48.z

#line 795
                  mov r7.w, r5.z
                  cmp r9.xyz, -r2_abs.w, r7.wyzw, c137.x  // ::r<0>, ::g<0>, ::b<0>
                  cmp r9.xyz, -r8_abs.w, r7.xyww, r9  // ::r<0>, ::g<0>, ::b<0>
                  cmp r9.xyz, -r8_abs.z, r7.yzww, r9  // ::r<0>, ::g<0>, ::b<0>
                  cmp r8.yzw, -r8_abs.y, r7.xywx, r9.xxyz  // ::r<0>, ::g<0>, ::b<0>
                  cmp r8.xyz, -r8_abs.x, r7.zwyw, r8.yzww  // ::r<0>, ::g<0>, ::b<0>
                  cmp r7.xyz, -r1_abs.w, r7.wxyw, r8  // ::r<0>, ::g<0>, ::b<0>
                  cmp r4.xyz, -r5_abs.y, r5.z, r7  // ::r<0>, ::g<0>, ::b<0>

#line 2225
                else
                  if_eq r5.x, -c52.z

#line 889
                    mul r4.z, r6.z, c49.x  // ::l<0>

#line 894
                    if_lt -r6.y, c137.x
                      mul r3.zw, r6.xyyx, c121  // ::s<0>, ::h<0>
                      mad r1.w, r6.z, c108.x, c108.y
                      add r1.w, -r1_abs.w, -c137.y
                      mul r7.x, r3.z, r1.w  // ::chroma<0>
                      cmp r5.yz, r6.x, c154.xxyw, c154.xzww
                      mul r1.w, r3.w, r5.z
                      frc r1.w, r1.w
                      mad r1.w, r5.y, r1.w, c137.y
                      add r1.w, -r1_abs.w, -c137.y
                      mul r7.y, r1.w, r7.x  // ::v<0>

#line 917
                      add r8, -r6.x, c106

#line 923
                      add r9, r6.x, -c106.wzyx

#line 929
                      add r1.w, r6.x, c108.z
                      add r3.zw, -r6.x, -c108.xywz

#line 934
                      cmp r3.zw, r3, -c137_abs.y, -c137_abs.x
                      cmp r1.w, r1.w, r3.z, c137.x
                      mov r7.z, c137.x
                      cmp r5.yzw, r1.w, c137.x, r7.xxzy  // ::result<0,1,2>
                      cmp r1.w, r9.w, r3.w, c137.x
                      cmp r5.yzw, r1.w, r5, r7.xyzx  // ::result<0,1,2>
                      cmp r8, r8, -c137_abs.y, -c137_abs.x
                      cmp r8.xyz, r9.zyxw, r8, c137.x
                      cmp r5.yzw, r8.x, r5, r7.xzyx  // ::result<0,1,2>
                      cmp r5.yzw, r8.y, r5, r7.xzxy  // ::result<0,1,2>
                      cmp r5.yzw, r8.z, r5, r7.xyxz  // ::result<0,1,2>
                      cmp r1.w, r6.x, r8.w, c137.x
                      cmp r5.yzw, r1.w, r5, r7.xxyz  // ::result<0,1,2>
                      mad r1.w, r7.x, c75.w, r4.z  // ::w<0>

#line 939
                      add r4.xyz, r1.w, r5.yzww  // ::result<0,1,2>
                    else

#line 944
                      mov r4.xy, r4.z  // ::result<0,1>
                    endif

#line 2226
                  else
                    if_eq r5.x, -c34.x

#line 889
                      mul r4.z, r6.z, c49.x  // ::l<0>

#line 894
                      if_lt -r6.y, c137.x
                        mul r3.zw, r6.xyyx, c121  // ::s<0>, ::h<0>
                        mad r1.w, r6.z, c108.x, c108.y
                        add r1.w, -r1_abs.w, -c137.y
                        mul r7.x, r3.z, r1.w  // ::chroma<0>
                        cmp r5.yz, r6.x, c154.xxyw, c154.xzww
                        mul r1.w, r3.w, r5.z
                        frc r1.w, r1.w
                        mad r1.w, r5.y, r1.w, c137.y
                        add r1.w, -r1_abs.w, -c137.y
                        mul r7.y, r1.w, r7.x  // ::v<0>

#line 917
                        add r8, -r6.x, c106

#line 923
                        add r9, r6.x, -c106.wzyx

#line 929
                        add r1.w, r6.x, c108.z
                        add r3.zw, -r6.x, -c108.xywz

#line 934
                        cmp r3.zw, r3, -c137_abs.y, -c137_abs.x
                        cmp r1.w, r1.w, r3.z, c137.x
                        mov r7.z, c137.x
                        cmp r5.yzw, r1.w, c137.x, r7.xxzy  // ::result<0,1,2>
                        cmp r1.w, r9.w, r3.w, c137.x
                        cmp r5.yzw, r1.w, r5, r7.xyzx  // ::result<0,1,2>
                        cmp r8, r8, -c137_abs.y, -c137_abs.x
                        cmp r8.xyz, r9.zyxw, r8, c137.x
                        cmp r5.yzw, r8.x, r5, r7.xzyx  // ::result<0,1,2>
                        cmp r5.yzw, r8.y, r5, r7.xzxy  // ::result<0,1,2>
                        cmp r5.yzw, r8.z, r5, r7.xyxz  // ::result<0,1,2>
                        cmp r1.w, r6.x, r8.w, c137.x
                        cmp r5.yzw, r1.w, r5, r7.xxyz  // ::result<0,1,2>
                        mad r1.w, r7.x, c75.w, r4.z  // ::w<0>

#line 939
                        add r4.xyz, r1.w, r5.yzww  // ::result<0,1,2>
                      else

#line 944
                        mov r4.xy, r4.z  // ::result<0,1>
                      endif

#line 2227
                    else
                      if_eq r5.x, -c34.z

#line 1653
                        if_lt c140.y, r6.z

#line 1661
                          mov r4.x, c140.y  // ::HSLuv_Lrgb<0>
                          mov r4.y, c137.x  // ::HSLuv_Lrgb<1>
                          mov r4.z, r6.x  // ::HSLuv_Lrgb<2>
                        else

#line 1653
                          add r1.w, r6.z, c74.w

#line 1656
                          if_lt r6.z, -c74.w
                            cmp r4.x, r1.w, c80.x, c80.y  // ::HSLuv_Lrgb<0>

#line 1661
                            mov r4.y, c137.x  // ::HSLuv_Lrgb<1>
                            mov r4.z, r6.x  // ::HSLuv_Lrgb<2>
                          else

#line 340
                            add r1.w, r6.z, -c42.z
                            mul r2.w, r1.w, r1.w
                            mul r3.z, r1.w, r2.w
                            mul r3.z, r3.z, c80.z  // ::s1<0>
                            mad r2.w, r1.w, -r2.w, c80.w

#line 514
                            mul r5.yz, r6.z, c78.xxyw

#line 341
                            cmp r2.w, r2.w, r5.y, r3.z  // ::s2<0>

#line 326
                            mul r3.z, r6.z, r2.w
                            mul r3.w, r3.z, c78.w  // ::y<0>
                            mul r7, r2.w, c124  // ::x<0>, ::z<0>, ::x<0>, ::z<0>
                            rcp r4.w, r7.y
                            mul r5.w, r4.w, r7.x  // ::GetBounds2<0>
                            mul r3.w, r3.w, r4.w  // ::GetBounds2<1>
                            mad r3.z, r3.z, c78.w, -r5.z  // ::y<0>
                            mad r8.xy, r2.w, c155, c155.z  // ::z<0,0>
                            rcp r4.w, r8.x
                            mul r6.w, r4.w, r7.x  // ::GetBounds2<0>
                            mul r3.z, r3.z, r4.w  // ::GetBounds2<1>
                            mul r4.w, r2.w, r5.z  // ::y<0>
                            rcp r7.x, r7.w
                            mul r7.y, r7.x, r7.z  // ::GetBounds2<0>
                            mul r7.x, r4.w, r7.x  // ::GetBounds2<1>
                            mad r5.z, r5.z, r2.w, -r5.z  // ::y<0>
                            rcp r7.w, r8.y
                            mul r7.z, r7.w, r7.z  // ::GetBounds2<0>
                            mul r7.w, r5.z, r7.w  // ::GetBounds2<1>
                            mul r8.xy, r2.w, c128  // ::x<0>, ::z<0>
                            rcp r8.y, r8.y
                            mul r8.z, r8.y, r8.x  // ::GetBounds2<0>
                            mul r4.w, r4.w, r8.y  // ::GetBounds2<1>
                            mad r2.w, r2.w, c155.w, c155.z  // ::z<0>
                            rcp r2.w, r2.w
                            mul r8.x, r2.w, r8.x  // ::GetBounds2<0>
                            mul r2.w, r2.w, r5.z  // ::GetBounds2<1>

#line 514
                            mad r8.yw, r6.x, c156.xxzy, c156.z
                            frc r8.yw, r8
                            mad r8.yw, r8, c153.z, c153.w

#line 371
                            sincos r9.xy, r8.y
                            mad r5.z, r5.w, -r9.x, r9.y
                            rcp r5.z, r5.z
                            mul r3.w, r3.w, r5.z  // ::length<0>
                            min r5.z, r3.w, c79.z  // GetChroma4::result<0>
                            cmp r3.w, r3.w, r5.z, c79.z  // GetChroma4::result<0>
                            mad r5.z, r6.w, -r9.x, r9.y
                            rcp r5.z, r5.z
                            mul r3.z, r3.z, r5.z  // ::length<0>
                            min r5.z, r3.z, r3.w  // GetChroma4::result<0>
                            cmp r3.z, r3.z, r5.z, r3.w  // GetChroma4::result<0>
                            mad r3.w, r7.y, -r9.x, r9.y
                            rcp r3.w, r3.w
                            mul r3.w, r3.w, r7.x  // ::length<0>
                            min r5.z, r3.w, r3.z  // GetChroma4::result<0>
                            cmp r3.z, r3.w, r5.z, r3.z  // GetChroma4::result<0>
                            mad r3.w, r7.z, -r9.x, r9.y
                            rcp r3.w, r3.w
                            mul r3.w, r3.w, r7.w  // ::length<0>
                            min r5.z, r3.w, r3.z  // GetChroma4::result<0>
                            cmp r3.z, r3.w, r5.z, r3.z  // GetChroma4::result<0>
                            mad r3.w, r8.z, -r9.x, r9.y
                            rcp r3.w, r3.w
                            mul r3.w, r3.w, r4.w  // ::length<0>
                            min r4.w, r3.w, r3.z  // GetChroma4::result<0>
                            cmp r3.z, r3.w, r4.w, r3.z  // GetChroma4::result<0>
                            mad r3.w, r8.x, -r9.x, r9.y
                            rcp r3.w, r3.w
                            mul r2.w, r2.w, r3.w  // ::length<0>
                            min r4.w, r2.w, r3.z  // GetChroma4::result<0>
                            cmp r2.w, r2.w, r4.w, r3.z  // GetChroma4::result<0>

#line 1657
                            mul r2.w, r6.y, r2.w
                            mul r2.w, r2.w, c49.x  // ::C<0>

#line 514
                            sincos r7.xy, r8.w
                            mul r3.zw, r2.w, r7.xyxy  // ::a<0>, ::b<0>

#line 419
                            rcp r2.w, c9.x
                            mul r4.w, r2.w, c8.x  // ::GetWhite<0>
                            add r5.z, -r3.y, -c8.x
                            add r5.z, r5.z, -c9.x
                            mul r5.z, r2.w, r5.z  // ::GetWhite<2>

#line 480
                            mul r4.w, r4.w, -c48.x
                            mov r7.y, c42.y
                            mad r2.w, r2.w, c8.x, -r7.y
                            mad r2.w, r5.z, -c46.z, r2.w
                            rcp r2.w, r2.w
                            mul r4.w, r2.w, r4.w  // ::ComputeKu<0>

#line 485
                            mul r2.w, r2.w, -c34.z  // ::ComputeKv<0>

#line 1539
                            add r5.z, -r6.z, c99.z
                            mul r1.w, r1.w, c103.x
                            mul r5.w, r1.w, r1.w
                            mul r1.w, r1.w, r5.w
                            cmp r1.w, r5.z, r5.y, r1.w  // ::Y<0>

#line 1544
                            mul r5.yzw, r6.z, c123.xxyz

#line 1541
                            mad r3.z, r5.z, r4.w, r3.z
                            rcp r3.z, r3.z
                            mad r3.z, r5.y, r3.z, c137.y
                            mul r3.z, r3.z, c97.w  // ::a<0>
                            mul r4.w, r1.w, c48.z  // ::b<0>
                            mad r2.w, r5.z, r2.w, r3.w
                            rcp r2.w, r2.w
                            mad r2.w, r5.w, r2.w, c48.z
                            mad r2.w, r1.w, r2.w, -r4.w
                            rcp r3.w, r3.z
                            mul r2.w, r2.w, r3.w  // ::X<0>
                            mad r3.z, r2.w, r3.z, r4.w  // ::Z<0>

#line 1550
                            max r3.w, r2.w, c137.x  // ::X<0>

#line 1553
                            max r2.w, r1.w, c137.x  // ::Y<0>

#line 1556
                            max r1.w, r3.z, c137.x  // ::Z<0>

#line 428
                            mul r5.yzw, r2.w, c20.xxyz
                            mad r5.yzw, r3.w, c19.xxyz, r5
                            mad r4.xyz, r1.w, c21, r5.yzww  // ::x<0>, ::y<0>, ::z<0>

#line 1661
                          endif
                        endif

#line 2228
                      else
                        add r1.w, r5.x, c56.y

#line 986
                        rcp r2.x, r2.x
                        rcp r2.y, r2.y
                        mul r2.xy, r2, r6  // ::h<0>, ::s<0>
                        rcp r2.z, r2.z
                        mul r7.x, r2.z, r6.z  // ::m<0>

#line 989
                        mad r2.x, r2.x, c98.z, c98.w
                        frc r2.x, r2.x
                        mad r2.x, r2.x, c153.z, c153.w
                        sincos r8.x, r2.x  // ::u<0>
                        mul r2.x, r2.y, r8.x  // ::v<0>

#line 994
                        mul r2.y, r2.x, c128.z
                        mul r2.z, r7.x, -c43.y
                        mad r2.x, r2.x, c128.z, r2.z
                        mad r2.x, r7.x, c32.y, r2.x
                        mul r7.y, r2.x, c67.y  // ::g<0>
                        mad r2.x, r7.x, -c46.x, -r2.y
                        mul r7.z, r2.x, -c75.w  // ::b<0>

#line 2229
                        cmp r4.xyz, -r1_abs.w, r7, r1  // ::TLrgb<0,1,2>
                        if_eq r5.x, -c56.y

#line 2262
                        else

#line 2230
                          if_eq r5.x, -c37.x

#line 1061
                            mad r1.y, r6.y, -c49.x, c49.w  // ::minOverMax<0>
                            if_lt -r1.y, c137.x

#line 1066
                              if_lt r6.x, c62.w
                                mul r1.w, r6.x, c99.w  // ::h<0>
                                rcp r2.x, r1.y
                                lrp r3.z, r1.w, r2.x, -c137.y  // ::part<0>
                                mul r2.y, r2.x, r2.x
                                mul r2.z, r3.z, r3.z
                                mul r2.z, r2.z, c82.w
                                mad r2.y, r2.y, c82.z, r2.z
                                add r2.y, r2.y, c100.x
                                rsq r2.y, r2.y
                                mul r7.z, r2.y, r6.z  // ::b<0>
                                mul r7.x, r2.x, r7.z  // ::r<0>
                                mad r2.x, r7.z, r2.x, -r7.z
                                mad r7.y, r1.w, r2.x, r7.z  // ::g<0>
                              else
                                if_lt r6.x, c49.z

#line 1077
                                  mad r1.w, r6.x, -c156.x, c156.w
                                  mul r1.w, r1.w, -c75.y  // ::h<0>
                                  rcp r2.x, r1.y
                                  lrp r3.z, r1.w, r2.x, -c137.y  // ::part<0>
                                  mul r2.y, r2.x, r2.x
                                  mul r2.z, r3.z, r3.z
                                  mul r2.z, r2.z, c82.z
                                  mad r2.y, r2.y, c82.w, r2.z
                                  add r2.y, r2.y, c100.x
                                  rsq r2.y, r2.y
                                  mul r7.z, r2.y, r6.z  // ::b<0>
                                  mul r7.y, r2.x, r7.z  // ::g<0>
                                  mad r2.x, r7.z, r2.x, -r7.z
                                  mad r7.x, r1.w, r2.x, r7.z  // ::r<0>
                                else
                                  if_lt r6.x, c128.w
                                    mad r1.w, r6.x, c81.x, c81.y
                                    mul r1.w, r1.w, -c75.y  // ::h<0>
                                    rcp r2.x, r1.y
                                    lrp r3.z, r1.w, r2.x, -c137.y  // ::part<0>

#line 1088
                                    mul r2.y, r2.x, r2.x
                                    mul r2.z, r3.z, r3.z
                                    mul r2.z, r2.z, c100.x
                                    mad r2.y, r2.y, c82.w, r2.z
                                    add r2.y, r2.y, c82.z
                                    rsq r2.y, r2.y
                                    mul r7.x, r2.y, r6.z  // ::r<0>
                                    mul r7.y, r2.x, r7.x  // ::g<0>
                                    mad r2.x, r7.x, r2.x, -r7.x
                                    mad r7.z, r1.w, r2.x, r7.x  // ::b<0>
                                  else
                                    if_lt r6.x, c142.y
                                      mad r1.w, r6.x, -c81.x, c81.z
                                      mul r1.w, r1.w, -c75.y  // ::h<0>
                                      rcp r2.x, r1.y
                                      lrp r3.z, r1.w, r2.x, -c137.y  // ::part<0>
                                      mul r2.y, r2.x, r2.x
                                      mul r2.z, r3.z, r3.z
                                      mul r2.z, r2.z, c82.w
                                      mad r2.y, r2.y, c100.x, r2.z
                                      add r2.y, r2.y, c82.z
                                      rsq r2.y, r2.y
                                      mul r7.x, r2.y, r6.z  // ::r<0>
                                      mul r7.z, r2.x, r7.x  // ::b<0>

#line 1099
                                      mad r2.x, r7.x, r2.x, -r7.x
                                      mad r7.y, r1.w, r2.x, r7.x  // ::g<0>
                                    else
                                      add r1.w, r6.x, -c65.w
                                      mad r2.x, r6.x, c81.x, c81.w
                                      mul r2.x, r2.x, -c75.y  // ::h<0>
                                      rcp r1.y, r1.y
                                      lrp r3.z, r2.x, r1.y, -c137.y  // ::part<0>
                                      mul r2.y, r1.y, r1.y

#line 1115
                                      mul r2.yz, r2.y, c129.xwxw

#line 1106
                                      mul r2.w, r3.z, r3.z
                                      mad r2.y, r2.w, c82.z, r2.y
                                      add r2.y, r2.y, c82.w
                                      rsq r2.y, r2.y
                                      mul r8.y, r2.y, r6.z  // ::g<0>
                                      mul r8.z, r1.y, r8.y  // ::b<0>
                                      mad r2.y, r8.y, r1.y, -r8.y
                                      mad r8.x, r2.x, r2.y, r8.y  // ::r<0>

#line 1113
                                      mad r2.x, r6.x, -c113.x, c113.y
                                      mul r2.x, r2.x, -c75.y  // ::h<0>
                                      lrp r3.z, r2.x, r1.y, -c137.y  // ::part<0>
                                      mul r2.y, r3.z, r3.z
                                      mad r2.y, r2.y, c100.x, r2.z
                                      add r2.y, r2.y, c82.w
                                      rsq r2.y, r2.y
                                      mul r9.y, r2.y, r6.z  // ::g<0>
                                      mul r9.x, r1.y, r9.y  // ::r<0>
                                      mad r1.y, r9.y, r1.y, -r9.y
                                      mad r9.z, r2.x, r1.y, r9.y  // ::b<0>
                                      cmp r7.xyz, r1.w, r9, r8  // ::r<0>, ::g<0>, ::b<0>
                                    endif
                                  endif
                                endif
                              endif
                            else

#line 1123
                              if_lt r6.x, c62.w
                                mul r1.y, r6.x, c99.w  // ::h<0>
                                mul r1.w, r6.z, r6.z
                                mul r2.x, r6.x, r1.y
                                mad r2.x, r2.x, c113.z, c113.w
                                rcp r2.x, r2.x
                                mul r1.w, r1.w, r2.x
                                rsq r1.w, r1.w
                                rcp r7.x, r1.w  // ::r<0>
                                mul r7.y, r1.y, r7.x  // ::g<0>
                                mov r7.z, c137.x
                              else
                                if_lt r6.x, c49.z
                                  mad r1.y, r6.x, -c156.x, c156.w
                                  mul r1.w, r1.y, -c75.y  // ::h<0>

#line 1134
                                  mul r2.x, r6.z, r6.z
                                  mul r1.y, r1.y, r1.w
                                  mad r1.y, r1.y, c115.x, c115.y
                                  rcp r1.y, r1.y
                                  mul r1.y, r1.y, r2.x
                                  rsq r1.y, r1.y
                                  rcp r7.y, r1.y  // ::g<0>
                                  mul r7.x, r1.w, r7.y  // ::r<0>
                                  mov r7.z, c137.x
                                else

#line 1157
                                  mad r1.yw, r6.x, c81.x, c81
                                  mul r2.xy, r1.ywzw, -c75.y  // ::h<0,0>

#line 1142
                                  mul r2.z, r6.z, r6.z

#line 1158
                                  mul r1.yw, r1, r2.xxzy
                                  mad r1.yw, r1, c115.xzzx, c115

#line 1142
                                  rcp r1.y, r1.y
                                  mul r1.y, r1.y, r2.z
                                  rsq r1.y, r1.y
                                  rcp r8.y, r1.y  // ::g<0>
                                  mul r8.z, r2.x, r8.y  // ::b<0>

#line 1165
                                  mad r2.xw, r6.x, -c127.x, c127.yyzz
                                  mul r3.zw, r2.xyxw, -c75.y  // ::h<0,0>
                                  mul r2.xw, r2, r3.zyzw
                                  mad r2.xw, r2, c114.xyzy, c114.zyzw

#line 1150
                                  rcp r1.y, r2.x
                                  mul r1.y, r1.y, r2.z
                                  rsq r1.y, r1.y
                                  rcp r9.z, r1.y  // ::b<0>
                                  mul r9.y, r3.z, r9.z  // ::g<0>

#line 1155
                                  add r5.yzw, r6.x, c107.xxyz

#line 1158
                                  rcp r1.y, r1.w
                                  mul r1.y, r1.y, r2.z
                                  rsq r1.y, r1.y
                                  rcp r10.z, r1.y  // ::b<0>
                                  mul r10.x, r2.y, r10.z  // ::r<0>

#line 1166
                                  rcp r1.y, r2.w
                                  mul r1.y, r1.y, r2.z
                                  rsq r1.y, r1.y
                                  rcp r2.x, r1.y  // ::r<0>
                                  mul r2.z, r3.w, r2.x  // ::b<0>
                                  mov r2.y, c137.x
                                  mov r10.y, c137.x
                                  cmp r2.xyz, r5.w, r2, r10  // ::r<0>, ::g<0>, ::b<0>
                                  mov r9.x, c137.x
                                  cmp r2.xyz, r5.z, r2, r9  // ::r<0>, ::g<0>, ::b<0>
                                  mov r8.x, c137.x
                                  cmp r7.xyz, r5.y, r2, r8  // ::r<0>, ::g<0>, ::b<0>
                                endif
                              endif
                            endif

#line 1173
                            add r2.xyz, r7, -c75.w
                            frc r5.yzw, r2.xxyz
                            add r2.xyz, r2, -r5.yzww
                            mul_sat r4.xyz, r2, c49.y  // ::result<0,1,2>

#line 2230
                          else
                            if_eq r5.x, -c37.y

#line 503
                              rcp r1.y, r1.z
                              mad r1.y, r6.y, -r1.y, -c137.y  // ::s<0>

#line 736
                              mul r1.w, r1.y, c49.x  // ::_s<0>
                              mul r2.y, r1.z, c49.x  // ::_b<0>

#line 748
                              mul r3.z, r6.x, c99.w  // ::SectorPosition<0>
                              frc r3.w, r3.z
                              add r3.z, -r3.w, r3.z  // ::SectorNumber<0>

#line 752
                              mad r3.w, r6.x, c99.w, -r3.z  // ::FractionalSector<0>

#line 755
                              mad r1.y, r1.y, -c49.x, c49.w
                              mul r2.z, r1.y, r2.y  // ::p<0>
                              mad r1.y, r1.w, -r3.w, -c137.y
                              mul r2.w, r1.y, r2.y  // ::q<0>
                              add r1.y, -r3.w, -c137.y
                              mad r1.y, r1.w, -r1.y, -c137.y
                              mul r2.x, r1.y, r2.y  // ::t<0>

#line 784
                              add r7, r3.z, c152

#line 790
                              add r1.y, r3.z, c48.z

#line 795
                              cmp r5.yzw, -r1_abs.y, r2, c137.x  // ::r<0>, ::g<0>, ::b<0>
                              cmp r5.yzw, -r7_abs.w, r2.xxzy, r5  // ::r<0>, ::g<0>, ::b<0>
                              cmp r5.yzw, -r7_abs.z, r2.xzwy, r5  // ::r<0>, ::g<0>, ::b<0>
                              cmp r5.yzw, -r7_abs.y, r2.xzyx, r5  // ::r<0>, ::g<0>, ::b<0>
                              cmp r5.yzw, -r7_abs.x, r2.xwyz, r5  // ::r<0>, ::g<0>, ::b<0>
                              cmp r2.xzw, -r3_abs.z, r2.yyxz, r5.yyzw  // ::r<0>, ::g<0>, ::b<0>
                              cmp r4.xyz, -r1_abs.w, r2.y, r2.xzww  // ::r<0>, ::g<0>, ::b<0>

#line 2231
                            else
                              if_eq r5.x, -c37.z

#line 503
                                rcp r1.y, r1.z
                                mad r1.y, r6.y, -r1.y, -c137.y  // ::s<0>

#line 736
                                mul r1.w, r1.y, c49.x  // ::_s<0>
                                mul r2.y, r1.z, c49.x  // ::_b<0>

#line 748
                                mul r1.z, r6.x, c99.w  // ::SectorPosition<0>
                                frc r3.z, r1.z
                                add r1.z, r1.z, -r3.z  // ::SectorNumber<0>

#line 752
                                mad r3.z, r6.x, c99.w, -r1.z  // ::FractionalSector<0>

#line 755
                                mad r1.y, r1.y, -c49.x, c49.w
                                mul r2.z, r1.y, r2.y  // ::p<0>
                                mad r1.y, r1.w, -r3.z, -c137.y
                                mul r2.w, r1.y, r2.y  // ::q<0>
                                add r1.y, -r3.z, -c137.y
                                mad r1.y, r1.w, -r1.y, -c137.y
                                mul r2.x, r1.y, r2.y  // ::t<0>

#line 784
                                add r7, r1.z, c152

#line 790
                                add r1.y, r1.z, c48.z

#line 795
                                cmp r5.yzw, -r1_abs.y, r2, c137.x  // ::r<0>, ::g<0>, ::b<0>
                                cmp r5.yzw, -r7_abs.w, r2.xxzy, r5  // ::r<0>, ::g<0>, ::b<0>
                                cmp r5.yzw, -r7_abs.z, r2.xzwy, r5  // ::r<0>, ::g<0>, ::b<0>
                                cmp r5.yzw, -r7_abs.y, r2.xzyx, r5  // ::r<0>, ::g<0>, ::b<0>
                                cmp r5.yzw, -r7_abs.x, r2.xwyz, r5  // ::r<0>, ::g<0>, ::b<0>
                                cmp r2.xzw, -r1_abs.z, r2.yyxz, r5.yyzw  // ::r<0>, ::g<0>, ::b<0>
                                cmp r4.xyz, -r1_abs.w, r2.y, r2.xzww  // ::r<0>, ::g<0>, ::b<0>

#line 2232
                              else
                                add r1.y, r5.x, c42.x
                                mad r2.xyz, r6, c157.xyyw, c157.zyyw
                                cmp r4.xyz, -r1_abs.y, r2, r4  // ::TLrgb<0,1,2>
                                if_eq r5.x, -c42.x

#line 2262
                                else

#line 2234
                                  add r1.y, r5.x, c42.y
                                  cmp r4.xyz, -r1_abs.y, r6, r4  // ::TLrgb<0,1,2>
                                  if_eq r5.x, -c42.y

#line 2262
                                  else

#line 2235
                                    add r1.y, r5.x, c42.z

#line 2005
                                    add r1.zw, r6.xyzy, c137.z
                                    mad r2.x, r1.w, -c123.w, r6.x
                                    mad r2.x, r1.z, -c127.w, r2.x  // ::ycbcr<1>
                                    mad r2.yz, r1.xzww, c87.xxyw, r6.x  // ::ycbcr<0,2>

#line 1985
                                    add r2.yz, r2, -c134.xyww
                                    add r2.x, r2.x, c137.z

#line 1940
                                    mul r2.zw, r2.xyyz, c87  // ::ypbpr<0>
                                    add r7.x, r2.w, r2.z  // ::r<0>
                                    mad r7.z, r2.x, c107.w, r2.z  // ::b<0>
                                    mul r2.x, r7.x, c119.x
                                    mad r2.x, r2.y, c157.w, -r2.x
                                    mad r2.x, r7.z, -c119.z, r2.x
                                    mul r7.y, r2.x, c84.x  // ::g<0>

#line 2235
                                    cmp r2.xyz, -r1_abs.y, r7, r4  // ::TLrgb<0,1,2>
                                    if_eq r5.x, -c42.z

#line 2262
                                      mov r4.xyz, r2  // ::TLrgb<0,1,2>
                                    else

#line 2236
                                      add r1.y, r5.x, c42.w

#line 1309
                                      add r2.w, r6.x, -c42.z
                                      mul r3.z, r2.w, c103.x  // ::fy<0>

#line 1317
                                      mul r5.yz, r6.xzxw, c84

#line 1310
                                      mad r3.w, r6.y, c84.w, r3.z  // ::fx<0>
                                      mad r4.w, r2.w, c103.x, -r5.y  // ::fz<0>
                                      mul r5.y, r3.w, r3.w
                                      mul r5.w, r3.w, r5.y  // ::fx3<0>
                                      mul r6.w, r4.w, r4.w
                                      mul r7.x, r4.w, r6.w  // ::fz3<0>
                                      mad r5.y, r3.w, -r5.y, c77.w
                                      mad r3.w, r3.w, c103.y, c103.z
                                      mul r3.w, r3.w, c78.x
                                      cmp r3.w, r5.y, r3.w, r5.w  // ::xr<0>
                                      add r5.y, -r6.x, c99.z
                                      mul r5.w, r3.z, r3.z
                                      mul r5.w, r3.z, r5.w
                                      cmp r4.y, r5.y, r5.z, r5.w  // ::yr<0>
                                      mad r5.y, r4.w, -r6.w, c77.w
                                      mad r4.w, r4.w, c103.y, c103.z
                                      mul r4.w, r4.w, c78.x
                                      cmp r4.w, r5.y, r4.w, r7.x  // ::zr<0>

#line 419
                                      rcp r5.y, c9.x
                                      mul r7.x, r5.y, c8.x  // ::GetWhite<0>
                                      add r3.y, -r3.y, -c8.x
                                      add r3.y, r3.y, -c9.x
                                      mul r7.z, r3.y, r5.y  // ::GetWhite<2>

#line 1321
                                      mul r4.x, r3.w, r7.x  // ::Lab_Lrgb<0>
                                      mul r4.z, r4.w, r7.z  // ::Lab_Lrgb<2>

#line 2236
                                      cmp r2.xyz, -r1_abs.y, r4, r2  // ::TLrgb<0,1,2>
                                      if_eq r5.x, -c42.w

#line 2262
                                        mov r4.xyz, r2  // ::TLrgb<0,1,2>
                                      else

#line 2237
                                        if_eq r5.x, -c32.x

#line 464
                                          mov r8.x, c8.x  // ::WhiteX<0>
                                          mad r5.zw, r5.y, r8.x, c101.xyyz

#line 474
                                          mad r8.xy, r5.y, r3.y, c101.wzzw

#line 464
                                          cmp r1.y, -r8_abs.x, -c137_abs.y, -c137_abs.x
                                          cmp r1.y, -r5_abs.z, r1.y, c137.x
                                          mul r3.w, r5.w, c105.x  // ::Ka<0>

#line 474
                                          mul r4.w, r8.y, c105.z  // ::Ka<0>

#line 1363
                                          mul r5.z, r6.x, c49.x
                                          mul r5.z, r5.z, r5.z  // ::Y<0>
                                          rcp r3.w, r3.w
                                          cmp r3.w, r1.y, r3.w, c60.x
                                          mul r3.w, r3.w, r6.y
                                          rsq r5.w, r5.z
                                          rcp r5.w, r5.w
                                          mad r3.w, r3.w, r5.w, r5.z
                                          mul r3.w, r7.x, r3.w  // ::X<0>
                                          rcp r4.w, r4.w
                                          cmp r1.y, r1.y, r4.w, c60.y
                                          mul r1.y, r1.y, r6.z
                                          mad r1.y, r1.y, r5.w, -r5.z
                                          mul r1.y, -r7.z, r1.y  // ::Z<0>

#line 428
                                          mul r8.xyz, r5.z, c20
                                          mad r8.xyz, r3.w, c19, r8
                                          mad r4.xyz, r1.y, c21, r8  // ::x<0>, ::y<0>, ::z<0>

#line 2237
                                        else
                                          add r1.y, r5.x, c32.y
                                          cmp r2.xyz, -r1_abs.y, r6, r2  // ::TLrgb<0,1,2>
                                          if_eq r5.x, -c32.y

#line 2262
                                            mov r4.xyz, r2  // ::TLrgb<0,1,2>
                                          else

#line 2239
                                            if_eq r5.x, -c32.z

#line 1409
                                              add r1.y, r6.x, -c61.w  // ::Jz<0>
                                              mad r3.w, r1.y, c60.z, c60.w
                                              rcp r3.w, r3.w

#line 1414
                                              mul r5.zw, r6.y, c122.xyxy
                                              mad r4.w, r1.y, r3.w, r5.z
                                              mad r4.w, r6.z, c122.z, r4.w  // PerceptualQuantizerInverse::X<0>

#line 447
                                              pow r6.w, r4.w, c122.w  // ::XX<0>
                                              add r4.w, -r6.w, c59.z
                                              mad r6.w, r6.w, c102.x, c102.y
                                              rcp r6.w, r6.w
                                              mul r4.w, r4.w, r6.w
                                              pow r6.w, r4.w, c102.z

#line 1414
                                              mad r5.zw, r1.y, r3.w, -r5
                                              mad r5.zw, r6.z, -c125.xyxy, r5  // PerceptualQuantizerInverse::X<0,0>

#line 447
                                              pow r1.y, r5.z, c122.w  // ::XX<0>
                                              add r3.w, -r1.y, c59.z
                                              mad r1.y, r1.y, c102.x, c102.y
                                              rcp r1.y, r1.y
                                              mul r1.y, r1.y, r3.w
                                              pow r3.w, r1.y, c102.z
                                              pow r1.y, r5.w, c122.w  // ::XX<0>
                                              add r4.w, -r1.y, c59.z
                                              mad r1.y, r1.y, c102.x, c102.y
                                              rcp r1.y, r1.y
                                              mul r1.y, r1.y, r4.w
                                              pow r4.w, r1.y, c102.z

#line 1418
                                              mul r8.xyz, r3.w, c126
                                              mad r5.zw, r6.w, c125, -r8.xyxz
                                              mad r1.y, r6.w, c102.w, r8.y
                                              mad r1.y, r4.w, -c126.w, r1.y  // ::Y<0>
                                              mad r5.zw, r4.w, c86.xyxy, r5  // ::X<0>, ::Z<0>
                                              mul r1.y, r1.y, c85.w  // ::xyz<1>
                                              mul r5.zw, r5, c85.w  // ::xyz<0,2>

#line 428
                                              mul r8.xyz, r1.y, c20
                                              mad r8.xyz, r5.z, c19, r8
                                              mad r4.xyz, r5.w, c21, r8  // ::x<0>, ::y<0>, ::z<0>

#line 2239
                                            else
                                              add r1.y, r5.x, c32.w
                                              if_eq r5.x, -c32.w

#line 428
                                                mul r8.xyz, r6.y, c24
                                                mad r8.xyz, r6.x, c23, r8
                                                mad r8.xyz, r6.z, c25, r8  // ::x<0>, ::y<0>, ::z<0>

#line 454
                                                mul r9.xyz, r8, r8
                                                mul r8.xyz, r8, r9  // ::Pow3<0,0,0>

#line 428
                                                mul r9.xyz, r8.y, c30
                                                mad r8.xyw, r8.x, c29.xyzz, r9.xyzz
                                                mad r8.xyz, r8.z, c31, r8.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 1467
                                                mov r7.y, -c137.y
                                                mul r8.xyz, r7, r8  // ::xyz<0,1,2>

#line 428
                                                mul r9.xyz, r8.y, c20
                                                mad r8.xyw, r8.x, c19.xyzz, r9.xyzz
                                                mad r8.xyz, r8.z, c21, r8.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 2240
                                                cmp r4.xyz, -r1_abs.y, r8, r2  // ::TLrgb<0,1,2>

#line 2262
                                              else

#line 2241
                                                if_eq r5.x, -c43.x

#line 514
                                                  mad r1.y, r6.z, c99.x, c99.y
                                                  frc r1.y, r1.y
                                                  mad r1.y, r1.y, c153.z, c153.w
                                                  sincos r8.xy, r1.y
                                                  mul r2.xy, r6.y, r8  // ::a<0>, ::b<0>

#line 1311
                                                  mul r1.y, r2.y, c84.y
                                                  mad r2.x, r2.x, c84.w, r3.z  // ::fx<0>
                                                  mad r1.y, r2.w, c103.x, -r1.y  // ::fz<0>
                                                  mul r2.y, r2.x, r2.x
                                                  mul r2.z, r2.y, r2.x  // ::fx3<0>
                                                  mul r2.w, r1.y, r1.y
                                                  mul r3.z, r1.y, r2.w  // ::fz3<0>
                                                  mad r2.y, r2.x, -r2.y, c77.w
                                                  mad r2.x, r2.x, c103.y, c103.z
                                                  mul r2.x, r2.x, c78.x
                                                  cmp r2.x, r2.y, r2.x, r2.z  // ::xr<0>
                                                  mad r2.y, r1.y, -r2.w, c77.w
                                                  mad r1.y, r1.y, c103.y, c103.z
                                                  mul r1.y, r1.y, c78.x
                                                  cmp r1.y, r2.y, r1.y, r3.z  // ::zr<0>

#line 1321
                                                  mul r4.x, r7.x, r2.x  // ::Lab_Lrgb<0>
                                                  mul r4.z, r7.z, r1.y  // ::Lab_Lrgb<2>

#line 2241
                                                else
                                                  if_eq r5.x, -c43.y

#line 1363
                                                    mul r1.y, r6.x, c49.x

#line 514
                                                    mad r2.x, r6.z, c99.x, c99.y
                                                    frc r2.x, r2.x
                                                    mad r2.x, r2.x, c153.z, c153.w
                                                    sincos r8.xy, r2.x
                                                    mul r2.xy, r6.y, r8  // ::a<0>, ::b<0>

#line 464
                                                    mov r8.x, c8.x  // ::WhiteX<0>
                                                    mad r2.zw, r5.y, r8.x, c101.xyyz

#line 474
                                                    mad r3.yz, r5.y, r3.y, c101.xwzw

#line 464
                                                    cmp r3.y, -r3_abs.y, -c137_abs.y, -c137_abs.x
                                                    cmp r2.z, -r2_abs.z, r3.y, c137.x
                                                    mul r2.w, r2.w, c105.x  // ::Ka<0>

#line 474
                                                    mul r3.y, r3.z, c105.z  // ::Ka<0>

#line 1363
                                                    mul r1.y, r1.y, r1.y  // ::Y<0>
                                                    rcp r2.w, r2.w
                                                    cmp r2.w, r2.z, r2.w, c60.x
                                                    mul r2.x, r2.w, r2.x
                                                    rsq r2.w, r1.y
                                                    rcp r2.w, r2.w
                                                    mad r2.x, r2.x, r2.w, r1.y
                                                    mul r2.x, r7.x, r2.x  // ::X<0>
                                                    rcp r3.y, r3.y
                                                    cmp r2.z, r2.z, r3.y, c60.y
                                                    mul r2.y, r2.z, r2.y
                                                    mad r2.y, r2.y, r2.w, -r1.y
                                                    mul r2.y, -r7.z, r2.y  // ::Z<0>

#line 428
                                                    mul r3.yzw, r1.y, c20.xxyz
                                                    mad r2.xzw, r2.x, c19.xyyz, r3.yyzw
                                                    mad r4.xyz, r2.y, c21, r2.xzww  // ::x<0>, ::y<0>, ::z<0>

#line 2242
                                                  else

#line 2246
                                                    add r2, r5.x, c149

#line 1544
                                                    mul r3.yzw, r6.x, c123.xxyz

#line 514
                                                    mad r1.y, r6.z, c99.x, c99.y
                                                    frc r1.y, r1.y
                                                    mad r1.y, r1.y, c153.z, c153.w
                                                    sincos r8.xy, r1.y
                                                    mul r9, r6.y, r8.xyxy  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1965
                                                    add r10.xyz, r6.xzxw, c83  // ::Jz<0>
                                                    mul r5.zw, r10.xyyz, c86  // ::ypbpr<0>

#line 1410
                                                    mad r1.y, r10.x, c60.z, c60.w
                                                    rcp r1.y, r1.y

#line 1414
                                                    mul r7.yw, r9.xxzz, c122.xxzy
                                                    mad r4.w, r10.x, r1.y, r7.y
                                                    mad r4.w, r9.y, c122.z, r4.w  // PerceptualQuantizerInverse::X<0>

#line 447
                                                    pow r6.w, r4.w, c122.w  // ::XX<0>
                                                    add r4.w, -r6.w, c59.z
                                                    mad r6.w, r6.w, c102.x, c102.y
                                                    rcp r6.w, r6.w
                                                    mul r4.w, r4.w, r6.w
                                                    pow r6.w, r4.w, c102.z

#line 1414
                                                    mad r7.yw, r10.x, r1.y, -r7
                                                    mad r7.yw, r9, -c125.xxzy, r7  // PerceptualQuantizerInverse::X<0,0>

#line 447
                                                    pow r1.y, r7.y, c122.w  // ::XX<0>
                                                    add r4.w, -r1.y, c59.z
                                                    mad r1.y, r1.y, c102.x, c102.y
                                                    rcp r1.y, r1.y
                                                    mul r1.y, r1.y, r4.w
                                                    pow r4.w, r1.y, c102.z
                                                    pow r1.y, r7.w, c122.w  // ::XX<0>
                                                    add r7.y, -r1.y, c59.z
                                                    mad r1.y, r1.y, c102.x, c102.y
                                                    rcp r1.y, r1.y
                                                    mul r1.y, r1.y, r7.y
                                                    pow r7.y, r1.y, c102.z

#line 1418
                                                    mul r9.xyz, r4.w, c126
                                                    mad r8.zw, r6.w, c125, -r9.xyxz
                                                    mad r1.y, r6.w, c102.w, r9.y
                                                    mad r1.y, r7.y, -c126.w, r1.y  // ::Y<0>
                                                    mad r7.yw, r7.y, c86.xxzy, r8.xzzw  // ::X<0>, ::Z<0>
                                                    mul r1.y, r1.y, c85.w  // ::xyz<1>
                                                    mul r7.yw, r7, c85.w  // ::xyz<0,2>

#line 428
                                                    mul r9.xyz, r1.y, c20
                                                    mad r9.xyz, r7.y, c19, r9
                                                    mad r9.xyz, r7.w, c21, r9  // ::x<0>, ::y<0>, ::z<0>

#line 480
                                                    mov r1.y, c42.y
                                                    mad r1.y, r5.y, c8.x, -r1.y
                                                    mul r4.w, r7.x, -c48.x
                                                    mad r1.y, r7.z, -c46.z, r1.y
                                                    rcp r1.y, r1.y
                                                    mul r4.w, r1.y, r4.w  // ::ComputeKu<0>

#line 1731
                                                    mul r7.xy, r1.y, c76  // ::ComputeKv<0>, ::vN<0>

#line 1541
                                                    mul r1.y, r3.z, r4.w
                                                    mad r1.y, r6.y, r8.x, r1.y
                                                    rcp r1.y, r1.y
                                                    mad r1.y, r3.y, r1.y, c137.y
                                                    mul r1.y, r1.y, c97.w  // ::a<0>
                                                    mul r6.w, r4.y, c48.z  // ::b<0>
                                                    mul r7.w, r3.z, r7.x
                                                    mad r7.w, r6.y, r8.y, r7.w
                                                    rcp r7.w, r7.w
                                                    mad r7.w, r3.w, r7.w, c48.z
                                                    mad r7.w, r4.y, r7.w, -r6.w
                                                    rcp r8.x, r1.y
                                                    mul r7.w, r7.w, r8.x  // ::X<0>
                                                    mad r1.y, r7.w, r1.y, r6.w  // ::Z<0>

#line 1550
                                                    max r8.x, r7.w, c137.x  // ::X<0>

#line 1553
                                                    max r7.w, r4.y, c137.x  // ::Y<0>

#line 1556
                                                    max r8.y, r1.y, c137.x  // ::Z<0>

#line 428
                                                    mul r10.xyw, r7.w, c20.xyzz
                                                    mad r8.xzw, r8.x, c19.xyyz, r10.xyyw
                                                    mad r8.xyz, r8.y, c21, r8.xzww  // ::x<0>, ::y<0>, ::z<0>
                                                    mul r11.xyz, r6.y, c11
                                                    mad r11.xyz, r6.x, c10, r11
                                                    mad r11.xyz, r6.z, c12, r11  // ::x<0>, ::y<0>, ::z<0>
                                                    mul r12.xyz, r11.y, c20
                                                    mad r11.xyw, r11.x, c19.xyzz, r12.xyzz
                                                    mad r11.xyz, r11.z, c21, r11.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 1541
                                                    mad r1.y, r3.z, r4.w, r6.y
                                                    rcp r1.y, r1.y
                                                    mad r1.y, r3.y, r1.y, c137.y
                                                    mul r1.y, r1.y, c97.w  // ::a<0>

#line 1544
                                                    mad r3.y, r3.z, r7.x, r6.z
                                                    rcp r3.y, r3.y
                                                    mad r3.y, r3.w, r3.y, c48.z
                                                    mad r3.y, r4.y, r3.y, -r6.w
                                                    rcp r3.z, r1.y
                                                    mul r3.y, r3.z, r3.y  // ::X<0>
                                                    mad r1.y, r3.y, r1.y, r6.w  // ::Z<0>

#line 1550
                                                    max r6.w, r3.y, c137.x  // ::X<0>

#line 1556
                                                    max r3.y, r1.y, c137.x  // ::Z<0>

#line 428
                                                    mad r10.xyw, r6.w, c19.xyzz, r10
                                                    mad r3.yzw, r3.y, c21.xxyz, r10.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 2250
                                                    add r12, r5.x, c148

#line 1735
                                                    mul r10.xyw, r6.xyzz, c120.xyzz  // XYZ_Lrgb::input<0>

#line 1265
                                                    mad r1.y, r6.x, c69_abs.w, c69_abs.z
                                                    frc r1.y, r1.y
                                                    mad r1.y, r1.y, c153.z, c153.w
                                                    sincos r13.xy, r1.y
                                                    rcp r1.y, r13.x
                                                    mul r1.y, r1.y, r13.y  // ::x<0>
                                                    mul r6.w, r1.y, r1.y  // ::x<0>

#line 1805
                                                    mul r13.xyz, r6.yzzw, r6.yxzw
                                                    mul r7.xw, r13.xyzz, c76.zyzw  // ::Y<0>

#line 1268
                                                    rcp r6.w, r6.w
                                                    add r6.w, r6.w, -c137.y
                                                    mul r6.w, r6.w, -c34.z
                                                    rcp r6.w, r6.w
                                                    mul r6.w, r6.w, r7.x
                                                    rsq r6.w, r6.w
                                                    rcp r6.w, r6.w  // ::r<0>
                                                    mad r1.y, r1.y, r1.y, -c137.y
                                                    mul r1.y, r1.y, -c34.z
                                                    rcp r1.y, r1.y
                                                    mul r1.y, r1.y, r7.x
                                                    rsq r1.y, r1.y
                                                    rcp r1.y, r1.y  // ::g<0>
                                                    mul r7.x, r1.y, c83.w
                                                    mad r7.x, r6.w, c120.w, r7.x
                                                    add r7.x, r7.x, c100.x
                                                    rcp r7.x, r7.x
                                                    mul r7.x, r6.z, r7.x  // ::k<0>
                                                    add r8.w, -r6.w, -c137.y
                                                    add r8.w, -r1.y, r8.w
                                                    mul r14.z, r7.x, r8.w  // ::B<0>
                                                    mul r14.y, r1.y, r7.x  // ::G<0>
                                                    mul r14.x, r6.w, r7.x  // ::R<0>

#line 1709
                                                    mad r1.y, r6.x, c120.x, -r10.y

#line 1832
                                                    add r15.z, r6.y, r6.x  // ::YCoCg_Lrgb<1>

#line 1709
                                                    mad r1.y, r6.z, -c46.x, r1.y  // XYZ_Lrgb::input<2>

#line 426
                                                    mul r16, r6.yyyz, c20.xyzx
                                                    mad r17.xyz, r10.x, c19, r16
                                                    mad r17.xyz, r1.y, c21, r17  // ::x<0>, ::y<0>, ::z<0>

#line 1733
                                                    mul r1.y, r5.z, r5.z
                                                    mul r1.y, r1.y, r5.z  // ::y<0>
                                                    rcp r5.z, r10.w
                                                    mad r4.w, r6.x, r5.z, r4.w
                                                    cmp r4.w, -r10_abs.w, c137.x, r4.w  // ::_u<0>
                                                    mad r5.z, r6.y, r5.z, r7.y
                                                    cmp r5.z, -r10_abs.w, c137.x, r5.z  // ::_v<0>
                                                    mul r6.w, r1.y, r4.w
                                                    rcp r5.z, r5.z
                                                    mul r6.w, r5.z, r6.w  // ::x<0>
                                                    add r7.x, r5.z, r5.z
                                                    mul r4.w, r4.w, r5.z
                                                    mad r4.w, r4.w, c75.w, r7.x
                                                    add r4.w, r4.w, c48.z
                                                    mul r4.w, r1.y, r4.w  // ::z<0>
                                                    mul r5.z, r6.w, c49.x  // ::xyz<0>
                                                    mul r1.y, r1.y, c49.x  // ::xyz<1>
                                                    mul r4.w, r4.w, c49.x  // ::xyz<2>

#line 428
                                                    mul r10.xyw, r1.y, c20.xyzz
                                                    mad r10.xyw, r5.z, c19.xyzz, r10
                                                    mad r10.xyw, r4.w, c21.xyzz, r10  // ::x<0>, ::y<0>, ::z<0>

#line 1742
                                                    cmp r10.xyw, -r6_abs.z, c137.x, r10  // ::UVW_Lrgb<0,1,2>

#line 1941
                                                    mad r18.xz, r1.zyww, c118.xyyw, r5.w  // ::r<0>, ::b<0>
                                                    mul r1.y, r18.x, c119.x
                                                    mad r1.y, r10.z, c157.w, -r1.y
                                                    mad r1.y, r18.z, -c119.z, r1.y
                                                    mul r18.y, r1.y, c84.x  // ::g<0>

#line 2254
                                                    add r19, r5.x, c150

#line 1774
                                                    rcp r1.y, r6.y
                                                    mul r1.z, r1.y, r13.y  // XYZ_Lrgb::input<0>
                                                    add r1.x, -r6.y, r1.x
                                                    mul r1.x, r6.z, r1.x
                                                    mul r1.x, r1.y, r1.x  // XYZ_Lrgb::input<2>

#line 428
                                                    mul r1.yw, r1.z, c19.xyzz
                                                    mad r1.z, r1.z, c19.x, r16.w
                                                    mad r20.x, r1.x, c21.x, r1.z  // ::x<0>
                                                    mad r1.yz, r6.z, c20, r1.xyww
                                                    mad r20.yz, r1.x, c21, r1  // ::y<0>, ::z<0>

#line 1774
                                                    cmp r1.xyz, -r6_abs.y, c137.x, r20  // ::xyY_Lrgb<0,1,2>

#line 1800
                                                    mad r1.w, r5.y, c8.x, r7.z
                                                    add r1.w, r1.w, -c137.y
                                                    rcp r4.w, r1.w  // ::xM<0>
                                                    mul r1.w, r1.w, c49.x  // ::zM<0>

#line 1809
                                                    mul r5.yz, c35.xyxw, c35.xxzw
                                                    mul r5.w, r4.w, r13.z
                                                    mul r5.yz, r6.y, r5
                                                    mul r7.xy, r5.yzzw, c140.y
                                                    mad r5.y, r5.w, r1.w, r7.x
                                                    mul r4.w, r4.w, r7.y
                                                    mad r4.w, r4.w, -r1.w, r5.y

#line 1856
                                                    mul r5.y, r6.y, c140.y

#line 1810
                                                    mul r7.xz, r5.y, c35
                                                    mul r5.w, r1.w, r7.y
                                                    mad r5.y, r5.y, c35.x, -r5.w
                                                    mad r5.y, r13.z, r1.w, r5.y
                                                    rcp r5.y, r5.y
                                                    mul r4.w, r4.w, r5.y  // ::x<0>
                                                    mad r5.y, r7.z, c35.x, r13.z
                                                    mad r5.y, r5.z, -c140.y, r5.y
                                                    mul r5.z, r1.w, r7.w
                                                    mad r5.z, r5.z, c140.y, r7.x
                                                    mad r1.w, r7.y, -r1.w, r5.z
                                                    rcp r1.w, r1.w
                                                    mul r5.z, r1.w, r5.y  // ::y<0>

#line 1774
                                                    mul r5.w, r7.w, r4.w
                                                    rcp r6.w, r5.z
                                                    mul r5.w, r5.w, r6.w  // XYZ_Lrgb::input<0>
                                                    mad r1.w, r5.y, -r1.w, -r4.w
                                                    add r1.w, r1.w, -c137.y
                                                    mul r1.w, r7.w, r1.w
                                                    mul r1.w, r6.w, r1.w  // XYZ_Lrgb::input<2>

#line 428
                                                    mul r7.xyz, r7.w, c20
                                                    mad r7.xyz, r5.w, c19, r7
                                                    mad r7.xyz, r1.w, c21, r7  // ::x<0>, ::y<0>, ::z<0>

#line 1774
                                                    cmp r5.yzw, -r5_abs.z, c137.x, r7.xxyz  // ::xyY_Lrgb<0,1,2>

#line 428
                                                    mad r7.xyz, r6.x, c19, r16
                                                    mad r7.xyz, r6.z, c21, r7  // ::x<0>, ::y<0>, ::z<0>

#line 2258
                                                    add r13, r5.x, c151

#line 1831
                                                    add r1.w, -r6.y, r6.x  // ::c<0>
                                                    add r15.x, r6.z, r1.w  // ::YCoCg_Lrgb<0>
                                                    add r15.w, -r6.z, r1.w  // ::YCoCg_Lrgb<2>

#line 1855
                                                    mad r1.w, r6.y, c118.z, r6.x
                                                    mad r16.x, r6.z, -c118.w, r1.w  // ::r<0>
                                                    mad r1.w, r6.y, -c88.x, r6.x
                                                    mad r16.y, r6.z, c88.y, r1.w  // ::g<0>

#line 1884
                                                    mad r20.xy, r6.y, c88.zwzw, r6.x

#line 1857
                                                    mad r16.z, r6.z, -c89.x, r20.x  // ::b<0>

#line 1884
                                                    mad r20.x, r6.z, c89.y, r20.y  // ::r<0>
                                                    mad r21.xy, r6.y, c89.zwzw, r6.x
                                                    mad r20.yz, r6.z, c90.xxyw, r21.xxyw  // ::g<0>, ::b<0>

#line 2261
                                                    add r21.xyz, r5.x, c33.yzww

#line 1909
                                                    mad r22.xy, r6.y, c90.zwzw, r6.x
                                                    mad r22.xy, r6.z, c91, r22  // ::r<0>, ::g<0>

#line 1941
                                                    mad r23.xyz, r6.yzyw, c92, r6.x  // ::r<0>, ::b<0>

#line 1910
                                                    mad r1.w, r6.z, c91.z, r23.x  // ::b<0>

#line 1913
                                                    mov_sat r22.zw, r22.xyxy
                                                    cmp r22.xy, r22, r22.zwzw, c137.x  // ::r<0>, ::g<0>
                                                    mov_sat r4.w, r1.w
                                                    cmp r22.z, r1.w, r4.w, c137.x  // ::b<0>

#line 1942
                                                    mad r1.w, r23.y, -c119.x, r6.x
                                                    mad r1.w, r23.z, -c119.z, r1.w
                                                    mul r23.w, r1.w, c84.x  // ::g<0>

#line 2035
                                                    mad r24.xyz, r6.zyyw, c93, r6.x  // ::r<0>, ::b<0>

#line 2032
                                                    mad r1.w, r6.z, c91.w, r24.y  // ::g<0>

#line 2041
                                                    mov_sat r24.yw, r24.xxzz
                                                    mov_sat r4.w, r1.w
                                                    cmp r25.y, r1.w, r4.w, c137.x  // ::g<0>
                                                    cmp r25.xz, r24, r24.yyww, c137.x  // ::r<0>, ::b<0>

#line 2262
                                                    cmp r24.xyz, -r21_abs.z, r25, r6  // ::TLrgb<0,1,2>
                                                    cmp r21.yzw, -r21_abs.y, r23.xywz, r24.xxyz  // ::TLrgb<0,1,2>
                                                    cmp r21.xyz, -r21_abs.x, r22, r21.yzww  // ::TLrgb<0,1,2>
                                                    cmp r20.xyz, -r13_abs.w, r20, r21  // ::TLrgb<0,1,2>
                                                    cmp r16.xyz, -r13_abs.z, r16, r20  // ::TLrgb<0,1,2>
                                                    cmp r6.xyz, -r13_abs.y, r6, r16  // ::TLrgb<0,1,2>
                                                    cmp r6.xyz, -r13_abs.x, r15.xzww, r6  // ::TLrgb<0,1,2>
                                                    cmp r6.xyz, -r19_abs.w, r18, r6  // ::TLrgb<0,1,2>
                                                    cmp r6.xyz, -r19_abs.z, r7, r6  // ::TLrgb<0,1,2>
                                                    cmp r5.xyz, -r19_abs.y, r5.yzww, r6  // ::TLrgb<0,1,2>
                                                    cmp r1.xyz, -r19_abs.x, r1, r5  // ::TLrgb<0,1,2>
                                                    cmp r1.xyz, -r12_abs.w, r18, r1  // ::TLrgb<0,1,2>
                                                    cmp r1.xyz, -r12_abs.z, r10.xyww, r1  // ::TLrgb<0,1,2>
                                                    cmp r1.xyz, -r12_abs.y, r17, r1  // ::TLrgb<0,1,2>
                                                    cmp r1.xyz, -r12_abs.x, r14, r1  // ::TLrgb<0,1,2>
                                                    cmp r1.xyz, -r2_abs.w, r3.yzww, r1  // ::TLrgb<0,1,2>
                                                    cmp r1.xyz, -r2_abs.z, r11, r1  // ::TLrgb<0,1,2>
                                                    cmp r1.xyz, -r2_abs.y, r8, r1  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r2_abs.x, r9, r1  // ::TLrgb<0,1,2>
                                                  endif
                                                endif
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif

#line 2124
      log r1.x, r4.x

#line 2129
      if_eq c6.x, r3.x

#line 2124
        mul r1.y, r1.x, c7.x
        exp r0.x, r1.y  // ::v<0>

#line 2159
      else

#line 2153
        mov r2, c152
        add r2, r2, c6.x

#line 2156
        add r1.yz, -r4.x, c94.xxyw

#line 2148
        mul r3.yz, r4.x, c94.xzww
        add r5.xyz, r4.x, c95

#line 2132
        mul r1.w, r5.x, c92.w
        mul r3.w, r1.w, r1.w
        mul r1.w, r1.w, r3.w
        cmp r1.y, r1.y, r3.y, r1.w  // ::v<0>

#line 2148
        mad r3.yw, r4.x, c104.xxzy, c104.xzzw
        cmp r3.yz, r5, r3.xyww, r3.z  // ::V<0,0>

#line 2156
        mul r1.w, r4.x, c93.w
        mul r1.x, r1.x, c95.w
        exp r1.x, r1.x
        mad r1.x, r1.x, c96.x, c96.y
        cmp r1.x, r1.z, r1.w, r1.x  // ::V<0>

#line 2159
        cmp r1.x, -r2_abs.w, r1.x, r4.x  // ::Compand<0>
        cmp r1.x, -r2_abs.z, r3.z, r1.x  // ::Compand<0>
        cmp r1.x, -r2_abs.y, r3.y, r1.x  // ::Compand<0>
        cmp r0.x, -r2_abs.x, r1.y, r1.x  // ::Compand<0>
      endif

#line 2124
      log r1.x, r4.y

#line 2129
      if_eq c6.x, r3.x

#line 2124
        mul r1.y, r1.x, c7.x
        exp r0.y, r1.y  // ::v<0>

#line 2159
      else

#line 2153
        mov r2, c152
        add r2, r2, c6.x

#line 2156
        add r1.yz, -r4.y, c94.xxyw

#line 2148
        mul r3.yz, r4.y, c94.xzww
        add r5.xyz, r4.y, c95

#line 2132
        mul r1.w, r5.x, c92.w
        mul r3.w, r1.w, r1.w
        mul r1.w, r1.w, r3.w
        cmp r1.y, r1.y, r3.y, r1.w  // ::v<0>

#line 2148
        mad r3.yw, r4.y, c104.xxzy, c104.xzzw
        cmp r3.yz, r5, r3.xyww, r3.z  // ::V<0,0>

#line 2156
        mul r1.w, r4.y, c93.w
        mul r1.x, r1.x, c95.w
        exp r1.x, r1.x
        mad r1.x, r1.x, c96.x, c96.y
        cmp r1.x, r1.z, r1.w, r1.x  // ::V<0>

#line 2159
        cmp r1.x, -r2_abs.w, r1.x, r4.y  // ::Compand<0>
        cmp r1.x, -r2_abs.z, r3.z, r1.x  // ::Compand<0>
        cmp r1.x, -r2_abs.y, r3.y, r1.x  // ::Compand<0>
        cmp r0.y, -r2_abs.x, r1.y, r1.x  // ::Compand<0>
      endif

#line 2124
      log r1.x, r4.z

#line 2129
      if_eq c6.x, r3.x

#line 2124
        mul r1.y, r1.x, c7.x
        exp r0.z, r1.y  // ::v<0>

#line 2159
      else

#line 2153
        mov r2, c152
        add r2, r2, c6.x

#line 2156
        add r1.yz, -r4.z, c94.xxyw

#line 2148
        mul r3.xy, r4.z, c94.zwzw
        add r4.xyw, r4.z, c95.xyzz

#line 2132
        mul r1.w, r4.x, c92.w
        mul r3.z, r1.w, r1.w
        mul r1.w, r1.w, r3.z
        cmp r1.y, r1.y, r3.x, r1.w  // ::v<0>

#line 2148
        mad r3.xz, r4.z, c104.xyyw, c104.zyww
        cmp r3.xy, r4.ywzw, r3.xzzw, r3.y  // ::V<0,0>

#line 2156
        mul r1.w, r4.z, c93.w
        mul r1.x, r1.x, c95.w
        exp r1.x, r1.x
        mad r1.x, r1.x, c96.x, c96.y
        cmp r1.x, r1.z, r1.w, r1.x  // ::V<0>

#line 2159
        cmp r1.x, -r2_abs.w, r1.x, r4.z  // ::Compand<0>
        cmp r1.x, -r2_abs.z, r3.y, r1.x  // ::Compand<0>
        cmp r1.x, -r2_abs.y, r3.x, r1.x  // ::Compand<0>
        cmp r0.z, -r2_abs.x, r1.y, r1.x  // ::Compand<0>
      endif

#line 2388
    endif
    mov oC0, r0  // ::main<0,1,2,3>

// approximately 3987 instruction slots used (1 texture, 3986 arithmetic)
