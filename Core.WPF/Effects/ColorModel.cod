//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float Companding;
//   float Component;
//   float Gamma;
//   float HighlightAmount;
//   float3 LMS_XYZ_x;
//   float3 LMS_XYZ_y;
//   float3 LMS_XYZ_z;
//   float MidtoneAmount;
//   float MidtoneRange;
//   float Mode;
//   float Model;
//   float3 RGB_XYZ_x;
//   float3 RGB_XYZ_y;
//   float3 RGB_XYZ_z;
//   float ShadowAmount;
//   float ShadowRange;
//   float WhiteX;
//   float WhiteY;
//   float X;
//   float3 XYZ_LMS_x;
//   float3 XYZ_LMS_y;
//   float3 XYZ_LMS_z;
//   float3 XYZ_RGB_x;
//   float3 XYZ_RGB_y;
//   float3 XYZ_RGB_z;
//   float Y;
//   float Z;
//   sampler2D input;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   Model           c0       1
//   Component       c1       1
//   Mode            c2       1
//   X               c3       1
//   Y               c4       1
//   Z               c5       1
//   Companding      c6       1
//   Gamma           c7       1
//   WhiteX          c8       1
//   WhiteY          c9       1
//   LMS_XYZ_x       c10      1
//   LMS_XYZ_y       c11      1
//   LMS_XYZ_z       c12      1
//   RGB_XYZ_x       c13      1
//   RGB_XYZ_y       c14      1
//   RGB_XYZ_z       c15      1
//   XYZ_LMS_x       c16      1
//   XYZ_LMS_y       c17      1
//   XYZ_LMS_z       c18      1
//   XYZ_RGB_x       c19      1
//   XYZ_RGB_y       c20      1
//   XYZ_RGB_z       c21      1
//   HighlightAmount c22      1
//   MidtoneAmount   c24      1
//   MidtoneRange    c25      1
//   ShadowAmount    c26      1
//   ShadowRange     c27      1
//   input           s0       1
//

    ps_3_0
    def c23, -24, -25, -26, -27
    def c28, -28, -29, -30, -31
    def c29, -36, -37, -38, -39
    def c30, -2, -3, -4, 0.0404499993
    def c31, -20, 20, -21, 21
    def c32, -23, 23, -40, -41
    def c33, -32, -33, -34, -35
    def c34, -0.0810000002, 0.0989999995, -0.0814500004, 0.0992999971
    def c35, 0.0549999997, 0.947867334, 2.4000001, 0.166666672
    def c36, 235, 240, 9.0329628, 0.840000033
    def c37, 0.222222224, 0.0773993805, 0.909918129, 0.909669757
    def c38, 1, -1, -0.0187292993, 0.0742610022
    def c39, -0.212114394, 1.57072878, -2, 3.14159274
    def c40, 6.28318548, 0.333333343, 57.2957764, 60
    def c41, 1, 2, 0, -1
    def c42, 50, 0.142857149, 36.4285736, 0.156173766
    def c43, 0.142857149, 7, 1, 6.99999952
    def c44, 0.298999995, 0.587000012, 0.666666687, 0.00862068962
    def c45, -1.18224943, 1, 88.3659897, 175
    def c46, 0.199075997, 1.29587495, 0.219999999, -1.62954997e-011
    def c47, -22, 0, -128, 22
    def c48, -0, -3.14159274, -0.980705976, 1
    def c49, 0.0208350997, -0.0851330012, 0.180141002, -0.330299497
    def c50, 0.999866009, -2, 1.57079637, 0.0179112237
    def c51, 0.159154937, 0.25, 0.75, 600
    def c52, -0.980705976, 1, 15, 400
    def c53, 360, 0.5, 903.296326, 16
    def c54, 100, 128, 1, 0.5
    def c55, 224, 122, 100, 2.22222233
    def c56, -0.449999988, -1.33299994, 0.252999991, 0.5
    def c57, 0.216999993, 0.063000001, 0.666666687, 1
    def c58, 0.596000016, 0.211999997, -0.147129998, 0.61500001
    def c59, -0.275000006, -0.527999997, -0.288859993, -0.514989972
    def c60, -0.32100001, 0.31099999, 0.43599999, -0.10001
    def c61, 360, 0.00277777785, -360, -0.00277777785
    def c62, 0.0174532942, -2.09439516, -4.18879032, -299.999969
    def c63, 6, 0.166666672, -6, -0.166666672
    def c64, 0.00999999978, 0.0166666675, 0.0199999996, -1
    def c65, 180, 0.00277777785, -0.333333343, 0.666666687
    def c66, 0.00277777785, -0.666666687, 0.114, 0.298999995
    def c67, 0.00999999978, 0.5, 1.41421354, 0.00499999989
    def c68, 0.00999999978, 1.62954997e-011, 0.560000002, 0.439999998
    def c69, 18.8515625, 18.6875, 0.8359375, 1
    def c70, -18, 18, -19, 19
    def c71, 6742.07861, 3827.99316, 475.70459, 9.99999975e-005
    def c72, 0.00200000009, 8.00000095, 0.00571428565, 0.0142857144
    def c73, 0.0399999991, 0.00456620986, 0.00703035761, 0.00828392897
    def c74, 0.00456620986, 0.00703035761, 1.39821029, 0.058047317
    def c75, 0.66467905, 1.43099999, 7.92025457e-005, 0.126000002
    def c76, -0.569000006, 0.430999994, 0.126000002, -1.87399995
    def c77, 0.95599997, -0.272000015, 0.620999992, -0.647000015
    def c78, -1.10800004, 1.57480001, 1.8556, 1.70500004
    def c79, 1.13982999, -0.394650012, 2.02310991, -0.580600023
    def c80, 0.0799999982, 0.00313080009, 0.110705636, 4500
    def c81, 0.159999996, -0.0179999992, -0.0181000009, 0.862069011
    def c82, 1.09899998, 1.09930003, -0.0989999995, -0.0992999971
    def c83, 12.9200001, 0.416666657, 1.05499995, -0.0549999997
    def c84, -39, -40, -41, 0.00999999978
    def c85, 0.00999999978, 0.00392156886, 120, 1.04719758
    def c86, 0.0174532942, 1.04719758, 0.159154937, 0.5
    def c87, 116, -16, 500, 200
    def c88, -180, -240, -300, 0.00110705639
    def c89, 16, -17, 0, -1
    def c90, 18.6875, -18.8515625, 0.000580473163, 0.0081189191
    def c91, 1, 0.595700026, 0.522599995, 0.00885645207
    def c92, 0, -1.33299994, -134, -140
    def c93, 0, -0.5, -0.595700026, -0.522599995
    def c94, 360, 100, 1, 255
    def c95, 32.0938988, 70, 4, 903.296326
    def c96, 239.999985, 179.999985, 119.999992, 59.9999962
    def c97, 359.999969, 299.999969, 0.00044209708, 0.5
    def c98, 0.857142866, -6, 57.2957802, 0.114
    def c99, 0.418687999, 0.0813120008, 0.538909256, 0.635001242
    def c100, 2313.62085, 15227.666, 0.714139998, 0.00828392897
    def c101, 0.00277777785, 1, 0.0097833341, 0.298999995
    def c102, 3.52200007, 0.684000015, 0.114, 0.298999995
    def c103, 1.79399991, 0.587000012, 0.684000015, 0.114
    def c104, 1.11600006, 0.684000015, -0.5, 0.25
    def c105, 0.00277777808, 0.5, 9, 6
    def c106, 9.23037151e-005, 0.525912642, 0.129132897, 0.267899334
    def c107, 0.212599993, 0.715200007, 0.0722000003, 0.331263989
    def c108, 0.00110705639, 52, 13, 0.000580473163
    def c109, 39, 1.5, 3, 0.185000002
    def c110, 0.00999999978, 52, 13, 0.47299999
    def c111, 9145.23047, 15718.4707, 3127.28296, -3250.75854
    def c112, 16613.7305, -909.828125, 2182.53833, 0.344139993
    def c113, 0.00138605037, 0.00096019241, 0.00746077253, 6.27739477
    def c114, 0.0745098069, 0.00784313772, 0.00277777785, 0.333333343
    def c115, 0.00999999978, 0.00392156886, 0.0901960805, 6.40312433
    def c116, 0.138605043, 0.0960192457, 0.058047317, 0.811891913
    def c117, 1.40199995, 1.77199996, -16, -128
    def c118, 1, 0.5, 0, 1.33299994
    def c119, 0.587000012, 0.5, 0.883000016, 300
    def c120, 0.298999995, 0.25, -0.25, 104
    def c121, 100, 1500, 0.114, 0.25
    def c122, 4.06670809, 1.09679902, 3.52399993, 0.54270798
    def c123, 120.715675, 142.24028, 128, 0.168735996
    def c124, 0.280000001, 1, 219, 16
    def c125, 7396.2832, 709.410828, 1747.68005, 6709.7002
    def c126, 0.159301758, 134.034378, 1492.84155, 833.27301
    def c127, 0, 1, 2, 3
    def c128, 4, 5, 6, 7
    def c129, 8, 9, 10, 11
    def c130, 12, 13, 14, 15
    def c131, -23, -24, -25, -26
    def c132, -27, -28, -29, -30
    def c133, -31, -32, -33, -34
    def c134, -35, -36, -37, -38
    def c135, -1, -2, -3, -4
    def c136, 0.00277777785, 0.5, 6.28318548, -3.14159274
    def c137, 2, 0.5, -2, -0.5
    def c138, 0.00277777785, -0.333333343, -0.666666687, 1
    def c139, 1, -1, 0, -0
    dcl_texcoord v0.xy  // uv<0,1>
    dcl_2d s0

#line 2686 "C:\Users\james\GitHub\Core\Core.WPF\Effects\ColorModel.fx"
    texld r0, v0, s0  // ::color<0,1,2,3>

#line 543
    mov r1, c127
    if_eq c0.x, r1.x

#line 707
      mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>

#line 529
      mov r3.xyz, c127.y  // ::GetMaximum<0,1,2>

#line 707
    else

#line 547
      if_eq c0.x, r1.y

#line 707
        mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
      else

#line 551
        if_eq c0.x, r1.z

#line 707
          mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
        else

#line 555
          if_eq c0.x, r1.w

#line 707
            mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
          else

#line 559
            mov r4.x, c0.x  // ::Model<0>
            if_eq r4.x, c128.x

#line 707
              mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
            else

#line 563
              if_eq r4.x, c128.y

#line 707
                mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
              else

#line 567
                if_eq r4.x, c128.z

#line 707
                  mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
                else

#line 571
                  if_eq r4.x, c128.w

#line 707
                    mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
                  else

#line 575
                    if_eq r4.x, c129.x

#line 707
                      mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
                    else

#line 579
                      if_eq r4.x, c129.y

#line 707
                        mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
                      else

#line 583
                        if_eq r4.x, c129.z

#line 707
                          mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
                        else

#line 587
                          if_eq r4.x, c129.w

#line 707
                            mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
                          else

#line 591
                            if_eq r4.x, c130.x

#line 707
                              mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
                            else

#line 595
                              if_eq r4.x, c130.y

#line 707
                                mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
                              else

#line 599
                                if_eq r4.x, c130.z

#line 707
                                  mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
                                else

#line 603
                                  if_eq r4.x, c130.w

#line 707
                                    mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
                                  else

#line 607
                                    if_eq r4.x, c89.x

#line 707
                                      mov r2.xyz, c127.x  // ::GetMinimum<0,1,2>
                                    else

#line 607
                                      add r2.w, r4.x, c89.y

#line 610
                                      cmp r4.yz, -r2_abs.w, c89.xzww, c89.z  // ::GetMinimum<0,1>
                                      if_eq r4.x, -c89.y

#line 707
                                        mov r2.xyz, r4.yzzw  // ::GetMinimum<0,1,2>
                                      else

#line 611
                                        add r2.w, r4.x, c70.x

#line 614
                                        cmp r2.xyz, -r2_abs.w, c127.x, r4.yzzw  // ::GetMinimum<0,1,1>
                                        if_eq r4.x, c70.y

#line 707
                                        else

#line 615
                                          add r2.w, r4.x, c70.z

#line 618
                                          cmp r2.xyz, -r2_abs.w, c89.zwww, r2.xzzw  // ::GetMinimum<0,1,1>
                                          if_eq r4.x, c70.w

#line 707
                                          else

#line 619
                                            add r2.w, r4.x, c31.x

#line 622
                                            cmp r2.xyz, -r2_abs.w, c127.x, r2.xzzw  // ::GetMinimum<0,1,1>
                                            if_eq r4.x, c31.y

#line 707
                                            else

#line 623
                                              add r2.w, r4.x, c31.z

#line 626
                                              cmp r2.xyz, -r2_abs.w, c127.x, r2.xzzw  // ::GetMinimum<0,1,1>
                                              if_eq r4.x, c31.w

#line 707
                                              else

#line 627
                                                add r2.w, r4.x, c47.x

#line 630
                                                cmp r2.xyz, -r2_abs.w, c47.yzzw, r2.xzzw  // ::GetMinimum<0,1,1>
                                                if_eq r4.x, c47.w

#line 707
                                                else

#line 631
                                                  add r2.w, r4.x, c32.x

#line 635
                                                  if_eq r4.x, c32.y
                                                    cmp r2.xyz, -r2_abs.w, c127.x, r2.xzzw  // ::GetMinimum<0,1,1>

#line 707
                                                  else

#line 647
                                                    add r5, r4.x, c23

#line 663
                                                    add r6, r4.x, c28

#line 679
                                                    add r7, r4.x, c33

#line 695
                                                    add r8, r4.x, c29

#line 703
                                                    add r4.xy, r4.x, c32.zwzw

#line 707
                                                    cmp r4.yzw, -r4_abs.y, c93.xxyy, c93.x  // ::GetMinimum<0,1,1>
                                                    cmp r4.xyz, -r4_abs.x, c93.xyyw, r4.yzww  // ::GetMinimum<0,1,1>
                                                    cmp r4.xyz, -r8_abs.w, c93.xzww, r4  // ::GetMinimum<0,1,2>
                                                    cmp r4.xyz, -r8_abs.z, c127.x, r4  // ::GetMinimum<0,1,2>
                                                    cmp r4.xyz, -r8_abs.y, c92.xyyw, r4  // ::GetMinimum<0,1,2>
                                                    cmp r4.xyz, -r8_abs.x, c93.xyyw, r4  // ::GetMinimum<0,1,2>
                                                    cmp r4.xyz, -r7_abs.w, c89.x, r4  // ::GetMinimum<0,1,2>
                                                    cmp r4.xyz, -r7_abs.z, c127.x, r4  // ::GetMinimum<0,1,2>
                                                    cmp r4.xyz, -r7_abs.y, c127.x, r4  // ::GetMinimum<0,1,2>
                                                    cmp r4.xyz, -r7_abs.x, c127.x, r4  // ::GetMinimum<0,1,2>
                                                    cmp r4.xyz, -r6_abs.w, c92.zwxw, r4  // ::GetMinimum<0,1,2>
                                                    cmp r4.xyz, -r6_abs.z, c127.x, r4  // ::GetMinimum<0,1,2>
                                                    cmp r4.xyz, -r6_abs.y, c127.x, r4  // ::GetMinimum<0,1,2>
                                                    cmp r4.xyz, -r6_abs.x, c127.x, r4  // ::GetMinimum<0,1,2>
                                                    cmp r4.xyz, -r5_abs.w, c92.xzww, r4  // ::GetMinimum<0,1,2>
                                                    cmp r4.xyz, -r5_abs.z, c127.x, r4  // ::GetMinimum<0,1,2>
                                                    cmp r4.xyz, -r5_abs.y, c127.x, r4  // ::GetMinimum<0,1,2>
                                                    cmp r2.xyz, -r5_abs.x, c127.x, r4  // ::GetMinimum<0,1,2>
                                                  endif
                                                endif
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif

#line 369
      if_eq c0.x, r1.y

#line 529
        mov r3.xyz, c127.y  // ::GetMaximum<0,1,2>
      else

#line 369
        add r2.w, -r1.z, c0.x

#line 372
        cmp r4.xy, -r2_abs.w, c94, c94.z  // ::GetMaximum<0,1>
        if_eq c0.x, r1.z

#line 529
          mov r3.xyz, r4.xyyw  // ::GetMaximum<0,1,2>
        else

#line 373
          add r2.w, -r1.w, c0.x

#line 376
          cmp r3.xyz, -r2_abs.w, c94.xyww, r4.xyyw  // ::GetMaximum<0,1,2>
          if_eq c0.x, r1.w

#line 529
          else

#line 377
            mov r4.x, c0.x  // ::Model<0>
            add r2.w, r4.x, -c128.x

#line 380
            cmp r3.xyz, -r2_abs.w, c94.xyyw, r3  // ::GetMaximum<0,1,2>
            if_eq r4.x, c128.x

#line 529
            else

#line 381
              add r2.w, r4.x, -c128.y

#line 384
              cmp r3.xyz, -r2_abs.w, c94.xyyw, r3  // ::GetMaximum<0,1,2>
              if_eq r4.x, c128.y

#line 529
              else

#line 385
                add r2.w, r4.x, -c128.z

#line 388
                cmp r3.xyz, -r2_abs.w, c94.xyyw, r3  // ::GetMaximum<0,1,2>
                if_eq r4.x, c128.z

#line 529
                else

#line 389
                  add r2.w, r4.x, -c128.w

#line 392
                  cmp r3.xyz, -r2_abs.w, c94.xyyw, r3  // ::GetMaximum<0,1,2>
                  if_eq r4.x, c128.w

#line 529
                  else

#line 393
                    add r2.w, r4.x, -c129.x

#line 396
                    cmp r3.xyz, -r2_abs.w, c94.xyyw, r3  // ::GetMaximum<0,1,2>
                    if_eq r4.x, c129.x

#line 529
                    else

#line 397
                      add r2.w, r4.x, -c129.y

#line 400
                      cmp r3.xyz, -r2_abs.w, c94.xyyw, r3  // ::GetMaximum<0,1,2>
                      if_eq r4.x, c129.y

#line 529
                      else

#line 401
                        add r2.w, r4.x, -c129.z

#line 404
                        cmp r3.xyz, -r2_abs.w, c94.xyww, r3  // ::GetMaximum<0,1,2>
                        if_eq r4.x, c129.z

#line 529
                        else

#line 405
                          add r2.w, r4.x, -c129.w

#line 408
                          cmp r3.xyz, -r2_abs.w, c94.xyww, r3  // ::GetMaximum<0,1,2>
                          if_eq r4.x, c129.w

#line 529
                          else

#line 409
                            add r2.w, r4.x, -c130.x

#line 412
                            cmp r3.xyz, -r2_abs.w, c94.xyyw, r3  // ::GetMaximum<0,1,2>
                            if_eq r4.x, c130.x

#line 529
                            else

#line 413
                              add r2.w, r4.x, -c130.y

#line 416
                              cmp r3.xyz, -r2_abs.w, c94.xyyw, r3  // ::GetMaximum<0,1,2>
                              if_eq r4.x, c130.y

#line 529
                              else

#line 417
                                add r2.w, r4.x, -c130.z

#line 420
                                cmp r3.xyz, -r2_abs.w, c94.xyyw, r3  // ::GetMaximum<0,1,2>
                                if_eq r4.x, c130.z

#line 529
                                else

#line 421
                                  add r2.w, r4.x, -c130.w

#line 424
                                  cmp r3.xyz, -r2_abs.w, c94.xyyw, r3  // ::GetMaximum<0,1,2>
                                  if_eq r4.x, c130.w

#line 529
                                  else

#line 425
                                    add r2.w, r4.x, -c89.x

#line 428
                                    cmp r3.xyz, -r2_abs.w, c94.xyyw, r3  // ::GetMaximum<0,1,2>
                                    if_eq r4.x, c89.x

#line 529
                                    else

#line 429
                                      add r2.w, r4.x, c89.y

#line 432
                                      cmp r3.xyz, -r2_abs.w, c127.y, r3  // ::GetMaximum<0,1,2>
                                      if_eq r4.x, -c89.y

#line 529
                                      else

#line 433
                                        add r2.w, r4.x, c70.x

#line 436
                                        cmp r3.xyz, -r2_abs.w, c94.w, r3  // ::GetMaximum<0,1,2>
                                        if_eq r4.x, c70.y

#line 529
                                        else

#line 437
                                          add r2.w, r4.x, c70.z

#line 440
                                          cmp r3.xyz, -r2_abs.w, c127.y, r3  // ::GetMaximum<0,1,2>
                                          if_eq r4.x, c70.w

#line 529
                                          else

#line 441
                                            add r2.w, r4.x, c31.x

#line 444
                                            cmp r3.xyz, -r2_abs.w, c94.zzxw, r3  // ::GetMaximum<0,1,2>
                                            if_eq r4.x, c31.y

#line 529
                                            else

#line 445
                                              add r2.w, r4.x, c31.z

#line 448
                                              cmp r3.xyz, -r2_abs.w, c94.y, r3  // ::GetMaximum<0,1,2>
                                              if_eq r4.x, c31.w

#line 529
                                              else

#line 449
                                                add r2.w, r4.x, c47.x

#line 452
                                                cmp r3.xyz, -r2_abs.w, c54.xyyw, r3  // ::GetMaximum<0,1,2>
                                                if_eq r4.x, c47.w

#line 529
                                                else

#line 453
                                                  add r2.w, r4.x, c32.x

#line 457
                                                  if_eq r4.x, c32.y
                                                    cmp r3.xyz, -r2_abs.w, c94.yyxw, r3  // ::GetMaximum<0,1,2>

#line 529
                                                  else

#line 469
                                                    add r5, r4.x, c23

#line 485
                                                    add r6, r4.x, c28

#line 501
                                                    add r7, r4.x, c33

#line 517
                                                    add r8, r4.x, c29

#line 525
                                                    add r4.xy, r4.x, c32.zwzw

#line 529
                                                    cmp r4.yzw, -r4_abs.y, c118.xxyy, c118.z  // ::GetMaximum<0,1,1>
                                                    cmp r4.xyz, -r4_abs.x, c54.zwww, r4.yzww  // ::GetMaximum<0,1,1>
                                                    cmp r4.xyz, -r8_abs.w, c91, r4  // ::GetMaximum<0,1,2>
                                                    cmp r4.xyz, -r8_abs.z, c127.y, r4  // ::GetMaximum<0,1,2>
                                                    cmp r4.xyz, -r8_abs.y, c118.xwww, r4  // ::GetMaximum<0,1,2>
                                                    cmp r4.xyz, -r8_abs.x, c54.zwww, r4  // ::GetMaximum<0,1,2>
                                                    cmp r4.xyz, -r7_abs.w, c36.xyyw, r4  // ::GetMaximum<0,1,2>
                                                    cmp r4.xyz, -r7_abs.z, c127.y, r4  // ::GetMaximum<0,1,2>
                                                    cmp r4.xyz, -r7_abs.y, c127.y, r4  // ::GetMaximum<0,1,2>
                                                    cmp r4.xyz, -r7_abs.x, c94.w, r4  // ::GetMaximum<0,1,2>
                                                    cmp r4.xyz, -r6_abs.w, c55, r4  // ::GetMaximum<0,1,2>
                                                    cmp r4.xyz, -r6_abs.z, c127.y, r4  // ::GetMaximum<0,1,2>
                                                    cmp r4.xyz, -r6_abs.y, c127.y, r4  // ::GetMaximum<0,1,2>
                                                    cmp r4.xyz, -r6_abs.x, c127.y, r4  // ::GetMaximum<0,1,2>
                                                    cmp r4.xyz, -r5_abs.w, c55.zxyw, r4  // ::GetMaximum<0,1,2>
                                                    cmp r4.xyz, -r5_abs.z, c127.y, r4  // ::GetMaximum<0,1,2>
                                                    cmp r4.xyz, -r5_abs.y, c94.yyxw, r4  // ::GetMaximum<0,1,2>
                                                    cmp r3.xyz, -r5_abs.x, c94.yyxw, r4  // ::GetMaximum<0,1,2>
                                                  endif
                                                endif
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif
    endif

#line 2700
    if_eq c2.x, r1.x

#line 2216
      rcp r2.w, c7.x
      pow r4.x, r0.x, r2.w  // ::V<0>

#line 2221
      if_eq c6.x, r1.x

#line 2251
      else

#line 2221
        add r3.w, -r1.y, c6.x

#line 2229
        if_eq c6.x, r1.y

#line 2224
          add r4.w, -r0.x, c91.w
          mul r5.x, r0.x, c36.z
          cmp r4.w, r4.w, r5.x, c36.w  // ::V<0>
          cmp r4.x, -r3_abs.w, r4.w, r4.x  // ::CompandInverse<0>

#line 2251
        else

#line 2245
          mov r5.x, c6.x  // ::Companding<0>
          add r5.xyz, r5.x, c30

#line 2248
          mul r6.xy, r0.x, c37

#line 2240
          add r7, r0.x, c34
          mul r6.zw, r7.xyyw, c37

#line 2232
          pow r3.w, r6.z, c55.w
          cmp r3.w, r7.x, r3.w, r6.x  // ::L<0>

#line 2240
          pow r4.w, r6.w, c55.w
          cmp r4.w, r7.z, r4.w, r6.x  // ::L<0>

#line 2248
          add r5.w, -r0.x, c30.w
          add r6.x, r0.x, c35.x
          mul r6.x, r6.x, c35.y
          pow r7.x, r6.x, c35.z
          cmp r5.w, r5.w, r6.y, r7.x  // ::v<0>

#line 2251
          cmp r5.z, -r5_abs.z, r5.w, r0.x  // ::CompandInverse<0>
          cmp r4.w, -r5_abs.y, r4.w, r5.z  // ::CompandInverse<0>
          cmp r4.x, -r5_abs.x, r3.w, r4.w  // ::CompandInverse<0>
        endif
      endif

#line 2216
      pow r4.y, r0.y, r2.w  // ::V<0>

#line 2221
      if_eq c6.x, r1.x

#line 2251
      else

#line 2221
        add r3.w, -r1.y, c6.x

#line 2229
        if_eq c6.x, r1.y

#line 2224
          add r4.w, -r0.y, c91.w
          mul r5.x, r0.y, c36.z
          cmp r4.w, r4.w, r5.x, c36.w  // ::V<0>
          cmp r4.y, -r3_abs.w, r4.w, r4.y  // ::CompandInverse<0>

#line 2251
        else

#line 2245
          mov r5.x, c6.x  // ::Companding<0>
          add r5.xyz, r5.x, c30

#line 2248
          mul r6.xy, r0.y, c37

#line 2240
          add r7, r0.y, c34
          mul r6.zw, r7.xyyw, c37

#line 2232
          pow r3.w, r6.z, c55.w
          cmp r3.w, r7.x, r3.w, r6.x  // ::L<0>

#line 2240
          pow r4.w, r6.w, c55.w
          cmp r4.w, r7.z, r4.w, r6.x  // ::L<0>

#line 2248
          add r5.w, -r0.y, c30.w
          add r6.x, r0.y, c35.x
          mul r6.x, r6.x, c35.y
          pow r7.x, r6.x, c35.z
          cmp r5.w, r5.w, r6.y, r7.x  // ::v<0>

#line 2251
          cmp r5.z, -r5_abs.z, r5.w, r0.y  // ::CompandInverse<0>
          cmp r4.w, -r5_abs.y, r4.w, r5.z  // ::CompandInverse<0>
          cmp r4.y, -r5_abs.x, r3.w, r4.w  // ::CompandInverse<0>
        endif
      endif

#line 2216
      pow r4.z, r0.z, r2.w  // ::V<0>

#line 2221
      if_eq c6.x, r1.x

#line 2251
      else

#line 2221
        add r2.w, -r1.y, c6.x

#line 2229
        if_eq c6.x, r1.y

#line 2224
          add r3.w, -r0.z, c91.w
          mul r4.w, r0.z, c36.z
          cmp r3.w, r3.w, r4.w, c36.w  // ::V<0>
          cmp r4.z, -r2_abs.w, r3.w, r4.z  // ::CompandInverse<0>

#line 2251
        else

#line 2245
          mov r5.x, c6.x  // ::Companding<0>
          add r5.xyz, r5.x, c30

#line 2248
          mul r6.xy, r0.z, c37

#line 2240
          add r7, r0.z, c34
          mul r6.zw, r7.xyyw, c37

#line 2232
          pow r2.w, r6.z, c55.w
          cmp r2.w, r7.x, r2.w, r6.x  // ::L<0>

#line 2240
          pow r3.w, r6.w, c55.w
          cmp r3.w, r7.z, r3.w, r6.x  // ::L<0>

#line 2248
          add r4.w, -r0.z, c30.w
          add r5.w, r0.z, c35.x
          mul r5.w, r5.w, c35.y
          pow r6.x, r5.w, c35.z
          cmp r4.w, r4.w, r6.y, r6.x  // ::v<0>

#line 2251
          cmp r4.w, -r5_abs.z, r4.w, r0.z  // ::CompandInverse<0>
          cmp r3.w, -r5_abs.y, r3.w, r4.w  // ::CompandInverse<0>
          cmp r4.z, -r5_abs.x, r2.w, r3.w  // ::CompandInverse<0>
        endif
      endif

#line 2318
      if_eq c0.x, r1.x

#line 2482
        mov r5.xyz, r4  // ::FLrgb<0,1,2>
      else

#line 2318
        add r2.w, -r1.y, c0.x

#line 767
        add r6.xyz, -r4, c127.y  // ::Lrgb_CMY<0,1,2>

#line 2321
        cmp r5.xyz, -r2_abs.w, r6, r4  // ::FLrgb<0,1,2>
        if_eq c0.x, r1.y

#line 2482
        else

#line 2322
          add r2.w, -r1.z, c0.x

#line 855
          add r6.xyz, -r4.zxyw, r4.yzxw

#line 356
          cmp r7.xy, r6.x, r4.zyzw, r4.yzzw

#line 534
          min r3.w, r7.x, r4.x  // ::GetMinimum<0>

#line 356
          max r5.w, r4.x, r7.y  // ::GetMaximum<0>

#line 837
          add r4.w, -r3.w, r5.w  // ::c<0>
          add r6.w, r4.w, -c127.y
          add r7.x, -r4.w, c127.y
          rcp r7.x, r7.x
          mul r7.x, r3.w, r7.x  // ::v<0>

#line 849
          add r7.yz, -r4.xxyw, r5.w
          rcp r7.w, r4.w

#line 855
          mul r8.x, r6.x, r7.w

#line 847
          cmp r8.yz, r8.x, c63.xxyw, c63.xzww
          mul r8.z, r8.z, r8.x
          frc r8.z, r8.z
          mul r8.y, r8.z, r8.y  // ::h<0>

#line 855
          mad r8.zw, r6.xyyz, r7.w, -c30.xyxz  // ::h<0,0>
          cmp r6.y, -r7_abs.z, r8.z, r8.w  // ::h<0>
          cmp r6.y, -r7_abs.y, r8.y, r6.y  // ::h<0>
          mul r7.y, r6.y, c35.w  // ::h<0>
          cmp r6.y, r6.y, c38.x, c38.y
          mul r7.y, r6.y, r7.y
          frc r7.y, r7.y
          mul r6.y, r6.y, r7.y  // ::h<0>
          mul r6.y, r6.y, c94.x
          cmp r9.x, -r4.w, c127.x, r6.y  // ::Lrgb_HCV<0>
          mul r9.y, r4.w, c94.y  // ::Lrgb_HCV<1>
          mul r6.y, r7.x, c94.y
          cmp r9.z, r6.w, c127.x, r6.y  // ::Lrgb_HCV<2>

#line 2325
          cmp r5.xyz, -r2_abs.w, r9, r5  // ::FLrgb<0,1,2>
          if_eq c0.x, r1.z

#line 2482
          else

#line 2326
            add r2.w, -r1.w, c0.x

#line 253
            add r6.y, r4.y, r4.x
            add r6.y, r4.z, r6.y  // ::GetSum<0>

#line 900
            rcp r6.w, r6.y
            mul r7.xyz, r4, r6.w  // ::r<0>, ::g<0>, ::b<0>
            mad r9.xyz, r4.xxyw, r6.w, -r7.yzzw
            add r6.w, r9.y, r9.x
            mul r6.w, r6.w, -c93.y
            mul r9.xy, r9.xzzw, r9
            add r8.y, r9.y, r9.x
            rsq r8.y, r8.y
            mul r6.w, r6.w, r8.y
            add r8.y, -r6_abs.w, c127.y
            rsq r8.y, r8.y
            rcp r8.y, r8.y
            mad r9.x, r6_abs.w, c38.z, c38.w
            mad r9.x, r9.x, r6_abs.w, c39.x
            mad r9.x, r9.x, r6_abs.w, c39.y
            mul r8.y, r8.y, r9.x
            mad r9.x, r8.y, c39.z, c39.w
            cmp r6.w, r6.w, c127.x, c127.y
            mad r6.w, r9.x, r6.w, r8.y  // ::h<0>

#line 905
            add r8.y, -r6.w, c40.x  // ::h<0>
            cmp r6.w, r9.z, r6.w, r8.y  // ::h<0>

#line 534
            min r8.y, r7.z, r7.y
            min r9.x, r8.y, r7.x  // ::GetMinimum<0>

#line 909
            mad r7.z, r9.x, -c127.w, c127.y  // ::s<0>
            mul r9.xz, r6.wyyw, c40.zyyw  // ::Lrgb_HCY<0>, ::i<0>
            mul r9.y, r7.z, c94.y  // ::Lrgb_HCY<1>

#line 2329
            cmp r5.xyz, -r2_abs.w, r9, r5  // ::FLrgb<0,1,2>
            if_eq c0.x, r1.w

#line 2482
            else

#line 2330
              mov r9.x, c0.x  // ::Model<0>
              add r2.w, r9.x, -c128.x

#line 1090
              add r6.w, r3.w, r5.w

#line 1093
              add r7.z, r6.w, -c127.y
              rcp r8.y, r6.w
              mul r8.y, r4.w, r8.y
              add r9.y, -r6.w, c127.z
              rcp r9.y, r9.y
              mul r9.y, r4.w, r9.y
              cmp r10.y, r7.z, r9.y, r8.y  // ::s<0>

#line 1107
              add r9.yzw, r4.xxzy, -r5.w

#line 1101
              mad r7.z, r6.x, r7.w, c128.z
              cmp r7.z, r6.x, r8.x, r7.z  // ::h<0>

#line 1110
              cmp r7.w, -r9_abs.w, r8.z, c127.x  // ::h<0>
              cmp r7.w, -r9_abs.z, r8.w, r7.w  // ::h<0>
              cmp r7.w, -r9_abs.y, r7.z, r7.w  // ::h<0>
              mul r10.x, r7.w, c40.w  // ::h<0>
              cmp r11.xy, -r4_abs.w, c127.x, r10  // ::h<0>, ::s<0>
              mul r11.z, r6.w, c42.x  // ::Lrgb_HSL<2>

#line 2333
              mul r11.w, r11.y, c94.y
              cmp r5.xyz, -r2_abs.w, r11.xwzw, r5  // ::FLrgb<0,1,2>
              if_eq r9.x, c128.x

#line 2482
              else

#line 2334
                add r2.w, r9.x, -c128.y

#line 1002
                rcp r6.w, r5.w
                mul r8.y, r4.w, r6.w  // ::_s<0>

#line 1014
                cmp r6.w, -r9_abs.z, r8.w, c127.x  // ::_h<0>
                cmp r6.w, -r9_abs.w, r8.z, r6.w  // ::_h<0>
                cmp r6.w, -r9_abs.y, r7.z, r6.w  // ::_h<0>
                mul r8.x, r6.w, c40.w  // ::_h<0>
                cmp r8.xy, -r4_abs.w, c127.x, r8  // ::_h<0>, ::_s<0>
                mul r8.z, r5.w, c94.y  // ::Lrgb_HSB<2>

#line 2337
                mul r8.w, r8.y, c94.y
                cmp r5.xyz, -r2_abs.w, r8.xwzw, r5  // ::FLrgb<0,1,2>
                if_eq r9.x, c128.y

#line 2482
                else

#line 2338
                  add r2.w, r9.x, -c128.z

#line 2341
                  cmp r5.xyz, -r2_abs.w, r8.xwzw, r5  // ::FLrgb<0,1,2>
                  if_eq r9.x, c128.z

#line 2482
                  else

#line 2342
                    add r2.w, r9.x, -c128.w

#line 2345
                    cmp r5.xyz, -r2_abs.w, r11.xwzw, r5  // ::FLrgb<0,1,2>
                    if_eq r9.x, c128.w

#line 2482
                    else

#line 2346
                      add r2.w, r9.x, -c129.x

#line 2349
                      cmp r5.xyz, -r2_abs.w, r11.xwzw, r5  // ::FLrgb<0,1,2>
                      if_eq r9.x, c129.x

#line 2482
                      else

#line 2350
                        add r2.w, r9.x, -c129.y

#line 2353
                        cmp r5.xyz, -r2_abs.w, r11.xwzw, r5  // ::FLrgb<0,1,2>
                        if_eq r9.x, c129.y

#line 2482
                        else

#line 2354
                          if_eq r9.x, c129.z

#line 1139
                            add r2.w, r4.y, r4.y
                            mad r2.w, r4.x, c128.x, r2.w
                            add r2.w, r4.z, r2.w

#line 1182
                            mul r5.xz, r2.w, c42.yyzw  // ::m<0>, ::Lrgb_HSM<2>

#line 1143
                            mad r8.xyz, r2.w, -c42.y, r4
                            mul r6.w, r8.y, c128.x
                            mad r6.w, r8.x, c127.w, -r6.w
                            mad r6.w, r8.z, -c128.x, r6.w
                            mul r6.w, r6.w, c42.w  // ::j<0>
                            mul r7.zw, r8.xyxy, r8.xyxy
                            add r7.z, r7.w, r7.z
                            mad r7.z, r8.z, r8.z, r7.z
                            rsq r7.z, r7.z
                            mul r6.w, r6.w, r7.z
                            add r7.w, -r6_abs.w, c127.y
                            rsq r7.w, r7.w
                            rcp r7.w, r7.w
                            mad r8.x, r6_abs.w, c38.z, c38.w
                            mad r8.x, r8.x, r6_abs.w, c39.x
                            mad r8.x, r8.x, r6_abs.w, c39.y
                            mul r7.w, r7.w, r8.x
                            mad r8.x, r7.w, c39.z, c39.w
                            cmp r6.w, r6.w, c127.x, c127.y
                            mad r6.w, r8.x, r6.w, r7.w  // ::t<0>
                            add r7.w, -r6.w, c40.x
                            cmp r6.w, r6.x, r6.w, r7.w  // ::w<0>

#line 1176
                            mad r8.xy, r2.w, -c43.x, c43.yzzw  // Pow2::input<0,0>

#line 226
                            mul r7.w, r8.x, r8.x  // ::Pow2<0>

#line 1156
                            dp2add r7.w, r5.x, r5.x, r7.w  // ::v<0>

#line 219
                            add r8.x, -r2.w, c43.w

#line 1176
                            mad r8.z, r2.w, c98.x, c98.y  // Pow2::input<0>

#line 226
                            mul r8.z, r8.z, r8.z  // ::Pow2<0>

#line 1176
                            dp2add r8.y, r8.y, r8.y, r8.z  // ::v<0>
                            cmp r8.x, r8.x, -c127.y, -c127.x
                            cmp r8.x, -r2.w, c127.x, r8.x
                            cmp r8.x, r8.x, c127.x, r8.y  // ::v<0>
                            cmp r8.y, -r2.w, -c127.y, -c127.x
                            cmp r2.w, r2.w, r8.y, c127.x
                            cmp r2.w, r2.w, r8.x, r7.w  // ::v<0>

#line 1180
                            rcp r7.z, r7.z
                            rsq r2.w, r2.w
                            mul r2.w, r2.w, r7.z  // ::s<0>
                            mul r5.x, r6.w, c98.z  // ::Lrgb_HSM<0>
                            mul r5.y, r2.w, c94.y  // ::Lrgb_HSM<1>

#line 2357
                          else
                            if_eq r9.x, c129.w

#line 1316
                              mul r8.xyz, r4, c94.w  // ::_input<0,1,2>

#line 1320
                              mul r9.yzw, r8.xxyz, r8.xxyz
                              mul r7.zw, r9.xyyz, c44.xyxy
                              add r2.w, r7.w, r7.z
                              mad r2.w, r9.w, c98.w, r2.w
                              rsq r2.w, r2.w
                              rcp r2.w, r2.w  // ::p<0>
                              mad r7.zw, r4.x, c94.w, -r8.xyzy
                              cmp r6.w, -r7_abs.z, c127.y, c127.x
                              cmp r6.w, -r7_abs.w, r6.w, c127.x
                              if_ne r6.w, -r6.w

#line 1325
                                mov r9.yz, c127.x  // ::h<0>, ::s<0>
                              else

#line 1338
                                mad r10.yz, r4, c94.w, -r8.xzyw
                                mul r11.xy, r10.zyzw, c35.w

#line 1333
                                rcp r6.w, r7.w
                                mad r12.y, r11.x, -r6.w, c127.y  // ::h<0>
                                rcp r6.w, r8.x

#line 1338
                                rcp r8.w, r7.z
                                mul r12.x, r8.w, r11.y  // ::h<0>
                                mad r12.zw, r8.xyyz, -r6.w, c127.y  // ::s<0,0>
                                cmp r11.xy, r10.z, r12.yzzw, r12.xwzw  // ::h<0>, ::s<0>
                                cmp r6.w, r7.z, -c127.y, -c127.x
                                cmp r6.w, r7.w, r6.w, c127.x
                                cmp r11.xy, r6.w, c127.x, r11  // ::h<0>, ::s<0>

#line 1368
                                mul r11.zw, r7, c35.w

#line 1348
                                rcp r6.w, r10.y
                                mad r12.y, r11.z, -r6.w, c40.y  // ::h<0>
                                rcp r6.w, r8.y

#line 1353
                                mad r13.xy, r4.yzzw, c94.w, -r8.x

#line 1363
                                mul r13.zw, r13.xyyx, c35.w

#line 1353
                                rcp r7.w, r13.x
                                mad r12.x, r13.z, r7.w, c40.y  // ::h<0>
                                mad r12.zw, r8.xyzx, -r6.w, c127.y  // ::s<0,0>
                                cmp r7.zw, r7.z, r12.xyyz, r12.xyxw  // ::h<0>, ::s<0>

#line 1371
                                cmp r10.yw, r10.xyzz, -c127.y, -c127.x
                                cmp r10.yw, r13.xxzy, r10, c127.x

#line 1356
                                cmp r7.zw, r10.y, r11.xyxy, r7  // ::h<0>, ::s<0>

#line 1363
                                rcp r6.w, r13.y
                                mad r12.y, r13.w, -r6.w, c44.z  // ::h<0>
                                rcp r6.w, r8.z

#line 1368
                                rcp r8.z, r10.z
                                mad r12.x, r11.w, r8.z, c44.z  // ::h<0>
                                mad r12.zw, r8.xyxy, -r6.w, c127.y  // ::s<0,0>
                                cmp r8.xy, r13.x, r12.yzzw, r12.xwzw  // ::h<0>, ::s<0>
                                cmp r9.yz, r10.w, r7.xzww, r8.xxyw  // ::h<0>, ::s<0>
                              endif
                              mul r5.y, r9.z, c94.y  // ::Lrgb_HSP<1>
                              mad r6.w, r9.y, c53.x, c53.y
                              frc r7.z, r6.w
                              add r5.x, r6.w, -r7.z  // ::Lrgb_HSP<0>
                              add r2.w, r2.w, -c93.y
                              frc r6.w, r2.w
                              add r5.z, r2.w, -r6.w  // ::Lrgb_HSP<2>

#line 2361
                            else
                              if_eq r9.x, c130.x

#line 260
                                rcp r2.w, c9.x
                                mul r6.w, r2.w, c8.x  // ::GetWhite<0>
                                add r7.z, r1.y, -c8.x
                                add r7.z, r7.z, -c9.x
                                mul r2.w, r2.w, r7.z  // ::GetWhite<2>

#line 1557
                                rcp r6.w, r6.w
                                mul r7.z, r4.x, r6.w  // ::xr<0>
                                rcp r2.w, r2.w
                                mul r7.w, r2.w, r4.z  // ::zr<0>
                                mad r6.w, r4.x, -r6.w, c91.w
                                mad r7.z, r7.z, c53.z, c53.w
                                mul r7.z, r7.z, c44.w
                                cmp r6.w, r6.w, r7.z, c127.y  // ::fx<0>
                                add r7.z, -r4.y, c91.w
                                mad r8.x, r4.y, c53.z, c53.w
                                mul r8.x, r8.x, c44.w
                                cmp r7.z, r7.z, r8.x, c127.y  // ::fy<0>
                                mad r2.w, r4.z, -r2.w, c91.w
                                mad r7.w, r7.w, c53.z, c53.w
                                mul r7.w, r7.w, c44.w
                                mad r5.z, r7.z, c87.x, c87.y  // ::l<0>
                                add r6.w, r6.w, -r7.z
                                mul r8.x, r6.w, c87.z  // ::a<0>
                                cmp r2.w, r2.w, -r7.w, -c127.y
                                add r2.w, r2.w, r7.z
                                mul r2.w, r2.w, c87.w  // ::b<0>

#line 747
                                min r7.z, r8_abs.x, r2_abs.w
                                max r7.w, r2_abs.w, r8_abs.x
                                rcp r7.w, r7.w
                                mul r7.z, r7.w, r7.z
                                mul r7.w, r7.z, r7.z
                                mad r8.y, r7.w, c49.x, c49.y
                                mad r8.y, r7.w, r8.y, c49.z
                                mad r8.y, r7.w, r8.y, c49.w
                                mad r7.w, r7.w, r8.y, c50.x
                                mul r7.z, r7.w, r7.z
                                add r7.w, -r2_abs.w, r8_abs.x
                                cmp r7.w, r7.w, c127.x, c127.y
                                mad r8.y, r7.z, c50.y, c50.z
                                mad r7.z, r8.y, r7.w, r7.z
                                cmp r6.w, r6.w, c48.x, c48.y
                                add r6.w, r6.w, r7.z
                                min r7.z, r8.x, r2.w
                                max r7.w, r2.w, r8.x
                                cmp r7.w, r7.w, c127.y, c127.x
                                cmp r7.z, r7.z, c127.x, r7.w
                                add r7.w, r6.w, r6.w
                                mad r6.w, r7.z, -r7.w, r6.w  // ::t<0>

#line 752
                                mul r6.w, r6.w, c50.w
                                add r7.z, -r5.z, -c93.y
                                mul r7.z, r7_abs.z, r7_abs.z
                                mad r6.w, r6.w, r6.w, -r7.z
                                rsq r6.w, r6.w
                                rcp r6.w, r6.w
                                add r6.w, r6.w, c93.y
                                mov r5.x, -r6.w  // ::h<0>
                                mul r2.w, r2.w, r2.w
                                mad r2.w, r8.x, r8.x, r2.w
                                rsq r2.w, r2.w
                                rcp r5.y, r2.w  // ::u<0>

#line 2365
                              else
                                if_eq r9.x, c130.y

#line 260
                                  rcp r2.w, c9.x
                                  mul r6.w, r2.w, c8.x  // ::GetWhite<0>
                                  add r7.z, r1.y, -c8.x
                                  add r7.z, r7.z, -c9.x
                                  mul r7.w, r2.w, r7.z  // ::GetWhite<2>

#line 306
                                  mul r8.xyz, r4.y, c14
                                  mad r8.xyz, r4.x, c13, r8
                                  mad r8.xyz, r4.z, c15, r8  // ::x<0>, ::y<0>, ::z<0>

#line 276
                                  mov r11.x, c8.x  // ::WhiteX<0>
                                  mad r9.yz, r2.w, r11.x, c48.xzww

#line 286
                                  mad r10.yz, r2.w, r7.z, c45.xxyw

#line 276
                                  cmp r2.w, -r10_abs.y, -c127.y, -c127.x
                                  cmp r2.w, -r9_abs.y, r2.w, c127.x
                                  mul r7.z, r9.z, c45.z  // ::Ka<0>
                                  cmp r7.z, r2.w, r7.z, c45.w  // ::ComputeKa<0>

#line 286
                                  mul r8.w, r10.z, c95.x  // ::Ka<0>
                                  cmp r2.w, r2.w, r8.w, c95.y  // ::ComputeKb<0>

#line 1628
                                  rsq r8.w, r8.y
                                  rcp r9.y, r8.w
                                  mul r5.z, r9.y, c94.y  // ::L<0>
                                  rcp r6.w, r6.w
                                  mad r6.w, r8.x, r6.w, -r8.y
                                  mul r6.w, r8.w, r6.w
                                  mul r6.w, r6.w, r7.z  // ::a<0>
                                  rcp r7.z, r7.w
                                  mad r7.z, r8.z, -r7.z, r8.y
                                  mul r7.z, r8.w, r7.z
                                  mul r2.w, r2.w, r7.z  // ::b<0>

#line 747
                                  min r7.z, r6_abs.w, r2_abs.w
                                  max r7.w, r2_abs.w, r6_abs.w
                                  rcp r7.w, r7.w
                                  mul r7.z, r7.w, r7.z
                                  mul r7.w, r7.z, r7.z
                                  mad r8.x, r7.w, c49.x, c49.y
                                  mad r8.x, r7.w, r8.x, c49.z
                                  mad r8.x, r7.w, r8.x, c49.w
                                  mad r7.w, r7.w, r8.x, c50.x
                                  mul r7.z, r7.w, r7.z
                                  add r7.w, -r2_abs.w, r6_abs.w
                                  cmp r7.w, r7.w, c127.x, c127.y
                                  mad r8.x, r7.z, c50.y, c50.z
                                  mad r7.z, r8.x, r7.w, r7.z
                                  cmp r7.w, r6.w, c48.x, c48.y
                                  add r7.z, r7.w, r7.z
                                  min r7.w, r6.w, r2.w
                                  max r8.x, r2.w, r6.w
                                  cmp r8.x, r8.x, c127.y, c127.x
                                  cmp r7.w, r7.w, c127.x, r8.x
                                  add r8.x, r7.z, r7.z
                                  mad r7.z, r7.w, -r8.x, r7.z  // ::t<0>

#line 752
                                  mul r7.z, r7.z, c50.w
                                  mad r7.w, r9.y, -c54.x, c54.w
                                  mul r7.w, r7_abs.w, r7_abs.w
                                  mad r7.z, r7.z, r7.z, -r7.w
                                  rsq r7.z, r7.z
                                  rcp r7.z, r7.z
                                  add r7.z, r7.z, c93.y
                                  mov r5.x, -r7.z  // ::h<0>
                                  mul r2.w, r2.w, r2.w
                                  mad r2.w, r6.w, r6.w, r2.w
                                  rsq r2.w, r2.w
                                  rcp r5.y, r2.w  // ::u<0>

#line 2369
                                else
                                  if_eq r9.x, c130.z

#line 260
                                    rcp r2.w, c9.x
                                    mul r6.w, r2.w, c8.x  // ::GetWhite<0>
                                    add r7.z, r1.y, -c8.x
                                    add r7.z, r7.z, -c9.x
                                    mul r7.z, r2.w, r7.z  // ::GetWhite<2>

#line 292
                                    mul r8.xy, r4, c95.zwzw
                                    mad r7.w, r4.y, c130.w, r4.x
                                    mad r7.w, r4.z, c127.w, r7.w
                                    rcp r7.w, r7.w

#line 297
                                    mul r8.z, r4.y, r7.w

#line 292
                                    mul r6.w, r6.w, c128.x
                                    mov r11.x, c8.x  // ::WhiteX<0>
                                    mad r2.w, r2.w, r11.x, c130.w
                                    mad r2.w, r7.z, c127.w, r2.w
                                    rcp r2.w, r2.w
                                    mul r6.w, r2.w, r6.w  // ::ComputeKu<0>

#line 297
                                    mul r2.w, r2.w, c129.y  // ::ComputeKv<0>

#line 1709
                                    add r7.z, -r4.y, c91.w
                                    cmp r7.z, r7.z, r8.y, c94.y  // ::L<0>

#line 1712
                                    max r5.z, r7.z, c127.x  // ::L<0>

#line 1715
                                    mul r7.z, r5.z, c130.y
                                    mad r6.w, r8.x, r7.w, -r6.w
                                    mul r6.w, r6.w, r7.z  // ::u<0>

#line 1718
                                    mad r2.w, r8.z, c129.y, -r2.w
                                    mul r2.w, r2.w, r7.z  // ::v<0>

#line 747
                                    min r7.z, r6_abs.w, r2_abs.w
                                    max r7.w, r2_abs.w, r6_abs.w
                                    rcp r7.w, r7.w
                                    mul r7.z, r7.w, r7.z
                                    mul r7.w, r7.z, r7.z
                                    mad r8.x, r7.w, c49.x, c49.y
                                    mad r8.x, r7.w, r8.x, c49.z
                                    mad r8.x, r7.w, r8.x, c49.w
                                    mad r7.w, r7.w, r8.x, c50.x
                                    mul r7.z, r7.w, r7.z
                                    add r7.w, -r2_abs.w, r6_abs.w
                                    cmp r7.w, r7.w, c127.x, c127.y
                                    mad r8.x, r7.z, c50.y, c50.z
                                    mad r7.z, r8.x, r7.w, r7.z
                                    cmp r7.w, r6.w, c48.x, c48.y
                                    add r7.z, r7.w, r7.z
                                    min r7.w, r6.w, r2.w
                                    max r8.x, r2.w, r6.w
                                    cmp r8.x, r8.x, c127.y, c127.x
                                    cmp r7.w, r7.w, c127.x, r8.x
                                    add r8.x, r7.z, r7.z
                                    mad r7.z, r7.w, -r8.x, r7.z  // ::t<0>

#line 752
                                    mul r7.z, r7.z, c50.w
                                    add r7.w, -r5.z, -c93.y
                                    mul r7.w, r7_abs.w, r7_abs.w
                                    mad r7.z, r7.z, r7.z, -r7.w
                                    rsq r7.z, r7.z
                                    rcp r7.z, r7.z
                                    add r7.z, r7.z, c93.y
                                    mov r5.x, -r7.z  // ::h<0>
                                    mul r2.w, r2.w, r2.w
                                    mad r2.w, r6.w, r6.w, r2.w
                                    rsq r2.w, r2.w
                                    rcp r5.y, r2.w  // ::u<0>

#line 2373
                                  else
                                    if_eq r9.x, c130.w

#line 306
                                      mul r8, r4.y, c14.yzxy
                                      mad r8, r4.x, c13.yzxy, r8
                                      mad r8, r4.z, c15.yzxy, r8  // ::y<0>, ::z<0>, ::x<0>, ::y<0>

#line 1491
                                      mul r7.zw, r8, c71.xyxy
                                      add r2.w, r7.w, r7.z
                                      mad r2.w, r8.y, -c71.z, r2.w  // PerceptualQuantizer::x<0>

#line 318
                                      mul r2.w, r2.w, c71.w
                                      pow r6.w, r2.w, c126.x  // ::xx<0>
                                      mad r7.zw, r6.w, c69.xyxy, c69
                                      rcp r2.w, r7.w
                                      mul r2.w, r2.w, r7.z
                                      pow r6.w, r2.w, c126.y  // ::result<0>

#line 1492
                                      mul r9.yzw, r8.xxzw, c125.xxyz
                                      mad r2.w, r8.z, c126.z, r9.y
                                      mad r2.w, r8.y, c126.w, r2.w  // PerceptualQuantizer::x<0>

#line 318
                                      mul r2.w, r2.w, c71.w
                                      pow r7.z, r2.w, c126.x  // ::xx<0>
                                      mad r7.zw, r7.z, c69.xyxy, c69
                                      rcp r2.w, r7.w
                                      mul r2.w, r2.w, r7.z
                                      pow r7.z, r2.w, c126.y  // ::result<0>

#line 1492
                                      add r2.w, r9.w, r9.z
                                      mad r2.w, r8.y, c125.w, r2.w  // PerceptualQuantizer::x<0>

#line 318
                                      mul r2.w, r2.w, c71.w
                                      pow r7.w, r2.w, c126.x  // ::xx<0>
                                      mad r8.xy, r7.w, c69, c69.zwzw
                                      rcp r2.w, r8.y
                                      mul r2.w, r2.w, r8.x
                                      pow r7.w, r2.w, c126.y  // ::result<0>

#line 1494
                                      add r2.w, r6.w, r7.z

#line 1497
                                      mul r8.xy, r7.z, c122
                                      mad r7.z, r6.w, c122.z, -r8.x
                                      mad r11.y, r7.w, c122.w, r7.z  // ::az<0>
                                      mad r6.w, r6.w, c46.x, r8.y
                                      mad r11.z, r7.w, -c46.y, r6.w  // ::bz<0>
                                      mul r6.w, r2.w, c46.z
                                      mad r2.w, r2.w, -c124.x, c124.y
                                      rcp r2.w, r2.w
                                      mad r11.x, r6.w, r2.w, c46.w  // ::Jz<0>

#line 1515
                                      mul r8.xyz, r11, c94.y  // ::jzazbz<0,1,2>

#line 747
                                      add r7.zw, -r8_abs.xyyz, r8_abs.xyzy
                                      cmp r9.yz, r7.z, r8_abs, r8_abs.xzyw
                                      rcp r2.w, r9.z
                                      mul r2.w, r2.w, r9.y
                                      mul r6.w, r2.w, r2.w
                                      mad r7.z, r6.w, c49.x, c49.y
                                      mad r7.z, r6.w, r7.z, c49.z
                                      mad r7.z, r6.w, r7.z, c49.w
                                      mad r6.w, r6.w, r7.z, c50.x
                                      mul r2.w, r2.w, r6.w
                                      cmp r6.w, r7.w, c127.x, c127.y
                                      mad r7.z, r2.w, c50.y, c50.z
                                      mad r2.w, r7.z, r6.w, r2.w
                                      cmp r6.w, r11.y, c48.x, c48.y
                                      add r2.w, r2.w, r6.w
                                      mad r6.w, r11.z, c94.y, -r8.y
                                      cmp r7.zw, r6.w, r8.xyyz, r8.xyzy
                                      cmp r6.w, r7.w, c127.y, c127.x
                                      cmp r6.w, r7.z, c127.x, r6.w
                                      add r7.z, r2.w, r2.w
                                      mad r2.w, r6.w, -r7.z, r2.w  // ::t<0>

#line 752
                                      mul r2.w, r2.w, c50.w
                                      mad r6.w, r11.x, -c54.x, c54.w
                                      mul r6.w, r6_abs.w, r6_abs.w
                                      mad r2.w, r2.w, r2.w, -r6.w
                                      rsq r2.w, r2.w
                                      rcp r2.w, r2.w
                                      add r2.w, r2.w, c93.y
                                      mov r5.x, -r2.w  // ::h<0>
                                      dp2add r2.w, r8.yzzw, r8.yzzw, c127.x
                                      rsq r2.w, r2.w
                                      rcp r5.y, r2.w  // ::u<0>

#line 2482
                                      mov r5.z, r8.x

#line 2377
                                    else
                                      if_eq r9.x, c89.x

#line 1113
                                        cmp r5.x, -r4_abs.w, c127.x, r10.x  // ::h<0>

#line 1407
                                        add r2.w, -r5.w, c127.y  // ::black<0>
                                        mul r5.y, r3.w, c94.y  // ::Lrgb_HWB<1>
                                        mul r5.z, r2.w, c94.y  // ::Lrgb_HWB<2>

#line 2381
                                      else
                                        add r2.w, r9.x, c89.y

#line 2385
                                        mad r8.xyz, r4, c41.xyyw, c41.zwww
                                        cmp r5.xyz, -r2_abs.w, r8, r5  // ::FLrgb<0,1,2>
                                        if_eq r9.x, -c89.y

#line 2482
                                        else

#line 2386
                                          add r2.w, r9.x, c70.x

#line 2096
                                          dp3 r8.x, r4, c107  // ::y<0>
                                          add r7.zw, r4.xyzx, -r8.x

#line 2140
                                          mad r10.x, r8.x, c124.z, c124.w  // ::Lrgb_YCbCr<0>
                                          mad r10.yz, r7.xzww, c123.xxyw, c123.z  // ::Lrgb_YCbCr<1,2>

#line 2160
                                          mul r3.w, r10.y, c44.y
                                          mad r3.w, r10.x, c44.x, r3.w
                                          mad r11.x, r10.z, c98.w, r3.w  // ::Lrgb_JPEG<0>
                                          mad r3.w, r10.x, -c123.w, c123.z
                                          mad r3.w, r10.y, -c107.w, r3.w
                                          mad r11.y, r10.z, -c93.y, r3.w  // ::Lrgb_JPEG<1>
                                          mad r3.w, r10.x, c54.w, c54.y
                                          mad r3.w, r10.y, -c99.x, r3.w
                                          mad r11.z, r10.z, -c99.y, r3.w  // ::Lrgb_JPEG<2>

#line 2389
                                          cmp r5.xyz, -r2_abs.w, r11, r5  // ::FLrgb<0,1,2>
                                          if_eq r9.x, c70.y

#line 2482
                                          else

#line 2390
                                            if_eq r9.x, c70.w

#line 306
                                              mul r11, r4.y, c14.yzxy
                                              mad r11, r4.x, c13.yzxy, r11
                                              mad r11, r4.z, c15.yzxy, r11  // ::y<0>, ::z<0>, ::x<0>, ::y<0>

#line 1491
                                              mul r9.yz, r11.xzww, c71.xxyw
                                              add r2.w, r9.z, r9.y
                                              mad r2.w, r11.y, -c71.z, r2.w  // PerceptualQuantizer::x<0>

#line 318
                                              mul r2.w, r2.w, c71.w
                                              pow r3.w, r2.w, c126.x  // ::xx<0>
                                              mad r9.yz, r3.w, c69.xxyw, c69.xzww
                                              rcp r2.w, r9.z
                                              mul r2.w, r2.w, r9.y
                                              pow r3.w, r2.w, c126.y  // ::result<0>

#line 1492
                                              mul r9.yzw, r11.xxzw, c125.xxyz
                                              mad r2.w, r11.z, c126.z, r9.y
                                              mad r2.w, r11.y, c126.w, r2.w  // PerceptualQuantizer::x<0>

#line 318
                                              mul r2.w, r2.w, c71.w
                                              pow r4.w, r2.w, c126.x  // ::xx<0>
                                              mad r11.xz, r4.w, c69.xyyw, c69.zyww
                                              rcp r2.w, r11.z
                                              mul r2.w, r2.w, r11.x
                                              pow r4.w, r2.w, c126.y  // ::result<0>

#line 1492
                                              add r2.w, r9.w, r9.z
                                              mad r2.w, r11.y, c125.w, r2.w  // PerceptualQuantizer::x<0>

#line 318
                                              mul r2.w, r2.w, c71.w
                                              pow r5.w, r2.w, c126.x  // ::xx<0>
                                              mad r9.yz, r5.w, c69.xxyw, c69.xzww
                                              rcp r2.w, r9.z
                                              mul r2.w, r2.w, r9.y
                                              pow r5.w, r2.w, c126.y  // ::result<0>

#line 1494
                                              add r2.w, r3.w, r4.w

#line 1497
                                              mul r9.yz, r4.w, c122.xxyw
                                              mad r4.w, r3.w, c122.z, -r9.y
                                              mad r5.y, r5.w, c122.w, r4.w  // ::az<0>
                                              mad r3.w, r3.w, c46.x, r9.z
                                              mad r5.z, r5.w, -c46.y, r3.w  // ::bz<0>
                                              mul r3.w, r2.w, c46.z
                                              mad r2.w, r2.w, -c124.x, c124.y
                                              rcp r2.w, r2.w
                                              mad r5.x, r3.w, r2.w, c46.w  // ::Jz<0>

#line 2393
                                            else
                                              if_eq r9.x, c31.y

#line 306
                                                mul r11, r4.y, c14.yzxy
                                                mad r11, r4.x, c13.yzxy, r11
                                                mad r11, r4.z, c15.yzxy, r11  // ::y<0>, ::z<0>, ::x<0>, ::y<0>

#line 1491
                                                mul r9.yz, r11.xzww, c71.xxyw
                                                add r2.w, r9.z, r9.y
                                                mad r2.w, r11.y, -c71.z, r2.w  // PerceptualQuantizer::x<0>

#line 318
                                                mul r2.w, r2.w, c71.w
                                                pow r3.w, r2.w, c126.x  // ::xx<0>
                                                mad r9.yz, r3.w, c69.xxyw, c69.xzww
                                                rcp r2.w, r9.z
                                                mul r2.w, r2.w, r9.y
                                                pow r3.w, r2.w, c126.y  // ::result<0>

#line 1492
                                                mul r9.yzw, r11.xxzw, c125.xxyz
                                                mad r2.w, r11.z, c126.z, r9.y
                                                mad r2.w, r11.y, c126.w, r2.w  // PerceptualQuantizer::x<0>

#line 318
                                                mul r2.w, r2.w, c71.w
                                                pow r4.w, r2.w, c126.x  // ::xx<0>
                                                mad r11.xz, r4.w, c69.xyyw, c69.zyww
                                                rcp r2.w, r11.z
                                                mul r2.w, r2.w, r11.x
                                                pow r4.w, r2.w, c126.y  // ::result<0>

#line 1492
                                                add r2.w, r9.w, r9.z
                                                mad r2.w, r11.y, c125.w, r2.w  // PerceptualQuantizer::x<0>

#line 318
                                                mul r2.w, r2.w, c71.w
                                                pow r5.w, r2.w, c126.x  // ::xx<0>
                                                mad r9.yz, r5.w, c69.xxyw, c69.xzww
                                                rcp r2.w, r9.z
                                                mul r2.w, r2.w, r9.y
                                                pow r5.w, r2.w, c126.y  // ::result<0>

#line 1494
                                                add r2.w, r3.w, r4.w

#line 1497
                                                mul r9.yz, r4.w, c122.xxyw
                                                mad r4.w, r3.w, c122.z, -r9.y
                                                mad r4.w, r5.w, c122.w, r4.w  // ::az<0>
                                                mad r3.w, r3.w, c46.x, r9.z
                                                mad r3.w, r5.w, -c46.y, r3.w  // ::bz<0>
                                                mul r5.w, r2.w, c46.z
                                                mad r2.w, r2.w, -c124.x, c124.y
                                                rcp r2.w, r2.w
                                                mad r5.x, r5.w, r2.w, c46.w  // ::Jz<0>

#line 726
                                                mul r2.w, r3.w, r3.w
                                                mad r2.w, r4.w, r4.w, r2.w
                                                rsq r2.w, r2.w
                                                rcp r5.y, r2.w  // ::c<0>
                                                min r2.w, r4_abs.w, r3_abs.w
                                                max r5.w, r3_abs.w, r4_abs.w
                                                rcp r5.w, r5.w
                                                mul r2.w, r2.w, r5.w
                                                mul r5.w, r2.w, r2.w
                                                mad r6.w, r5.w, c49.x, c49.y
                                                mad r6.w, r5.w, r6.w, c49.z
                                                mad r6.w, r5.w, r6.w, c49.w
                                                mad r5.w, r5.w, r6.w, c50.x
                                                mul r2.w, r2.w, r5.w
                                                add r5.w, -r3_abs.w, r4_abs.w
                                                cmp r5.w, r5.w, c127.x, c127.y
                                                mad r6.w, r2.w, c50.y, c50.z
                                                mad r2.w, r6.w, r5.w, r2.w
                                                cmp r5.w, r4.w, c48.x, c48.y
                                                add r2.w, r2.w, r5.w
                                                min r5.w, r4.w, r3.w
                                                max r6.w, r3.w, r4.w
                                                cmp r3.w, r6.w, c127.y, c127.x
                                                cmp r3.w, r5.w, c127.x, r3.w
                                                add r4.w, r2.w, r2.w
                                                mad r2.w, r3.w, -r4.w, r2.w  // ::h<0>

#line 238
                                                mul r3.w, r2.w, c40.z  // ::GetDegree<0>

#line 312
                                                cmp r9.yz, r2.w, c61.xxyw, c61.xzww
                                                mul r2.w, r3.w, r9.z
                                                frc r2.w, r2.w
                                                mul r3.w, r2.w, r9.y  // ::result<0>
                                                mad r2.w, r9.y, r2.w, c94.x
                                                cmp r5.z, r3.w, r3.w, r2.w  // ::NormalizeDegree<0>

#line 2397
                                              else
                                                add r2.w, r9.x, c31.z

#line 260
                                                rcp r3.w, c9.x
                                                mul r4.w, r3.w, c8.x  // ::GetWhite<0>
                                                add r5.w, r1.y, -c8.x
                                                add r5.w, r5.w, -c9.x
                                                mul r6.w, r3.w, r5.w  // ::GetWhite<2>

#line 1557
                                                rcp r8.w, r4.w
                                                mul r9.y, r4.x, r8.w  // ::xr<0>
                                                rcp r9.z, r6.w
                                                mul r9.w, r4.z, r9.z  // ::zr<0>
                                                mad r10.w, r4.x, -r8.w, c91.w
                                                mad r9.y, r9.y, c53.z, c53.w
                                                mul r9.y, r9.y, c44.w
                                                cmp r9.y, r10.w, r9.y, c127.y  // ::fx<0>
                                                add r10.w, -r4.y, c91.w
                                                mul r11.x, r4.y, c53.z
                                                mad r11.y, r4.y, c53.z, c53.w
                                                mul r11.y, r11.y, c44.w
                                                cmp r11.y, r10.w, r11.y, c127.y  // ::fy<0>
                                                mad r11.z, r4.z, -r9.z, c91.w
                                                mad r9.w, r9.w, c53.z, c53.w
                                                mul r9.w, r9.w, c44.w
                                                mad r12.x, r11.y, c87.x, c87.y  // ::l<0>
                                                add r9.y, r9.y, -r11.y
                                                cmp r9.w, r11.z, -r9.w, -c127.y
                                                add r9.w, r9.w, r11.y
                                                mul r12.yz, r9.xyww, c87.xzww  // ::a<0>, ::b<0>

#line 2402
                                                if_eq r9.x, c31.w
                                                  cmp r5.xyz, -r2_abs.w, r12, r5  // ::FLrgb<0,1,2>

#line 2482
                                                else

#line 2402
                                                  if_eq r9.x, c47.w

#line 306
                                                    mul r11.yzw, r4.y, c14.xxyz
                                                    mad r11.yzw, r4.x, c13.xxyz, r11
                                                    mad r11.yzw, r4.z, c15.xxyz, r11  // ::x<0>, ::y<0>, ::z<0>

#line 276
                                                    mov r13.x, c8.x  // ::WhiteX<0>
                                                    mad r13.xy, r3.w, r13.x, c48.zwzw

#line 286
                                                    mad r13.zw, r3.w, r5.w, c45.xyxy

#line 276
                                                    cmp r2.w, -r13_abs.z, -c127.y, -c127.x
                                                    cmp r2.w, -r13_abs.x, r2.w, c127.x
                                                    mul r12.w, r13.y, c45.z  // ::Ka<0>
                                                    cmp r12.w, r2.w, r12.w, c45.w  // ::ComputeKa<0>

#line 286
                                                    mul r13.x, r13.w, c95.x  // ::Ka<0>
                                                    cmp r2.w, r2.w, r13.x, c95.y  // ::ComputeKb<0>

#line 1628
                                                    rsq r13.x, r11.z
                                                    rcp r13.y, r13.x
                                                    mul r5.x, r13.y, c94.y  // ::L<0>
                                                    mad r11.y, r11.y, r8.w, -r11.z
                                                    mul r11.y, r13.x, r11.y
                                                    mul r5.y, r11.y, r12.w  // ::a<0>
                                                    mad r11.y, r11.w, -r9.z, r11.z
                                                    mul r11.y, r13.x, r11.y
                                                    mul r5.z, r2.w, r11.y  // ::b<0>

#line 2405
                                                  else

#line 2098
                                                    mul r8.yz, r7.xzww, c99.xzww  // ::pb<0>, ::pr<0>

#line 2418
                                                    add r13, r9.x, c131

#line 726
                                                    dp2add r2.w, r12.yzzw, r12.yzzw, c127.x
                                                    rsq r2.w, r2.w
                                                    rcp r14.y, r2.w  // ::c<0>
                                                    add r7.zw, -r12_abs.xyyz, r12_abs.xyzy
                                                    cmp r11.yz, r7.z, r12_abs, r12_abs.xzyw
                                                    rcp r2.w, r11.z
                                                    mul r2.w, r2.w, r11.y
                                                    mul r7.z, r2.w, r2.w
                                                    mad r11.y, r7.z, c49.x, c49.y
                                                    mad r11.y, r7.z, r11.y, c49.z
                                                    mad r11.y, r7.z, r11.y, c49.w
                                                    mad r7.z, r7.z, r11.y, c50.x
                                                    mul r2.w, r2.w, r7.z
                                                    cmp r7.z, r7.w, c127.x, c127.y
                                                    mad r7.w, r2.w, c50.y, c50.z
                                                    mad r2.w, r7.w, r7.z, r2.w
                                                    cmp r7.z, r9.y, c48.x, c48.y
                                                    add r2.w, r2.w, r7.z
                                                    mad r7.z, r9.w, c87.w, -r12.y
                                                    cmp r7.zw, r7.z, r12.xyyz, r12.xyzy
                                                    cmp r7.w, r7.w, c127.y, c127.x
                                                    cmp r7.z, r7.z, c127.x, r7.w
                                                    add r7.w, r2.w, r2.w
                                                    mad r2.w, r7.z, -r7.w, r2.w  // ::h<0>

#line 238
                                                    mul r7.z, r2.w, c40.z  // ::GetDegree<0>

#line 312
                                                    cmp r9.yw, r2.w, c61.xxzy, c61.xzzw
                                                    mul r2.w, r7.z, r9.w
                                                    frc r2.w, r2.w
                                                    mul r7.z, r2.w, r9.y  // ::result<0>
                                                    mad r2.w, r9.y, r2.w, c94.x
                                                    cmp r14.z, r7.z, r7.z, r2.w  // ::NormalizeDegree<0>

#line 306
                                                    mul r11.yzw, r4.y, c14.xxyz
                                                    mad r11.yzw, r4.x, c13.xxyz, r11
                                                    mad r11.yzw, r4.z, c15.xxyz, r11  // ::x<0>, ::y<0>, ::z<0>

#line 292
                                                    mov r15.x, c8.x  // ::WhiteX<0>
                                                    mad r12.yzw, r3.w, r15.x, c52.xxyz

#line 286
                                                    mad r7.zw, r3.w, r5.w, c45.xyxy

#line 276
                                                    cmp r2.w, -r7_abs.z, -c127.y, -c127.x
                                                    cmp r2.w, -r12_abs.y, r2.w, c127.x
                                                    mul r3.w, r12.z, c45.z  // ::Ka<0>
                                                    cmp r3.w, r2.w, r3.w, c45.w  // ::ComputeKa<0>

#line 286
                                                    mul r5.w, r7.w, c95.x  // ::Ka<0>
                                                    cmp r2.w, r2.w, r5.w, c95.y  // ::ComputeKb<0>

#line 1628
                                                    rsq r5.w, r11.z
                                                    rcp r7.z, r5.w
                                                    mul r15.x, r7.z, c94.y  // ::L<0>
                                                    mad r7.z, r11.y, r8.w, -r11.z
                                                    mul r7.z, r5.w, r7.z
                                                    mul r3.w, r3.w, r7.z  // ::a<0>
                                                    mad r7.z, r11.w, -r9.z, r11.z
                                                    mul r5.w, r5.w, r7.z
                                                    mul r2.w, r2.w, r5.w  // ::b<0>

#line 726
                                                    mul r5.w, r2.w, r2.w
                                                    mad r5.w, r3.w, r3.w, r5.w
                                                    rsq r5.w, r5.w
                                                    rcp r15.y, r5.w  // ::c<0>
                                                    min r5.w, r3_abs.w, r2_abs.w
                                                    max r7.z, r2_abs.w, r3_abs.w
                                                    rcp r7.z, r7.z
                                                    mul r5.w, r5.w, r7.z
                                                    mul r7.z, r5.w, r5.w
                                                    mad r7.w, r7.z, c49.x, c49.y
                                                    mad r7.w, r7.z, r7.w, c49.z
                                                    mad r7.w, r7.z, r7.w, c49.w
                                                    mad r7.z, r7.z, r7.w, c50.x
                                                    mul r5.w, r5.w, r7.z
                                                    add r7.z, -r2_abs.w, r3_abs.w
                                                    cmp r7.z, r7.z, c127.x, c127.y
                                                    mad r7.w, r5.w, c50.y, c50.z
                                                    mad r5.w, r7.w, r7.z, r5.w
                                                    cmp r7.z, r3.w, c48.x, c48.y
                                                    add r5.w, r5.w, r7.z
                                                    min r7.z, r3.w, r2.w
                                                    max r7.w, r2.w, r3.w
                                                    cmp r2.w, r7.w, c127.y, c127.x
                                                    cmp r2.w, r7.z, c127.x, r2.w
                                                    add r3.w, r5.w, r5.w
                                                    mad r2.w, r2.w, -r3.w, r5.w  // ::h<0>

#line 238
                                                    mul r3.w, r2.w, c40.z  // ::GetDegree<0>

#line 312
                                                    cmp r7.zw, r2.w, c61.xyxy, c61
                                                    mul r2.w, r3.w, r7.w
                                                    frc r2.w, r2.w
                                                    mul r3.w, r2.w, r7.z  // ::result<0>
                                                    mad r2.w, r7.z, r2.w, c94.x
                                                    cmp r15.z, r3.w, r3.w, r2.w  // ::NormalizeDegree<0>

#line 1990
                                                    mul r2.w, r4.x, c128.x

#line 2009
                                                    mul r9.yzw, r4.y, c119.xxyz

#line 292
                                                    mad r3.w, r4.y, c130.w, r4.x

#line 1990
                                                    mul r5.w, r4.z, -c93.y

#line 292
                                                    mad r3.w, r4.z, c127.w, r3.w
                                                    rcp r3.w, r3.w

#line 297
                                                    mul r7.z, r4.y, r3.w

#line 292
                                                    mul r4.w, r4.w, c128.x
                                                    mad r6.w, r6.w, c127.w, r12.w
                                                    rcp r6.w, r6.w
                                                    mul r7.w, r4.w, r6.w  // ::ComputeKu<0>

#line 1943
                                                    mul r8.w, r6.w, c129.y  // ::ComputeKv<0>

#line 1709
                                                    cmp r10.w, r10.w, r11.x, c94.y  // ::L<0>

#line 1712
                                                    max r16.x, r10.w, c127.x  // ::L<0>

#line 1715
                                                    mul r10.w, r16.x, c130.y
                                                    mad r2.w, r2.w, r3.w, -r7.w
                                                    mul r16.y, r2.w, r10.w  // ::u<0>

#line 1718
                                                    mad r2.w, r7.z, c129.y, -r8.w
                                                    mul r16.z, r2.w, r10.w  // ::v<0>

#line 726
                                                    dp2add r3.w, r16.yzzw, r16.yzzw, c127.x
                                                    rsq r3.w, r3.w
                                                    rcp r17.y, r3.w  // ::c<0>
                                                    add r7.zw, -r16_abs.xyyz, r16_abs.xyzy
                                                    cmp r12.yz, r7.z, r16_abs, r16_abs.xzyw
                                                    rcp r3.w, r12.z
                                                    mul r3.w, r3.w, r12.y
                                                    mul r7.z, r3.w, r3.w
                                                    mad r8.w, r7.z, c49.x, c49.y
                                                    mad r8.w, r7.z, r8.w, c49.z
                                                    mad r8.w, r7.z, r8.w, c49.w
                                                    mad r7.z, r7.z, r8.w, c50.x
                                                    mul r3.w, r3.w, r7.z
                                                    cmp r7.z, r7.w, c127.x, c127.y
                                                    mad r7.w, r3.w, c50.y, c50.z
                                                    mad r3.w, r7.w, r7.z, r3.w
                                                    cmp r7.z, r16.y, c48.x, c48.y
                                                    add r3.w, r3.w, r7.z
                                                    mad r2.w, r10.w, r2.w, -r16.y
                                                    cmp r7.zw, r2.w, r16.xyyz, r16.xyzy
                                                    cmp r2.w, r7.w, c127.y, c127.x
                                                    cmp r2.w, r7.z, c127.x, r2.w
                                                    add r7.z, r3.w, r3.w
                                                    mad r2.w, r2.w, -r7.z, r3.w  // ::h<0>

#line 238
                                                    mul r3.w, r2.w, c40.z  // ::GetDegree<0>

#line 312
                                                    cmp r7.zw, r2.w, c61.xyxy, c61
                                                    mul r2.w, r3.w, r7.w
                                                    frc r2.w, r2.w
                                                    mul r3.w, r2.w, r7.z  // ::result<0>
                                                    mad r2.w, r7.z, r2.w, c94.x
                                                    cmp r17.z, r3.w, r3.w, r2.w  // ::NormalizeDegree<0>

#line 306
                                                    mul r12.yzw, r11.z, c17.xxyz
                                                    mad r12.yzw, r11.y, c16.xxyz, r12
                                                    mad r12.yzw, r11.w, c18.xxyz, r12  // ::x<0>, ::y<0>, ::z<0>

#line 2434
                                                    add r18, r9.x, c132

#line 1444
                                                    cmp r7.xy, -r6_abs.y, c127.x, r7  // ::x<0>, ::y<0>

#line 1447
                                                    rcp r2.w, r7.y
                                                    mul r2.w, r2.w, r7.x
                                                    mov_sat r3.w, r2_abs.w
                                                    add r6.y, r2_abs.w, -c127.y
                                                    rcp r7.z, r2_abs.w
                                                    cmp r6.y, r6.y, r7.z, c127.y
                                                    mul r3.w, r3.w, r6.y
                                                    mul r6.y, r3.w, r3.w
                                                    mad r7.z, r6.y, c49.x, c49.y
                                                    mad r7.z, r6.y, r7.z, c49.z
                                                    mad r7.z, r6.y, r7.z, c49.w
                                                    mad r6.y, r6.y, r7.z, c50.x
                                                    mul r3.w, r3.w, r6.y
                                                    add r6.y, -r2_abs.w, c127.y
                                                    cmp r6.y, r6.y, c127.x, c127.y
                                                    mad r7.z, r3.w, c50.y, c50.z
                                                    mad r3.w, r7.z, r6.y, r3.w
                                                    min r6.y, r2.w, c127.y
                                                    cmp r2.w, r6.y, c127.x, c127.y
                                                    add r6.y, r3.w, r3.w
                                                    mad r2.w, r2.w, -r6.y, r3.w
                                                    mad r7.zw, r2.w, c51.x, c51.xyyz
                                                    cmp r2.w, r7.y, c127.x, r7.w
                                                    cmp r19.x, -r7.y, r2.w, r7.z  // ::tsl<0>
                                                    mul r7.xy, r7, r7
                                                    add r2.w, r7.y, r7.x
                                                    rsq r2.w, r2.w
                                                    rcp r19.y, r2.w  // ::tsl<1>

#line 1990
                                                    mad r7.xyz, r4.x, c120, r9.yzzw

#line 1945
                                                    mul r9.yz, r11, c121.xxyw  // ::x<0>

#line 1904
                                                    mad r2.w, r11.z, c127.w, -r11.y
                                                    add r2.w, r11.w, r2.w
                                                    mul r20.z, r2.w, -c93.y  // ::Lrgb_UCS<2>

#line 2450
                                                    add r21, r9.x, c133

#line 1945
                                                    add r2.w, r9.z, r9.y
                                                    mul r3.w, r11.y, c52.w
                                                    mad r2.w, r11.w, c119.w, r2.w  // ::uv<0>
                                                    rcp r6.y, r2.w
                                                    mul r3.w, r3.w, r6.y
                                                    cmp r3.w, -r2_abs.w, c127.x, r3.w  // ::_u<0>
                                                    mul r6.y, r11.z, r6.y
                                                    mul r6.y, r6.y, c51.w
                                                    cmp r2.w, -r2_abs.w, c127.x, r6.y  // ::_v<0>

#line 1950
                                                    mad r3.w, r4.w, -r6.w, r3.w
                                                    mul r22.x, r3.w, c120.w  // ::u<0>
                                                    mad r2.w, r6.w, -c128.z, r2.w
                                                    mul r22.y, r2.w, c120.w  // ::v<0>

#line 1971
                                                    add r2.w, r11.z, r11.y
                                                    add r2.w, r11.w, r2.w  // ::sum<0>

#line 1976
                                                    rcp r3.w, r2.w
                                                    mul r6.yw, r3.w, r11.xyzz  // ::Lrgb_xyY<0,1>
                                                    cmp r23.xy, -r2_abs.w, c127.x, r6.ywzw  // ::Lrgb_xyY<0,1>

#line 2466
                                                    add r24, r9.x, c134

#line 1990
                                                    mad r25.xy, r4.z, c121.zwzw, r7  // ::tsl<2>, ::Lrgb_YCoCg<0>
                                                    mad r7.y, r4.z, -c51.y, r7.z  // ::Lrgb_YCoCg<1>
                                                    mad r7.z, r4.x, -c93.y, -r5.w  // ::Lrgb_YCoCg<2>

#line 2009
                                                    mad r2.w, r4.x, c56.x, -r9.w
                                                    mad r26.y, r4.z, -c92.y, r2.w  // ::Lrgb_YDbDr<1>

#line 2044
                                                    mul r27, r4.y, c104
                                                    mad r28.xyw, r4.x, c56.yzzw, r27.xyzz  // ::Lrgb_YES<1>
                                                    mad r28.xy, r4.z, c57, r28  // ::Lrgb_YDbDr<2>, ::Lrgb_YES<0>
                                                    mad r2.w, r4.x, c51.y, r27.w
                                                    mad r28.z, r4.z, c93.y, r2.w  // ::Lrgb_YES<2>

#line 2478
                                                    add r9.xyz, r9.x, c84

#line 2067
                                                    cmp r6.xy, -r6_abs.zxzw, c127.x, c127.y
                                                    add r2.w, r6.y, r6.x

#line 2202
                                                    mul r6, r4.y, c59
                                                    mad r6, r4.x, c58, r6
                                                    mad r6, r4.z, c60, r6  // ::i<0>, ::q<0>, ::u<0>, ::v<0>

#line 2071
                                                    cmp r27.yz, -r2.w, c127.x, r6.xxyw  // ::i<0>, ::q<0>

#line 2482
                                                    mov r25.zw, r6
                                                    cmp r6.xyz, -r9_abs.z, r25.xzww, r4  // ::FLrgb<0,1,2>
                                                    cmp r6.xyz, -r9_abs.y, r8, r6  // ::FLrgb<0,1,2>
                                                    mov r27.x, r25.x
                                                    cmp r6.xyz, -r9_abs.x, r27, r6  // ::FLrgb<0,1,2>
                                                    cmp r6.xyz, -r24_abs.w, r28.ywzw, r6  // ::FLrgb<0,1,2>
                                                    mov r26.x, r27.x
                                                    mov r26.z, r28.x
                                                    cmp r6.xyz, -r24_abs.z, r26, r6  // ::FLrgb<0,1,2>
                                                    mov r7.x, r25.y
                                                    cmp r6.xyz, -r24_abs.y, r7, r6  // ::FLrgb<0,1,2>
                                                    cmp r6.xyz, -r24_abs.x, r10, r6  // ::FLrgb<0,1,2>
                                                    cmp r6.xyz, -r21_abs.w, r11.yzww, r6  // ::FLrgb<0,1,2>
                                                    mov r23.z, r11.z
                                                    cmp r6.xyz, -r21_abs.z, r23, r6  // ::FLrgb<0,1,2>
                                                    cmp r6.xyz, -r21_abs.y, r10, r6  // ::FLrgb<0,1,2>
                                                    mov r22.z, c129.x
                                                    cmp r6.xyz, -r21_abs.x, r22, r6  // ::FLrgb<0,1,2>
                                                    mul r20.xy, r11.yzzw, c57.zwzw
                                                    cmp r6.xyz, -r18_abs.w, r20, r6  // ::FLrgb<0,1,2>
                                                    mov r19.z, r26.x
                                                    cmp r6.xyz, -r18_abs.z, r19, r6  // ::FLrgb<0,1,2>
                                                    cmp r4.xyz, -r18_abs.y, r4, r6  // ::FLrgb<0,1,2>
                                                    cmp r4.xyz, -r18_abs.x, r16, r4  // ::FLrgb<0,1,2>
                                                    cmp r4.xyz, -r13_abs.w, r12.yzww, r4  // ::FLrgb<0,1,2>
                                                    mov r17.x, r16.x
                                                    cmp r4.xyz, -r13_abs.z, r17, r4  // ::FLrgb<0,1,2>
                                                    cmp r4.xyz, -r13_abs.y, r15, r4  // ::FLrgb<0,1,2>
                                                    mov r14.x, r12.x
                                                    cmp r5.xyz, -r13_abs.x, r14, r4  // ::FLrgb<0,1,2>
                                                  endif
                                                endif
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif

#line 129
      add r2.w, -r0.y, r0.x
      cmp r4.xy, r2.w, r0, r0.yxzw
      max r2.w, r4.x, r0.z  // ::maximum<0>
      min r3.w, r0.z, r4.y  // ::minimum<0>
      add r2.w, r2.w, r3.w

#line 2711
      mov r4.y, c93.y
      mad r3.w, r2.w, r4.y, c27.x
      mov r4.x, c3.x  // ::X<0>
      mul r4.z, r4.x, c26.x
      mul r6.x, r4.z, c84.w  // ::tx<0>
      mov r7.x, c4.x  // ::Y<0>
      mul r4.z, r7.x, c26.x
      mul r6.y, r4.z, c84.w  // ::ty<0>
      mov r8.x, c5.x  // ::Z<0>
      mul r4.z, r8.x, c26.x
      mul r6.z, r4.z, c84.w  // ::tz<0>

#line 2718
      mad r2.w, r2.w, r4.y, c25.x
      mul r4.y, r4.x, c24.x
      mul r9.x, r4.y, c84.w  // ::tx<0>
      mul r4.y, r7.x, c24.x
      mul r9.y, r4.y, c84.w  // ::ty<0>
      mul r4.y, r8.x, c24.x
      mul r9.z, r4.y, c84.w  // ::tz<0>

#line 2727
      mul r4.x, r4.x, c22.x
      mul r4.w, r7.x, c22.x
      mul r4.xy, r4.xwzw, c84.w  // ::tx<0>, ::ty<0>
      mul r4.w, r8.x, c22.x
      mul r4.z, r4.w, c84.w  // ::tz<0>
      cmp r4.xyz, r2.w, r9, r4  // ::tx<0>, ::ty<0>, ::tz<0>
      cmp r4.xyz, r3.w, r6, r4  // ::tx<0>, ::ty<0>, ::tz<0>

#line 121
      add r6.xyz, r2, r3
      add r7.xyz, r3, r5
      add r6.xyz, r6, -r7
      mad r4.xyz, r6, r4, r5  // ::FLerp<0,1,2>

#line 2493
      if_eq c0.x, r1.x

#line 2657
        mov r5.xyz, r4  // ::TLrgb<0,1,2>
      else

#line 2493
        add r2.w, -r1.y, c0.x

#line 763
        add r6.xyz, -r4, c127.y  // ::CMY_Lrgb<0,1,2>

#line 2496
        cmp r5.xyz, -r2_abs.w, r6, r4  // ::TLrgb<0,1,2>
        if_eq c0.x, r1.y

#line 2657
        else

#line 2497
          if_eq c0.x, r1.z

#line 775
            mul r6.yz, r4, c84.w  // ::c<0>, ::g<0>

#line 783
            if_eq r6.y, c127.x

#line 832
              mov r5.xyz, r6.z  // ::HCV_Lrgb<0,1,2>
            else

#line 775
              mul r2.w, r4.x, c61.y  // ::h<0>

#line 783
              cmp r3.w, r4.x, c38.x, c38.y
              mul r2.w, r2.w, r3.w
              frc r2.w, r2.w
              mul r2.w, r2.w, r3.w
              mul r3.w, r2.w, c128.z  // ::hi<0>
              cmp r2.w, r2.w, c38.x, c38.y
              mul r4.w, r2.w, r3.w
              frc r4.w, r4.w
              mul r7.x, r2.w, r4.w  // ::v<0>

#line 788
              frc r5.w, r3.w
              add r3.w, r3.w, -r5.w  // ::fhi<0>

#line 814
              add r8, r3.w, c135

#line 825
              mov r7.yz, c127.xxyw
              mad r7.w, r2.w, -r4.w, c127.y
              cmp r9.xyz, -r8_abs.w, r7, r7.zyww  // ::pure<0,1,2>
              mad r10.xyz, r7.xzyw, c41.wxxw, c41.xzzw
              cmp r9.xyz, -r8_abs.z, r10.zxyw, r9  // ::pure<0,1,2>
              cmp r8.yzw, -r8_abs.y, r7.xyzx, r9.xxyz  // ::pure<0,1,2>
              cmp r8.xyz, -r8_abs.x, r10, r8.yzww  // ::pure<0,1,2>
              cmp r7.xyz, -r3_abs.w, r7.zxyw, r8  // ::pure<0,1,2>

#line 831
              lrp r5.xyz, r6.y, r7, r6.z  // ::result<0,1,2>
            endif

#line 2500
          else
            if_eq c0.x, r1.w

#line 867
              cmp r6.yz, r4.x, c61.xxyw, c61.xzww
              mul r2.w, r4.x, r6.z
              frc r2.w, r2.w
              mad r3.w, r6.y, r2.w, c94.x
              mul r2.w, r2.w, c94.x
              cmp r2.w, r4.x, r2.w, r3.w
              min r6.yz, r4, c94.xyww
              mul r7.xy, r6.yzzw, c85
              cmp r6.yz, r6, r7.xxyw, c127.x  // ::s<0>, ::i<0>

#line 874
              if_lt r2.w, c85.z
                add r3.w, -r6.y, c127.y
                mul r5.z, r3.w, r6.z  // ::b<0>
                mad r3.w, r2.w, c136.x, c136.y
                frc r3.w, r3.w
                mad r3.w, r3.w, c136.z, c136.w
                sincos r7.x, r3.w
                mul r3.w, r6.y, r7.x
                mad r4.w, r2.w, -c86.x, c86.y
                mad r4.w, r4.w, c86.z, c86.w
                frc r4.w, r4.w
                mad r4.w, r4.w, c136.z, c136.w
                sincos r8.x, r4.w
                rcp r4.w, r8.x
                mad r3.w, r3.w, r4.w, c127.y
                mul r5.x, r3.w, r6.z  // ::r<0>
                mad r3.w, r7.x, -r4.w, c127.y
                mad r3.w, r6.y, r3.w, c127.y
                mul r5.y, r3.w, r6.z  // ::g<0>
              else
                if_lt r2.w, c36.y
                  mad r3.w, r2.w, c62.x, c62.y  // ::h<0>
                  add r4.w, -r6.y, c127.y
                  mul r5.x, r4.w, r6.z  // ::r<0>
                  mad r4.w, r3.w, c86.z, c86.w
                  frc r4.w, r4.w
                  mad r4.w, r4.w, c136.z, c136.w
                  sincos r7.x, r4.w
                  mul r4.w, r6.y, r7.x
                  add r3.w, -r3.w, c85.w
                  mad r3.w, r3.w, c86.z, c86.w
                  frc r3.w, r3.w
                  mad r3.w, r3.w, c136.z, c136.w
                  sincos r8.x, r3.w
                  rcp r3.w, r8.x
                  mad r4.w, r4.w, r3.w, c127.y
                  mul r5.y, r4.w, r6.z  // ::g<0>

#line 885
                  mad r3.w, r7.x, -r3.w, c127.y
                  mad r3.w, r6.y, r3.w, c127.y
                  mul r5.z, r3.w, r6.z  // ::b<0>
                else

#line 889
                  mad r2.w, r2.w, c62.x, c62.z  // ::h<0>
                  add r3.w, -r6.y, c127.y
                  mul r5.y, r3.w, r6.z  // ::g<0>
                  mad r3.w, r2.w, c86.z, c86.w
                  frc r3.w, r3.w
                  mad r3.w, r3.w, c136.z, c136.w
                  sincos r7.x, r3.w
                  mul r3.w, r6.y, r7.x
                  add r2.w, -r2.w, c85.w
                  mad r2.w, r2.w, c86.z, c86.w
                  frc r2.w, r2.w
                  mad r2.w, r2.w, c136.z, c136.w
                  sincos r8.x, r2.w
                  rcp r2.w, r8.x
                  mad r3.w, r3.w, r2.w, c127.y
                  mul r5.z, r3.w, r6.z  // ::b<0>
                  mad r2.w, r7.x, -r2.w, c127.y
                  mad r2.w, r6.y, r2.w, c127.y
                  mul r5.x, r2.w, r6.z  // ::r<0>
                endif
              endif

#line 2504
            else
              mov r7.x, c0.x  // ::Model<0>
              if_eq r7.x, c128.x

#line 1025
                mul r5.z, r4.z, c84.w  // ::l<0>

#line 1030
                if_lt -r4.y, c127.x
                  mul r6.yz, r4.xyxw, c64.xxyw  // ::s<0>, ::h<0>
                  mad r2.w, r4.z, c64.z, c64.w
                  add r2.w, -r2_abs.w, c127.y
                  mul r8.x, r6.y, r2.w  // ::chroma<0>
                  cmp r6.yw, r4.x, c137.xxzy, c137.xzzw
                  mul r2.w, r6.w, r6.z
                  frc r2.w, r2.w
                  mad r2.w, r6.y, r2.w, -c127.y
                  add r2.w, -r2_abs.w, c127.y
                  mul r8.y, r2.w, r8.x  // ::v<0>

#line 1053
                  add r9, -r4.x, c96

#line 1059
                  add r10, r4.x, -c96.wzyx

#line 1065
                  add r2.w, r4.x, c62.w
                  add r6.yz, -r4.x, c97.xxyw

#line 1070
                  cmp r6.yz, r6, -c127.y, -c127.x
                  cmp r2.w, r2.w, r6.y, c127.x
                  mov r8.z, c127.x
                  cmp r7.yzw, r2.w, c127.x, r8.xxzy  // ::result<0,1,2>
                  cmp r2.w, r10.w, r6.z, c127.x
                  cmp r6.yzw, r2.w, r7, r8.xyzx  // ::result<0,1,2>
                  cmp r9, r9, -c127.y, -c127.x
                  cmp r7.yzw, r10.xzyx, r9.xxyz, c127.x
                  cmp r6.yzw, r7.y, r6, r8.xzyx  // ::result<0,1,2>
                  cmp r6.yzw, r7.z, r6, r8.xzxy  // ::result<0,1,2>
                  cmp r6.yzw, r7.w, r6, r8.xyxz  // ::result<0,1,2>
                  cmp r2.w, r4.x, r9.w, c127.x
                  cmp r6.yzw, r2.w, r6, r8.xxyz  // ::result<0,1,2>
                  mad r2.w, r8.x, c93.y, r5.z  // ::w<0>

#line 1075
                  add r5.xyz, r2.w, r6.yzww  // ::result<0,1,2>
                else

#line 1080
                  mov r5.xy, r5.z  // ::result<0,1>
                endif

#line 2508
              else
                if_eq r7.x, c128.y

#line 932
                  mul r6.yzw, r4.xyzx, c64.xxxy  // ::_s<0>, ::_b<0>, ::SectorPosition<0>
                  frc r2.w, r6.w
                  add r2.w, -r2.w, r6.w  // ::SectorNumber<0>

#line 936
                  mad r3.w, r4.x, c64.y, -r2.w  // ::FractionalSector<0>

#line 939
                  mad r4.w, r4.y, -c64_abs.x, c64_abs.w
                  mul r8.y, r4.w, r6.z  // ::p<0>
                  mad r4.w, r6.y, -r3.w, c127.y
                  mul r8.z, r4.w, r6.z  // ::q<0>
                  add r3.w, -r3.w, c127.y
                  mad r3.w, r6.y, -r3.w, c127.y
                  mul r8.x, r3.w, r6.z  // ::t<0>

#line 968
                  add r9, r2.w, c135

#line 974
                  add r3.w, r2.w, -c128.y

#line 979
                  mov r8.w, r6.z
                  cmp r7.yzw, -r3_abs.w, r8.xwyz, c127.x  // ::r<0>, ::g<0>, ::b<0>
                  cmp r7.yzw, -r9_abs.w, r8.xxyw, r7  // ::r<0>, ::g<0>, ::b<0>
                  cmp r7.yzw, -r9_abs.z, r8, r7  // ::r<0>, ::g<0>, ::b<0>
                  cmp r7.yzw, -r9_abs.y, r8.xywx, r7  // ::r<0>, ::g<0>, ::b<0>
                  cmp r7.yzw, -r9_abs.x, r8.xzwy, r7  // ::r<0>, ::g<0>, ::b<0>
                  cmp r7.yzw, -r2_abs.w, r8.xwxy, r7  // ::r<0>, ::g<0>, ::b<0>
                  cmp r5.xyz, -r6_abs.y, r6.z, r7.yzww  // ::r<0>, ::g<0>, ::b<0>

#line 2512
                else
                  if_eq r7.x, c128.z

#line 932
                    mul r6.yzw, r4.xyzx, c64.xxxy  // ::_s<0>, ::_b<0>, ::SectorPosition<0>
                    frc r2.w, r6.w
                    add r2.w, -r2.w, r6.w  // ::SectorNumber<0>

#line 936
                    mad r3.w, r4.x, c64.y, -r2.w  // ::FractionalSector<0>

#line 939
                    mad r4.w, r4.y, -c64_abs.x, c64_abs.w
                    mul r8.y, r4.w, r6.z  // ::p<0>
                    mad r4.w, r6.y, -r3.w, c127.y
                    mul r8.z, r4.w, r6.z  // ::q<0>
                    add r3.w, -r3.w, c127.y
                    mad r3.w, r6.y, -r3.w, c127.y
                    mul r8.x, r3.w, r6.z  // ::t<0>

#line 968
                    add r9, r2.w, c135

#line 974
                    add r3.w, r2.w, -c128.y

#line 979
                    mov r8.w, r6.z
                    cmp r7.yzw, -r3_abs.w, r8.xwyz, c127.x  // ::r<0>, ::g<0>, ::b<0>
                    cmp r7.yzw, -r9_abs.w, r8.xxyw, r7  // ::r<0>, ::g<0>, ::b<0>
                    cmp r7.yzw, -r9_abs.z, r8, r7  // ::r<0>, ::g<0>, ::b<0>
                    cmp r7.yzw, -r9_abs.y, r8.xywx, r7  // ::r<0>, ::g<0>, ::b<0>
                    cmp r7.yzw, -r9_abs.x, r8.xzwy, r7  // ::r<0>, ::g<0>, ::b<0>
                    cmp r7.yzw, -r2_abs.w, r8.xwxy, r7  // ::r<0>, ::g<0>, ::b<0>
                    cmp r5.xyz, -r6_abs.y, r6.z, r7.yzww  // ::r<0>, ::g<0>, ::b<0>

#line 2516
                  else
                    if_eq r7.x, c128.w

#line 1025
                      mul r5.z, r4.z, c84.w  // ::l<0>

#line 1030
                      if_lt -r4.y, c127.x
                        mul r6.yz, r4.xyxw, c64.xxyw  // ::s<0>, ::h<0>
                        mad r2.w, r4.z, c64.z, c64.w
                        add r2.w, -r2_abs.w, c127.y
                        mul r8.x, r6.y, r2.w  // ::chroma<0>
                        cmp r6.yw, r4.x, c137.xxzy, c137.xzzw
                        mul r2.w, r6.w, r6.z
                        frc r2.w, r2.w
                        mad r2.w, r6.y, r2.w, -c127.y
                        add r2.w, -r2_abs.w, c127.y
                        mul r8.y, r2.w, r8.x  // ::v<0>

#line 1053
                        add r9, -r4.x, c96

#line 1059
                        add r10, r4.x, -c96.wzyx

#line 1065
                        add r2.w, r4.x, c62.w
                        add r6.yz, -r4.x, c97.xxyw

#line 1070
                        cmp r6.yz, r6, -c127.y, -c127.x
                        cmp r2.w, r2.w, r6.y, c127.x
                        mov r8.z, c127.x
                        cmp r7.yzw, r2.w, c127.x, r8.xxzy  // ::result<0,1,2>
                        cmp r2.w, r10.w, r6.z, c127.x
                        cmp r6.yzw, r2.w, r7, r8.xyzx  // ::result<0,1,2>
                        cmp r9, r9, -c127.y, -c127.x
                        cmp r7.yzw, r10.xzyx, r9.xxyz, c127.x
                        cmp r6.yzw, r7.y, r6, r8.xzyx  // ::result<0,1,2>
                        cmp r6.yzw, r7.z, r6, r8.xzxy  // ::result<0,1,2>
                        cmp r6.yzw, r7.w, r6, r8.xyxz  // ::result<0,1,2>
                        cmp r2.w, r4.x, r9.w, c127.x
                        cmp r6.yzw, r2.w, r6, r8.xxyz  // ::result<0,1,2>
                        mad r2.w, r8.x, c93.y, r5.z  // ::w<0>

#line 1075
                        add r5.xyz, r2.w, r6.yzww  // ::result<0,1,2>
                      else

#line 1080
                        mov r5.xy, r5.z  // ::result<0,1>
                      endif

#line 2520
                    else
                      if_eq r7.x, c129.x

#line 1025
                        mul r5.z, r4.z, c84.w  // ::l<0>

#line 1030
                        if_lt -r4.y, c127.x
                          mul r6.yz, r4.xyxw, c64.xxyw  // ::s<0>, ::h<0>
                          mad r2.w, r4.z, c64.z, c64.w
                          add r2.w, -r2_abs.w, c127.y
                          mul r8.x, r6.y, r2.w  // ::chroma<0>
                          cmp r6.yw, r4.x, c137.xxzy, c137.xzzw
                          mul r2.w, r6.w, r6.z
                          frc r2.w, r2.w
                          mad r2.w, r6.y, r2.w, -c127.y
                          add r2.w, -r2_abs.w, c127.y
                          mul r8.y, r2.w, r8.x  // ::v<0>

#line 1053
                          add r9, -r4.x, c96

#line 1059
                          add r10, r4.x, -c96.wzyx

#line 1065
                          add r2.w, r4.x, c62.w
                          add r6.yz, -r4.x, c97.xxyw

#line 1070
                          cmp r6.yz, r6, -c127.y, -c127.x
                          cmp r2.w, r2.w, r6.y, c127.x
                          mov r8.z, c127.x
                          cmp r7.yzw, r2.w, c127.x, r8.xxzy  // ::result<0,1,2>
                          cmp r2.w, r10.w, r6.z, c127.x
                          cmp r6.yzw, r2.w, r7, r8.xyzx  // ::result<0,1,2>
                          cmp r9, r9, -c127.y, -c127.x
                          cmp r7.yzw, r10.xzyx, r9.xxyz, c127.x
                          cmp r6.yzw, r7.y, r6, r8.xzyx  // ::result<0,1,2>
                          cmp r6.yzw, r7.z, r6, r8.xzxy  // ::result<0,1,2>
                          cmp r6.yzw, r7.w, r6, r8.xyxz  // ::result<0,1,2>
                          cmp r2.w, r4.x, r9.w, c127.x
                          cmp r6.yzw, r2.w, r6, r8.xxyz  // ::result<0,1,2>
                          mad r2.w, r8.x, c93.y, r5.z  // ::w<0>

#line 1075
                          add r5.xyz, r2.w, r6.yzww  // ::result<0,1,2>
                        else

#line 1080
                          mov r5.xy, r5.z  // ::result<0,1>
                        endif

#line 2524
                      else
                        if_eq r7.x, c129.y

#line 1025
                          mul r5.z, r4.z, c84.w  // ::l<0>

#line 1030
                          if_lt -r4.y, c127.x
                            mul r6.yz, r4.xyxw, c64.xxyw  // ::s<0>, ::h<0>
                            mad r2.w, r4.z, c64.z, c64.w
                            add r2.w, -r2_abs.w, c127.y
                            mul r8.x, r6.y, r2.w  // ::chroma<0>
                            cmp r6.yw, r4.x, c137.xxzy, c137.xzzw
                            mul r2.w, r6.w, r6.z
                            frc r2.w, r2.w
                            mad r2.w, r6.y, r2.w, -c127.y
                            add r2.w, -r2_abs.w, c127.y
                            mul r8.y, r2.w, r8.x  // ::v<0>

#line 1053
                            add r9, -r4.x, c96

#line 1059
                            add r10, r4.x, -c96.wzyx

#line 1065
                            add r2.w, r4.x, c62.w
                            add r6.yz, -r4.x, c97.xxyw

#line 1070
                            cmp r6.yz, r6, -c127.y, -c127.x
                            cmp r2.w, r2.w, r6.y, c127.x
                            mov r8.z, c127.x
                            cmp r7.yzw, r2.w, c127.x, r8.xxzy  // ::result<0,1,2>
                            cmp r2.w, r10.w, r6.z, c127.x
                            cmp r6.yzw, r2.w, r7, r8.xyzx  // ::result<0,1,2>
                            cmp r9, r9, -c127.y, -c127.x
                            cmp r7.yzw, r10.xzyx, r9.xxyz, c127.x
                            cmp r6.yzw, r7.y, r6, r8.xzyx  // ::result<0,1,2>
                            cmp r6.yzw, r7.z, r6, r8.xzxy  // ::result<0,1,2>
                            cmp r6.yzw, r7.w, r6, r8.xyxz  // ::result<0,1,2>
                            cmp r2.w, r4.x, r9.w, c127.x
                            cmp r6.yzw, r2.w, r6, r8.xxyz  // ::result<0,1,2>
                            mad r2.w, r8.x, c93.y, r5.z  // ::w<0>

#line 1075
                            add r5.xyz, r2.w, r6.yzww  // ::result<0,1,2>
                          else

#line 1080
                            mov r5.xy, r5.z  // ::result<0,1>
                          endif

#line 2528
                        else
                          add r2.w, r7.x, -c129.z

#line 1130
                          mul r6.yzw, r4.xyzz, c115.xxyz  // ::s<0>, ::m<0>

#line 1125
                          mad r3.w, r4.x, c97.z, c97.w
                          frc r3.w, r3.w
                          mad r3.w, r3.w, c136.z, c136.w
                          sincos r8.x, r3.w  // ::u<0>
                          mul r3.w, r6.y, r8.x  // ::v<0>

#line 1130
                          mul r4.w, r3.w, c115.w
                          mad r3.w, r3.w, c115.w, r6.w
                          mad r3.w, r4.z, -c114.x, r3.w
                          mul r8.y, r3.w, c51.y  // ::g<0>
                          mad r3.w, r4.z, c114.y, -r4.w
                          mul r8.z, r3.w, -c93.y  // ::b<0>

#line 2532
                          mov r8.x, r6.z
                          cmp r5.xyz, -r2_abs.w, r8, r5  // ::TLrgb<0,1,2>
                          if_eq r7.x, c129.z

#line 2657
                          else

#line 2533
                            if_eq r7.x, c129.w

#line 1197
                              mad r2.w, r4.y, -c64_abs.x, c64_abs.w  // ::minOverMax<0>
                              if_lt -r2.w, c127.x

#line 1202
                                if_lt r4.x, c40.w
                                  mul r3.w, r4.x, c64.y  // ::h<0>
                                  rcp r4.w, r2.w
                                  lrp r5.w, r3.w, r4.w, c127.y  // ::part<0>
                                  mul r6.z, r4.w, r4.w
                                  mul r5.w, r5.w, r5.w
                                  mul r5.w, r5.w, c44.y
                                  mad r5.w, r6.z, c44.x, r5.w
                                  add r5.w, r5.w, c98.w
                                  rsq r5.w, r5.w
                                  mul r8.z, r4.z, r5.w  // ::b<0>
                                  mul r8.x, r4.w, r8.z  // ::r<0>
                                  mad r4.w, r8.z, r4.w, -r8.z
                                  mad r8.y, r3.w, r4.w, r8.z  // ::g<0>
                                else
                                  if_lt r4.x, c85.z

#line 1213
                                    mad r3.w, r4.x, -c114.z, c114.w
                                    mul r3.w, r3.w, c128.z  // ::h<0>
                                    rcp r4.w, r2.w
                                    lrp r5.w, r3.w, r4.w, c127.y  // ::part<0>
                                    mul r6.z, r4.w, r4.w
                                    mul r5.w, r5.w, r5.w
                                    mul r5.w, r5.w, c44.x
                                    mad r5.w, r6.z, c44.y, r5.w
                                    add r5.w, r5.w, c98.w
                                    rsq r5.w, r5.w
                                    mul r8.z, r4.z, r5.w  // ::b<0>
                                    mul r8.y, r4.w, r8.z  // ::g<0>
                                    mad r4.w, r8.z, r4.w, -r8.z
                                    mad r8.x, r3.w, r4.w, r8.z  // ::r<0>
                                  else
                                    if_lt r4.x, c65.x
                                      mad r3.w, r4.x, c65.y, c65.z
                                      mul r3.w, r3.w, c128.z  // ::h<0>
                                      rcp r4.w, r2.w
                                      lrp r5.w, r3.w, r4.w, c127.y  // ::part<0>

#line 1224
                                      mul r6.z, r4.w, r4.w
                                      mul r5.w, r5.w, r5.w
                                      mul r5.w, r5.w, c98.w
                                      mad r5.w, r6.z, c44.y, r5.w
                                      add r5.w, r5.w, c44.x
                                      rsq r5.w, r5.w
                                      mul r8.x, r4.z, r5.w  // ::r<0>
                                      mul r8.y, r4.w, r8.x  // ::g<0>
                                      mad r4.w, r8.x, r4.w, -r8.x
                                      mad r8.z, r3.w, r4.w, r8.x  // ::b<0>
                                    else
                                      if_lt r4.x, c36.y
                                        mad r3.w, r4.x, -c65.y, c65.w
                                        mul r3.w, r3.w, c128.z  // ::h<0>
                                        rcp r4.w, r2.w
                                        lrp r5.w, r3.w, r4.w, c127.y  // ::part<0>
                                        mul r6.z, r4.w, r4.w
                                        mul r5.w, r5.w, r5.w
                                        mul r5.w, r5.w, c44.y
                                        mad r5.w, r6.z, c98.w, r5.w
                                        add r5.w, r5.w, c44.x
                                        rsq r5.w, r5.w
                                        mul r8.x, r4.z, r5.w  // ::r<0>
                                        mul r8.z, r4.w, r8.x  // ::b<0>

#line 1235
                                        mad r4.w, r8.x, r4.w, -r8.x
                                        mad r8.y, r3.w, r4.w, r8.x  // ::g<0>
                                      else
                                        add r3.w, r4.x, -c119.w
                                        mad r4.w, r4.x, c66.x, c66.y
                                        mul r4.w, r4.w, c128.z  // ::h<0>
                                        rcp r2.w, r2.w
                                        lrp r5.w, r4.w, r2.w, c127.y  // ::part<0>
                                        mul r6.z, r2.w, r2.w

#line 1251
                                        mul r6.zw, r6.z, c66

#line 1242
                                        mul r5.w, r5.w, r5.w
                                        mad r5.w, r5.w, c44.x, r6.z
                                        add r5.w, r5.w, c44.y
                                        rsq r5.w, r5.w
                                        mul r9.y, r4.z, r5.w  // ::g<0>
                                        mul r9.z, r2.w, r9.y  // ::b<0>
                                        mad r5.w, r9.y, r2.w, -r9.y
                                        mad r9.x, r4.w, r5.w, r9.y  // ::r<0>

#line 1249
                                        mad r4.w, r4.x, -c101.x, c101.y
                                        mul r4.w, r4.w, c128.z  // ::h<0>
                                        lrp r5.w, r4.w, r2.w, c127.y  // ::part<0>
                                        mul r5.w, r5.w, r5.w
                                        mad r5.w, r5.w, c98.w, r6.w
                                        add r5.w, r5.w, c44.y
                                        rsq r5.w, r5.w
                                        mul r10.y, r4.z, r5.w  // ::g<0>
                                        mul r10.x, r2.w, r10.y  // ::r<0>
                                        mad r2.w, r10.y, r2.w, -r10.y
                                        mad r10.z, r4.w, r2.w, r10.y  // ::b<0>
                                        cmp r8.xyz, r3.w, r10, r9  // ::r<0>, ::g<0>, ::b<0>
                                      endif
                                    endif
                                  endif
                                endif
                              else

#line 1259
                                if_lt r4.x, c40.w
                                  mul r2.w, r4.x, c64.y  // ::h<0>
                                  mul r3.w, r4.z, r4.z
                                  mul r4.w, r4.x, r2.w
                                  mad r4.w, r4.w, c101.z, c101.w
                                  rcp r4.w, r4.w
                                  mul r3.w, r3.w, r4.w
                                  rsq r3.w, r3.w
                                  rcp r8.x, r3.w  // ::r<0>
                                  mul r8.y, r2.w, r8.x  // ::g<0>
                                  mov r8.z, c127.x
                                else
                                  if_lt r4.x, c85.z
                                    mad r2.w, r4.x, -c114.z, c114.w
                                    mul r3.w, r2.w, c128.z  // ::h<0>

#line 1270
                                    mul r4.w, r4.z, r4.z
                                    mul r2.w, r2.w, r3.w
                                    mad r2.w, r2.w, c103.x, c103.y
                                    rcp r2.w, r2.w
                                    mul r2.w, r2.w, r4.w
                                    rsq r2.w, r2.w
                                    rcp r8.y, r2.w  // ::g<0>
                                    mul r8.x, r3.w, r8.y  // ::r<0>
                                    mov r8.z, c127.x
                                  else

#line 1293
                                    mad r6.zw, r4.x, c138.x, c138.xyyz
                                    mul r7.yz, r6.xzww, c128.z  // ::h<0,0>

#line 1278
                                    mul r2.w, r4.z, r4.z

#line 1294
                                    mul r6.zw, r6, r7.xyyz
                                    mad r6.zw, r6, c103.xyzx, c103.xyyw

#line 1278
                                    rcp r3.w, r6.z
                                    mul r3.w, r2.w, r3.w
                                    rsq r3.w, r3.w
                                    rcp r9.y, r3.w  // ::g<0>
                                    mul r9.z, r7.y, r9.y  // ::b<0>

#line 1301
                                    mad r7.yw, r4.x, -c138_abs.x, c138_abs.xzzw
                                    mul r10.xy, r7.ywzw, c128.z  // ::h<0,0>
                                    mul r7.yw, r7, r10.xxzy
                                    mad r7.yw, r7, c102.xxzy, c102.xzzw

#line 1286
                                    rcp r3.w, r7.y
                                    mul r3.w, r2.w, r3.w
                                    rsq r3.w, r3.w
                                    rcp r11.z, r3.w  // ::b<0>
                                    mul r11.y, r10.x, r11.z  // ::g<0>

#line 1291
                                    add r10.xzw, r4.x, c88.xyyz

#line 1294
                                    rcp r3.w, r6.w
                                    mul r3.w, r2.w, r3.w
                                    rsq r3.w, r3.w
                                    rcp r12.z, r3.w  // ::b<0>
                                    mul r12.x, r7.z, r12.z  // ::r<0>

#line 1302
                                    rcp r3.w, r7.w
                                    mul r2.w, r2.w, r3.w
                                    rsq r2.w, r2.w
                                    rcp r13.x, r2.w  // ::r<0>
                                    mul r13.z, r10.y, r13.x  // ::b<0>
                                    mov r13.y, c127.x
                                    mov r12.y, c127.x
                                    cmp r7.yzw, r10.w, r13.xxyz, r12.xxyz  // ::r<0>, ::g<0>, ::b<0>
                                    mov r11.x, c127.x
                                    cmp r7.yzw, r10.z, r7, r11.xxyz  // ::r<0>, ::g<0>, ::b<0>
                                    mov r9.x, c127.x
                                    cmp r8.xyz, r10.x, r7.yzww, r9  // ::r<0>, ::g<0>, ::b<0>
                                  endif
                                endif
                              endif

#line 1309
                              add r7.yzw, r8.xxyz, -c93.y
                              frc r8.xyz, r7.yzww
                              add r7.yzw, r7, -r8.xxyz
                              mul_sat r5.xyz, r7.yzww, c85.y  // ::result<0,1,2>

#line 2536
                            else
                              if_eq r7.x, c130.x

#line 1546
                                mul r2.w, r4.z, c88.w

#line 243
                                mad r3.w, r4.x, -c136.x, c136.y
                                mad r4.w, r4.z, -c67.x, c67.y
                                mul r4.w, r4_abs.w, r4_abs.w
                                mad r3.w, r3_abs.w, r3_abs.w, r4.w
                                rsq r3.w, r3.w
                                rcp r3.w, r3.w  // ::GetDistance<0>

#line 737
                                mul_sat r3.w, r3.w, c67.z  // ::n<0>

#line 740
                                add r3.w, r3.w, -c93.y
                                frc r3.w, r3.w
                                mad r3.w, r3.w, c136.z, c136.w
                                sincos r8.xy, r3.w
                                mul r6.zw, r4.y, r8.xyxy  // ::u<0>, ::v<0>

#line 1538
                                add r3.w, r4.z, c89.x
                                mul r4.w, r3.w, c44.w  // ::fy<0>
                                mul r5.w, r6.w, c67.w
                                mad r6.z, r6.z, c72.x, r4.w  // ::fx<0>
                                mad r3.w, r3.w, c44.w, -r5.w  // ::fz<0>
                                mul r5.w, r6.z, r6.z
                                mul r6.w, r5.w, r6.z  // ::fx3<0>
                                mul r7.y, r3.w, r3.w
                                mul r7.z, r3.w, r7.y  // ::fz3<0>
                                mad r5.w, r6.z, -r5.w, c91.w
                                mad r6.z, r6.z, c87.x, c87.y
                                mul r6.z, r6.z, c88.w
                                cmp r5.w, r5.w, r6.z, r6.w  // ::xr<0>
                                add r6.z, -r4.z, c72.y
                                mul r6.w, r4.w, r4.w
                                mul r4.w, r4.w, r6.w
                                cmp r5.y, r6.z, r2.w, r4.w  // ::yr<0>
                                mad r2.w, r3.w, -r7.y, c91.w
                                mad r3.w, r3.w, c87.x, c87.y
                                mul r3.w, r3.w, c88.w
                                cmp r2.w, r2.w, r3.w, r7.z  // ::zr<0>

#line 260
                                rcp r3.w, c9.x
                                mul r4.w, r3.w, c8.x  // ::GetWhite<0>
                                add r6.z, r1.y, -c8.x
                                add r6.z, r6.z, -c9.x
                                mul r3.w, r3.w, r6.z  // ::GetWhite<2>

#line 1550
                                mul r5.x, r4.w, r5.w  // ::LAB_Lrgb<0>
                                mul r5.z, r2.w, r3.w  // ::LAB_Lrgb<2>

#line 2540
                              else
                                if_eq r7.x, c130.y

#line 737
                                  mul r2.w, r4.z, c84.w  // GetDistance::y2<0>

#line 243
                                  mad r3.w, r4.x, -c136.x, c136.y
                                  mad r4.w, r4.z, -c67.x, c67.y
                                  mul r4.w, r4_abs.w, r4_abs.w
                                  mad r3.w, r3_abs.w, r3_abs.w, r4.w
                                  rsq r3.w, r3.w
                                  rcp r3.w, r3.w  // ::GetDistance<0>

#line 737
                                  mul_sat r3.w, r3.w, c67.z  // ::n<0>

#line 740
                                  add r3.w, r3.w, -c93.y
                                  frc r3.w, r3.w
                                  mad r3.w, r3.w, c136.z, c136.w
                                  sincos r8.xy, r3.w
                                  mul r6.zw, r4.y, r8.xyxy  // ::u<0>, ::v<0>

#line 260
                                  rcp r3.w, c9.x
                                  mul r4.w, r3.w, c8.x  // ::GetWhite<0>
                                  add r5.w, r1.y, -c8.x
                                  add r5.w, r5.w, -c9.x
                                  mul r7.y, r3.w, r5.w  // ::GetWhite<2>

#line 276
                                  mov r8.x, c8.x  // ::WhiteX<0>
                                  mad r7.zw, r3.w, r8.x, c48

#line 286
                                  mad r8.xy, r3.w, r5.w, c45

#line 276
                                  cmp r3.w, -r8_abs.x, -c127.y, -c127.x
                                  cmp r3.w, -r7_abs.z, r3.w, c127.x
                                  mul r5.w, r7.w, c45.z  // ::Ka<0>

#line 286
                                  mul r7.z, r8.y, c95.x  // ::Ka<0>

#line 1610
                                  mul r2.w, r2.w, r2.w  // ::Y<0>
                                  rcp r5.w, r5.w
                                  cmp r5.w, r3.w, r5.w, c72.z
                                  mul r5.w, r5.w, r6.z
                                  rsq r6.z, r2.w
                                  rcp r6.z, r6.z
                                  mad r5.w, r5.w, r6.z, r2.w
                                  mul r4.w, r4.w, r5.w  // ::X<0>
                                  rcp r5.w, r7.z
                                  cmp r3.w, r3.w, r5.w, c72.w
                                  mul r3.w, r3.w, r6.w
                                  mad r3.w, r3.w, r6.z, -r2.w
                                  mul r3.w, -r7.y, r3.w  // ::Z<0>

#line 306
                                  mul r7.yzw, r2.w, c20.xxyz
                                  mad r7.yzw, r4.w, c19.xxyz, r7
                                  mad r5.xyz, r3.w, c21, r7.yzww  // ::x<0>, ::y<0>, ::z<0>

#line 2544
                                else
                                  if_eq r7.x, c130.z

#line 1677
                                    mul r7.yzw, r4.z, c108.xxyz

#line 243
                                    mad r2.w, r4.x, -c136.x, c136.y
                                    mad r3.w, r4.z, -c67.x, c67.y
                                    mul r3.w, r3_abs.w, r3_abs.w
                                    mad r2.w, r2_abs.w, r2_abs.w, r3.w
                                    rsq r2.w, r2.w
                                    rcp r2.w, r2.w  // ::GetDistance<0>

#line 737
                                    mul_sat r2.w, r2.w, c67.z  // ::n<0>

#line 740
                                    add r2.w, r2.w, -c93.y
                                    frc r2.w, r2.w
                                    mad r2.w, r2.w, c136.z, c136.w
                                    sincos r8.xy, r2.w
                                    mul r6.zw, r4.y, r8.xyxy  // ::u<0>, ::v<0>

#line 260
                                    rcp r2.w, c9.x
                                    mul r3.w, r2.w, c8.x  // ::GetWhite<0>
                                    add r4.w, r1.y, -c8.x
                                    add r4.w, r4.w, -c9.x
                                    mul r4.w, r2.w, r4.w  // ::GetWhite<2>

#line 292
                                    mul r3.w, r3.w, c128.x
                                    mov r8.x, c8.x  // ::WhiteX<0>
                                    mad r2.w, r2.w, r8.x, c130.w
                                    mad r2.w, r4.w, c127.w, r2.w
                                    rcp r2.w, r2.w
                                    mul r3.w, r2.w, r3.w  // ::ComputeKu<0>

#line 297
                                    mul r2.w, r2.w, c129.y  // ::ComputeKv<0>

#line 1675
                                    add r4.w, -r4.z, c72.y
                                    add r5.w, r4.z, c89.x
                                    mul r5.w, r5.w, c44.w
                                    mul r8.x, r5.w, r5.w
                                    mul r5.w, r5.w, r8.x
                                    cmp r4.w, r4.w, r7.y, r5.w  // ::Y<0>
                                    mad r3.w, r7.w, r3.w, r6.z
                                    rcp r3.w, r3.w
                                    mad r3.w, r7.z, r3.w, -c127.y
                                    mul r3.w, r3.w, c40.y  // ::a<0>
                                    mul r5.w, r4.w, -c128.y  // ::b<0>
                                    mul r6.z, r4.z, -c29.w
                                    mad r2.w, r7.w, r2.w, r6.w
                                    rcp r2.w, r2.w
                                    mad r2.w, r6.z, r2.w, -c128.y
                                    mad r2.w, r4.w, r2.w, -r5.w
                                    rcp r6.z, r3.w
                                    mul r2.w, r2.w, r6.z  // ::X<0>
                                    mad r3.w, r2.w, r3.w, r5.w  // ::Z<0>

#line 1686
                                    max r5.w, r2.w, c127.x  // ::X<0>

#line 1689
                                    max r2.w, r4.w, c127.x  // ::Y<0>

#line 1692
                                    max r4.w, r3.w, c127.x  // ::Z<0>

#line 306
                                    mul r7.yzw, r2.w, c20.xxyz
                                    mad r7.yzw, r5.w, c19.xxyz, r7
                                    mad r5.xyz, r4.w, c21, r7.yzww  // ::x<0>, ::y<0>, ::z<0>

#line 2548
                                  else
                                    if_eq r7.x, c130.w

#line 243
                                      mad r2.w, r4.x, -c136.x, c136.y
                                      mad r3.w, r4.z, -c67.x, c67.y
                                      mul r3.w, r3_abs.w, r3_abs.w
                                      mad r2.w, r2_abs.w, r2_abs.w, r3.w
                                      rsq r2.w, r2.w
                                      rcp r2.w, r2.w  // ::GetDistance<0>

#line 737
                                      mul_sat r2.w, r2.w, c67.z  // ::n<0>

#line 740
                                      add r2.w, r2.w, -c93.y
                                      frc r2.w, r2.w
                                      mad r2.w, r2.w, c136.z, c136.w
                                      sincos r8.xy, r2.w
                                      mul r8, r4.y, r8.xyxy  // ::u<0>, ::v<0>, ::u<0>, ::v<0>

#line 1470
                                      mad r2.w, r4.z, c68.x, c68.y  // ::Jz<0>
                                      mad r3.w, r2.w, c68.z, c68.w
                                      rcp r3.w, r3.w

#line 1475
                                      mul r6.zw, r8.xyxz, c113.xyxy
                                      mad r4.w, r2.w, r3.w, r6.z
                                      mad r4.w, r8.y, c108.w, r4.w  // PerceptualQuantizerInverse::X<0>

#line 325
                                      pow r5.w, r4.w, c113.z  // ::XX<0>
                                      add r4.w, -r5.w, c69.z
                                      mad r5.w, r5.w, c90.x, c90.y
                                      rcp r5.w, r5.w
                                      mul r4.w, r4.w, r5.w
                                      pow r5.w, r4.w, c113.w

#line 1475
                                      mad r6.zw, r2.w, r3.w, -r6
                                      mad r6.zw, r8.xyyw, -c90, r6  // PerceptualQuantizerInverse::X<0,0>

#line 325
                                      pow r2.w, r6.z, c113.z  // ::XX<0>
                                      add r3.w, -r2.w, c69.z
                                      mad r2.w, r2.w, c90.x, c90.y
                                      rcp r2.w, r2.w
                                      mul r2.w, r2.w, r3.w
                                      pow r3.w, r2.w, c113.w
                                      pow r2.w, r6.w, c113.z  // ::XX<0>
                                      add r4.w, -r2.w, c69.z
                                      mad r2.w, r2.w, c90.x, c90.y
                                      rcp r2.w, r2.w
                                      mul r2.w, r2.w, r4.w
                                      pow r4.w, r2.w, c113.w

#line 1479
                                      mul r7.yzw, r3.w, c111.xxyz
                                      mad r6.zw, r5.w, c112.xyxy, -r7.xyyw
                                      mad r2.w, r5.w, c111.w, r7.z
                                      mad r2.w, r4.w, -c112.z, r2.w  // ::Y<0>
                                      mad r6.zw, r4.w, c100.xyxy, r6  // ::X<0>, ::Z<0>
                                      mul r2.w, r2.w, c71.w  // ::xyz<1>
                                      mul r6.zw, r6, c71.w  // ::xyz<0,2>

#line 306
                                      mul r7.yzw, r2.w, c20.xxyz
                                      mad r7.yzw, r6.z, c19.xxyz, r7
                                      mad r5.xyz, r6.w, c21, r7.yzww  // ::x<0>, ::y<0>, ::z<0>

#line 2552
                                    else
                                      if_eq r7.x, c89.x

#line 1382
                                        mul r2.w, r4.z, c84.w  // ::black<0>
                                        mad r2.w, r4.y, c84.w, r2.w

#line 1390
                                        if_ge r2.w, c127.y

#line 1386
                                          rcp r2.w, r2.w
                                          mul r5.z, r2.w, r6.y  // ::gray<0>

#line 1401
                                          mov r5.xy, r5.z  // ::HWB_Lrgb<0,1>
                                        else

#line 1026
                                          mul r2.w, r4.x, c64.y  // ::h<0>

#line 1033
                                          cmp r6.zw, r4.x, c137.xyxy, c137
                                          mul r2.w, r2.w, r6.w
                                          frc r2.w, r2.w
                                          mad r2.w, r6.z, r2.w, -c127.y
                                          add r8.y, -r2_abs.w, c127.y  // ::v<0>

#line 1053
                                          add r9, -r4.x, c96

#line 1059
                                          add r10, r4.x, -c96.wzyx

#line 1065
                                          add r2.w, r4.x, c62.w
                                          add r6.zw, -r4.x, c97.xyxy

#line 1070
                                          cmp r6.zw, r6, c139.xyxy, c139

#line 1065
                                          cmp r11.x, r2.w, r6.z, c127.x  // ::result<0>

#line 1070
                                          mov r8.xz, c127.yyxw
                                          cmp r11.yz, -r11.x, c127.x, r8.xzyw  // ::result<1,2>
                                          cmp r2.w, r10.w, r6.w, c127.x
                                          cmp r7.yzw, r2.w, r11.xxyz, r8.xyzx  // ::result<0,1,2>
                                          cmp r9, r9, -c127.y, -c127.x
                                          cmp r9.xyz, r10.zyxw, r9, c127.x
                                          cmp r7.yzw, r9.x, r7, r8.xzyx  // ::result<0,1,2>
                                          cmp r7.yzw, r9.y, r7, r8.xzxy  // ::result<0,1,2>
                                          cmp r7.yzw, r9.z, r7, r8.xyxz  // ::result<0,1,2>
                                          cmp r2.w, r4.x, r9.w, c127.x
                                          cmp r7.yzw, r2.w, r7, r8.xxyz  // ::result<0,1,2>

#line 1393
                                          mad r2.w, r4.y, -c64_abs.x, c64_abs.w
                                          mad r2.w, r4.z, -c84.w, r2.w

#line 1400
                                          mad r5.xyz, r7.yzww, r2.w, r6.y  // ::rgb<0,1,2>
                                        endif

#line 2556
                                      else
                                        add r2.w, r7.x, c89.y

#line 2560
                                        mad r6.yzw, r4.xxyz, c118.xxyy, c118.xzyy
                                        cmp r5.xyz, -r2_abs.w, r6.yzww, r5  // ::TLrgb<0,1,2>
                                        if_eq r7.x, -c89.y

#line 2657
                                        else

#line 2561
                                          add r2.w, r7.x, c70.x

#line 2148
                                          add r6.yz, r4.xzyw, c47.z
                                          mad r3.w, r6.z, -c112.w, r4.x
                                          mad r3.w, r6.y, -c100.z, r3.w  // ::ycbcr<1>
                                          mad r7.yz, r6, c117.xxyw, r4.x  // ::ycbcr<0,2>

#line 2128
                                          add r7.yz, r7, c117.xzww
                                          add r3.w, r3.w, c47.z

#line 2083
                                          mul r7.zw, r7.xyyz, c74.xyxy  // ::ypbpr<0>
                                          add r8.x, r7.w, r7.z  // ::r<0>
                                          mad r8.z, r3.w, c100.w, r7.z  // ::b<0>
                                          mul r3.w, r8.x, c107.x
                                          mad r3.w, r7.y, c74.x, -r3.w
                                          mad r3.w, r8.z, -c107.z, r3.w
                                          mul r8.y, r3.w, c74.z  // ::g<0>

#line 2564
                                          cmp r5.xyz, -r2_abs.w, r8, r5  // ::TLrgb<0,1,2>
                                          if_eq r7.x, c70.y

#line 2657
                                          else

#line 2565
                                            if_eq r7.x, c70.w

#line 1470
                                              add r2.w, r4.x, -c46.w  // ::Jz<0>
                                              mad r3.w, r2.w, c68.z, c68.w
                                              rcp r3.w, r3.w

#line 1475
                                              mul r7.yz, r4.y, c116.xxyw
                                              mad r4.w, r2.w, r3.w, r7.y
                                              mad r4.w, r4.z, c74.w, r4.w  // PerceptualQuantizerInverse::X<0>

#line 325
                                              pow r5.w, r4.w, c113.z  // ::XX<0>
                                              add r4.w, -r5.w, c69.z
                                              mad r5.w, r5.w, c90.x, c90.y
                                              rcp r5.w, r5.w
                                              mul r4.w, r4.w, r5.w
                                              pow r5.w, r4.w, c113.w

#line 1475
                                              mad r7.yz, r2.w, r3.w, -r7
                                              mad r7.yz, r4.z, -c116.xzww, r7  // PerceptualQuantizerInverse::X<0,0>

#line 325
                                              pow r2.w, r7.y, c113.z  // ::XX<0>
                                              add r3.w, -r2.w, c69.z
                                              mad r2.w, r2.w, c90.x, c90.y
                                              rcp r2.w, r2.w
                                              mul r2.w, r2.w, r3.w
                                              pow r3.w, r2.w, c113.w
                                              pow r2.w, r7.z, c113.z  // ::XX<0>
                                              add r4.w, -r2.w, c69.z
                                              mad r2.w, r2.w, c90.x, c90.y
                                              rcp r2.w, r2.w
                                              mul r2.w, r2.w, r4.w
                                              pow r4.w, r2.w, c113.w

#line 1479
                                              mul r7.yzw, r3.w, c111.xxyz
                                              mad r7.yw, r5.w, c112.xxzy, -r7
                                              mad r2.w, r5.w, c111.w, r7.z
                                              mad r2.w, r4.w, -c112.z, r2.w  // ::Y<0>
                                              mad r7.yz, r4.w, c100.xxyw, r7.xyww  // ::X<0>, ::Z<0>
                                              mul r2.w, r2.w, c71.w  // ::xyz<1>
                                              mul r7.yz, r7, c71.w  // ::xyz<0,2>

#line 306
                                              mul r8.xyz, r2.w, c20
                                              mad r8.xyz, r7.y, c19, r8
                                              mad r5.xyz, r7.z, c21, r8  // ::x<0>, ::y<0>, ::z<0>

#line 2568
                                            else
                                              if_eq r7.x, c31.y

#line 718
                                                mad r2.w, r4.z, c105.x, c105.y
                                                frc r2.w, r2.w
                                                mad r2.w, r2.w, c136.z, c136.w
                                                sincos r8.xy, r2.w
                                                mul r8, r4.y, r8.xyxy  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1470
                                                add r2.w, r4.x, -c46.w  // ::Jz<0>
                                                mad r3.w, r2.w, c68.z, c68.w
                                                rcp r3.w, r3.w

#line 1475
                                                mul r7.yz, r8.xxzw, c116.xxyw
                                                mad r4.w, r2.w, r3.w, r7.y
                                                mad r4.w, r8.y, c74.w, r4.w  // PerceptualQuantizerInverse::X<0>

#line 325
                                                pow r5.w, r4.w, c113.z  // ::XX<0>
                                                add r4.w, -r5.w, c69.z
                                                mad r5.w, r5.w, c90.x, c90.y
                                                rcp r5.w, r5.w
                                                mul r4.w, r4.w, r5.w
                                                pow r5.w, r4.w, c113.w

#line 1475
                                                mad r7.yz, r2.w, r3.w, -r7
                                                mad r7.yz, r8.xyww, -c116.xzww, r7  // PerceptualQuantizerInverse::X<0,0>

#line 325
                                                pow r2.w, r7.y, c113.z  // ::XX<0>
                                                add r3.w, -r2.w, c69.z
                                                mad r2.w, r2.w, c90.x, c90.y
                                                rcp r2.w, r2.w
                                                mul r2.w, r2.w, r3.w
                                                pow r3.w, r2.w, c113.w
                                                pow r2.w, r7.z, c113.z  // ::XX<0>
                                                add r4.w, -r2.w, c69.z
                                                mad r2.w, r2.w, c90.x, c90.y
                                                rcp r2.w, r2.w
                                                mul r2.w, r2.w, r4.w
                                                pow r4.w, r2.w, c113.w

#line 1479
                                                mul r7.yzw, r3.w, c111.xxyz
                                                mad r7.yw, r5.w, c112.xxzy, -r7
                                                mad r2.w, r5.w, c111.w, r7.z
                                                mad r2.w, r4.w, -c112.z, r2.w  // ::Y<0>
                                                mad r7.yz, r4.w, c100.xxyw, r7.xyww  // ::X<0>, ::Z<0>
                                                mul r2.w, r2.w, c71.w  // ::xyz<1>
                                                mul r7.yz, r7, c71.w  // ::xyz<0,2>

#line 306
                                                mul r8.xyz, r2.w, c20
                                                mad r8.xyz, r7.y, c19, r8
                                                mad r5.xyz, r7.z, c21, r8  // ::x<0>, ::y<0>, ::z<0>

#line 2572
                                              else
                                                add r2.w, r7.x, c31.z

#line 1538
                                                add r3.w, r4.x, c89.x
                                                mul r4.w, r3.w, c44.w  // ::fy<0>

#line 1546
                                                add r5.w, -r4.x, c72.y
                                                mul r6.w, r4.w, r4.w
                                                mul r6.w, r4.w, r6.w
                                                mul r7.y, r4.x, c88.w
                                                cmp r8.y, r5.w, r7.y, r6.w  // ::yr<0>

#line 260
                                                rcp r5.w, c9.x
                                                mul r6.w, r5.w, c8.x  // ::GetWhite<0>
                                                add r7.y, r1.y, -c8.x
                                                add r7.y, r7.y, -c9.x
                                                mul r7.z, r5.w, r7.y  // ::GetWhite<2>

#line 2577
                                                if_eq r7.x, c31.w

#line 1540
                                                  mul r7.w, r4.z, c67.w
                                                  mad r8.w, r4.y, c72.x, r4.w  // ::fx<0>
                                                  mad r7.w, r3.w, c44.w, -r7.w  // ::fz<0>
                                                  mul r9.x, r8.w, r8.w
                                                  mul r9.y, r8.w, r9.x  // ::fx3<0>
                                                  mul r9.z, r7.w, r7.w
                                                  mul r9.w, r7.w, r9.z  // ::fz3<0>
                                                  mad r9.x, r8.w, -r9.x, c91.w
                                                  mad r8.w, r8.w, c87.x, c87.y
                                                  mul r8.w, r8.w, c88.w
                                                  cmp r8.w, r9.x, r8.w, r9.y  // ::xr<0>
                                                  mad r9.x, r7.w, -r9.z, c91.w
                                                  mad r7.w, r7.w, c87.x, c87.y
                                                  mul r7.w, r7.w, c88.w
                                                  cmp r7.w, r9.x, r7.w, r9.w  // ::zr<0>

#line 1550
                                                  mul r8.x, r6.w, r8.w  // ::LAB_Lrgb<0>
                                                  mul r8.z, r7.z, r7.w  // ::LAB_Lrgb<2>

#line 2576
                                                  cmp r5.xyz, -r2_abs.w, r8, r5  // ::TLrgb<0,1,2>

#line 2657
                                                else

#line 2577
                                                  if_eq r7.x, c47.w

#line 276
                                                    mov r9.x, c8.x  // ::WhiteX<0>
                                                    mad r9.xy, r5.w, r9.x, c48.zwzw

#line 286
                                                    mad r9.zw, r5.w, r7.y, c45.xyxy

#line 276
                                                    cmp r2.w, -r9_abs.z, -c127.y, -c127.x
                                                    cmp r2.w, -r9_abs.x, r2.w, c127.x
                                                    mul r7.w, r9.y, c45.z  // ::Ka<0>

#line 286
                                                    mul r8.w, r9.w, c95.x  // ::Ka<0>

#line 1610
                                                    mul r9.x, r4.x, c84.w
                                                    mul r9.x, r9.x, r9.x  // ::Y<0>
                                                    rcp r7.w, r7.w
                                                    cmp r7.w, r2.w, r7.w, c72.z
                                                    mul r7.w, r4.y, r7.w
                                                    rsq r9.y, r9.x
                                                    rcp r9.y, r9.y
                                                    mad r7.w, r7.w, r9.y, r9.x
                                                    mul r7.w, r6.w, r7.w  // ::X<0>
                                                    rcp r8.w, r8.w
                                                    cmp r2.w, r2.w, r8.w, c72.w
                                                    mul r2.w, r2.w, r4.z
                                                    mad r2.w, r2.w, r9.y, -r9.x
                                                    mul r2.w, -r7.z, r2.w  // ::Z<0>

#line 306
                                                    mul r9.xyz, r9.x, c20
                                                    mad r9.xyz, r7.w, c19, r9
                                                    mad r5.xyz, r2.w, c21, r9  // ::x<0>, ::y<0>, ::z<0>

#line 2580
                                                  else

#line 2593
                                                    add r9, r7.x, c131

#line 1677
                                                    mul r10.xyz, r4.x, c110

#line 718
                                                    mad r2.w, r4.z, c105.x, c105.y
                                                    frc r2.w, r2.w
                                                    mad r2.w, r2.w, c136.z, c136.w
                                                    sincos r11.xy, r2.w
                                                    mul r11.zw, r4.y, r11.xyxy  // ::a<0>, ::b<0>

#line 1540
                                                    mul r2.w, r11.w, c67.w
                                                    mad r4.w, r11.z, c72.x, r4.w  // ::fx<0>
                                                    mad r2.w, r3.w, c44.w, -r2.w  // ::fz<0>
                                                    mul r3.w, r4.w, r4.w
                                                    mul r7.w, r3.w, r4.w  // ::fx3<0>
                                                    mul r8.w, r2.w, r2.w
                                                    mul r10.w, r2.w, r8.w  // ::fz3<0>
                                                    mad r3.w, r4.w, -r3.w, c91.w
                                                    mad r4.w, r4.w, c87.x, c87.y
                                                    mul r4.w, r4.w, c88.w
                                                    cmp r3.w, r3.w, r4.w, r7.w  // ::xr<0>
                                                    mad r4.w, r2.w, -r8.w, c91.w
                                                    mad r2.w, r2.w, c87.x, c87.y
                                                    mul r2.w, r2.w, c88.w
                                                    cmp r2.w, r4.w, r2.w, r10.w  // ::zr<0>

#line 1550
                                                    mul r8.x, r6.w, r3.w  // ::LAB_Lrgb<0>
                                                    mul r8.z, r7.z, r2.w  // ::LAB_Lrgb<2>

#line 292
                                                    mov r12.x, c8.x  // ::WhiteX<0>
                                                    mad r12.xyz, r5.w, r12.x, c52

#line 286
                                                    mad r7.yw, r5.w, r7.y, c45.xxzy

#line 276
                                                    cmp r2.w, -r7_abs.y, -c127.y, -c127.x
                                                    cmp r2.w, -r12_abs.x, r2.w, c127.x
                                                    mul r3.w, r12.y, c45.z  // ::Ka<0>

#line 286
                                                    mul r4.w, r7.w, c95.x  // ::Ka<0>

#line 1610
                                                    mul r5.w, r10.x, r10.x  // ::Y<0>
                                                    rcp r3.w, r3.w
                                                    cmp r3.w, r2.w, r3.w, c72.z
                                                    mul r3.w, r3.w, r11.z
                                                    rsq r7.y, r5.w
                                                    rcp r7.y, r7.y
                                                    mad r3.w, r3.w, r7.y, r5.w
                                                    mul r3.w, r6.w, r3.w  // ::X<0>
                                                    rcp r4.w, r4.w
                                                    cmp r2.w, r2.w, r4.w, c72.w
                                                    mul r2.w, r2.w, r11.w
                                                    mad r2.w, r2.w, r7.y, -r5.w
                                                    mul r2.w, -r7.z, r2.w  // ::Z<0>

#line 306
                                                    mul r12.xyw, r5.w, c20.xyzz
                                                    mad r12.xyw, r3.w, c19.xyzz, r12
                                                    mad r12.xyw, r2.w, c21.xyzz, r12  // ::x<0>, ::y<0>, ::z<0>

#line 292
                                                    mul r2.w, r6.w, c128.x
                                                    mad r3.w, r7.z, c127.w, r12.z
                                                    rcp r3.w, r3.w
                                                    mul r2.w, r2.w, r3.w  // ::ComputeKu<0>

#line 1920
                                                    mul r7.yz, r3.w, c105.xzww  // ::ComputeKv<0>, ::vN<0>

#line 1677
                                                    mul r3.w, r2.w, r10.z
                                                    mad r3.w, r4.y, r11.x, r3.w
                                                    rcp r3.w, r3.w
                                                    mad r3.w, r10.y, r3.w, -c127.y
                                                    mul r3.w, r3.w, c40.y  // ::a<0>
                                                    mul r4.w, r8.y, -c128.y  // ::b<0>

#line 1898
                                                    mul r11.xzw, r4.xyxy, c109.xyyz  // XYZ_Lrgb::input<0>

#line 1680
                                                    mul r5.w, r7.y, r10.z
                                                    mad r5.w, r4.y, r11.y, r5.w
                                                    rcp r5.w, r5.w
                                                    mad r5.w, r11.x, r5.w, -c128.y
                                                    mad r5.w, r8.y, r5.w, -r4.w
                                                    rcp r6.w, r3.w
                                                    mul r5.w, r5.w, r6.w  // ::X<0>
                                                    mad r3.w, r5.w, r3.w, r4.w  // ::Z<0>

#line 1686
                                                    max r6.w, r5.w, c127.x  // ::X<0>

#line 1689
                                                    max r5.w, r8.y, c127.x  // ::Y<0>

#line 1692
                                                    max r7.w, r3.w, c127.x  // ::Z<0>

#line 306
                                                    mul r13.xyz, r5.w, c20
                                                    mad r14.xyz, r6.w, c19, r13
                                                    mad r14.xyz, r7.w, c21, r14  // ::x<0>, ::y<0>, ::z<0>
                                                    mul r15.xyz, r4.y, c11
                                                    mad r15.xyz, r4.x, c10, r15
                                                    mad r15.xyz, r4.z, c12, r15  // ::x<0>, ::y<0>, ::z<0>
                                                    mul r16.xyz, r15.y, c20
                                                    mad r15.xyw, r15.x, c19.xyzz, r16.xyzz
                                                    mad r15.xyz, r15.z, c21, r15.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 2609
                                                    add r16, r7.x, c132

#line 1677
                                                    mad r3.w, r10.z, r2.w, r4.y
                                                    rcp r3.w, r3.w
                                                    mad r3.w, r10.y, r3.w, -c127.y
                                                    mul r3.w, r3.w, c40.y  // ::a<0>

#line 1680
                                                    mad r5.w, r10.z, r7.y, r4.z
                                                    rcp r5.w, r5.w
                                                    mad r5.w, r11.x, r5.w, -c128.y
                                                    mad r5.w, r8.y, r5.w, -r4.w
                                                    rcp r6.w, r3.w
                                                    mul r5.w, r5.w, r6.w  // ::X<0>
                                                    mad r3.w, r5.w, r3.w, r4.w  // ::Z<0>

#line 1686
                                                    max r4.w, r5.w, c127.x  // ::X<0>

#line 1692
                                                    max r5.w, r3.w, c127.x  // ::Z<0>

#line 306
                                                    mad r10.xyz, r4.w, c19, r13
                                                    mad r10.xyz, r5.w, c21, r10  // ::x<0>, ::y<0>, ::z<0>

#line 1426
                                                    mad r3.w, r4.x, c104_abs.w, c104_abs.z
                                                    frc r3.w, r3.w
                                                    mad r3.w, r3.w, c136.z, c136.w
                                                    sincos r13.xy, r3.w
                                                    rcp r3.w, r13.x
                                                    mul r3.w, r3.w, r13.y  // ::x<0>
                                                    mul r4.w, r3.w, r3.w  // ::x<0>

#line 1963
                                                    mul r7.yw, r4.xyzz, r4.xyzx

#line 1429
                                                    mul r5.w, r7.y, c128.y
                                                    rcp r4.w, r4.w
                                                    add r4.w, r4.w, c127.y
                                                    mul r4.w, r4.w, c129.y
                                                    rcp r4.w, r4.w
                                                    mul r4.w, r4.w, r5.w
                                                    rsq r4.w, r4.w
                                                    rcp r4.w, r4.w  // ::r<0>
                                                    mad r3.w, r3.w, r3.w, c127.y
                                                    mul r3.w, r3.w, c129.y
                                                    rcp r3.w, r3.w
                                                    mul r3.w, r3.w, r5.w
                                                    rsq r3.w, r3.w
                                                    rcp r3.w, r3.w  // ::g<0>
                                                    mul r5.w, r3.w, c110.w
                                                    mad r5.w, r4.w, c109.w, r5.w
                                                    add r5.w, r5.w, c98.w
                                                    rcp r5.w, r5.w
                                                    mul r5.w, r4.z, r5.w  // ::k<0>
                                                    add r6.w, -r4.w, c127.y
                                                    add r6.w, -r3.w, r6.w
                                                    mul r13.z, r5.w, r6.w  // ::B<0>
                                                    mul r13.y, r3.w, r5.w  // ::G<0>
                                                    mul r13.x, r4.w, r5.w  // ::R<0>

#line 1898
                                                    mad r3.w, r4.x, c109.y, -r11.w

#line 1985
                                                    add r17.z, r4.y, r4.x  // ::YCoCg_Lrgb<1>

#line 1898
                                                    mad r3.w, r4.z, c127.z, r3.w  // XYZ_Lrgb::input<2>

#line 304
                                                    mul r18, r4.yyyz, c20.xyzx
                                                    mad r11.xyz, r11.z, c19, r18
                                                    mad r11.xyz, r3.w, c21, r11  // ::x<0>, ::y<0>, ::z<0>

#line 2625
                                                    add r19, r7.x, c133

#line 2108
                                                    add r20.xy, r4.zxzw, -c89.yxzw
                                                    mul r20.xz, r20.xyyw, c73.xyyw  // ::ypbpr<0>

#line 1922
                                                    mul r3.w, r20.x, r20.x
                                                    mul r3.w, r3.w, r20.x  // ::y<0>

#line 1999
                                                    mul r4.w, r4.z, c130.y

#line 1924
                                                    rcp r5.w, r4.w
                                                    mad r2.w, r4.x, r5.w, r2.w
                                                    cmp r2.w, -r4_abs.w, c127.x, r2.w  // ::_u<0>
                                                    mad r5.w, r4.y, r5.w, r7.z
                                                    cmp r4.w, -r4_abs.w, c127.x, r5.w  // ::_v<0>
                                                    mul r5.w, r2.w, r3.w
                                                    rcp r4.w, r4.w
                                                    mul r5.w, r4.w, r5.w  // ::x<0>
                                                    add r6.w, r4.w, r4.w
                                                    mul r2.w, r2.w, r4.w
                                                    mad r2.w, r2.w, c93.y, r6.w
                                                    add r2.w, r2.w, -c128.y
                                                    mul r2.w, r2.w, r3.w  // ::z<0>
                                                    mul r4.w, r5.w, c84.w  // ::xyz<0>
                                                    mul r3.w, r3.w, c84.w  // ::xyz<1>
                                                    mul r2.w, r2.w, c84.w  // ::xyz<2>

#line 306
                                                    mul r21.xyz, r3.w, c20
                                                    mad r21.xyz, r4.w, c19, r21
                                                    mad r21.xyz, r2.w, c21, r21  // ::x<0>, ::y<0>, ::z<0>

#line 1931
                                                    cmp r21.xyz, -r4_abs.z, c127.x, r21  // ::UVW_Lrgb<0,1,2>

#line 2084
                                                    mad r22.xz, r6.yyzw, c73.zyww, r20.z  // ::r<0>, ::b<0>
                                                    mul r2.w, r22.x, c107.x
                                                    mad r2.w, r20.y, c74.x, -r2.w
                                                    mad r2.w, r22.z, -c107.z, r2.w
                                                    mul r22.y, r2.w, c74.z  // ::g<0>

#line 1963
                                                    rcp r2.w, r4.y
                                                    mul r3.w, r2.w, r7.w  // XYZ_Lrgb::input<0>
                                                    add r4.w, -r4.y, r6.x
                                                    mul r4.w, r4.z, r4.w
                                                    mul r2.w, r2.w, r4.w  // XYZ_Lrgb::input<2>

#line 306
                                                    mul r6.xy, r3.w, c19.yzzw
                                                    mad r3.w, r3.w, c19.x, r18.w
                                                    mad r20.x, r2.w, c21.x, r3.w  // ::x<0>
                                                    mad r6.xy, r4.z, c20.yzzw, r6
                                                    mad r20.yz, r2.w, c21, r6.xxyw  // ::y<0>, ::z<0>

#line 1963
                                                    cmp r6.xyz, -r4_abs.y, c127.x, r20  // ::xyY_Lrgb<0,1,2>

#line 306
                                                    mad r7.yzw, r4.x, c19.xxyz, r18.xxyz
                                                    mad r7.yzw, r4.z, c21.xxyz, r7  // ::x<0>, ::y<0>, ::z<0>

#line 2641
                                                    add r18, r7.x, c134

#line 1984
                                                    add r2.w, -r4.y, r4.x  // ::c<0>
                                                    add r17.x, r4.z, r2.w  // ::YCoCg_Lrgb<0>
                                                    add r17.w, -r4.z, r2.w  // ::YCoCg_Lrgb<2>

#line 1998
                                                    mad r2.w, r4.y, c106.x, r4.x
                                                    mad r20.x, r4.z, -c106.y, r2.w  // ::r<0>
                                                    mad r2.w, r4.y, -c106.z, r4.x
                                                    mad r20.y, r4.z, c106.w, r2.w  // ::g<0>

#line 2027
                                                    mad r23.xy, r4.y, c75, r4.x

#line 2000
                                                    mad r20.z, r4.z, -c75.z, r23.x  // ::b<0>

#line 2027
                                                    mad r23.x, r4.z, c75.w, r23.y  // ::r<0>
                                                    mad r24.xy, r4.y, c76, r4.x
                                                    mad r23.yz, r4.z, c76.xzww, r24.xxyw  // ::g<0>, ::b<0>

#line 2653
                                                    add r24.xyz, r7.x, c84

#line 2052
                                                    mad r25.xy, r4.y, c77, r4.x
                                                    mad r25.xy, r4.z, c77.zwzw, r25  // ::r<0>, ::g<0>

#line 2084
                                                    mad r26.xyz, r4.yzyw, c78, r4.x  // ::r<0>, ::b<0>

#line 2053
                                                    mad r2.w, r4.z, c78.w, r26.x  // ::b<0>

#line 2056
                                                    mov_sat r25.zw, r25.xyxy
                                                    cmp r25.xy, r25, r25.zwzw, c127.x  // ::r<0>, ::g<0>
                                                    mov_sat r3.w, r2.w
                                                    cmp r25.z, r2.w, r3.w, c127.x  // ::b<0>

#line 2085
                                                    mad r2.w, r26.y, -c107.x, r4.x
                                                    mad r2.w, r26.z, -c107.z, r2.w
                                                    mul r26.w, r2.w, c74.z  // ::g<0>

#line 2178
                                                    mad r27.xyz, r4.zyyw, c79, r4.x  // ::r<0>, ::b<0>

#line 2175
                                                    mad r2.w, r4.z, c79.w, r27.y  // ::g<0>

#line 2184
                                                    mov_sat r27.yw, r27.xxzz
                                                    mov_sat r3.w, r2.w
                                                    cmp r28.y, r2.w, r3.w, c127.x  // ::g<0>
                                                    cmp r28.xz, r27, r27.yyww, c127.x  // ::r<0>, ::b<0>

#line 2657
                                                    cmp r27.xyz, -r24_abs.z, r28, r4  // ::TLrgb<0,1,2>
                                                    cmp r24.yzw, -r24_abs.y, r26.xywz, r27.xxyz  // ::TLrgb<0,1,2>
                                                    cmp r24.xyz, -r24_abs.x, r25, r24.yzww  // ::TLrgb<0,1,2>
                                                    cmp r23.xyz, -r18_abs.w, r23, r24  // ::TLrgb<0,1,2>
                                                    cmp r20.xyz, -r18_abs.z, r20, r23  // ::TLrgb<0,1,2>
                                                    cmp r17.xyz, -r18_abs.y, r17.xzww, r20  // ::TLrgb<0,1,2>
                                                    cmp r17.xyz, -r18_abs.x, r22, r17  // ::TLrgb<0,1,2>
                                                    cmp r7.xyz, -r19_abs.w, r7.yzww, r17  // ::TLrgb<0,1,2>
                                                    cmp r6.xyz, -r19_abs.z, r6, r7  // ::TLrgb<0,1,2>
                                                    cmp r6.xyz, -r19_abs.y, r22, r6  // ::TLrgb<0,1,2>
                                                    cmp r6.xyz, -r19_abs.x, r21, r6  // ::TLrgb<0,1,2>
                                                    cmp r6.xyz, -r16_abs.w, r11, r6  // ::TLrgb<0,1,2>
                                                    cmp r6.xyz, -r16_abs.z, r13, r6  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r16_abs.y, r4, r6  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r16_abs.x, r10, r4  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r9_abs.w, r15, r4  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r9_abs.z, r14, r4  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r9_abs.y, r12.xyww, r4  // ::TLrgb<0,1,2>
                                                    cmp r5.xyz, -r9_abs.x, r8, r4  // ::TLrgb<0,1,2>
                                                  endif
                                                endif
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif

#line 2267
      log r2.w, r5.x

#line 2272
      if_eq c6.x, r1.x

#line 2267
        mul r3.w, r2.w, c7.x
        exp r0.x, r3.w  // ::v<0>

#line 2302
      else

#line 2296
        mov r4.x, c6.x  // ::Companding<0>
        add r4, r4.x, c135

#line 2299
        add r6.xy, -r5.x, c80

#line 2291
        mul r6.zw, r5.x, c80
        add r7.xyz, r5.x, c81

#line 2275
        mul r3.w, r7.x, c81.w
        mul r5.w, r3.w, r3.w
        mul r3.w, r3.w, r5.w
        cmp r3.w, r6.x, r6.z, r3.w  // ::v<0>

#line 2291
        mad r6.xz, r5.x, c82.xyyw, c82.zyww
        cmp r6.xz, r7.yyzw, r6, r6.w  // ::V<0,0>

#line 2299
        mul r5.w, r5.x, c83.x
        mul r2.w, r2.w, c83.y
        exp r2.w, r2.w
        mad r2.w, r2.w, c83.z, c83.w
        cmp r2.w, r6.y, r5.w, r2.w  // ::V<0>

#line 2302
        cmp r2.w, -r4_abs.w, r2.w, r5.x  // ::Compand<0>
        cmp r2.w, -r4_abs.z, r6.z, r2.w  // ::Compand<0>
        cmp r2.w, -r4_abs.y, r6.x, r2.w  // ::Compand<0>
        cmp r0.x, -r4_abs.x, r3.w, r2.w  // ::Compand<0>
      endif

#line 2267
      log r2.w, r5.y

#line 2272
      if_eq c6.x, r1.x

#line 2267
        mul r3.w, r2.w, c7.x
        exp r0.y, r3.w  // ::v<0>

#line 2302
      else

#line 2296
        mov r4.x, c6.x  // ::Companding<0>
        add r4, r4.x, c135

#line 2299
        add r5.xw, -r5.y, c80.xyzy

#line 2291
        mul r6.xy, r5.y, c80.zwzw
        add r7.xyz, r5.y, c81

#line 2275
        mul r3.w, r7.x, c81.w
        mul r6.z, r3.w, r3.w
        mul r3.w, r3.w, r6.z
        cmp r3.w, r5.x, r6.x, r3.w  // ::v<0>

#line 2291
        mad r6.xz, r5.y, c82.xyyw, c82.zyww
        cmp r6.xy, r7.yzzw, r6.xzzw, r6.y  // ::V<0,0>

#line 2299
        mul r5.x, r5.y, c83.x
        mul r2.w, r2.w, c83.y
        exp r2.w, r2.w
        mad r2.w, r2.w, c83.z, c83.w
        cmp r2.w, r5.w, r5.x, r2.w  // ::V<0>

#line 2302
        cmp r2.w, -r4_abs.w, r2.w, r5.y  // ::Compand<0>
        cmp r2.w, -r4_abs.z, r6.y, r2.w  // ::Compand<0>
        cmp r2.w, -r4_abs.y, r6.x, r2.w  // ::Compand<0>
        cmp r0.y, -r4_abs.x, r3.w, r2.w  // ::Compand<0>
      endif

#line 2267
      log r2.w, r5.z

#line 2272
      if_eq c6.x, r1.x

#line 2267
        mul r3.w, r2.w, c7.x
        exp r0.z, r3.w  // ::v<0>

#line 2302
      else

#line 2296
        mov r4.x, c6.x  // ::Companding<0>
        add r4, r4.x, c135

#line 2299
        add r5.xy, -r5.z, c80

#line 2291
        mul r6.xy, r5.z, c80.zwzw
        add r7.xyz, r5.z, c81

#line 2275
        mul r3.w, r7.x, c81.w
        mul r5.w, r3.w, r3.w
        mul r3.w, r3.w, r5.w
        cmp r3.w, r5.x, r6.x, r3.w  // ::v<0>

#line 2291
        mad r5.xw, r5.z, c82.xyzy, c82.zyzw
        cmp r5.xw, r7.yyzz, r5, r6.y  // ::V<0,0>

#line 2299
        mul r6.x, r5.z, c83.x
        mul r2.w, r2.w, c83.y
        exp r2.w, r2.w
        mad r2.w, r2.w, c83.z, c83.w
        cmp r2.w, r5.y, r6.x, r2.w  // ::V<0>

#line 2302
        cmp r2.w, -r4_abs.w, r2.w, r5.z  // ::Compand<0>
        cmp r2.w, -r4_abs.z, r5.w, r2.w  // ::Compand<0>
        cmp r2.w, -r4_abs.y, r5.x, r2.w  // ::Compand<0>
        cmp r0.z, -r4_abs.x, r3.w, r2.w  // ::Compand<0>
      endif

#line 2739
    else

#line 2746
      add r2.w, -r1.z, c2.x

#line 2749
      mov r4.x, c3.x
      mov r4.y, c4.x
      add r4.z, c127.y, -v0.y
      mad r5.xy, v0, c41.xwzw, c41.zxzw
      mov r5.z, c5.x
      cmp r4.xyz, -r2_abs.w, r4, r5  // ::x<0>, ::y<0>, ::z<0>

#line 2759
      add r5.xy, -r1.yzzw, c1.x
      cmp r6.xy, -r5_abs.x, r4.xzzw, r4.zxzw  // ::input<0,1>

#line 2762
      mov r6.z, r4.y
      cmp r4.xyz, -r5_abs.y, r4, r6  // ::input<0,1,2>

#line 341
      lrp r5.xyz, r4, r3, r2  // ::ConvertRange<0,0,0>

#line 2493
      if_eq c0.x, r1.x

#line 2657
        mov r2.xyz, r5  // ::TLrgb<0,1,2>
      else

#line 2493
        add r2.w, -r1.y, c0.x

#line 763
        add r3.xyz, -r5, c127.y  // ::CMY_Lrgb<0,1,2>

#line 2496
        cmp r2.xyz, -r2_abs.w, r3, r5  // ::TLrgb<0,1,2>
        if_eq c0.x, r1.y

#line 2657
        else

#line 2497
          if_eq c0.x, r1.z

#line 775
            mul r3.yz, r5, c84.w  // ::c<0>, ::g<0>

#line 783
            if_eq r3.y, c127.x

#line 832
              mov r2.xyz, r3.z  // ::HCV_Lrgb<0,1,2>
            else

#line 775
              mul r1.z, r5.x, c61.y  // ::h<0>

#line 783
              cmp r2.w, r5.x, c38.x, c38.y
              mul r1.z, r1.z, r2.w
              frc r1.z, r1.z
              mul r1.z, r1.z, r2.w
              mul r2.w, r1.z, c128.z  // ::hi<0>
              cmp r1.z, r1.z, c38.x, c38.y
              mul r3.w, r1.z, r2.w
              frc r3.w, r3.w
              mul r4.x, r1.z, r3.w  // ::v<0>

#line 788
              frc r5.w, r2.w
              add r2.w, r2.w, -r5.w  // ::fhi<0>

#line 814
              add r6, r2.w, c135

#line 825
              mov r4.yz, c127.xxyw
              mad r4.w, r1.z, -r3.w, c127.y
              cmp r7.xyz, -r6_abs.w, r4, r4.zyww  // ::pure<0,1,2>
              mad r8.xyz, r4.xzyw, c41.wxxw, c41.xzzw
              cmp r7.xyz, -r6_abs.z, r8.zxyw, r7  // ::pure<0,1,2>
              cmp r6.yzw, -r6_abs.y, r4.xyzx, r7.xxyz  // ::pure<0,1,2>
              cmp r6.xyz, -r6_abs.x, r8, r6.yzww  // ::pure<0,1,2>
              cmp r4.xyz, -r2_abs.w, r4.zxyw, r6  // ::pure<0,1,2>

#line 831
              lrp r2.xyz, r3.y, r4, r3.z  // ::result<0,1,2>
            endif

#line 2500
          else
            if_eq c0.x, r1.w

#line 867
              cmp r1.zw, r5.x, c61.xyxy, c61
              mul r1.w, r1.w, r5.x
              frc r1.w, r1.w
              mad r1.z, r1.z, r1.w, c94.x
              mul r1.w, r1.w, c94.x
              cmp r1.z, r5.x, r1.w, r1.z
              min r3.yz, r5, c94.xyww
              mul r4.xy, r3.yzzw, c85
              cmp r3.yz, r3, r4.xxyw, c127.x  // ::s<0>, ::i<0>

#line 874
              if_lt r1.z, c85.z
                add r1.w, -r3.y, c127.y
                mul r2.z, r1.w, r3.z  // ::b<0>
                mad r1.w, r1.z, c136.x, c136.y
                frc r1.w, r1.w
                mad r1.w, r1.w, c136.z, c136.w
                sincos r4.x, r1.w
                mul r1.w, r3.y, r4.x
                mad r2.w, r1.z, -c86.x, c86.y
                mad r2.w, r2.w, c86.z, c86.w
                frc r2.w, r2.w
                mad r2.w, r2.w, c136.z, c136.w
                sincos r6.x, r2.w
                rcp r2.w, r6.x
                mad r1.w, r1.w, r2.w, c127.y
                mul r2.x, r1.w, r3.z  // ::r<0>
                mad r1.w, r4.x, -r2.w, c127.y
                mad r1.w, r3.y, r1.w, c127.y
                mul r2.y, r1.w, r3.z  // ::g<0>
              else
                if_lt r1.z, c36.y
                  mad r1.w, r1.z, c62.x, c62.y  // ::h<0>
                  add r2.w, -r3.y, c127.y
                  mul r2.x, r2.w, r3.z  // ::r<0>
                  mad r2.w, r1.w, c86.z, c86.w
                  frc r2.w, r2.w
                  mad r2.w, r2.w, c136.z, c136.w
                  sincos r4.x, r2.w
                  mul r2.w, r3.y, r4.x
                  add r1.w, -r1.w, c85.w
                  mad r1.w, r1.w, c86.z, c86.w
                  frc r1.w, r1.w
                  mad r1.w, r1.w, c136.z, c136.w
                  sincos r6.x, r1.w
                  rcp r1.w, r6.x
                  mad r2.w, r2.w, r1.w, c127.y
                  mul r2.y, r2.w, r3.z  // ::g<0>

#line 885
                  mad r1.w, r4.x, -r1.w, c127.y
                  mad r1.w, r3.y, r1.w, c127.y
                  mul r2.z, r1.w, r3.z  // ::b<0>
                else

#line 889
                  mad r1.z, r1.z, c62.x, c62.z  // ::h<0>
                  add r1.w, -r3.y, c127.y
                  mul r2.y, r1.w, r3.z  // ::g<0>
                  mad r1.w, r1.z, c86.z, c86.w
                  frc r1.w, r1.w
                  mad r1.w, r1.w, c136.z, c136.w
                  sincos r4.x, r1.w
                  mul r1.w, r3.y, r4.x
                  add r1.z, -r1.z, c85.w
                  mad r1.z, r1.z, c86.z, c86.w
                  frc r1.z, r1.z
                  mad r1.z, r1.z, c136.z, c136.w
                  sincos r6.x, r1.z
                  rcp r1.z, r6.x
                  mad r1.w, r1.w, r1.z, c127.y
                  mad r1.z, r4.x, -r1.z, c127.y
                  mad r1.z, r3.y, r1.z, c127.y
                  mul r2.xz, r1.zyww, r3.z  // ::r<0>, ::b<0>
                endif
              endif

#line 2504
            else
              mov r4.x, c0.x  // ::Model<0>
              if_eq r4.x, c128.x

#line 1025
                mul r2.z, r5.z, c84.w  // ::l<0>

#line 1030
                if_lt -r5.y, c127.x
                  mul r1.zw, r5.xyyx, c64.xyxy  // ::s<0>, ::h<0>
                  mad r2.w, r5.z, c64.z, c64.w
                  add r2.w, -r2_abs.w, c127.y
                  mul r6.x, r1.z, r2.w  // ::chroma<0>
                  cmp r3.yz, r5.x, c137.xxyw, c137.xzww
                  mul r1.z, r1.w, r3.z
                  frc r1.z, r1.z
                  mad r1.z, r3.y, r1.z, -c127.y
                  add r1.z, -r1_abs.z, c127.y
                  mul r6.y, r1.z, r6.x  // ::v<0>

#line 1053
                  add r7, -r5.x, c96

#line 1059
                  add r8, r5.x, -c96.wzyx

#line 1065
                  add r1.z, r5.x, c62.w
                  add r3.yz, -r5.x, c97.xxyw

#line 1070
                  cmp r3.yz, r3, -c127.y, -c127.x
                  cmp r1.z, r1.z, r3.y, c127.x
                  mov r6.z, c127.x
                  cmp r4.yzw, r1.z, c127.x, r6.xxzy  // ::result<0,1,2>
                  cmp r1.z, r8.w, r3.z, c127.x
                  cmp r3.yzw, r1.z, r4, r6.xyzx  // ::result<0,1,2>
                  cmp r7, r7, -c127.y, -c127.x
                  cmp r4.yzw, r8.xzyx, r7.xxyz, c127.x
                  cmp r3.yzw, r4.y, r3, r6.xzyx  // ::result<0,1,2>
                  cmp r3.yzw, r4.z, r3, r6.xzxy  // ::result<0,1,2>
                  cmp r3.yzw, r4.w, r3, r6.xyxz  // ::result<0,1,2>
                  cmp r1.z, r5.x, r7.w, c127.x
                  cmp r3.yzw, r1.z, r3, r6.xxyz  // ::result<0,1,2>
                  mad r1.z, r6.x, c93.y, r2.z  // ::w<0>

#line 1075
                  add r2.xyz, r1.z, r3.yzww  // ::result<0,1,2>
                else

#line 1080
                  mov r2.xy, r2.z  // ::result<0,1>
                endif

#line 2508
              else
                if_eq r4.x, c128.y

#line 932
                  mul r3.yzw, r5.xyzx, c64.xxxy  // ::_s<0>, ::_b<0>, ::SectorPosition<0>
                  frc r1.z, r3.w
                  add r1.z, -r1.z, r3.w  // ::SectorNumber<0>

#line 936
                  mad r1.w, r5.x, c64.y, -r1.z  // ::FractionalSector<0>

#line 939
                  mad r2.w, r5.y, -c64_abs.x, c64_abs.w
                  mul r6.y, r2.w, r3.z  // ::p<0>
                  mad r2.w, r3.y, -r1.w, c127.y
                  mul r6.z, r2.w, r3.z  // ::q<0>
                  add r1.w, -r1.w, c127.y
                  mad r1.w, r3.y, -r1.w, c127.y
                  mul r6.x, r1.w, r3.z  // ::t<0>

#line 968
                  add r7, r1.z, c135

#line 974
                  add r1.w, r1.z, -c128.y

#line 979
                  mov r6.w, r3.z
                  cmp r4.yzw, -r1_abs.w, r6.xwyz, c127.x  // ::r<0>, ::g<0>, ::b<0>
                  cmp r4.yzw, -r7_abs.w, r6.xxyw, r4  // ::r<0>, ::g<0>, ::b<0>
                  cmp r4.yzw, -r7_abs.z, r6, r4  // ::r<0>, ::g<0>, ::b<0>
                  cmp r4.yzw, -r7_abs.y, r6.xywx, r4  // ::r<0>, ::g<0>, ::b<0>
                  cmp r4.yzw, -r7_abs.x, r6.xzwy, r4  // ::r<0>, ::g<0>, ::b<0>
                  cmp r4.yzw, -r1_abs.z, r6.xwxy, r4  // ::r<0>, ::g<0>, ::b<0>
                  cmp r2.xyz, -r3_abs.y, r3.z, r4.yzww  // ::r<0>, ::g<0>, ::b<0>

#line 2512
                else
                  if_eq r4.x, c128.z

#line 932
                    mul r3.yzw, r5.xyzx, c64.xxxy  // ::_s<0>, ::_b<0>, ::SectorPosition<0>
                    frc r1.z, r3.w
                    add r1.z, -r1.z, r3.w  // ::SectorNumber<0>

#line 936
                    mad r1.w, r5.x, c64.y, -r1.z  // ::FractionalSector<0>

#line 939
                    mad r2.w, r5.y, -c64_abs.x, c64_abs.w
                    mul r6.y, r2.w, r3.z  // ::p<0>
                    mad r2.w, r3.y, -r1.w, c127.y
                    mul r6.z, r2.w, r3.z  // ::q<0>
                    add r1.w, -r1.w, c127.y
                    mad r1.w, r3.y, -r1.w, c127.y
                    mul r6.x, r1.w, r3.z  // ::t<0>

#line 968
                    add r7, r1.z, c135

#line 974
                    add r1.w, r1.z, -c128.y

#line 979
                    mov r6.w, r3.z
                    cmp r4.yzw, -r1_abs.w, r6.xwyz, c127.x  // ::r<0>, ::g<0>, ::b<0>
                    cmp r4.yzw, -r7_abs.w, r6.xxyw, r4  // ::r<0>, ::g<0>, ::b<0>
                    cmp r4.yzw, -r7_abs.z, r6, r4  // ::r<0>, ::g<0>, ::b<0>
                    cmp r4.yzw, -r7_abs.y, r6.xywx, r4  // ::r<0>, ::g<0>, ::b<0>
                    cmp r4.yzw, -r7_abs.x, r6.xzwy, r4  // ::r<0>, ::g<0>, ::b<0>
                    cmp r4.yzw, -r1_abs.z, r6.xwxy, r4  // ::r<0>, ::g<0>, ::b<0>
                    cmp r2.xyz, -r3_abs.y, r3.z, r4.yzww  // ::r<0>, ::g<0>, ::b<0>

#line 2516
                  else
                    if_eq r4.x, c128.w

#line 1025
                      mul r2.z, r5.z, c84.w  // ::l<0>

#line 1030
                      if_lt -r5.y, c127.x
                        mul r1.zw, r5.xyyx, c64.xyxy  // ::s<0>, ::h<0>
                        mad r2.w, r5.z, c64.z, c64.w
                        add r2.w, -r2_abs.w, c127.y
                        mul r6.x, r1.z, r2.w  // ::chroma<0>
                        cmp r3.yz, r5.x, c137.xxyw, c137.xzww
                        mul r1.z, r1.w, r3.z
                        frc r1.z, r1.z
                        mad r1.z, r3.y, r1.z, -c127.y
                        add r1.z, -r1_abs.z, c127.y
                        mul r6.y, r1.z, r6.x  // ::v<0>

#line 1053
                        add r7, -r5.x, c96

#line 1059
                        add r8, r5.x, -c96.wzyx

#line 1065
                        add r1.z, r5.x, c62.w
                        add r3.yz, -r5.x, c97.xxyw

#line 1070
                        cmp r3.yz, r3, -c127.y, -c127.x
                        cmp r1.z, r1.z, r3.y, c127.x
                        mov r6.z, c127.x
                        cmp r4.yzw, r1.z, c127.x, r6.xxzy  // ::result<0,1,2>
                        cmp r1.z, r8.w, r3.z, c127.x
                        cmp r3.yzw, r1.z, r4, r6.xyzx  // ::result<0,1,2>
                        cmp r7, r7, -c127.y, -c127.x
                        cmp r4.yzw, r8.xzyx, r7.xxyz, c127.x
                        cmp r3.yzw, r4.y, r3, r6.xzyx  // ::result<0,1,2>
                        cmp r3.yzw, r4.z, r3, r6.xzxy  // ::result<0,1,2>
                        cmp r3.yzw, r4.w, r3, r6.xyxz  // ::result<0,1,2>
                        cmp r1.z, r5.x, r7.w, c127.x
                        cmp r3.yzw, r1.z, r3, r6.xxyz  // ::result<0,1,2>
                        mad r1.z, r6.x, c93.y, r2.z  // ::w<0>

#line 1075
                        add r2.xyz, r1.z, r3.yzww  // ::result<0,1,2>
                      else

#line 1080
                        mov r2.xy, r2.z  // ::result<0,1>
                      endif

#line 2520
                    else
                      if_eq r4.x, c129.x

#line 1025
                        mul r2.z, r5.z, c84.w  // ::l<0>

#line 1030
                        if_lt -r5.y, c127.x
                          mul r1.zw, r5.xyyx, c64.xyxy  // ::s<0>, ::h<0>
                          mad r2.w, r5.z, c64.z, c64.w
                          add r2.w, -r2_abs.w, c127.y
                          mul r6.x, r1.z, r2.w  // ::chroma<0>
                          cmp r3.yz, r5.x, c137.xxyw, c137.xzww
                          mul r1.z, r1.w, r3.z
                          frc r1.z, r1.z
                          mad r1.z, r3.y, r1.z, -c127.y
                          add r1.z, -r1_abs.z, c127.y
                          mul r6.y, r1.z, r6.x  // ::v<0>

#line 1053
                          add r7, -r5.x, c96

#line 1059
                          add r8, r5.x, -c96.wzyx

#line 1065
                          add r1.z, r5.x, c62.w
                          add r3.yz, -r5.x, c97.xxyw

#line 1070
                          cmp r3.yz, r3, -c127.y, -c127.x
                          cmp r1.z, r1.z, r3.y, c127.x
                          mov r6.z, c127.x
                          cmp r4.yzw, r1.z, c127.x, r6.xxzy  // ::result<0,1,2>
                          cmp r1.z, r8.w, r3.z, c127.x
                          cmp r3.yzw, r1.z, r4, r6.xyzx  // ::result<0,1,2>
                          cmp r7, r7, -c127.y, -c127.x
                          cmp r4.yzw, r8.xzyx, r7.xxyz, c127.x
                          cmp r3.yzw, r4.y, r3, r6.xzyx  // ::result<0,1,2>
                          cmp r3.yzw, r4.z, r3, r6.xzxy  // ::result<0,1,2>
                          cmp r3.yzw, r4.w, r3, r6.xyxz  // ::result<0,1,2>
                          cmp r1.z, r5.x, r7.w, c127.x
                          cmp r3.yzw, r1.z, r3, r6.xxyz  // ::result<0,1,2>
                          mad r1.z, r6.x, c93.y, r2.z  // ::w<0>

#line 1075
                          add r2.xyz, r1.z, r3.yzww  // ::result<0,1,2>
                        else

#line 1080
                          mov r2.xy, r2.z  // ::result<0,1>
                        endif

#line 2524
                      else
                        if_eq r4.x, c129.y

#line 1025
                          mul r2.z, r5.z, c84.w  // ::l<0>

#line 1030
                          if_lt -r5.y, c127.x
                            mul r1.zw, r5.xyyx, c64.xyxy  // ::s<0>, ::h<0>
                            mad r2.w, r5.z, c64.z, c64.w
                            add r2.w, -r2_abs.w, c127.y
                            mul r6.x, r1.z, r2.w  // ::chroma<0>
                            cmp r3.yz, r5.x, c137.xxyw, c137.xzww
                            mul r1.z, r1.w, r3.z
                            frc r1.z, r1.z
                            mad r1.z, r3.y, r1.z, -c127.y
                            add r1.z, -r1_abs.z, c127.y
                            mul r6.y, r1.z, r6.x  // ::v<0>

#line 1053
                            add r7, -r5.x, c96

#line 1059
                            add r8, r5.x, -c96.wzyx

#line 1065
                            add r1.z, r5.x, c62.w
                            add r3.yz, -r5.x, c97.xxyw

#line 1070
                            cmp r3.yz, r3, -c127.y, -c127.x
                            cmp r1.z, r1.z, r3.y, c127.x
                            mov r6.z, c127.x
                            cmp r4.yzw, r1.z, c127.x, r6.xxzy  // ::result<0,1,2>
                            cmp r1.z, r8.w, r3.z, c127.x
                            cmp r3.yzw, r1.z, r4, r6.xyzx  // ::result<0,1,2>
                            cmp r7, r7, -c127.y, -c127.x
                            cmp r4.yzw, r8.xzyx, r7.xxyz, c127.x
                            cmp r3.yzw, r4.y, r3, r6.xzyx  // ::result<0,1,2>
                            cmp r3.yzw, r4.z, r3, r6.xzxy  // ::result<0,1,2>
                            cmp r3.yzw, r4.w, r3, r6.xyxz  // ::result<0,1,2>
                            cmp r1.z, r5.x, r7.w, c127.x
                            cmp r3.yzw, r1.z, r3, r6.xxyz  // ::result<0,1,2>
                            mad r1.z, r6.x, c93.y, r2.z  // ::w<0>

#line 1075
                            add r2.xyz, r1.z, r3.yzww  // ::result<0,1,2>
                          else

#line 1080
                            mov r2.xy, r2.z  // ::result<0,1>
                          endif

#line 2528
                        else
                          add r1.z, r4.x, -c129.z

#line 1130
                          mul r3.yzw, r5.xyzz, c115.xxyz  // ::s<0>, ::m<0>

#line 1125
                          mad r1.w, r5.x, c97.z, c97.w
                          frc r1.w, r1.w
                          mad r1.w, r1.w, c136.z, c136.w
                          sincos r6.x, r1.w  // ::u<0>
                          mul r1.w, r3.y, r6.x  // ::v<0>

#line 1130
                          mul r2.w, r1.w, c115.w
                          mad r1.w, r1.w, c115.w, r3.w
                          mad r1.w, r5.z, -c114.x, r1.w
                          mul r6.y, r1.w, c51.y  // ::g<0>
                          mad r1.w, r5.z, c114.y, -r2.w
                          mul r6.z, r1.w, -c93.y  // ::b<0>

#line 2532
                          mov r6.x, r3.z
                          cmp r2.xyz, -r1_abs.z, r6, r2  // ::TLrgb<0,1,2>
                          if_eq r4.x, c129.z

#line 2657
                          else

#line 2533
                            if_eq r4.x, c129.w

#line 1197
                              mad r1.z, r5.y, -c64_abs.x, c64_abs.w  // ::minOverMax<0>
                              if_lt -r1.z, c127.x

#line 1202
                                if_lt r5.x, c40.w
                                  mul r1.w, r5.x, c64.y  // ::h<0>
                                  rcp r2.w, r1.z
                                  lrp r3.z, r1.w, r2.w, c127.y  // ::part<0>
                                  mul r3.w, r2.w, r2.w
                                  mul r3.z, r3.z, r3.z
                                  mul r3.z, r3.z, c44.y
                                  mad r3.z, r3.w, c44.x, r3.z
                                  add r3.z, r3.z, c98.w
                                  rsq r3.z, r3.z
                                  mul r6.z, r3.z, r5.z  // ::b<0>
                                  mul r6.x, r2.w, r6.z  // ::r<0>
                                  mad r2.w, r6.z, r2.w, -r6.z
                                  mad r6.y, r1.w, r2.w, r6.z  // ::g<0>
                                else
                                  if_lt r5.x, c85.z

#line 1213
                                    mad r1.w, r5.x, -c114.z, c114.w
                                    mul r1.w, r1.w, c128.z  // ::h<0>
                                    rcp r2.w, r1.z
                                    lrp r3.z, r1.w, r2.w, c127.y  // ::part<0>
                                    mul r3.w, r2.w, r2.w
                                    mul r3.z, r3.z, r3.z
                                    mul r3.z, r3.z, c44.x
                                    mad r3.z, r3.w, c44.y, r3.z
                                    add r3.z, r3.z, c98.w
                                    rsq r3.z, r3.z
                                    mul r6.z, r3.z, r5.z  // ::b<0>
                                    mul r6.y, r2.w, r6.z  // ::g<0>
                                    mad r2.w, r6.z, r2.w, -r6.z
                                    mad r6.x, r1.w, r2.w, r6.z  // ::r<0>
                                  else
                                    if_lt r5.x, c65.x
                                      mad r1.w, r5.x, c65.y, c65.z
                                      mul r1.w, r1.w, c128.z  // ::h<0>
                                      rcp r2.w, r1.z
                                      lrp r3.z, r1.w, r2.w, c127.y  // ::part<0>

#line 1224
                                      mul r3.w, r2.w, r2.w
                                      mul r3.z, r3.z, r3.z
                                      mul r3.z, r3.z, c98.w
                                      mad r3.z, r3.w, c44.y, r3.z
                                      add r3.z, r3.z, c44.x
                                      rsq r3.z, r3.z
                                      mul r6.x, r3.z, r5.z  // ::r<0>
                                      mul r6.y, r2.w, r6.x  // ::g<0>
                                      mad r2.w, r6.x, r2.w, -r6.x
                                      mad r6.z, r1.w, r2.w, r6.x  // ::b<0>
                                    else
                                      if_lt r5.x, c36.y
                                        mad r1.w, r5.x, -c65.y, c65.w
                                        mul r1.w, r1.w, c128.z  // ::h<0>
                                        rcp r2.w, r1.z
                                        lrp r3.z, r1.w, r2.w, c127.y  // ::part<0>
                                        mul r3.w, r2.w, r2.w
                                        mul r3.z, r3.z, r3.z
                                        mul r3.z, r3.z, c44.y
                                        mad r3.z, r3.w, c98.w, r3.z
                                        add r3.z, r3.z, c44.x
                                        rsq r3.z, r3.z
                                        mul r6.x, r3.z, r5.z  // ::r<0>
                                        mul r6.z, r2.w, r6.x  // ::b<0>

#line 1235
                                        mad r2.w, r6.x, r2.w, -r6.x
                                        mad r6.y, r1.w, r2.w, r6.x  // ::g<0>
                                      else
                                        add r1.w, r5.x, -c119.w
                                        mad r2.w, r5.x, c66.x, c66.y
                                        mul r2.w, r2.w, c128.z  // ::h<0>
                                        rcp r1.z, r1.z
                                        lrp r3.z, r2.w, r1.z, c127.y  // ::part<0>
                                        mul r3.w, r1.z, r1.z

#line 1251
                                        mul r4.yz, r3.w, c66.xzww

#line 1242
                                        mul r3.z, r3.z, r3.z
                                        mad r3.z, r3.z, c44.x, r4.y
                                        add r3.z, r3.z, c44.y
                                        rsq r3.z, r3.z
                                        mul r7.y, r3.z, r5.z  // ::g<0>
                                        mul r7.z, r1.z, r7.y  // ::b<0>
                                        mad r3.z, r7.y, r1.z, -r7.y
                                        mad r7.x, r2.w, r3.z, r7.y  // ::r<0>

#line 1249
                                        mad r2.w, r5.x, -c101.x, c101.y
                                        mul r2.w, r2.w, c128.z  // ::h<0>
                                        lrp r3.z, r2.w, r1.z, c127.y  // ::part<0>
                                        mul r3.z, r3.z, r3.z
                                        mad r3.z, r3.z, c98.w, r4.z
                                        add r3.z, r3.z, c44.y
                                        rsq r3.z, r3.z
                                        mul r8.y, r3.z, r5.z  // ::g<0>
                                        mul r8.x, r1.z, r8.y  // ::r<0>
                                        mad r1.z, r8.y, r1.z, -r8.y
                                        mad r8.z, r2.w, r1.z, r8.y  // ::b<0>
                                        cmp r6.xyz, r1.w, r8, r7  // ::r<0>, ::g<0>, ::b<0>
                                      endif
                                    endif
                                  endif
                                endif
                              else

#line 1259
                                if_lt r5.x, c40.w
                                  mul r1.z, r5.x, c64.y  // ::h<0>
                                  mul r1.w, r5.z, r5.z
                                  mul r2.w, r5.x, r1.z
                                  mad r2.w, r2.w, c101.z, c101.w
                                  rcp r2.w, r2.w
                                  mul r1.w, r1.w, r2.w
                                  rsq r1.w, r1.w
                                  rcp r6.x, r1.w  // ::r<0>
                                  mul r6.y, r1.z, r6.x  // ::g<0>
                                  mov r6.z, c127.x
                                else
                                  if_lt r5.x, c85.z
                                    mad r1.z, r5.x, -c114.z, c114.w
                                    mul r1.w, r1.z, c128.z  // ::h<0>

#line 1270
                                    mul r2.w, r5.z, r5.z
                                    mul r1.z, r1.z, r1.w
                                    mad r1.z, r1.z, c103.x, c103.y
                                    rcp r1.z, r1.z
                                    mul r1.z, r1.z, r2.w
                                    rsq r1.z, r1.z
                                    rcp r6.y, r1.z  // ::g<0>
                                    mul r6.x, r1.w, r6.y  // ::r<0>
                                    mov r6.z, c127.x
                                  else

#line 1293
                                    mad r1.zw, r5.x, c138.x, c138.xyyz
                                    mul r3.zw, r1, c128.z  // ::h<0,0>

#line 1278
                                    mul r2.w, r5.z, r5.z

#line 1294
                                    mul r1.zw, r1, r3
                                    mad r1.zw, r1, c103.xyzx, c103.xyyw

#line 1278
                                    rcp r1.z, r1.z
                                    mul r1.z, r1.z, r2.w
                                    rsq r1.z, r1.z
                                    rcp r7.y, r1.z  // ::g<0>
                                    mul r7.z, r3.z, r7.y  // ::b<0>

#line 1301
                                    mad r4.yz, r5.x, -c138_abs.x, c138_abs.xzww
                                    mul r8.xy, r4.yzzw, c128.z  // ::h<0,0>
                                    mul r4.yz, r4, r8.xxyw
                                    mad r4.yz, r4, c102.xxyw, c102.xzww

#line 1286
                                    rcp r1.z, r4.y
                                    mul r1.z, r1.z, r2.w
                                    rsq r1.z, r1.z
                                    rcp r9.z, r1.z  // ::b<0>
                                    mul r9.y, r8.x, r9.z  // ::g<0>

#line 1291
                                    add r8.xzw, r5.x, c88.xyyz

#line 1294
                                    rcp r1.z, r1.w
                                    mul r1.z, r1.z, r2.w
                                    rsq r1.z, r1.z
                                    rcp r10.z, r1.z  // ::b<0>
                                    mul r10.x, r3.w, r10.z  // ::r<0>

#line 1302
                                    rcp r1.z, r4.z
                                    mul r1.z, r1.z, r2.w
                                    rsq r1.z, r1.z
                                    rcp r11.x, r1.z  // ::r<0>
                                    mul r11.z, r8.y, r11.x  // ::b<0>
                                    mov r11.y, c127.x
                                    mov r10.y, c127.x
                                    cmp r4.yzw, r8.w, r11.xxyz, r10.xxyz  // ::r<0>, ::g<0>, ::b<0>
                                    mov r9.x, c127.x
                                    cmp r4.yzw, r8.z, r4, r9.xxyz  // ::r<0>, ::g<0>, ::b<0>
                                    mov r7.x, c127.x
                                    cmp r6.xyz, r8.x, r4.yzww, r7  // ::r<0>, ::g<0>, ::b<0>
                                  endif
                                endif
                              endif

#line 1309
                              add r4.yzw, r6.xxyz, -c93.y
                              frc r6.xyz, r4.yzww
                              add r4.yzw, r4, -r6.xxyz
                              mul_sat r2.xyz, r4.yzww, c85.y  // ::result<0,1,2>

#line 2536
                            else
                              if_eq r4.x, c130.x

#line 1546
                                mul r1.z, r5.z, c88.w

#line 243
                                mad r1.w, r5.x, -c136.x, c136.y
                                mad r2.w, r5.z, -c67.x, c67.y
                                mul r2.w, r2_abs.w, r2_abs.w
                                mad r1.w, r1_abs.w, r1_abs.w, r2.w
                                rsq r1.w, r1.w
                                rcp r1.w, r1.w  // ::GetDistance<0>

#line 737
                                mul_sat r1.w, r1.w, c67.z  // ::n<0>

#line 740
                                add r1.w, r1.w, -c93.y
                                frc r1.w, r1.w
                                mad r1.w, r1.w, c136.z, c136.w
                                sincos r6.xy, r1.w
                                mul r3.zw, r5.y, r6.xyxy  // ::u<0>, ::v<0>

#line 1538
                                add r1.w, r5.z, c89.x
                                mul r2.w, r1.w, c44.w  // ::fy<0>
                                mul r3.w, r3.w, c67.w
                                mad r3.z, r3.z, c72.x, r2.w  // ::fx<0>
                                mad r1.w, r1.w, c44.w, -r3.w  // ::fz<0>
                                mul r3.w, r3.z, r3.z
                                mul r4.y, r3.w, r3.z  // ::fx3<0>
                                mul r4.z, r1.w, r1.w
                                mul r4.w, r1.w, r4.z  // ::fz3<0>
                                mad r3.w, r3.z, -r3.w, c91.w
                                mad r3.z, r3.z, c87.x, c87.y
                                mul r3.z, r3.z, c88.w
                                cmp r3.z, r3.w, r3.z, r4.y  // ::xr<0>
                                add r3.w, -r5.z, c72.y
                                mul r4.y, r2.w, r2.w
                                mul r2.w, r2.w, r4.y
                                cmp r2.y, r3.w, r1.z, r2.w  // ::yr<0>
                                mad r1.z, r1.w, -r4.z, c91.w
                                mad r1.w, r1.w, c87.x, c87.y
                                mul r1.w, r1.w, c88.w
                                cmp r1.z, r1.z, r1.w, r4.w  // ::zr<0>

#line 260
                                rcp r1.w, c9.x
                                mul r2.w, r1.w, c8.x  // ::GetWhite<0>
                                add r3.w, r1.y, -c8.x
                                add r3.w, r3.w, -c9.x
                                mul r1.w, r1.w, r3.w  // ::GetWhite<2>

#line 1550
                                mul r2.x, r2.w, r3.z  // ::LAB_Lrgb<0>
                                mul r2.z, r1.w, r1.z  // ::LAB_Lrgb<2>

#line 2540
                              else
                                if_eq r4.x, c130.y

#line 737
                                  mul r1.z, r5.z, c84.w  // GetDistance::y2<0>

#line 243
                                  mad r1.w, r5.x, -c136.x, c136.y
                                  mad r2.w, r5.z, -c67.x, c67.y
                                  mul r2.w, r2_abs.w, r2_abs.w
                                  mad r1.w, r1_abs.w, r1_abs.w, r2.w
                                  rsq r1.w, r1.w
                                  rcp r1.w, r1.w  // ::GetDistance<0>

#line 737
                                  mul_sat r1.w, r1.w, c67.z  // ::n<0>

#line 740
                                  add r1.w, r1.w, -c93.y
                                  frc r1.w, r1.w
                                  mad r1.w, r1.w, c136.z, c136.w
                                  sincos r6.xy, r1.w
                                  mul r3.zw, r5.y, r6.xyxy  // ::u<0>, ::v<0>

#line 260
                                  rcp r1.w, c9.x
                                  mul r2.w, r1.w, c8.x  // ::GetWhite<0>
                                  add r4.y, r1.y, -c8.x
                                  add r4.y, r4.y, -c9.x
                                  mul r4.z, r1.w, r4.y  // ::GetWhite<2>

#line 276
                                  mov r6.x, c8.x  // ::WhiteX<0>
                                  mad r6.xy, r1.w, r6.x, c48.zwzw

#line 286
                                  mad r4.yw, r1.w, r4.y, c45.xxzy

#line 276
                                  cmp r1.w, -r4_abs.y, -c127.y, -c127.x
                                  cmp r1.w, -r6_abs.x, r1.w, c127.x
                                  mul r4.y, r6.y, c45.z  // ::Ka<0>

#line 286
                                  mul r4.w, r4.w, c95.x  // ::Ka<0>

#line 1610
                                  mul r1.z, r1.z, r1.z  // ::Y<0>
                                  rcp r4.y, r4.y
                                  cmp r4.y, r1.w, r4.y, c72.z
                                  mul r3.z, r3.z, r4.y
                                  rsq r4.y, r1.z
                                  rcp r4.y, r4.y
                                  mad r3.z, r3.z, r4.y, r1.z
                                  mul r2.w, r2.w, r3.z  // ::X<0>
                                  rcp r3.z, r4.w
                                  cmp r1.w, r1.w, r3.z, c72.w
                                  mul r1.w, r1.w, r3.w
                                  mad r1.w, r1.w, r4.y, -r1.z
                                  mul r1.w, -r4.z, r1.w  // ::Z<0>

#line 306
                                  mul r4.yzw, r1.z, c20.xxyz
                                  mad r4.yzw, r2.w, c19.xxyz, r4
                                  mad r2.xyz, r1.w, c21, r4.yzww  // ::x<0>, ::y<0>, ::z<0>

#line 2544
                                else
                                  if_eq r4.x, c130.z

#line 1677
                                    mul r4.yzw, r5.z, c108.xxyz

#line 243
                                    mad r1.z, r5.x, -c136.x, c136.y
                                    mad r1.w, r5.z, -c67.x, c67.y
                                    mul r1.w, r1_abs.w, r1_abs.w
                                    mad r1.z, r1_abs.z, r1_abs.z, r1.w
                                    rsq r1.z, r1.z
                                    rcp r1.z, r1.z  // ::GetDistance<0>

#line 737
                                    mul_sat r1.z, r1.z, c67.z  // ::n<0>

#line 740
                                    add r1.z, r1.z, -c93.y
                                    frc r1.z, r1.z
                                    mad r1.z, r1.z, c136.z, c136.w
                                    sincos r6.xy, r1.z
                                    mul r1.zw, r5.y, r6.xyxy  // ::u<0>, ::v<0>

#line 260
                                    rcp r2.w, c9.x
                                    mul r3.z, r2.w, c8.x  // ::GetWhite<0>
                                    add r3.w, r1.y, -c8.x
                                    add r3.w, r3.w, -c9.x
                                    mul r3.w, r2.w, r3.w  // ::GetWhite<2>

#line 292
                                    mul r3.z, r3.z, c128.x
                                    mov r6.x, c8.x  // ::WhiteX<0>
                                    mad r2.w, r2.w, r6.x, c130.w
                                    mad r2.w, r3.w, c127.w, r2.w
                                    rcp r2.w, r2.w
                                    mul r3.z, r2.w, r3.z  // ::ComputeKu<0>

#line 297
                                    mul r2.w, r2.w, c129.y  // ::ComputeKv<0>

#line 1675
                                    add r3.w, -r5.z, c72.y
                                    add r5.w, r5.z, c89.x
                                    mul r5.w, r5.w, c44.w
                                    mul r6.x, r5.w, r5.w
                                    mul r5.w, r5.w, r6.x
                                    cmp r3.w, r3.w, r4.y, r5.w  // ::Y<0>
                                    mad r1.z, r4.w, r3.z, r1.z
                                    rcp r1.z, r1.z
                                    mad r1.z, r4.z, r1.z, -c127.y
                                    mul r1.z, r1.z, c40.y  // ::a<0>
                                    mul r3.z, r3.w, -c128.y  // ::b<0>
                                    mul r4.y, r5.z, -c29.w
                                    mad r1.w, r4.w, r2.w, r1.w
                                    rcp r1.w, r1.w
                                    mad r1.w, r4.y, r1.w, -c128.y
                                    mad r1.w, r3.w, r1.w, -r3.z
                                    rcp r2.w, r1.z
                                    mul r1.w, r1.w, r2.w  // ::X<0>
                                    mad r1.z, r1.w, r1.z, r3.z  // ::Z<0>

#line 1686
                                    max r2.w, r1.w, c127.x  // ::X<0>

#line 1689
                                    max r1.w, r3.w, c127.x  // ::Y<0>

#line 1692
                                    max r3.z, r1.z, c127.x  // ::Z<0>

#line 306
                                    mul r4.yzw, r1.w, c20.xxyz
                                    mad r4.yzw, r2.w, c19.xxyz, r4
                                    mad r2.xyz, r3.z, c21, r4.yzww  // ::x<0>, ::y<0>, ::z<0>

#line 2548
                                  else
                                    if_eq r4.x, c130.w

#line 243
                                      mad r1.z, r5.x, -c136.x, c136.y
                                      mad r1.w, r5.z, -c67.x, c67.y
                                      mul r1.w, r1_abs.w, r1_abs.w
                                      mad r1.z, r1_abs.z, r1_abs.z, r1.w
                                      rsq r1.z, r1.z
                                      rcp r1.z, r1.z  // ::GetDistance<0>

#line 737
                                      mul_sat r1.z, r1.z, c67.z  // ::n<0>

#line 740
                                      add r1.z, r1.z, -c93.y
                                      frc r1.z, r1.z
                                      mad r1.z, r1.z, c136.z, c136.w
                                      sincos r6.xy, r1.z
                                      mul r6, r5.y, r6.xyxy  // ::u<0>, ::v<0>, ::u<0>, ::v<0>

#line 1470
                                      mad r1.z, r5.z, c68.x, c68.y  // ::Jz<0>
                                      mad r1.w, r1.z, c68.z, c68.w
                                      rcp r1.w, r1.w

#line 1475
                                      mul r3.zw, r6.xyxz, c113.xyxy
                                      mad r2.w, r1.z, r1.w, r3.z
                                      mad r2.w, r6.y, c108.w, r2.w  // PerceptualQuantizerInverse::X<0>

#line 325
                                      pow r4.y, r2.w, c113.z  // ::XX<0>
                                      add r2.w, -r4.y, c69.z
                                      mad r4.y, r4.y, c90.x, c90.y
                                      rcp r4.y, r4.y
                                      mul r2.w, r2.w, r4.y
                                      pow r4.y, r2.w, c113.w

#line 1475
                                      mad r1.zw, r1.z, r1.w, -r3
                                      mad r1.zw, r6.xyyw, -c90, r1  // PerceptualQuantizerInverse::X<0,0>

#line 325
                                      pow r2.w, r1.z, c113.z  // ::XX<0>
                                      add r1.z, -r2.w, c69.z
                                      mad r2.w, r2.w, c90.x, c90.y
                                      rcp r2.w, r2.w
                                      mul r1.z, r1.z, r2.w
                                      pow r2.w, r1.z, c113.w
                                      pow r3.z, r1.w, c113.z  // ::XX<0>
                                      add r1.z, -r3.z, c69.z
                                      mad r1.w, r3.z, c90.x, c90.y
                                      rcp r1.w, r1.w
                                      mul r1.z, r1.w, r1.z
                                      pow r3.z, r1.z, c113.w

#line 1479
                                      mul r6.xyz, r2.w, c111
                                      mad r1.zw, r4.y, c112.xyxy, -r6.xyxz
                                      mad r2.w, r4.y, c111.w, r6.y
                                      mad r2.w, r3.z, -c112.z, r2.w  // ::Y<0>
                                      mad r1.zw, r3.z, c100.xyxy, r1  // ::X<0>, ::Z<0>
                                      mul r2.w, r2.w, c71.w  // ::xyz<1>
                                      mul r1.zw, r1, c71.w  // ::xyz<0,2>

#line 306
                                      mul r4.yzw, r2.w, c20.xxyz
                                      mad r4.yzw, r1.z, c19.xxyz, r4
                                      mad r2.xyz, r1.w, c21, r4.yzww  // ::x<0>, ::y<0>, ::z<0>

#line 2552
                                    else
                                      if_eq r4.x, c89.x

#line 1382
                                        mul r1.z, r5.z, c84.w  // ::black<0>
                                        mad r1.z, r5.y, c84.w, r1.z

#line 1390
                                        if_ge r1.z, c127.y

#line 1386
                                          rcp r1.z, r1.z
                                          mul r2.z, r1.z, r3.y  // ::gray<0>

#line 1401
                                          mov r2.xy, r2.z  // ::HWB_Lrgb<0,1>
                                        else

#line 1026
                                          mul r1.z, r5.x, c64.y  // ::h<0>

#line 1033
                                          cmp r3.zw, r5.x, c137.xyxy, c137
                                          mul r1.z, r1.z, r3.w
                                          frc r1.z, r1.z
                                          mad r1.z, r3.z, r1.z, -c127.y
                                          add r6.y, -r1_abs.z, c127.y  // ::v<0>

#line 1053
                                          add r7, -r5.x, c96

#line 1059
                                          add r8, r5.x, -c96.wzyx

#line 1065
                                          add r1.z, r5.x, c62.w
                                          add r3.zw, -r5.x, c97.xyxy

#line 1070
                                          cmp r3.zw, r3, c139.xyxy, c139

#line 1065
                                          cmp r9.x, r1.z, r3.z, c127.x  // ::result<0>

#line 1070
                                          mov r6.xz, c127.yyxw
                                          cmp r9.yz, -r9.x, c127.x, r6.xzyw  // ::result<1,2>
                                          cmp r1.z, r8.w, r3.w, c127.x
                                          cmp r4.yzw, r1.z, r9.xxyz, r6.xyzx  // ::result<0,1,2>
                                          cmp r7, r7, -c127.y, -c127.x
                                          cmp r7.xyz, r8.zyxw, r7, c127.x
                                          cmp r4.yzw, r7.x, r4, r6.xzyx  // ::result<0,1,2>
                                          cmp r4.yzw, r7.y, r4, r6.xzxy  // ::result<0,1,2>
                                          cmp r4.yzw, r7.z, r4, r6.xyxz  // ::result<0,1,2>
                                          cmp r1.z, r5.x, r7.w, c127.x
                                          cmp r4.yzw, r1.z, r4, r6.xxyz  // ::result<0,1,2>

#line 1393
                                          mad r1.z, r5.y, -c64_abs.x, c64_abs.w
                                          mad r1.z, r5.z, -c84.w, r1.z

#line 1400
                                          mad r2.xyz, r4.yzww, r1.z, r3.y  // ::rgb<0,1,2>
                                        endif

#line 2556
                                      else
                                        add r1.z, r4.x, c89.y

#line 2560
                                        mad r3.yzw, r5.xxyz, c118.xxyy, c118.xzyy
                                        cmp r2.xyz, -r1_abs.z, r3.yzww, r2  // ::TLrgb<0,1,2>
                                        if_eq r4.x, -c89.y

#line 2657
                                        else

#line 2561
                                          add r1.z, r4.x, c70.x

#line 2148
                                          add r3.yz, r5.xzyw, c47.z
                                          mad r1.w, r3.z, -c112.w, r5.x
                                          mad r1.w, r3.y, -c100.z, r1.w  // ::ycbcr<1>
                                          mad r4.yz, r3, c117.xxyw, r5.x  // ::ycbcr<0,2>

#line 2128
                                          add r4.yz, r4, c117.xzww
                                          add r1.w, r1.w, c47.z

#line 2083
                                          mul r4.zw, r4.xyyz, c74.xyxy  // ::ypbpr<0>
                                          add r6.x, r4.w, r4.z  // ::r<0>
                                          mad r6.z, r1.w, c100.w, r4.z  // ::b<0>
                                          mul r1.w, r6.x, c107.x
                                          mad r1.w, r4.y, c74.x, -r1.w
                                          mad r1.w, r6.z, -c107.z, r1.w
                                          mul r6.y, r1.w, c74.z  // ::g<0>

#line 2564
                                          cmp r2.xyz, -r1_abs.z, r6, r2  // ::TLrgb<0,1,2>
                                          if_eq r4.x, c70.y

#line 2657
                                          else

#line 2565
                                            if_eq r4.x, c70.w

#line 1470
                                              add r1.z, r5.x, -c46.w  // ::Jz<0>
                                              mad r1.w, r1.z, c68.z, c68.w
                                              rcp r1.w, r1.w

#line 1475
                                              mul r4.yz, r5.y, c116.xxyw
                                              mad r2.w, r1.z, r1.w, r4.y
                                              mad r2.w, r5.z, c74.w, r2.w  // PerceptualQuantizerInverse::X<0>

#line 325
                                              pow r3.w, r2.w, c113.z  // ::XX<0>
                                              add r2.w, -r3.w, c69.z
                                              mad r3.w, r3.w, c90.x, c90.y
                                              rcp r3.w, r3.w
                                              mul r2.w, r2.w, r3.w
                                              pow r3.w, r2.w, c113.w

#line 1475
                                              mad r1.zw, r1.z, r1.w, -r4.xyyz
                                              mad r1.zw, r5.z, -c116, r1  // PerceptualQuantizerInverse::X<0,0>

#line 325
                                              pow r2.w, r1.z, c113.z  // ::XX<0>
                                              add r1.z, -r2.w, c69.z
                                              mad r2.w, r2.w, c90.x, c90.y
                                              rcp r2.w, r2.w
                                              mul r1.z, r1.z, r2.w
                                              pow r2.w, r1.z, c113.w
                                              pow r4.y, r1.w, c113.z  // ::XX<0>
                                              add r1.z, -r4.y, c69.z
                                              mad r1.w, r4.y, c90.x, c90.y
                                              rcp r1.w, r1.w
                                              mul r1.z, r1.w, r1.z
                                              pow r4.y, r1.z, c113.w

#line 1479
                                              mul r6.xyz, r2.w, c111
                                              mad r1.zw, r3.w, c112.xyxy, -r6.xyxz
                                              mad r2.w, r3.w, c111.w, r6.y
                                              mad r2.w, r4.y, -c112.z, r2.w  // ::Y<0>
                                              mad r1.zw, r4.y, c100.xyxy, r1  // ::X<0>, ::Z<0>
                                              mul r2.w, r2.w, c71.w  // ::xyz<1>
                                              mul r1.zw, r1, c71.w  // ::xyz<0,2>

#line 306
                                              mul r4.yzw, r2.w, c20.xxyz
                                              mad r4.yzw, r1.z, c19.xxyz, r4
                                              mad r2.xyz, r1.w, c21, r4.yzww  // ::x<0>, ::y<0>, ::z<0>

#line 2568
                                            else
                                              if_eq r4.x, c31.y

#line 718
                                                mad r1.z, r5.z, c105.x, c105.y
                                                frc r1.z, r1.z
                                                mad r1.z, r1.z, c136.z, c136.w
                                                sincos r6.xy, r1.z
                                                mul r6, r5.y, r6.xyxy  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1470
                                                add r1.z, r5.x, -c46.w  // ::Jz<0>
                                                mad r1.w, r1.z, c68.z, c68.w
                                                rcp r1.w, r1.w

#line 1475
                                                mul r4.yz, r6.xxzw, c116.xxyw
                                                mad r2.w, r1.z, r1.w, r4.y
                                                mad r2.w, r6.y, c74.w, r2.w  // PerceptualQuantizerInverse::X<0>

#line 325
                                                pow r3.w, r2.w, c113.z  // ::XX<0>
                                                add r2.w, -r3.w, c69.z
                                                mad r3.w, r3.w, c90.x, c90.y
                                                rcp r3.w, r3.w
                                                mul r2.w, r2.w, r3.w
                                                pow r3.w, r2.w, c113.w

#line 1475
                                                mad r1.zw, r1.z, r1.w, -r4.xyyz
                                                mad r1.zw, r6.xyyw, -c116, r1  // PerceptualQuantizerInverse::X<0,0>

#line 325
                                                pow r2.w, r1.z, c113.z  // ::XX<0>
                                                add r1.z, -r2.w, c69.z
                                                mad r2.w, r2.w, c90.x, c90.y
                                                rcp r2.w, r2.w
                                                mul r1.z, r1.z, r2.w
                                                pow r2.w, r1.z, c113.w
                                                pow r4.y, r1.w, c113.z  // ::XX<0>
                                                add r1.z, -r4.y, c69.z
                                                mad r1.w, r4.y, c90.x, c90.y
                                                rcp r1.w, r1.w
                                                mul r1.z, r1.w, r1.z
                                                pow r4.y, r1.z, c113.w

#line 1479
                                                mul r6.xyz, r2.w, c111
                                                mad r1.zw, r3.w, c112.xyxy, -r6.xyxz
                                                mad r2.w, r3.w, c111.w, r6.y
                                                mad r2.w, r4.y, -c112.z, r2.w  // ::Y<0>
                                                mad r1.zw, r4.y, c100.xyxy, r1  // ::X<0>, ::Z<0>
                                                mul r2.w, r2.w, c71.w  // ::xyz<1>
                                                mul r1.zw, r1, c71.w  // ::xyz<0,2>

#line 306
                                                mul r4.yzw, r2.w, c20.xxyz
                                                mad r4.yzw, r1.z, c19.xxyz, r4
                                                mad r2.xyz, r1.w, c21, r4.yzww  // ::x<0>, ::y<0>, ::z<0>

#line 2572
                                              else
                                                add r1.z, r4.x, c31.z

#line 1538
                                                add r1.w, r5.x, c89.x
                                                mul r2.w, r1.w, c44.w  // ::fy<0>

#line 1546
                                                add r3.w, -r5.x, c72.y
                                                mul r4.y, r2.w, r2.w
                                                mul r4.y, r2.w, r4.y
                                                mul r4.z, r5.x, c88.w
                                                cmp r6.y, r3.w, r4.z, r4.y  // ::yr<0>

#line 260
                                                rcp r3.w, c9.x
                                                mul r4.y, r3.w, c8.x  // ::GetWhite<0>
                                                add r1.y, r1.y, -c8.x
                                                add r1.y, r1.y, -c9.x
                                                mul r4.z, r1.y, r3.w  // ::GetWhite<2>

#line 2577
                                                if_eq r4.x, c31.w

#line 1540
                                                  mul r4.w, r5.z, c67.w
                                                  mad r5.w, r5.y, c72.x, r2.w  // ::fx<0>
                                                  mad r4.w, r1.w, c44.w, -r4.w  // ::fz<0>
                                                  mul r6.w, r5.w, r5.w
                                                  mul r7.x, r5.w, r6.w  // ::fx3<0>
                                                  mul r7.y, r4.w, r4.w
                                                  mul r7.z, r4.w, r7.y  // ::fz3<0>
                                                  mad r6.w, r5.w, -r6.w, c91.w
                                                  mad r5.w, r5.w, c87.x, c87.y
                                                  mul r5.w, r5.w, c88.w
                                                  cmp r5.w, r6.w, r5.w, r7.x  // ::xr<0>
                                                  mad r6.w, r4.w, -r7.y, c91.w
                                                  mad r4.w, r4.w, c87.x, c87.y
                                                  mul r4.w, r4.w, c88.w
                                                  cmp r4.w, r6.w, r4.w, r7.z  // ::zr<0>

#line 1550
                                                  mul r6.x, r4.y, r5.w  // ::LAB_Lrgb<0>
                                                  mul r6.z, r4.z, r4.w  // ::LAB_Lrgb<2>

#line 2576
                                                  cmp r2.xyz, -r1_abs.z, r6, r2  // ::TLrgb<0,1,2>

#line 2657
                                                else

#line 2577
                                                  if_eq r4.x, c47.w

#line 276
                                                    mov r7.x, c8.x  // ::WhiteX<0>
                                                    mad r7.xy, r3.w, r7.x, c48.zwzw

#line 286
                                                    mad r7.zw, r3.w, r1.y, c45.xyxy

#line 276
                                                    cmp r1.z, -r7_abs.z, -c127.y, -c127.x
                                                    cmp r1.z, -r7_abs.x, r1.z, c127.x
                                                    mul r4.w, r7.y, c45.z  // ::Ka<0>

#line 286
                                                    mul r5.w, r7.w, c95.x  // ::Ka<0>

#line 1610
                                                    mul r6.w, r5.x, c84.w
                                                    mul r6.w, r6.w, r6.w  // ::Y<0>
                                                    rcp r4.w, r4.w
                                                    cmp r4.w, r1.z, r4.w, c72.z
                                                    mul r4.w, r4.w, r5.y
                                                    rsq r7.x, r6.w
                                                    rcp r7.x, r7.x
                                                    mad r4.w, r4.w, r7.x, r6.w
                                                    mul r4.w, r4.y, r4.w  // ::X<0>
                                                    rcp r5.w, r5.w
                                                    cmp r1.z, r1.z, r5.w, c72.w
                                                    mul r1.z, r1.z, r5.z
                                                    mad r1.z, r1.z, r7.x, -r6.w
                                                    mul r1.z, -r4.z, r1.z  // ::Z<0>

#line 306
                                                    mul r7.xyz, r6.w, c20
                                                    mad r7.xyz, r4.w, c19, r7
                                                    mad r2.xyz, r1.z, c21, r7  // ::x<0>, ::y<0>, ::z<0>

#line 2580
                                                  else

#line 2593
                                                    add r7, r4.x, c131

#line 1677
                                                    mul r8.xyz, r5.x, c110

#line 718
                                                    mad r1.z, r5.z, c105.x, c105.y
                                                    frc r1.z, r1.z
                                                    mad r1.z, r1.z, c136.z, c136.w
                                                    sincos r9.xy, r1.z
                                                    mul r9.zw, r5.y, r9.xyxy  // ::a<0>, ::b<0>

#line 1540
                                                    mul r1.z, r9.w, c67.w
                                                    mad r2.w, r9.z, c72.x, r2.w  // ::fx<0>
                                                    mad r1.z, r1.w, c44.w, -r1.z  // ::fz<0>
                                                    mul r1.w, r2.w, r2.w
                                                    mul r4.w, r1.w, r2.w  // ::fx3<0>
                                                    mul r5.w, r1.z, r1.z
                                                    mul r6.w, r1.z, r5.w  // ::fz3<0>
                                                    mad r1.w, r2.w, -r1.w, c91.w
                                                    mad r2.w, r2.w, c87.x, c87.y
                                                    mul r2.w, r2.w, c88.w
                                                    cmp r1.w, r1.w, r2.w, r4.w  // ::xr<0>
                                                    mad r2.w, r1.z, -r5.w, c91.w
                                                    mad r1.z, r1.z, c87.x, c87.y
                                                    mul r1.z, r1.z, c88.w
                                                    cmp r1.z, r2.w, r1.z, r6.w  // ::zr<0>

#line 1550
                                                    mul r6.xz, r4.yyzw, r1.wyzw  // ::LAB_Lrgb<0,2>

#line 292
                                                    mov r10.x, c8.x  // ::WhiteX<0>
                                                    mad r10.xyz, r3.w, r10.x, c52

#line 286
                                                    mad r1.yz, r3.w, r1.y, c45.xxyw

#line 276
                                                    cmp r1.y, -r1_abs.y, -c127.y, -c127.x
                                                    cmp r1.y, -r10_abs.x, r1.y, c127.x
                                                    mul r1.w, r10.y, c45.z  // ::Ka<0>

#line 286
                                                    mul r1.z, r1.z, c95.x  // ::Ka<0>

#line 1610
                                                    mul r2.w, r8.x, r8.x  // ::Y<0>
                                                    rcp r1.w, r1.w
                                                    cmp r1.w, r1.y, r1.w, c72.z
                                                    mul r1.w, r1.w, r9.z
                                                    rsq r3.w, r2.w
                                                    rcp r3.w, r3.w
                                                    mad r1.w, r1.w, r3.w, r2.w
                                                    mul r1.w, r4.y, r1.w  // ::X<0>
                                                    rcp r1.z, r1.z
                                                    cmp r1.y, r1.y, r1.z, c72.w
                                                    mul r1.y, r1.y, r9.w
                                                    mad r1.y, r1.y, r3.w, -r2.w
                                                    mul r1.y, -r4.z, r1.y  // ::Z<0>

#line 306
                                                    mul r10.xyw, r2.w, c20.xyzz
                                                    mad r10.xyw, r1.w, c19.xyzz, r10
                                                    mad r1.yzw, r1.y, c21.xxyz, r10.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 292
                                                    mul r2.w, r4.y, c128.x
                                                    mad r3.w, r4.z, c127.w, r10.z
                                                    rcp r3.w, r3.w
                                                    mul r2.w, r2.w, r3.w  // ::ComputeKu<0>

#line 1920
                                                    mul r4.yz, r3.w, c105.xzww  // ::ComputeKv<0>, ::vN<0>

#line 1677
                                                    mul r3.w, r2.w, r8.z
                                                    mad r3.w, r5.y, r9.x, r3.w
                                                    rcp r3.w, r3.w
                                                    mad r3.w, r8.y, r3.w, -c127.y
                                                    mul r3.w, r3.w, c40.y  // ::a<0>
                                                    mul r4.w, r6.y, -c128.y  // ::b<0>

#line 1898
                                                    mul r9.xzw, r5.xyxy, c109.xyyz  // XYZ_Lrgb::input<0>

#line 1680
                                                    mul r5.w, r4.y, r8.z
                                                    mad r5.w, r5.y, r9.y, r5.w
                                                    rcp r5.w, r5.w
                                                    mad r5.w, r9.x, r5.w, -c128.y
                                                    mad r5.w, r6.y, r5.w, -r4.w
                                                    rcp r6.w, r3.w
                                                    mul r5.w, r5.w, r6.w  // ::X<0>
                                                    mad r3.w, r5.w, r3.w, r4.w  // ::Z<0>

#line 1686
                                                    max r6.w, r5.w, c127.x  // ::X<0>

#line 1689
                                                    max r5.w, r6.y, c127.x  // ::Y<0>

#line 1692
                                                    max r8.x, r3.w, c127.x  // ::Z<0>

#line 306
                                                    mul r10.xyz, r5.w, c20
                                                    mad r11.xyz, r6.w, c19, r10
                                                    mad r11.xyz, r8.x, c21, r11  // ::x<0>, ::y<0>, ::z<0>
                                                    mul r12.xyz, r5.y, c11
                                                    mad r12.xyz, r5.x, c10, r12
                                                    mad r12.xyz, r5.z, c12, r12  // ::x<0>, ::y<0>, ::z<0>
                                                    mul r13.xyz, r12.y, c20
                                                    mad r12.xyw, r12.x, c19.xyzz, r13.xyzz
                                                    mad r12.xyz, r12.z, c21, r12.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 2609
                                                    add r13, r4.x, c132

#line 1677
                                                    mad r3.w, r8.z, r2.w, r5.y
                                                    rcp r3.w, r3.w
                                                    mad r3.w, r8.y, r3.w, -c127.y
                                                    mul r3.w, r3.w, c40.y  // ::a<0>

#line 1680
                                                    mad r4.y, r8.z, r4.y, r5.z
                                                    rcp r4.y, r4.y
                                                    mad r4.y, r9.x, r4.y, -c128.y
                                                    mad r4.y, r6.y, r4.y, -r4.w
                                                    rcp r5.w, r3.w
                                                    mul r4.y, r4.y, r5.w  // ::X<0>
                                                    mad r3.w, r4.y, r3.w, r4.w  // ::Z<0>

#line 1686
                                                    max r5.w, r4.y, c127.x  // ::X<0>

#line 1692
                                                    max r4.y, r3.w, c127.x  // ::Z<0>

#line 306
                                                    mad r8.xyz, r5.w, c19, r10
                                                    mad r8.xyz, r4.y, c21, r8  // ::x<0>, ::y<0>, ::z<0>

#line 1426
                                                    mad r3.w, r5.x, c104_abs.w, c104_abs.z
                                                    frc r3.w, r3.w
                                                    mad r3.w, r3.w, c136.z, c136.w
                                                    sincos r10.xy, r3.w
                                                    rcp r3.w, r10.x
                                                    mul r3.w, r3.w, r10.y  // ::x<0>
                                                    mul r4.y, r3.w, r3.w  // ::x<0>

#line 1963
                                                    mul r9.xy, r5.yzzw, r5.yxzw

#line 1429
                                                    mul r4.w, r9.x, c128.y
                                                    rcp r4.y, r4.y
                                                    add r4.y, r4.y, c127.y
                                                    mul r4.y, r4.y, c129.y
                                                    rcp r4.y, r4.y
                                                    mul r4.y, r4.y, r4.w
                                                    rsq r4.y, r4.y
                                                    rcp r4.y, r4.y  // ::r<0>
                                                    mad r3.w, r3.w, r3.w, c127.y
                                                    mul r3.w, r3.w, c129.y
                                                    rcp r3.w, r3.w
                                                    mul r3.w, r3.w, r4.w
                                                    rsq r3.w, r3.w
                                                    rcp r3.w, r3.w  // ::g<0>
                                                    mul r4.w, r3.w, c110.w
                                                    mad r4.w, r4.y, c109.w, r4.w
                                                    add r4.w, r4.w, c98.w
                                                    rcp r4.w, r4.w
                                                    mul r4.w, r4.w, r5.z  // ::k<0>
                                                    add r5.w, -r4.y, c127.y
                                                    add r5.w, -r3.w, r5.w
                                                    mul r10.z, r4.w, r5.w  // ::B<0>
                                                    mul r10.y, r3.w, r4.w  // ::G<0>
                                                    mul r10.x, r4.y, r4.w  // ::R<0>

#line 1898
                                                    mad r3.w, r5.x, c109.y, -r9.w

#line 1985
                                                    add r14.z, r5.y, r5.x  // ::YCoCg_Lrgb<1>

#line 1898
                                                    mad r3.w, r5.z, c127.z, r3.w  // XYZ_Lrgb::input<2>

#line 304
                                                    mul r15, r5.yyyz, c20.xyzx
                                                    mad r9.xzw, r9.z, c19.xyyz, r15.xyyz
                                                    mad r9.xzw, r3.w, c21.xyyz, r9  // ::x<0>, ::y<0>, ::z<0>

#line 2625
                                                    add r16, r4.x, c133

#line 2108
                                                    add r4.yw, r5.xzzx, -c89.xyzx
                                                    mul r17.xy, r4.ywzw, c73  // ::ypbpr<0>

#line 1922
                                                    mul r3.w, r17.x, r17.x
                                                    mul r3.w, r3.w, r17.x  // ::y<0>

#line 1999
                                                    mul r4.y, r5.z, c130.y

#line 1924
                                                    rcp r5.w, r4.y
                                                    mad r2.w, r5.x, r5.w, r2.w
                                                    cmp r2.w, -r4_abs.y, c127.x, r2.w  // ::_u<0>
                                                    mad r4.z, r5.y, r5.w, r4.z
                                                    cmp r4.y, -r4_abs.y, c127.x, r4.z  // ::_v<0>
                                                    mul r4.z, r2.w, r3.w
                                                    rcp r4.y, r4.y
                                                    mul r4.z, r4.y, r4.z  // ::x<0>
                                                    add r5.w, r4.y, r4.y
                                                    mul r2.w, r2.w, r4.y
                                                    mad r2.w, r2.w, c93.y, r5.w
                                                    add r2.w, r2.w, -c128.y
                                                    mul r2.w, r2.w, r3.w  // ::z<0>
                                                    mul r4.y, r4.z, c84.w  // ::xyz<0>
                                                    mul r3.w, r3.w, c84.w  // ::xyz<1>
                                                    mul r2.w, r2.w, c84.w  // ::xyz<2>

#line 306
                                                    mul r17.xzw, r3.w, c20.xyyz
                                                    mad r17.xzw, r4.y, c19.xyyz, r17
                                                    mad r17.xzw, r2.w, c21.xyyz, r17  // ::x<0>, ::y<0>, ::z<0>

#line 1931
                                                    cmp r17.xzw, -r5_abs.z, c127.x, r17  // ::UVW_Lrgb<0,1,2>

#line 2084
                                                    mad r18.xz, r3.yyzw, c73.zyww, r17.y  // ::r<0>, ::b<0>
                                                    mul r2.w, r18.x, c107.x
                                                    mad r2.w, r4.w, c74.x, -r2.w
                                                    mad r2.w, r18.z, -c107.z, r2.w
                                                    mul r18.y, r2.w, c74.z  // ::g<0>

#line 1963
                                                    rcp r2.w, r5.y
                                                    mul r3.y, r2.w, r9.y  // XYZ_Lrgb::input<0>
                                                    add r3.x, -r5.y, r3.x
                                                    mul r3.x, r5.z, r3.x
                                                    mul r2.w, r2.w, r3.x  // XYZ_Lrgb::input<2>

#line 306
                                                    mul r3.xz, r3.y, c19.yyzw
                                                    mad r3.y, r3.y, c19.x, r15.w
                                                    mad r19.x, r2.w, c21.x, r3.y  // ::x<0>
                                                    mad r3.xy, r5.z, c20.yzzw, r3.xzzw
                                                    mad r19.yz, r2.w, c21, r3.xxyw  // ::y<0>, ::z<0>

#line 1963
                                                    cmp r3.xyz, -r5_abs.y, c127.x, r19  // ::xyY_Lrgb<0,1,2>

#line 306
                                                    mad r4.yzw, r5.x, c19.xxyz, r15.xxyz
                                                    mad r4.yzw, r5.z, c21.xxyz, r4  // ::x<0>, ::y<0>, ::z<0>

#line 2641
                                                    add r15, r4.x, c134

#line 1984
                                                    add r2.w, -r5.y, r5.x  // ::c<0>
                                                    add r14.x, r5.z, r2.w  // ::YCoCg_Lrgb<0>
                                                    add r14.w, -r5.z, r2.w  // ::YCoCg_Lrgb<2>

#line 1998
                                                    mad r2.w, r5.y, c106.x, r5.x
                                                    mad r19.x, r5.z, -c106.y, r2.w  // ::r<0>
                                                    mad r2.w, r5.y, -c106.z, r5.x
                                                    mad r19.y, r5.z, c106.w, r2.w  // ::g<0>

#line 2027
                                                    mad r20.xy, r5.y, c75, r5.x

#line 2000
                                                    mad r19.z, r5.z, -c75.z, r20.x  // ::b<0>

#line 2027
                                                    mad r20.x, r5.z, c75.w, r20.y  // ::r<0>
                                                    mad r21.xy, r5.y, c76, r5.x
                                                    mad r20.yz, r5.z, c76.xzww, r21.xxyw  // ::g<0>, ::b<0>

#line 2653
                                                    add r21.xyz, r4.x, c84

#line 2052
                                                    mad r22.xy, r5.y, c77, r5.x
                                                    mad r22.xy, r5.z, c77.zwzw, r22  // ::r<0>, ::g<0>

#line 2084
                                                    mad r23.xyz, r5.yzyw, c78, r5.x  // ::r<0>, ::b<0>

#line 2053
                                                    mad r2.w, r5.z, c78.w, r23.x  // ::b<0>

#line 2056
                                                    mov_sat r22.zw, r22.xyxy
                                                    cmp r22.xy, r22, r22.zwzw, c127.x  // ::r<0>, ::g<0>
                                                    mov_sat r3.w, r2.w
                                                    cmp r22.z, r2.w, r3.w, c127.x  // ::b<0>

#line 2085
                                                    mad r2.w, r23.y, -c107.x, r5.x
                                                    mad r2.w, r23.z, -c107.z, r2.w
                                                    mul r23.w, r2.w, c74.z  // ::g<0>

#line 2178
                                                    mad r24.xyz, r5.zyyw, c79, r5.x  // ::r<0>, ::b<0>

#line 2175
                                                    mad r2.w, r5.z, c79.w, r24.y  // ::g<0>

#line 2184
                                                    mov_sat r24.yw, r24.xxzz
                                                    mov_sat r3.w, r2.w
                                                    cmp r25.y, r2.w, r3.w, c127.x  // ::g<0>
                                                    cmp r25.xz, r24, r24.yyww, c127.x  // ::r<0>, ::b<0>

#line 2657
                                                    cmp r24.xyz, -r21_abs.z, r25, r5  // ::TLrgb<0,1,2>
                                                    cmp r21.yzw, -r21_abs.y, r23.xywz, r24.xxyz  // ::TLrgb<0,1,2>
                                                    cmp r21.xyz, -r21_abs.x, r22, r21.yzww  // ::TLrgb<0,1,2>
                                                    cmp r20.xyz, -r15_abs.w, r20, r21  // ::TLrgb<0,1,2>
                                                    cmp r19.xyz, -r15_abs.z, r19, r20  // ::TLrgb<0,1,2>
                                                    cmp r14.xyz, -r15_abs.y, r14.xzww, r19  // ::TLrgb<0,1,2>
                                                    cmp r14.xyz, -r15_abs.x, r18, r14  // ::TLrgb<0,1,2>
                                                    cmp r4.xyz, -r16_abs.w, r4.yzww, r14  // ::TLrgb<0,1,2>
                                                    cmp r3.xyz, -r16_abs.z, r3, r4  // ::TLrgb<0,1,2>
                                                    cmp r3.xyz, -r16_abs.y, r18, r3  // ::TLrgb<0,1,2>
                                                    cmp r3.xyz, -r16_abs.x, r17.xzww, r3  // ::TLrgb<0,1,2>
                                                    cmp r3.xyz, -r13_abs.w, r9.xzww, r3  // ::TLrgb<0,1,2>
                                                    cmp r3.xyz, -r13_abs.z, r10, r3  // ::TLrgb<0,1,2>
                                                    cmp r3.xyz, -r13_abs.y, r5, r3  // ::TLrgb<0,1,2>
                                                    cmp r3.xyz, -r13_abs.x, r8, r3  // ::TLrgb<0,1,2>
                                                    cmp r3.xyz, -r7_abs.w, r12, r3  // ::TLrgb<0,1,2>
                                                    cmp r3.xyz, -r7_abs.z, r11, r3  // ::TLrgb<0,1,2>
                                                    cmp r1.yzw, -r7_abs.y, r1, r3.xxyz  // ::TLrgb<0,1,2>
                                                    cmp r2.xyz, -r7_abs.x, r6, r1.yzww  // ::TLrgb<0,1,2>
                                                  endif
                                                endif
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif

#line 2267
      log r1.y, r2.x

#line 2272
      if_eq c6.x, r1.x

#line 2267
        mul r1.z, r1.y, c7.x
        exp r0.x, r1.z  // ::v<0>

#line 2302
      else

#line 2296
        mov r3.x, c6.x  // ::Companding<0>
        add r3, r3.x, c135

#line 2299
        add r1.zw, -r2.x, c80.xyxy

#line 2291
        mul r4.xy, r2.x, c80.zwzw
        add r5.xyz, r2.x, c81

#line 2275
        mul r2.w, r5.x, c81.w
        mul r4.z, r2.w, r2.w
        mul r2.w, r2.w, r4.z
        cmp r1.z, r1.z, r4.x, r2.w  // ::v<0>

#line 2291
        mad r4.xz, r2.x, c82.xyyw, c82.zyww
        cmp r4.xy, r5.yzzw, r4.xzzw, r4.y  // ::V<0,0>

#line 2299
        mul r2.w, r2.x, c83.x
        mul r1.y, r1.y, c83.y
        exp r1.y, r1.y
        mad r1.y, r1.y, c83.z, c83.w
        cmp r1.y, r1.w, r2.w, r1.y  // ::V<0>

#line 2302
        cmp r1.y, -r3_abs.w, r1.y, r2.x  // ::Compand<0>
        cmp r1.y, -r3_abs.z, r4.y, r1.y  // ::Compand<0>
        cmp r1.y, -r3_abs.y, r4.x, r1.y  // ::Compand<0>
        cmp r0.x, -r3_abs.x, r1.z, r1.y  // ::Compand<0>
      endif

#line 2267
      log r1.y, r2.y

#line 2272
      if_eq c6.x, r1.x

#line 2267
        mul r1.z, r1.y, c7.x
        exp r0.y, r1.z  // ::v<0>

#line 2302
      else

#line 2296
        mov r2.x, c6.x  // ::Companding<0>
        add r3, r2.x, c135

#line 2299
        add r1.zw, -r2.y, c80.xyxy

#line 2291
        mul r2.xw, r2.y, c80.zyzw
        add r4.xyz, r2.y, c81

#line 2275
        mul r4.x, r4.x, c81.w
        mul r4.w, r4.x, r4.x
        mul r4.x, r4.w, r4.x
        cmp r1.z, r1.z, r2.x, r4.x  // ::v<0>

#line 2291
        mad r4.xw, r2.y, c82.xyzy, c82.zyzw
        cmp r2.xw, r4.yyzz, r4, r2.w  // ::V<0,0>

#line 2299
        mul r4.x, r2.y, c83.x
        mul r1.y, r1.y, c83.y
        exp r1.y, r1.y
        mad r1.y, r1.y, c83.z, c83.w
        cmp r1.y, r1.w, r4.x, r1.y  // ::V<0>

#line 2302
        cmp r1.y, -r3_abs.w, r1.y, r2.y  // ::Compand<0>
        cmp r1.y, -r3_abs.z, r2.w, r1.y  // ::Compand<0>
        cmp r1.y, -r3_abs.y, r2.x, r1.y  // ::Compand<0>
        cmp r0.y, -r3_abs.x, r1.z, r1.y  // ::Compand<0>
      endif

#line 2267
      log r1.y, r2.z

#line 2272
      if_eq c6.x, r1.x

#line 2267
        mul r1.x, r1.y, c7.x
        exp r0.z, r1.x  // ::v<0>

#line 2302
      else

#line 2296
        mov r1.x, c6.x  // ::Companding<0>
        add r3, r1.x, c135

#line 2299
        add r1.xz, -r2.z, c80.xyyw

#line 2291
        mul r2.xy, r2.z, c80.zwzw
        add r4.xyz, r2.z, c81

#line 2275
        mul r1.w, r4.x, c81.w
        mul r2.w, r1.w, r1.w
        mul r1.w, r1.w, r2.w
        cmp r1.x, r1.x, r2.x, r1.w  // ::v<0>

#line 2291
        mad r2.xw, r2.z, c82.xyzy, c82.zyzw
        cmp r2.xy, r4.yzzw, r2.xwzw, r2.y  // ::V<0,0>

#line 2299
        mul r1.w, r2.z, c83.x
        mul r1.y, r1.y, c83.y
        exp r1.y, r1.y
        mad r1.y, r1.y, c83.z, c83.w
        cmp r1.y, r1.z, r1.w, r1.y  // ::V<0>

#line 2302
        cmp r1.y, -r3_abs.w, r1.y, r2.z  // ::Compand<0>
        cmp r1.y, -r3_abs.z, r2.y, r1.y  // ::Compand<0>
        cmp r1.y, -r3_abs.y, r2.x, r1.y  // ::Compand<0>
        cmp r0.z, -r3_abs.x, r1.x, r1.y  // ::Compand<0>
      endif

#line 2768
    endif
    mov oC0, r0  // ::main<0,1,2,3>

// approximately 4409 instruction slots used (1 texture, 4408 arithmetic)
