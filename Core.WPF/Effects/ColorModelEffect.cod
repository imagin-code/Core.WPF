//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float Companding;
//   float Depth;
//   float Gamma;
//   float HighlightAmount;
//   float3 LABk_LMSk_x;
//   float3 LABk_LMSk_y;
//   float3 LABk_LMSk_z;
//   float3 LMS_XYZ_x;
//   float3 LMS_XYZ_y;
//   float3 LMS_XYZ_z;
//   float3 LMSk_LABk_x;
//   float3 LMSk_LABk_y;
//   float3 LMSk_LABk_z;
//   float3 LMSk_XYZk_x;
//   float3 LMSk_XYZk_y;
//   float3 LMSk_XYZk_z;
//   float MidtoneAmount;
//   float MidtoneRange;
//   float Mode;
//   float Model;
//   float3 RGB_XYZ_x;
//   float3 RGB_XYZ_y;
//   float3 RGB_XYZ_z;
//   float ShadowAmount;
//   float ShadowRange;
//   float Shape;
//   float W;
//   float WhiteX;
//   float WhiteY;
//   float X;
//   float XComponent;
//   float3 XYZ_LMS_x;
//   float3 XYZ_LMS_y;
//   float3 XYZ_LMS_z;
//   float3 XYZ_RGB_x;
//   float3 XYZ_RGB_y;
//   float3 XYZ_RGB_z;
//   float Y;
//   float YComponent;
//   float Z;
//   sampler2D input;
//   float3 xyYC_exy;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   Model           c0       1
//   XComponent      c1       1
//   YComponent      c2       1
//   Mode            c3       1
//   Shape           c4       1
//   Depth           c5       1
//   X               c6       1
//   Y               c7       1
//   Z               c8       1
//   W               c9       1
//   Companding      c10      1
//   Gamma           c11      1
//   WhiteX          c12      1
//   WhiteY          c13      1
//   LMS_XYZ_x       c14      1
//   LMS_XYZ_y       c15      1
//   LMS_XYZ_z       c16      1
//   RGB_XYZ_x       c17      1
//   RGB_XYZ_y       c18      1
//   RGB_XYZ_z       c19      1
//   XYZ_LMS_x       c20      1
//   XYZ_LMS_y       c21      1
//   XYZ_LMS_z       c22      1
//   XYZ_RGB_x       c23      1
//   XYZ_RGB_y       c24      1
//   XYZ_RGB_z       c25      1
//   LABk_LMSk_x     c26      1
//   LABk_LMSk_y     c27      1
//   LABk_LMSk_z     c28      1
//   LMSk_LABk_x     c29      1
//   LMSk_LABk_y     c30      1
//   LMSk_LABk_z     c31      1
//   LMSk_XYZk_x     c32      1
//   LMSk_XYZk_y     c33      1
//   LMSk_XYZk_z     c34      1
//   xyYC_exy        c38      1
//   HighlightAmount c39      1
//   MidtoneAmount   c41      1
//   MidtoneRange    c42      1
//   ShadowAmount    c43      1
//   ShadowRange     c44      1
//   input           s0       1
//

    ps_3_0
    def c35, -23, -24, -25, -26
    def c36, -27, -28, -29, -30
    def c37, -31, -32, -33, -34
    def c40, -39, -40, -0, -32
    def c45, -41, -42, -43, -44
    def c46, -17, -18, -19, -20
    def c47, -35, -36, -37, -38
    def c48, 1.41421354, 1, 2, 3
    def c49, 0.0208350997, -0.0851330012, 0.999866009, 6.28318548
    def c50, 8, 12, 6, 0.180141002
    def c51, 100, 224, 122, -0.330299497
    def c52, -2, 1.57079637, -0, -3.14159274
    def c53, -2, 3.14159274, 0.333333343, 57.2957764
    def c54, 7.85398197, 1.57079673, 0.159154937, 0.0799999982
    def c55, 0.159999996, 0.862069011, 0.159301758, 78.84375
    def c56, -0.0810000002, 0.0989999995, -0.0812428594, 0.0992968082
    def c57, 0.0404499993, 0.0549999997, 0.947867334, 2.4000001
    def c58, -3, -35, -4, -36
    def c59, 18.8515625, 18.6875, 0.8359375, 1
    def c60, 0.222222224, 0.0773993805, 0.909918129, 0.909672439
    def c61, -0.0187292993, 0.0742610022, -0.212114394, 1.57072878
    def c62, -7, -39, -8, -40
    def c63, 60, 50, 0.142857149, 0.156173766
    def c64, -11, -12, -43, -44
    def c65, -13, -14, -15, -16
    def c66, -19, -20, -21, -22
    def c67, 0.142857149, 7, 1, 6.99999952
    def c68, 0.114, 0.666666687, 360, 0.5
    def c69, 0.857142866, -6, 0.298999995, 0.587000012
    def c70, 0.219999999, 0.280000001, 1, -1.62954997e-011
    def c71, -1, -33, -2, -34
    def c72, 0.063000001, -0.5, 0.538909256, 0.635001242
    def c73, 0.298999995, 0.596000016, 0.211999997, 0.212599993
    def c74, 0.587000012, -0.275000006, -0.527999997, 0.715200007
    def c75, 0.114, -0.32100001, 0.31099999, 0.0722000003
    def c76, -0.288859993, -0.514989972, -0.147129998, 0.61500001
    def c77, 0.43599999, -0.10001, 0.000980392215, 0.00294117676
    def c78, 0.159154937, 0.25, 0.75, 104
    def c79, 6.28318548, -3.14159274, 0.0174532942, 1.04719758
    def c80, 6.40657674e-007, 13824.001, 769859.875, 3.40282347e+038
    def c81, 1394988.5, -120846.469, 126452, 8.00000095
    def c82, 0.00862068962, 0, 1, 100
    def c83, 359, 0.0166666675, 5.98333359, -299.999969
    def c84, -9, -41, -10, -42
    def c85, 0.00277777785, 0.333333343, 180, -0.333333343
    def c86, 0.999778986, 1.07094002, 0.324891001, 0.00456620986
    def c87, 1.00014997, -0.377743989, 0.220439002, 0.00828392897
    def c88, 0.999768972, 0.0629495978, -0.809638023, 1.39821029
    def c89, 0.00499999989, 0.00200000009, 116, -16
    def c90, -0.980705976, -1.18224943, 88.3659897, 32.0938988
    def c91, 0.00571428565, 0.0142857144, 0.560000002, 0.439999998
    def c92, 18.6875, -18.8515625, 6.27739477, -3250.75854
    def c93, 6742.07861, 3827.99316, 9.99999975e-005, 134.034378
    def c94, 1.40199995, 1.77199996, 0.00456620986, 0.00703035761
    def c95, 1.43099999, -0.569000006, 0.430999994, -0.580600023
    def c96, 0.95599997, -0.272000015, -1.10800004, 1.8556
    def c97, 0.620999992, -0.647000015, 1.70500004, 10000
    def c98, 1.13982999, -0.394650012, 2.02310991, 0.00313080009
    def c99, -46, -47, -48, 0
    def c100, 0.449999988, 0.416666657, 1.05499995, -0.0549999997
    def c101, 12, -0.284668922, 0.123957433, 0.559910715
    def c102, 0.00885645207, 903.296326, 300, 600
    def c103, -38, -39, -40, 0.00999999978
    def c104, 1.09899998, 1.09929681, -0.0989999995, -0.0992968082
    def c105, -10, -6, 0, -1
    def c106, 0.00392156886, 0.00277777785, 0.00999999978, 120
    def c107, 360, 0.00277777785, -360, -0.00277777785
    def c108, 0.159154937, 0.5, 0.0174532942, -2.09439516
    def c109, 0.0174532942, -4.18879032, -9.99999994e-009, 9.99999994e-009
    def c110, 0.00277777785, 0.666666687, -0.666666687, -0.333333343
    def c111, 0.00110705639, 769860, 52, 13
    def c112, 1.5, 0.0399999991, 0.00703035761, 0.00828392897
    def c113, 0.126000002, -1.87399995, 9.0329628, 0.0126833133
    def c114, 175, 70, 9.99999983e+012, 1
    def c115, 0.418687999, 0.0813120008, 9.99999982e-014, 475.70459
    def c116, 239.999985, 179.999985, 119.999992, 59.9999962
    def c117, 0.0199999996, -1, 359.999969, 299.999969
    def c118, -45, 45, 0, -128
    def c119, -180, -240, -300, 0.714139998
    def c120, -0.0179999992, -0.0180539694, 4.5, 12.9200001
    def c121, 1, -1, 0, 0.110705636
    def c122, 0.000442097051, 0.5, 0.00999999978, 0.229999989
    def c123, 0.0097833341, 0.298999995, 1.79399991, 0.587000012
    def c124, 3.52200007, 0.684000015, 0.114, 0.298999995
    def c125, 0.684000015, -0.5, 0.25, 0.252999991
    def c126, 0.249999985, 0.5, 0.47299999, 0.185000002
    def c127, 0.267899334, 0.525912642, 7.92025457e-005, 1.57480001
    def c128, 6, 0.166666672, -6, -0.166666672
    def c129, 9.99999983e+012, 1.49999999e-012, 1, 15
    def c130, 9.99999996e-012, 9.23037151e-005, 0.66467905, 0.129132897
    def c131, 235, 240, 1, 0.5
    def c132, -5, -37, -6, -38
    def c133, 2313.62085, 15227.666, 0.00499999989, 0.00999999978
    def c134, 9145.23047, 15718.4707, 3127.28296, 2182.53833
    def c135, 0.058047317, 0.811891913, 16613.7305, -909.828125
    def c136, 0.138605043, 0.0960192457, 0.058047317, 0.00746077253
    def c137, 0.00277777785, 0.666666687, 1, 0.344139993
    def c138, -986593.562, 694074.125, 0.0640312433, 0.189999998
    def c139, 0.00110705639, 52, 13, 39
    def c140, 1394988.5, -120846.469, -315176.688, -210946.25
    def c141, 100, 1500, 400, 0.216999993
    def c142, -1.33299994, 1.11600006, 0.666666687, 1
    def c143, 0.715200007, 0.5, 0.587000012, 0.883000016
    def c144, 0.298999995, 0.587000012, 0.114, -0.449999988
    def c145, 0.212599993, 0.25, -0.25, 0.0722000003
    def c146, 0.212599993, 0.715200007, 0.0722000003, 0.331263989
    def c147, 3.52399993, 0.54270798, 0.199075997, 1.29587495
    def c148, 833.27301, 6709.7002, 4.06670809, 1.09679902
    def c149, 7396.2832, 709.410828, 1747.68005, 1492.84155
    def c150, 219, 16, 0.168735996, 128
    def c151, 120.715675, 142.24028, 128, 0.5
    def c152, -4, -5, -6, 2.22222233
    def c153, 0, -134, -140, 16
    def c154, 0, -0.5, -1.33299994, 255
    def c155, 0, -0.595700026, -0.522599995, 100
    def c156, 360, 100, 255, 128
    def c157, 1, 360, 76, 100
    def c158, 1, 1.33299994, 0.595700026, 0.522599995
    def c159, 2, 0.5, -2, -0.5
    def c160, -21, -22, -23, -24
    def c161, -28, -29, -30, -31
    def c162, -25, -26, -27, 2
    def c163, -0, -32, -1, -33
    def c164, -2, -34, -3, -35
    def c165, -1, -2, -3, -4
    def c166, 0.00999999978, 1, 0.00277777785, 0.5
    def c167, -120846.469, -210946.25, 126452, 694074.125
    def c168, 0.684000015, 1.79399991, 0.587000012, 0.114
    def c169, -37, -38, -39, -40
    dcl_texcoord v0.xy  // uv<0,1>
    dcl_2d s0

#line 2577 "C:\Users\james\GitHub\Core.WPF\Core.WPF\Effects\ColorModelEffect.fx"
    mov r0.xyz, c118
    add r0.x, r0.x, c0.x
    if_ge c0.x, r0.y

#line 2585
      mov r1.xy, c118.z  // ::input3<0,1>
      mov r2.x, c118.z  // ::input3<2>
      mov r1.w, c6.x  // ::input4<0>
      mov r2.y, c7.x  // ::input4<1>
      mov r2.z, c8.x  // ::input4<2>
      mov r3.w, c9.x  // ::input4<3>
      mov r4.xyz, c118.z
      mov r5.xyz, c118.z
    else

#line 2588
      frc r0.w, c0.x
      add r0.w, -r0.w, c0.x
      add r6, r0.w, c66
      add r7, r0.w, c35
      add r8, r0.w, c36
      add r9, r0.w, c37
      add r10, r0.w, c47
      add r11, r0.w, c45
      add r12, r0.w, c40
      cmp r13.xyz, -r6_abs.x, c118.zwww, c118.z
      cmp r13.xyz, -r6_abs.y, c105.xyxw, r13
      cmp r6.xyz, -r6_abs.z, c105.zwww, r13
      cmp r6.xyz, -r6_abs.w, c118.z, r6
      cmp r6.xyz, -r7_abs.x, c118.z, r6
      cmp r6.xyz, -r7_abs.y, c118.z, r6
      cmp r6.xyz, -r7_abs.z, c118.z, r6
      cmp r6.xyz, -r7_abs.w, c118.z, r6
      cmp r6.xyz, -r8_abs.x, c118.z, r6
      cmp r6.xyz, -r8_abs.y, c118.z, r6
      cmp r6.xyz, -r8_abs.z, c153, r6
      cmp r6.xyz, -r8_abs.w, c118.z, r6
      cmp r6.xyz, -r9_abs.x, c118.z, r6
      cmp r6.xyz, -r9_abs.y, c118.z, r6
      cmp r6.xyz, -r9_abs.z, c153.yzxw, r6
      cmp r6.xyz, -r9_abs.w, c118.z, r6
      cmp r6.xyz, -r10_abs.x, c118.z, r6
      cmp r6.xyz, -r10_abs.y, c105_abs.xzzw, r6
      cmp r6.xyz, -r10_abs.z, c118.z, r6
      cmp r6.xyz, -r10_abs.w, c153.w, r6
      cmp r6.xyz, -r12_abs.x, c154.xyyw, r6
      cmp r6.xyz, -r12_abs.y, c154.xzzw, r6
      cmp r6.xyz, -r11_abs.x, c118.z, r6
      cmp r6.xyz, -r11_abs.y, c155, r6
      cmp r6.xyz, -r11_abs.z, c154.xyyw, r6
      cmp r4.xyz, -r11_abs.w, c154.xyyw, r6  // ::min3<0,1,2>
      add r6, r0.w, c62
      add r7, r0.w, c84
      add r8, r0.w, c64
      add r9, r0.w, c65
      add r10, r0.w, c46
      add r11, r0.w, c160
      add r13, r0.w, c161
      add r14.xyz, r0.w, c162
      add r15, r0.w, c71
      add r16, r0.w, c58
      add r17, r0.w, c132
      cmp r12.xyz, -r12_abs.z, c154.w, c154.x
      cmp r12.xyz, -r15_abs.x, -c105.w, r12
      cmp r12.xyz, -r15_abs.z, c154.w, r12
      cmp r12.xyz, -r16_abs.x, c154.w, r12
      cmp r12.xyz, -r16_abs.z, -c105.w, r12
      cmp r12.xyz, -r17_abs.x, c156.xyyw, r12
      cmp r12.xyz, -r17_abs.z, c156, r12
      cmp r12.xyz, -r6_abs.x, c156.xyyw, r12
      cmp r12.xyz, -r6_abs.z, c156.xyyw, r12
      cmp r12.xyz, -r7_abs.x, c156.xyyw, r12
      cmp r12.xyz, -r7_abs.z, c156.xyyw, r12
      cmp r12.xyz, -r8_abs.x, c156.xyyw, r12
      cmp r12.xyz, -r8_abs.y, c156.xyyw, r12
      cmp r12.xyz, -r9_abs.x, c156, r12
      cmp r12.xyz, -r9_abs.y, c156, r12
      cmp r9.xyz, -r9_abs.z, c156.xyyw, r12
      cmp r9.xyz, -r9_abs.w, -c105.w, r9
      cmp r9.xyz, -r10_abs.x, c154.w, r9
      cmp r9.xyz, -r10_abs.y, c155.w, r9
      cmp r9.xyz, -r10_abs.z, c156.ywww, r9
      cmp r9.xyz, -r10_abs.w, c50, r9
      cmp r9.xyz, -r11_abs.x, -c105.w, r9
      cmp r9.xyz, -r11_abs.y, -c105.w, r9
      cmp r9.xyz, -r11_abs.z, c156.yyxw, r9
      cmp r9.xyz, -r11_abs.w, c156.yyxw, r9
      cmp r9.xyz, -r14_abs.x, c157.xxyw, r9
      cmp r9.xyz, -r14_abs.y, c156.yyxw, r9
      cmp r9.xyz, -r14_abs.z, c156.yyxw, r9
      cmp r9.xyz, -r13_abs.x, -c105.w, r9
      cmp r9.xyz, -r13_abs.y, c51, r9
      cmp r9.xyz, -r13_abs.z, -c105.w, r9
      cmp r9.xyz, -r13_abs.w, -c105.w, r9
      cmp r9.xyz, -r12_abs.w, -c105.w, r9
      cmp r9.xyz, -r15_abs.y, c51.yzxw, r9
      cmp r9.xyz, -r15_abs.w, c154.w, r9
      cmp r9.xyz, -r16_abs.y, -c105.w, r9
      cmp r9.xyz, -r16_abs.w, c157.zwww, r9
      cmp r9.xyz, -r17_abs.y, -c105.w, r9
      cmp r9.xyz, -r17_abs.w, c131.xyyw, r9
      cmp r6.xyz, -r6_abs.y, c131.zwww, r9
      cmp r6.xyz, -r6_abs.w, c158.xyyw, r6
      cmp r6.xyz, -r7_abs.y, -c105.w, r6
      cmp r6.xyz, -r7_abs.w, c158.xzww, r6
      cmp r6.xyz, -r8_abs.z, c131.zwww, r6
      cmp r5.xyz, -r8_abs.w, c131.zwww, r6  // ::max3<0,1,2>

#line 2592
      mov r1.x, c6.x  // ::input3<0>
      mov r1.y, c7.x  // ::input3<1>
      mov r2.x, c8.x  // ::input3<2>
      mov r1.w, c118.z  // ::input4<0>
      mov r2.yz, c118.z  // ::input4<1,2>
      mov r3.w, c118.z  // ::input4<3>
    endif

#line 2598
    mov r0.w, c162.w
    if_eq c3.x, r0.w

#line 2604
      mov r4.w, c105.w
      add r4.w, r4.w, c4.x

#line 452
      add r6.xyz, c131.wzww, -v0.xyyw  // ::N<0>
      mul r6.xz, r6_abs, r6_abs
      add r5.w, r6.z, r6.x
      rsq r5.w, r5.w
      rcp r5.w, r5.w  // ::GetDistance<0>

#line 2606
      mad r5.w, r5.w, -c48.x, c48.y  // ::N<0>
      cmp r1.z, -r4_abs.w, r5.w, r6.y  // ::N<0>
      abs r4.w, c1.x
      cmp r6.xy, r0.x, r1.xzzw, r1.zwzw  // ::input3<0>, ::input4<0>

#line 2621
      mov r7.yzw, c48
      add r7.xyz, -r7.yzww, c1.x

#line 2615
      mov r2.w, r1.z
      cmp r8.xy, r0.x, r1.yzzw, r2.wyzw  // ::input3<1>, ::input4<1>

#line 2619
      cmp r3.xy, r0.x, r2.xwzw, r2.wzzw  // ::input3<2>, ::input4<2>

#line 2623
      cmp r5.w, r0.x, r2.w, r3.w  // ::input4<3>
      cmp r9.x, -r7_abs.z, r5.w, r3.w  // ::input4<3>
      mov r9.yz, r2.xxzw
      cmp r10.xyz, -r7_abs.y, r3.ywxw, r9.zxyw  // ::input4<2,3>, ::input3<2>
      mov r8.z, r9.z
      mov r8.w, r3.w
      mov r10.w, r2.y
      cmp r11.yzw, -r7_abs.x, r8, r10.xwxy  // ::input4<1,2,3>
      mov r9.w, r8.x
      mov r10.y, r1.y
      cmp r1.yz, -r7_abs.x, r9.xwyw, r10  // ::input3<1,2>
      mov r8.x, r6.y
      mov r8.yz, r2
      mov r11.x, r1.w
      cmp r3, -r4.w, r8, r11  // ::input4<0,1,2,3>
      mov r6.z, r10.y
      mov r6.w, r9.y
      cmp r2.xyw, -r4.w, r6.wxzz, r1.zxzy  // ::input3<2,0,1>
      mov oC0, c118.z  // ::main<0,1,2,3>
      mov r4.w, c118.z
    else
      mov r6.xyw, c105  // ::Minimum3<60>
      if_eq c3.x, -r6.w

#line 2633
        add r5.w, r6.w, c4.x

#line 2636
        add r7.xyz, c131.zwww, -v0.yxyw  // ::N<0>

#line 452
        add r6.z, -r7.x, -c154.y
        mul r6.z, r6_abs.z, r6_abs.z
        mad r6.z, r7_abs.y, r7_abs.y, r6.z
        rsq r6.z, r6.z
        rcp r6.z, r6.z  // ::GetDistance<0>

#line 2635
        mad r7.x, r6.z, -c48.x, c48.y  // ::xN<0>
        add r6.z, c154.y, v0.x
        min r8.x, r6_abs.z, r7_abs.z
        max r8.y, r7_abs.z, r6_abs.z
        rcp r7.w, r8.y
        mul r7.w, r7.w, r8.x
        mul r8.x, r7.w, r7.w
        mad r8.y, r8.x, c49.x, c49.y
        mad r8.y, r8.x, r8.y, c50.w
        mad r8.y, r8.x, r8.y, c51.w
        mad r8.x, r8.x, r8.y, c49.z
        mul r7.w, r7.w, r8.x
        add r8.x, -r7_abs.z, r6_abs.z
        cmp r8.x, r8.x, c105_abs.z, c105_abs.w
        mad r8.y, r7.w, c52.x, c52.y
        mad r7.w, r8.y, r8.x, r7.w
        cmp r8.x, r6.z, c52.z, c52.w
        add r7.w, r7.w, r8.x
        min r8.x, r6.z, r7.z
        max r8.y, r7.z, r6.z
        cmp r6.z, r8.y, c105_abs.w, c105_abs.z
        cmp r6.z, r8.x, c118.z, r6.z
        add r7.z, r7.w, r7.w
        mad r6.z, r6.z, -r7.z, r7.w
        add r7.zw, r6.z, c54.xyxy  // ::yN<0>
        add r6.z, -r7.z, c49.w
        cmp r6.z, r6.z, r7.z, r7.w  // ::yN<0>
        mul r7.y, r6.z, c54.z  // ::yN<0>

#line 2643
        mad r7.zw, v0.xyxy, c121.xyxy, c121.xyzx
        cmp r7.yw, -r5_abs.w, r7.xxzy, r7.xzzw  // ::M<0>, ::N<0>
        abs r5.w, c1.x
        mov r7.xz, r1.xyww
        cmp r8.xz, r0.x, r7.xyyw, r7.yyzw  // ::input3<0>, ::input4<0>

#line 2657
        mov r9.yzw, c48
        add r10.xyz, -r9.yzww, c1.x

#line 2651
        mov r1.x, r7.y

#line 2655
        mov r1.zw, r2.xyyx

#line 2651
        cmp r11.xy, r0.x, r1.yxzw, r1.xzzw  // ::input3<1>, ::input4<1>

#line 2660
        mov r12.xy, r1.xzzw

#line 2655
        mov r12.z, r2.z
        cmp r3.xz, r0.x, r1.wyxw, r12  // ::input3<2>, ::input4<2>

#line 2659
        cmp r6.z, r0.x, r7.y, r3.w  // ::input4<3>
        cmp r2.w, -r10_abs.z, r6.z, r3.w  // ::input4<3>
        cmp r12.xzw, -r10_abs.y, r3, r2  // ::input3<2>, ::input4<2,3>
        mov r3.xz, r2
        mov r3.y, r11.y
        cmp r13, -r10_abs.x, r3, r12  // ::input3<2>, ::input4<1,2,3>
        cmp r7.y, -r10_abs.x, r11.x, r1.y  // ::input3<1>
        mov r12.xzw, r3
        cmp r10, -r5.w, r12, r13  // ::input3<2>, ::input4<1,2,3>
        mov r8.y, r1.y
        cmp r7.xyz, -r5.w, r8.yxzw, r7.yxzw  // ::input3<1,0>, ::input4<0>
        abs r1.z, c2.x
        cmp r8.xy, r0.x, r7.ywzw, r7.wzzw  // ::input3<0>, ::input4<0>

#line 2674
        add r9.xyz, -r9.yzww, c2.x

#line 2668
        mov r11.z, r7.w

#line 2672
        mov r11.xyw, r10.xzzy

#line 2668
        cmp r12.xy, r0.x, r7.xwzw, r11.zwzw  // ::input3<1>, ::input4<1>

#line 2672
        cmp r13.xy, r0.x, r11.xzzw, r11.zyzw  // ::input3<2>, ::input4<2>

#line 2676
        cmp r5.w, r0.x, r7.w, r10.w  // ::input4<3>
        cmp r14.x, -r9_abs.z, r5.w, r10.w  // ::input4<3>
        mov r13.z, r10.w
        mov r14.yz, r11.xxyw
        cmp r11.xyz, -r9_abs.y, r13.yzxw, r14.zxyw  // ::input4<2,3>, ::input3<2>
        mov r12.zw, r10
        cmp r13.yzw, -r9_abs.x, r12, r11.xwxy  // ::input4<1,2,3>
        mov r14.w, r12.x
        mov r11.y, r7.x
        cmp r9.yz, -r9_abs.x, r14.xwyw, r11  // ::input3<1,2>
        mov r10.x, r8.y
        mov r13.x, r7.z
        cmp r3, -r1.z, r10, r13  // ::input4<0,1,2,3>
        mov r8.z, r11.y
        mov r8.w, r14.y
        mov r9.x, r7.y
        cmp r2.xyw, -r1.z, r8.wxzz, r9.zxzy  // ::input3<2,0,1>
        mov oC0, c118.z  // ::main<0,1,2,3>
        mov r4.w, c118.z
      else
        abs r1.z, c3.x
        cmp r4.w, -r1.z, c105_abs.w, c105_abs.z
        if_eq c3.x, r0.z

#line 2568
          texld r7, v0, s0  // ::color<0,1,2,3>

#line 2260
          log r1.z, r7.x
          mul r5.w, r1.z, c11.x
          exp r8.x, r5.w  // ::v<0>

#line 2265
          if_eq c10.x, r0.z

#line 2323
          else

#line 2265
            add r5.w, r6.w, c10.x

#line 2274
            mul r6.z, r7.x, -c58.x
            rsq r6.z, r6.z
            rcp r6.z, r6.z  // ::TransferInverse<0>
            cmp r8.w, -r7.x, -c105_abs.w, -c105_abs.z
            cmp r8.w, r7.x, r8.w, c118.z
            mad r9.x, r7.x, c101.x, c101.y
            log r9.x, r9.x
            mad r9.x, r9.x, c101.z, c101.w  // ::TransferInverse<0>
            cmp r6.z, r8.w, r9.x, r6.z  // ::TransferInverse<0>
            cmp r8.x, -r5_abs.w, r6.z, r8.x  // ::TransferInverse<0>

#line 2278
            if_eq c10.x, -r6.w

#line 2323
            else

#line 2278
              add r5.w, -r0.w, c10.x

#line 2281
              add r6.z, -r7.x, c54.w
              mul r8.w, r7.x, c121.w
              add r9.x, r7.x, c55.x
              mul r9.x, r9.x, c55.y
              mul r9.y, r9.x, r9.x
              mul r9.x, r9.y, r9.x
              cmp r6.z, r6.z, r8.w, r9.x  // ::v<0>
              cmp r8.x, -r5_abs.w, r6.z, r8.x  // ::TransferInverse<0>

#line 2286
              if_eq c10.x, r0.w

#line 2323
              else

#line 2286
                mov r9.x, c10.x  // ::Companding<0>
                add r5.w, r9.x, c58.x

#line 2301
                if_eq r9.x, -c58.x

#line 2295
                  mul r1.z, r1.z, c55.z
                  exp r1.z, r1.z
                  mad r9.yz, r1.z, c59.xxyw, c59.xzww  // ::a<0>, ::b<0>
                  rcp r1.z, r9.z
                  mul r1.z, r1.z, r9.y
                  pow r6.z, r1.z, c55.w  // ::TransferInverse<0>
                  cmp r8.x, -r5_abs.w, r6.z, r8.x  // ::TransferInverse<0>

#line 2323
                else

#line 2317
                  add r9.xyz, r9.x, c152

#line 2320
                  mul r10.xy, r7.x, c60

#line 2312
                  add r11, r7.x, c56
                  mul r10.zw, r11.xyyw, c60

#line 2304
                  pow r1.z, r10.z, c152.w
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2312
                  pow r5.w, r10.w, c152.w
                  cmp r5.w, r11.z, r5.w, r10.x  // ::L<0>

#line 2320
                  add r6.z, -r7.x, c57.x
                  add r8.w, r7.x, c57.y
                  mul r8.w, r8.w, c57.z
                  pow r9.w, r8.w, c57.w
                  cmp r6.z, r6.z, r10.y, r9.w  // ::v<0>

#line 2323
                  cmp r6.z, -r9_abs.z, r6.z, r7.x  // ::TransferInverse<0>
                  cmp r5.w, -r9_abs.y, r5.w, r6.z  // ::TransferInverse<0>
                  cmp r8.x, -r9_abs.x, r1.z, r5.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2260
          log r1.z, r7.y
          mul r5.w, r1.z, c11.x
          exp r8.y, r5.w  // ::v<0>

#line 2265
          if_eq c10.x, r0.z

#line 2323
          else

#line 2265
            add r5.w, r6.w, c10.x

#line 2274
            mul r6.z, r7.y, -c58.x
            rsq r6.z, r6.z
            rcp r6.z, r6.z  // ::TransferInverse<0>
            cmp r8.w, -r7.y, -c105_abs.w, -c105_abs.z
            cmp r8.w, r7.y, r8.w, c118.z
            mad r9.x, r7.y, c101.x, c101.y
            log r9.x, r9.x
            mad r9.x, r9.x, c101.z, c101.w  // ::TransferInverse<0>
            cmp r6.z, r8.w, r9.x, r6.z  // ::TransferInverse<0>
            cmp r8.y, -r5_abs.w, r6.z, r8.y  // ::TransferInverse<0>

#line 2278
            if_eq c10.x, -r6.w

#line 2323
            else

#line 2278
              add r5.w, -r0.w, c10.x

#line 2281
              add r6.z, -r7.y, c54.w
              mul r8.w, r7.y, c121.w
              add r9.x, r7.y, c55.x
              mul r9.x, r9.x, c55.y
              mul r9.y, r9.x, r9.x
              mul r9.x, r9.y, r9.x
              cmp r6.z, r6.z, r8.w, r9.x  // ::v<0>
              cmp r8.y, -r5_abs.w, r6.z, r8.y  // ::TransferInverse<0>

#line 2286
              if_eq c10.x, r0.w

#line 2323
              else

#line 2286
                mov r9.x, c10.x  // ::Companding<0>
                add r5.w, r9.x, c58.x

#line 2301
                if_eq r9.x, -c58.x

#line 2295
                  mul r1.z, r1.z, c55.z
                  exp r1.z, r1.z
                  mad r9.yz, r1.z, c59.xxyw, c59.xzww  // ::a<0>, ::b<0>
                  rcp r1.z, r9.z
                  mul r1.z, r1.z, r9.y
                  pow r6.z, r1.z, c55.w  // ::TransferInverse<0>
                  cmp r8.y, -r5_abs.w, r6.z, r8.y  // ::TransferInverse<0>

#line 2323
                else

#line 2317
                  add r9.xyz, r9.x, c152

#line 2320
                  mul r10.xy, r7.y, c60

#line 2312
                  add r11, r7.y, c56
                  mul r10.zw, r11.xyyw, c60

#line 2304
                  pow r1.z, r10.z, c152.w
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2312
                  pow r5.w, r10.w, c152.w
                  cmp r5.w, r11.z, r5.w, r10.x  // ::L<0>

#line 2320
                  add r6.z, -r7.y, c57.x
                  add r8.w, r7.y, c57.y
                  mul r8.w, r8.w, c57.z
                  pow r9.w, r8.w, c57.w
                  cmp r6.z, r6.z, r10.y, r9.w  // ::v<0>

#line 2323
                  cmp r6.z, -r9_abs.z, r6.z, r7.y  // ::TransferInverse<0>
                  cmp r5.w, -r9_abs.y, r5.w, r6.z  // ::TransferInverse<0>
                  cmp r8.y, -r9_abs.x, r1.z, r5.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2260
          log r1.z, r7.z
          mul r5.w, r1.z, c11.x
          exp r8.z, r5.w  // ::v<0>

#line 2265
          if_eq c10.x, r0.z

#line 2323
          else

#line 2265
            add r5.w, r6.w, c10.x

#line 2274
            mul r6.z, r7.z, -c58.x
            rsq r6.z, r6.z
            rcp r6.z, r6.z  // ::TransferInverse<0>
            cmp r8.w, -r7.z, -c105_abs.w, -c105_abs.z
            cmp r8.w, r7.z, r8.w, c118.z
            mad r9.x, r7.z, c101.x, c101.y
            log r9.x, r9.x
            mad r9.x, r9.x, c101.z, c101.w  // ::TransferInverse<0>
            cmp r6.z, r8.w, r9.x, r6.z  // ::TransferInverse<0>
            cmp r8.z, -r5_abs.w, r6.z, r8.z  // ::TransferInverse<0>

#line 2278
            if_eq c10.x, -r6.w

#line 2323
            else

#line 2278
              add r5.w, -r0.w, c10.x

#line 2281
              add r6.z, -r7.z, c54.w
              mul r8.w, r7.z, c121.w
              add r9.x, r7.z, c55.x
              mul r9.x, r9.x, c55.y
              mul r9.y, r9.x, r9.x
              mul r9.x, r9.y, r9.x
              cmp r6.z, r6.z, r8.w, r9.x  // ::v<0>
              cmp r8.z, -r5_abs.w, r6.z, r8.z  // ::TransferInverse<0>

#line 2286
              if_eq c10.x, r0.w

#line 2323
              else

#line 2286
                mov r9.x, c10.x  // ::Companding<0>
                add r5.w, r9.x, c58.x

#line 2301
                if_eq r9.x, -c58.x

#line 2295
                  mul r1.z, r1.z, c55.z
                  exp r1.z, r1.z
                  mad r9.yz, r1.z, c59.xxyw, c59.xzww  // ::a<0>, ::b<0>
                  rcp r1.z, r9.z
                  mul r1.z, r1.z, r9.y
                  pow r6.z, r1.z, c55.w  // ::TransferInverse<0>
                  cmp r8.z, -r5_abs.w, r6.z, r8.z  // ::TransferInverse<0>

#line 2323
                else

#line 2317
                  add r9.xyz, r9.x, c152

#line 2320
                  mul r10.xy, r7.z, c60

#line 2312
                  add r11, r7.z, c56
                  mul r10.zw, r11.xyyw, c60

#line 2304
                  pow r1.z, r10.z, c152.w
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2312
                  pow r5.w, r10.w, c152.w
                  cmp r5.w, r11.z, r5.w, r10.x  // ::L<0>

#line 2320
                  add r6.z, -r7.z, c57.x
                  add r8.w, r7.z, c57.y
                  mul r8.w, r8.w, c57.z
                  pow r9.w, r8.w, c57.w
                  cmp r6.z, r6.z, r10.y, r9.w  // ::v<0>

#line 2323
                  cmp r6.z, -r9_abs.z, r6.z, r7.z  // ::TransferInverse<0>
                  cmp r5.w, -r9_abs.y, r5.w, r6.z  // ::TransferInverse<0>
                  cmp r8.z, -r9_abs.x, r1.z, r5.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2416
          if_eq c0.x, r0.z
            mov r9.xyz, r8  // ::FLrgb<0,1,2>
            mov r1.z, -c105.w
          else
            if_eq c0.x, r0.w
              mov r9.xyz, r8  // ::FLrgb<0,1,2>
              mov r1.z, -c105.w
            else
              mov r10.x, c0.x  // ::Model<0>
              if_eq r10.x, -c58.x
                mov r9.xyz, r8  // ::FLrgb<0,1,2>
                mov r1.z, -c105.w
              else
                if_eq r10.x, -c58.z

#line 659
                  add r9.xyz, -r8, -c105.w  // ::Lrgb_CMY<0,1,2>

#line 2419
                  mov r1.z, -c105.w
                else
                  if_eq r10.x, -c132.x

#line 785
                    add r10.yzw, -r8.xzxy, r8.xyzx

#line 458
                    cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                    min r5.w, r11.x, r8.x  // ::GetMinimum<0>
                    max r6.z, r8.x, r11.y  // ::GetMaximum<0>

#line 767
                    add r8.w, -r5.w, r6.z  // ::c<0>
                    add r11.x, r8.w, c105.w
                    add r11.y, -r8.w, -c105.w
                    rcp r11.y, r11.y
                    mul r5.w, r5.w, r11.y  // ::v<0>

#line 779
                    add r11.yz, -r8.xxyw, r6.z
                    rcp r6.z, r8.w

#line 785
                    mul r10.y, r6.z, r10.y

#line 777
                    cmp r12.xy, r10.y, c128, c128.zwzw
                    mul r10.y, r10.y, r12.y
                    frc r10.y, r10.y
                    mul r10.y, r10.y, r12.x  // ::h<0>

#line 781
                    mad r10.z, r10.z, r6.z, c162.w  // ::h<0>

#line 785
                    mad r6.z, r10.w, r6.z, -c58.z  // ::h<0>
                    cmp r6.z, -r11_abs.z, r10.z, r6.z  // ::h<0>
                    cmp r6.z, -r11_abs.y, r10.y, r6.z  // ::h<0>
                    mul r10.y, r6.z, c128.y  // ::h<0>
                    cmp r6.z, r6.z, c121.x, c121.y
                    mul r10.y, r6.z, r10.y
                    frc r10.y, r10.y
                    mul r6.z, r6.z, r10.y  // ::h<0>
                    mul r6.z, r6.z, c156.x
                    cmp r9.x, -r8.w, c118.z, r6.z  // ::Lrgb_HCV<0>
                    mul r9.y, r8.w, c155.w  // ::Lrgb_HCV<1>
                    mul r5.w, r5.w, c155.w
                    cmp r9.z, r11.x, c118.z, r5.w  // ::Lrgb_HCV<2>

#line 2420
                    mov r1.z, -c105.w
                  else
                    if_eq c0.x, -r6.y

#line 464
                      add r5.w, r8.y, r8.x
                      add r5.w, r8.z, r5.w  // ::GetSum<0>

#line 830
                      rcp r6.z, r5.w
                      mul r10.yzw, r6.z, r8.xxyz  // ::r<0>, ::g<0>, ::b<0>
                      mad r11.xyz, r8.xxyw, r6.z, -r10.zwww
                      add r6.z, r11.y, r11.x
                      mul r6.z, r6.z, -c154.y
                      mul r11.xy, r11.xzzw, r11
                      add r8.w, r11.y, r11.x
                      rsq r8.w, r8.w
                      mul r6.z, r6.z, r8.w
                      add r8.w, -r6_abs.z, -c105.w
                      rsq r8.w, r8.w
                      rcp r8.w, r8.w
                      mad r11.x, r6_abs.z, c61.x, c61.y
                      mad r11.x, r11.x, r6_abs.z, c61.z
                      mad r11.x, r11.x, r6_abs.z, c61.w
                      mul r8.w, r8.w, r11.x
                      mad r11.x, r8.w, c53.x, c53.y
                      cmp r6.z, r6.z, c105_abs.z, c105_abs.w
                      mad r6.z, r11.x, r6.z, r8.w  // ::h<0>

#line 835
                      add r8.w, -r6.z, c49.w  // ::h<0>
                      cmp r6.z, r11.z, r6.z, r8.w  // ::h<0>

#line 460
                      min r8.w, r10.w, r10.z
                      min r11.x, r8.w, r10.y  // ::GetMinimum<0>

#line 839
                      mad r8.w, r11.x, -c48.w, c48.y  // ::s<0>
                      mul r9.z, r5.w, c53.z  // ::i<0>
                      mul r9.x, r6.z, c53.w  // ::Lrgb_HCY<0>
                      mul r9.y, r8.w, c155.w  // ::Lrgb_HCY<1>

#line 2421
                      mov r1.z, -c105.w
                    else
                      if_eq r10.x, -c62.x

#line 1045
                        add r10.yzw, -r8.xzyx, r8.xyxz

#line 458
                        cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                        min r5.w, r11.x, r8.x  // ::GetMinimum<0>
                        max r6.z, r8.x, r11.y  // ::GetMaximum<0>

#line 1024
                        add r8.w, -r5.w, r6.z  // ::chroma<0>
                        add r5.w, r5.w, r6.z

#line 1029
                        add r11.x, r5.w, c105.w
                        rcp r11.y, r5.w
                        add r11.z, -r5.w, c162.w
                        rcp r11.z, r11.z
                        mul r11.yz, r8.w, r11
                        cmp r11.y, r11.x, r11.z, r11.y  // ::s<0>

#line 1043
                        add r12.xyz, -r6.z, r8.xzyw

#line 1035
                        rcp r6.z, r8.w

#line 1045
                        mul r11.z, r6.z, r10.y  // ::h<0>

#line 1041
                        mad r13.xy, r10.yzzw, r6.z, -c152.zxzw  // ::h<0>

#line 1036
                        cmp r10.y, r10.y, r11.z, r13.x  // ::h<0>

#line 1045
                        mad r6.z, r10.w, r6.z, c162.w  // ::h<0>
                        cmp r6.z, -r12_abs.z, r6.z, c118.z  // ::h<0>
                        cmp r6.z, -r12_abs.y, r13.y, r6.z  // ::h<0>
                        cmp r6.z, -r12_abs.x, r10.y, r6.z  // ::h<0>
                        mul r11.x, r6.z, c63.x  // ::h<0>
                        cmp r9.xw, -r8_abs.w, c118.z, r11.xyzy  // ::h<0>, ::s<0>
                        mul r9.z, r5.w, c63.y  // ::Lrgb_HSL<2>

#line 2422
                        mul r9.y, r9.w, c155.w
                        mov r1.z, -c105.w
                      else
                        if_eq r10.x, -c62.z

#line 947
                          add r10.yzw, -r8.xzxy, r8.xyzx

#line 458
                          cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                          min r5.w, r11.x, r8.x  // ::GetMinimum<0>
                          max r6.z, r8.x, r11.y  // ::GetMaximum<0>

#line 926
                          add r5.w, -r5.w, r6.z  // ::chroma<0>

#line 935
                          rcp r8.w, r6.z
                          mul r11.y, r5.w, r8.w  // ::_s<0>

#line 946
                          add r12.xyz, -r6.z, r8

#line 939
                          rcp r8.w, r5.w

#line 947
                          mul r11.z, r8.w, r10.y  // ::_h<0>
                          mad r13.xy, r10.ywzw, r8.w, -c152.zxzw  // ::_h<0>

#line 940
                          cmp r10.y, r10.y, r11.z, r13.x  // ::_h<0>

#line 944
                          mad r8.w, r10.z, r8.w, c162.w  // ::_h<0>

#line 947
                          cmp r10.z, -r12_abs.z, r13.y, c118.z  // ::_h<0>
                          cmp r8.w, -r12_abs.y, r8.w, r10.z  // ::_h<0>
                          cmp r8.w, -r12_abs.x, r10.y, r8.w  // ::_h<0>
                          mul r11.x, r8.w, c63.x  // ::_h<0>
                          cmp r9.xw, -r5_abs.w, c118.z, r11.xyzy  // ::_h<0>, ::_s<0>
                          mul r9.z, r6.z, c155.w  // ::Lrgb_HSB<2>

#line 2423
                          mul r9.y, r9.w, c155.w
                          mov r1.z, -c105.w
                        else
                          if_eq r10.x, -c84.x

#line 947
                            add r10.xyz, -r8.zxyw, r8.yzxw

#line 458
                            cmp r11.xy, r10.x, r8.zyzw, r8.yzzw
                            min r5.w, r11.x, r8.x  // ::GetMinimum<0>
                            max r6.z, r8.x, r11.y  // ::GetMaximum<0>

#line 926
                            add r5.w, -r5.w, r6.z  // ::chroma<0>

#line 935
                            rcp r8.w, r6.z
                            mul r11.y, r5.w, r8.w  // ::_s<0>

#line 946
                            add r12.xyz, -r6.z, r8

#line 939
                            rcp r8.w, r5.w

#line 947
                            mul r10.w, r8.w, r10.x  // ::_h<0>
                            mad r11.zw, r10.xyxz, r8.w, -c152.xyzx  // ::_h<0>

#line 940
                            cmp r10.x, r10.x, r10.w, r11.z  // ::_h<0>

#line 944
                            mad r8.w, r10.y, r8.w, c162.w  // ::_h<0>

#line 947
                            cmp r10.y, -r12_abs.z, r11.w, c118.z  // ::_h<0>
                            cmp r8.w, -r12_abs.y, r8.w, r10.y  // ::_h<0>
                            cmp r8.w, -r12_abs.x, r10.x, r8.w  // ::_h<0>
                            mul r11.x, r8.w, c63.x  // ::_h<0>
                            cmp r9.xw, -r5_abs.w, c118.z, r11.xyzy  // ::_h<0>, ::_s<0>
                            mul r9.z, r6.z, c155.w  // ::Lrgb_HSB<2>

#line 2424
                            mul r9.y, r9.w, c155.w
                            mov r1.z, -c105.w
                          else
                            add r5.w, r6.x, c0.x
                            cmp r1.z, -r5_abs.w, c105_abs.w, c105_abs.z

#line 1045
                            add r10.xyz, -r8.zyxw, r8.yxzw

#line 458
                            cmp r11.xy, r10.x, r8.zyzw, r8.yzzw
                            min r5.w, r11.x, r8.x  // ::GetMinimum<0>
                            max r6.z, r8.x, r11.y  // ::GetMaximum<0>

#line 1024
                            add r8.w, -r5.w, r6.z  // ::chroma<0>
                            add r5.w, r5.w, r6.z

#line 1029
                            add r10.w, r5.w, c105.w
                            rcp r11.x, r5.w
                            add r11.y, -r5.w, c162.w
                            rcp r11.y, r11.y
                            mul r11.xy, r8.w, r11
                            cmp r11.y, r10.w, r11.y, r11.x  // ::s<0>

#line 1043
                            add r12.xyz, -r6.z, r8.xzyw

#line 1035
                            rcp r6.z, r8.w

#line 1045
                            mul r10.w, r6.z, r10.x  // ::h<0>

#line 1041
                            mad r11.zw, r10.xyxy, r6.z, -c152.xyzx  // ::h<0>

#line 1036
                            cmp r10.x, r10.x, r10.w, r11.z  // ::h<0>

#line 1045
                            mad r6.z, r10.z, r6.z, c162.w  // ::h<0>
                            cmp r6.z, -r12_abs.z, r6.z, c118.z  // ::h<0>
                            cmp r6.z, -r12_abs.y, r11.w, r6.z  // ::h<0>
                            cmp r6.z, -r12_abs.x, r10.x, r6.z  // ::h<0>
                            mul r11.x, r6.z, c63.x  // ::h<0>
                            cmp r9.xw, -r8_abs.w, c118.z, r11.xyzy  // ::h<0>, ::s<0>
                            mul r9.z, r5.w, c63.y  // ::Lrgb_HSL<2>

#line 2425
                            mul r9.y, r9.w, c155.w
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r1.z, -r1.z

#line 2465
          else

#line 2427
            mov r10.x, c0.x  // ::Model<0>
            if_eq r10.x, -c64.x

#line 1045
              add r10.yzw, -r8.xzyx, r8.xyxz

#line 458
              cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
              min r1.z, r11.x, r8.x  // ::GetMinimum<0>
              max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1024
              add r6.z, -r1.z, r5.w  // ::chroma<0>
              add r1.z, r1.z, r5.w

#line 1029
              add r8.w, r1.z, c105.w
              rcp r11.x, r1.z
              add r11.y, -r1.z, c162.w
              rcp r11.y, r11.y
              mul r11.xy, r6.z, r11
              cmp r11.y, r8.w, r11.y, r11.x  // ::s<0>

#line 1043
              add r12.xyz, -r5.w, r8.xzyw

#line 1035
              rcp r5.w, r6.z

#line 1045
              mul r8.w, r5.w, r10.y  // ::h<0>

#line 1041
              mad r11.zw, r10.xyyz, r5.w, -c152.xyzx  // ::h<0>

#line 1036
              cmp r8.w, r10.y, r8.w, r11.z  // ::h<0>

#line 1045
              mad r5.w, r10.w, r5.w, c162.w  // ::h<0>
              cmp r5.w, -r12_abs.z, r5.w, c118.z  // ::h<0>
              cmp r5.w, -r12_abs.y, r11.w, r5.w  // ::h<0>
              cmp r5.w, -r12_abs.x, r8.w, r5.w  // ::h<0>
              mul r11.x, r5.w, c63.x  // ::h<0>
              cmp r9.xw, -r6_abs.z, c118.z, r11.xyzy  // ::h<0>, ::s<0>
              mul r9.z, r1.z, c63.y  // ::Lrgb_HSL<2>

#line 2427
              mul r9.y, r9.w, c155.w
              mov r1.z, -c105.w
            else
              if_eq r10.x, -c64.y

#line 1045
                add r10.yzw, -r8.xzyx, r8.xyxz

#line 458
                cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                min r5.w, r11.x, r8.x  // ::GetMinimum<0>
                max r6.z, r8.x, r11.y  // ::GetMaximum<0>

#line 1024
                add r8.w, -r5.w, r6.z  // ::chroma<0>
                add r5.w, r5.w, r6.z

#line 1029
                add r11.x, r5.w, c105.w
                rcp r11.y, r5.w
                add r11.z, -r5.w, c162.w
                rcp r11.z, r11.z
                mul r11.yz, r8.w, r11
                cmp r11.y, r11.x, r11.z, r11.y  // ::s<0>

#line 1043
                add r12.xyz, -r6.z, r8.xzyw

#line 1035
                rcp r6.z, r8.w

#line 1045
                mul r11.z, r6.z, r10.y  // ::h<0>

#line 1041
                mad r13.xy, r10.yzzw, r6.z, -c152.zxzw  // ::h<0>

#line 1036
                cmp r10.y, r10.y, r11.z, r13.x  // ::h<0>

#line 1045
                mad r6.z, r10.w, r6.z, c162.w  // ::h<0>
                cmp r6.z, -r12_abs.z, r6.z, c118.z  // ::h<0>
                cmp r6.z, -r12_abs.y, r13.y, r6.z  // ::h<0>
                cmp r6.z, -r12_abs.x, r10.y, r6.z  // ::h<0>
                mul r11.x, r6.z, c63.x  // ::h<0>
                cmp r9.xw, -r8_abs.w, c118.z, r11.xyzy  // ::h<0>, ::s<0>
                mul r9.z, r5.w, c63.y  // ::Lrgb_HSL<2>

#line 2428
                mul r9.y, r9.w, c155.w
                mov r1.z, -c105.w
              else
                if_eq r10.x, -c65.x

#line 1066
                  frc r5.w, c0.x
                  add r5.w, -r5.w, c0.x
                  add r11, r5.w, c62
                  add r12, r5.w, c84
                  add r13, r5.w, c64
                  add r14, r5.w, c65
                  add r15, r5.w, c46
                  add r16, r5.w, c160
                  add r17, r5.w, c161
                  add r10.yzw, r5.w, c162.xxyz
                  add r18, r5.w, c163
                  add r19, r5.w, c164
                  add r20.xy, r5.w, c58.zwzw
                  add r21, r5.w, c132
                  cmp r22.xyz, -r18_abs.x, c154.w, c154.x
                  cmp r22.xyz, -r18_abs.z, -c105.w, r22
                  cmp r22.xyz, -r19_abs.x, c154.w, r22
                  cmp r22.xyz, -r19_abs.z, c154.w, r22
                  cmp r20.xzw, -r20_abs.x, -c105.w, r22.xyyz
                  cmp r20.xzw, -r21_abs.x, c156.xyyy, r20
                  cmp r20.xzw, -r21_abs.z, c156.xyyz, r20
                  cmp r20.xzw, -r11_abs.x, c156.xyyy, r20
                  cmp r20.xzw, -r11_abs.z, c156.xyyy, r20
                  cmp r20.xzw, -r12_abs.x, c156.xyyy, r20
                  cmp r20.xzw, -r12_abs.z, c156.xyyy, r20
                  cmp r20.xzw, -r13_abs.x, c156.xyyy, r20
                  cmp r20.xzw, -r13_abs.y, c156.xyyy, r20
                  cmp r20.xzw, -r14_abs.x, c156.xyyz, r20
                  cmp r20.xzw, -r14_abs.y, c156.xyyz, r20
                  cmp r14.xyz, -r14_abs.z, c156.xyyw, r20.xzww
                  cmp r14.xyz, -r14_abs.w, -c105.w, r14
                  cmp r14.xyz, -r15_abs.x, c154.w, r14
                  cmp r14.xyz, -r15_abs.y, c155.w, r14
                  cmp r14.xyz, -r15_abs.z, c156.ywww, r14
                  cmp r14.xyz, -r15_abs.w, c50, r14
                  cmp r14.xyz, -r16_abs.x, -c105.w, r14
                  cmp r14.xyz, -r16_abs.y, -c105.w, r14
                  cmp r14.xyz, -r16_abs.z, c156.yyxw, r14
                  cmp r14.xyz, -r16_abs.w, c156.yyxw, r14
                  cmp r14.xyz, -r10_abs.y, c157.xxyw, r14
                  cmp r14.xyz, -r10_abs.z, c156.yyxw, r14
                  cmp r10.yzw, -r10_abs.w, c156.xyyx, r14.xxyz
                  cmp r10.yzw, -r17_abs.x, -c105.w, r10
                  cmp r10.yzw, -r17_abs.y, c51.xxyz, r10
                  cmp r10.yzw, -r17_abs.z, -c105.w, r10
                  cmp r10.yzw, -r17_abs.w, -c105.w, r10
                  cmp r10.yzw, -r18_abs.y, -c105.w, r10
                  cmp r10.yzw, -r18_abs.w, c51.xyzx, r10
                  cmp r10.yzw, -r19_abs.y, c154.w, r10
                  cmp r10.yzw, -r19_abs.w, -c105.w, r10
                  cmp r10.yzw, -r20_abs.y, c157.xzww, r10
                  cmp r10.yzw, -r21_abs.y, -c105.w, r10
                  cmp r10.yzw, -r21_abs.w, c131.xxyy, r10
                  cmp r10.yzw, -r11_abs.y, c131.xzww, r10
                  cmp r10.yzw, -r11_abs.w, c158.xxyy, r10
                  cmp r10.yzw, -r12_abs.y, -c105.w, r10
                  cmp r10.yzw, -r12_abs.w, c158.xxzw, r10
                  cmp r10.yzw, -r13_abs.z, c131.xzww, r10
                  cmp r10.yzw, -r13_abs.w, c131.xzww, r10  // ::max<0,1,2>
                  add r5.w, r8.y, r8.y
                  mad r5.w, r8.x, -c58.z, r5.w
                  add r5.w, r8.z, r5.w

#line 1105
                  mul r6.z, r5.w, c63.z  // ::m<0>

#line 1072
                  mad r11.xyz, r5.w, -c63.z, r8
                  mul r8.w, r11.y, -c58.z
                  mad r8.w, r11.x, -c58.x, -r8.w
                  mad r8.w, r11.z, c58.z, r8.w
                  mul r8.w, r8.w, c63.w  // ::j<0>
                  mul r11.xy, r11, r11
                  add r9.w, r11.y, r11.x
                  mad r9.w, r11.z, r11.z, r9.w
                  rsq r9.w, r9.w
                  mul r8.w, r8.w, r9.w
                  add r11.x, -r8_abs.w, -c105.w
                  rsq r11.x, r11.x
                  rcp r11.x, r11.x
                  mad r11.y, r8_abs.w, c61.x, c61.y
                  mad r11.y, r11.y, r8_abs.w, c61.z
                  mad r11.y, r11.y, r8_abs.w, c61.w
                  mul r11.x, r11.x, r11.y
                  mad r11.y, r11.x, c53.x, c53.y
                  cmp r8.w, r8.w, c105_abs.z, c105_abs.w
                  mad r8.w, r11.y, r8.w, r11.x  // ::t<0>
                  add r11.x, -r8.z, r8.y
                  add r11.y, -r8.w, c49.w
                  cmp r8.w, r11.x, r8.w, r11.y  // ::w<0>

#line 1105
                  mad r11.xy, r5.w, -c67.x, c67.yzzw  // Pow2::input<0,0>

#line 498
                  mul r11.x, r11.x, r11.x  // ::Pow2<0>

#line 1085
                  dp2add r11.x, r6.z, r6.z, r11.x  // ::v<0>

#line 321
                  add r11.z, -r5.w, c67.w

#line 1105
                  mad r11.w, r5.w, c69.x, c69.y  // Pow2::input<0>

#line 498
                  mul r11.w, r11.w, r11.w  // ::Pow2<0>

#line 1105
                  dp2add r11.y, r11.y, r11.y, r11.w  // ::v<0>
                  cmp r11.z, r11.z, -c105_abs.w, -c105_abs.z
                  cmp r11.z, -r5.w, c118.z, r11.z
                  cmp r11.y, r11.z, c118.z, r11.y  // ::v<0>
                  cmp r11.z, -r5.w, -c105_abs.w, -c105_abs.z
                  cmp r5.w, r5.w, r11.z, c118.z
                  cmp r5.w, r5.w, r11.y, r11.x  // ::v<0>
                  mul r8.w, r10.y, r8.w
                  rcp r9.w, r9.w
                  rsq r5.w, r5.w
                  mul r5.w, r5.w, r9.w  // ::s<0>
                  mul r9.x, r8.w, c54.z  // ::Lrgb_HSM<0>
                  mul r9.y, r10.z, r5.w  // ::Lrgb_HSM<1>
                  mul r9.z, r10.w, r6.z  // ::Lrgb_HSM<2>

#line 2429
                  mov r1.z, -c105.w
                else
                  if_eq r10.x, -c65.y

#line 1245
                    mul r10.yzw, r8.xxyz, c154.w  // ::_input<0,1,2>

#line 1249
                    mul r11.xyz, r10.yzww, r10.yzww
                    mul r11.xy, r11, c69.zwzw
                    add r5.w, r11.y, r11.x
                    mad r5.w, r11.z, c68.x, r5.w
                    rsq r5.w, r5.w
                    rcp r5.w, r5.w  // ::p<0>
                    mad r11.xy, r8.x, c154.w, -r10.wzzw
                    cmp r6.z, -r11_abs.x, c105_abs.w, c105_abs.z
                    cmp r6.z, -r11_abs.y, r6.z, c118.z
                    if_ne r6.z, -r6.z

#line 1254
                      mov r11.zw, c118.z  // ::h<0>, ::s<0>
                    else

#line 1267
                      mad r12.xy, r8.yzzw, c154.w, -r10.wzzw
                      mul r12.zw, r12.xyyx, c128.y

#line 1262
                      rcp r6.z, r11.y
                      mad r13.y, r12.z, -r6.z, -c105.w  // ::h<0>
                      rcp r6.z, r10.y

#line 1267
                      rcp r8.w, r11.x
                      mul r13.x, r8.w, r12.w  // ::h<0>
                      mad r13.zw, r10, -r6.z, -c105.w  // ::s<0,0>
                      cmp r12.zw, r12.y, r13.xyyz, r13.xyxw  // ::h<0>, ::s<0>
                      cmp r6.z, r11.x, -c105_abs.w, -c105_abs.z
                      cmp r6.z, r11.y, r6.z, c118.z
                      cmp r12.zw, r6.z, c118.z, r12  // ::h<0>, ::s<0>

#line 1297
                      mul r13.xy, r11, c128.y

#line 1277
                      rcp r6.z, r12.x
                      mad r14.y, r13.x, -r6.z, c53.z  // ::h<0>
                      rcp r6.z, r10.z

#line 1282
                      mad r13.xz, r8.yyzw, c154.w, -r10.y

#line 1292
                      mul r15.xy, r13.zxzw, c128.y

#line 1282
                      rcp r8.w, r13.x
                      mad r14.x, r15.x, r8.w, c53.z  // ::h<0>
                      mad r14.zw, r10.xywy, -r6.z, -c105.w  // ::s<0,0>
                      cmp r11.xy, r11.x, r14.yzzw, r14.xwzw  // ::h<0>, ::s<0>

#line 1300
                      cmp r14.xy, r12, -c105_abs.w, -c105_abs.z
                      cmp r14.xy, r13.xzzw, r14, c118.z

#line 1285
                      cmp r11.xy, r14.x, r12.zwzw, r11  // ::h<0>, ::s<0>

#line 1292
                      rcp r6.z, r13.z
                      mad r15.y, r15.y, -r6.z, c68.y  // ::h<0>
                      rcp r6.z, r10.w

#line 1297
                      rcp r8.w, r12.y
                      mad r15.x, r13.y, r8.w, c68.y  // ::h<0>
                      mad r15.zw, r10.xyyz, -r6.z, -c105.w  // ::s<0,0>
                      cmp r10.yz, r13.x, r15, r15.xxww  // ::h<0>, ::s<0>
                      cmp r11.zw, r14.y, r11.xyxy, r10.xyyz  // ::h<0>, ::s<0>
                    endif
                    mul r9.y, r11.w, c155.w  // ::Lrgb_HSP<1>
                    mad r6.z, r11.z, c68.z, c68.w
                    frc r8.w, r6.z
                    add r9.x, r6.z, -r8.w  // ::Lrgb_HSP<0>
                    add r5.w, r5.w, -c154.y
                    frc r6.z, r5.w
                    add r9.z, r5.w, -r6.z  // ::Lrgb_HSP<2>

#line 2430
                    mov r1.z, -c105.w
                  else
                    if_eq r10.x, -c65.z

#line 947
                      add r10.yzw, -r8.xzxy, r8.xyzx

#line 458
                      cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                      min r5.w, r11.x, r8.x  // ::GetMinimum<0>
                      max r6.z, r8.x, r11.y  // ::GetMaximum<0>

#line 926
                      add r8.w, -r5.w, r6.z  // ::chroma<0>

#line 946
                      add r11.xyz, -r6.z, r8

#line 939
                      rcp r9.w, r8.w

#line 947
                      mul r11.w, r9.w, r10.y  // ::_h<0>
                      mad r12.xy, r10.ywzw, r9.w, -c152.zxzw  // ::_h<0>

#line 940
                      cmp r10.y, r10.y, r11.w, r12.x  // ::_h<0>

#line 944
                      mad r9.w, r10.z, r9.w, c162.w  // ::_h<0>

#line 947
                      cmp r10.z, -r11_abs.z, r12.y, c118.z  // ::_h<0>
                      cmp r9.w, -r11_abs.y, r9.w, r10.z  // ::_h<0>
                      cmp r9.w, -r11_abs.x, r10.y, r9.w  // ::_h<0>
                      mul r9.w, r9.w, c63.x  // ::_h<0>
                      cmp r9.x, -r8_abs.w, c118.z, r9.w  // ::_h<0>

#line 1334
                      add r6.z, -r6.z, -c105.w  // ::black<0>
                      mul r9.y, r5.w, c155.w  // ::Lrgb_HWB<1>
                      mul r9.z, r6.z, c155.w  // ::Lrgb_HWB<2>

#line 2431
                      mov r1.z, -c105.w
                    else
                      if_eq r10.x, c153.w
                        mov r9.xyz, r8  // ::FLrgb<0,1,2>
                        mov r1.z, -c105.w
                      else
                        if_eq r10.x, -c46.x

#line 2138
                          dp3 r5.w, r8, c146  // ::y<0>
                          add r10.yz, -r5.w, r8.xzxw

#line 2182
                          mad r5.w, r5.w, c150.x, c150.y  // ::Lrgb_YCbCr<0>
                          mad r10.yz, r10, c151.xxyw, c151.z  // ::Lrgb_YCbCr<1,2>

#line 2202
                          mul r6.z, r10.y, c69.w
                          mad r6.z, r5.w, c69.z, r6.z
                          mad r9.x, r10.z, c68.x, r6.z  // ::Lrgb_JPEG<0>
                          mad r6.z, r5.w, -c150.z, c150.w
                          mad r6.z, r10.y, -c146.w, r6.z
                          mad r9.y, r10.z, -c154.y, r6.z  // ::Lrgb_JPEG<1>
                          mad r5.w, r5.w, c151.w, c151.z
                          mad r5.w, r10.y, -c115.x, r5.w
                          mad r9.z, r10.z, -c115.y, r5.w  // ::Lrgb_JPEG<2>

#line 2433
                          mov r1.z, -c105.w
                        else
                          if_eq r10.x, -c46.y
                            mov r9.xyz, c118.z  // ::FLrgb<0,1,2>
                            mov r1.z, -c105.w
                          else
                            if_eq r10.x, -c66.x

#line 508
                              abs r5.w, c13.x

#line 512
                              rcp r6.z, c13.x
                              mul r11.x, r6.z, c12.x  // ::xyY_XYZ<0>
                              mov r12.x, c13.x  // ::WhiteY<0>
                              add r8.w, -r12.x, -c12.x
                              add r8.w, r8.w, -c105.w
                              mul r11.z, r6.z, r8.w  // ::xyY_XYZ<2>
                              mov r11.y, -c105.w
                              cmp r10.yzw, -r5.w, c115.z, r11.xxyz  // ::xyY_XYZ<0,1,2>

#line 470
                              mul r11.xyz, r8.y, c18
                              mad r11.xyz, r8.x, c17, r11
                              mad r11.xyz, r8.z, c19, r11  // ::x<0>, ::y<0>, ::z<0>

#line 552
                              add r12.xy, r10.ywzw, c90

#line 555
                              cmp r6.z, -r12_abs.y, -c105_abs.w, -c105_abs.z
                              cmp r6.z, -r5.w, c118.z, r6.z
                              cmp r6.z, -r12_abs.x, r6.z, c118.z

#line 565
                              add r12.xy, r10.zwzw, r10.yzzw
                              mul r12.xy, r12, c90.zwzw  // ::Ka<0,0>
                              cmp r12.xy, r6.z, r12, c114  // ::ComputeKa<0>, ::ComputeKb<0>

#line 1471
                              cmp r5.w, -r5.w, c114.z, c114.w
                              mul r5.w, r5.w, r11.y
                              rsq r6.z, r5.w
                              rcp r8.w, r6.z
                              mul r9.x, r8.w, c155.w  // ::L<0>
                              rcp r8.w, r10.y
                              mad r8.w, r11.x, r8.w, -r5.w
                              mul r8.w, r6.z, r8.w
                              mul r9.y, r8.w, r12.x  // ::a<0>
                              rcp r8.w, r10.w
                              mad r5.w, r11.z, -r8.w, r5.w
                              mul r5.w, r6.z, r5.w
                              mul r9.z, r5.w, r12.y  // ::b<0>

#line 2435
                              mov r1.z, -c105.w
                            else
                              add r5.w, r10.x, c66.y
                              cmp r1.z, -r5_abs.w, c105_abs.w, c105_abs.z
                              cmp r9.xyz, -r5_abs.w, r8, r9  // ::FLrgb<0,1,2>
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r1.z, -r1.z

#line 2465
            else

#line 2438
              if_eq r10.x, -c66.z

#line 470
                mul r11, r8.y, c18.yzxy
                mad r11, r8.x, c17.yzxy, r11
                mad r11, r8.z, c19.yzxy, r11  // ::y<0>, ::z<0>, ::x<0>, ::y<0>

#line 1520
                mul r10.yz, r11.xzww, c93.xxyw
                add r1.z, r10.z, r10.y
                mad r1.z, r11.y, -c115.w, r1.z  // PerceptualQuantizer::x<0>

#line 484
                mul r1.z, r1.z, c93.z
                pow r5.w, r1.z, c55.z  // ::xx<0>
                mad r10.yz, r5.w, c59.xxyw, c59.xzww
                rcp r1.z, r10.z
                mul r1.z, r1.z, r10.y
                pow r5.w, r1.z, c93.w  // ::result<0>

#line 1521
                mul r10.yzw, r11.xxzw, c149.xxyz
                mad r1.z, r11.z, c149.w, r10.y
                mad r1.z, r11.y, c148.x, r1.z  // PerceptualQuantizer::x<0>

#line 484
                mul r1.z, r1.z, c93.z
                pow r6.z, r1.z, c55.z  // ::xx<0>
                mad r11.xz, r6.z, c59.xyyw, c59.zyww
                rcp r1.z, r11.z
                mul r1.z, r1.z, r11.x
                pow r6.z, r1.z, c93.w  // ::result<0>

#line 1521
                add r1.z, r10.w, r10.z
                mad r1.z, r11.y, c148.y, r1.z  // PerceptualQuantizer::x<0>

#line 484
                mul r1.z, r1.z, c93.z
                pow r8.w, r1.z, c55.z  // ::xx<0>
                mad r10.yz, r8.w, c59.xxyw, c59.xzww
                rcp r1.z, r10.z
                mul r1.z, r1.z, r10.y
                pow r8.w, r1.z, c93.w  // ::result<0>

#line 1523
                add r1.z, r5.w, r6.z

#line 1526
                mul r10.yz, r6.z, c148.xzww
                mad r6.z, r5.w, c147.x, -r10.y
                mad r9.y, r8.w, c147.y, r6.z  // ::az<0>
                mad r5.w, r5.w, c147.z, r10.z
                mad r9.z, r8.w, -c147.w, r5.w  // ::bz<0>
                mul r5.w, r1.z, c70.x
                mad r1.z, r1.z, -c70.y, c70.z
                rcp r1.z, r1.z
                mad r9.x, r5.w, r1.z, c70.w  // ::Jz<0>

#line 2438
                mov r1.z, -c105.w
              else
                if_eq r10.x, -c66.w

#line 470
                  mov r11.xyz, c29  // ::LMSk_LABk_x<0,1,2>
                  add r10.yzw, r11.xxyz, c30.xxyz
                  add r9.xyz, r10.yzww, c31  // ::x<0>, ::y<0>, ::z<0>

#line 2439
                  mov r1.z, -c105.w
                else
                  if_eq r10.x, -c35.x
                    mov r9.xyz, c118.z  // ::FLrgb<0,1,2>
                    mov r1.z, -c105.w
                  else
                    if_eq r10.x, -c35.y
                      mov r9.xyz, c118.z  // ::FLrgb<0,1,2>
                      mov r1.z, -c105.w
                    else
                      if_eq r10.x, -c35.z
                        mov r9.xyz, c118.z  // ::FLrgb<0,1,2>
                        mov r1.z, -c105.w
                      else
                        if_eq r10.x, -c35.w
                          mov r9.xyz, c118.z  // ::FLrgb<0,1,2>
                          mov r1.z, -c105.w
                        else
                          if_eq r10.x, -c36.x
                            mov r9.xyz, c118.z  // ::FLrgb<0,1,2>
                            mov r1.z, -c105.w
                          else
                            if_eq r10.x, -c36.y

#line 470
                              mul r10.yzw, r8.y, c18.xxyz
                              mad r10.yzw, r8.x, c17.xxyz, r10
                              mad r10.yzw, r8.z, c19.xxyz, r10  // ::x<0>, ::y<0>, ::z<0>
                              mul r11.xyz, r10.z, c21
                              mad r11.xyz, r10.y, c20, r11
                              mad r9.xyz, r10.w, c22, r11  // ::x<0>, ::y<0>, ::z<0>

#line 2445
                              mov r1.z, -c105.w
                            else
                              if_eq r10.x, -c36.z

#line 508
                                abs r5.w, c13.x

#line 512
                                rcp r6.z, c13.x
                                mul r11.x, r6.z, c12.x  // ::xyY_XYZ<0>
                                mov r12.x, c13.x  // ::WhiteY<0>
                                add r8.w, -r12.x, -c12.x
                                add r8.w, r8.w, -c105.w
                                mul r11.z, r6.z, r8.w  // ::xyY_XYZ<2>
                                mov r11.y, -c105.w
                                cmp r10.yzw, -r5.w, c115.z, r11.xxyz  // ::xyY_XYZ<0,1,2>

#line 571
                                cmp r11.xy, -r5.w, c129, c129.zwzw

#line 1638
                                mul r5.w, r8.y, r11.x  // ::yr<0>

#line 571
                                mul r6.z, r8.x, -c58.z
                                mad r8.w, r8.y, -c65.z, r8.x
                                mad r8.w, r8.z, -c58.x, r8.w
                                rcp r8.w, r8.w

#line 576
                                mul r9.w, r8.y, r8.w

#line 571
                                add r11.y, r10.y, r11.y
                                mul r10.y, r10.y, -c58.z
                                mad r10.w, r10.w, -c58.x, r11.y
                                rcp r10.w, r10.w
                                mul r10.yz, r10.xwzw, r10.xyww  // ::ComputeKu<0>

#line 576
                                mul r10.z, r10.z, -c84.x  // ::ComputeKv<0>

#line 1645
                                mad r10.w, r8.y, -r11.x, c102.x
                                mul r5.w, r5.w, c102.y
                                cmp r5.w, r10.w, r5.w, c155.w  // ::L<0>

#line 1648
                                max r9.x, r5.w, c118.z  // ::L<0>

#line 1651
                                mul r5.w, r9.x, -c65.x
                                mad r6.z, r6.z, r8.w, -r10.y
                                mul r9.y, r5.w, r6.z  // ::u<0>

#line 1654
                                mad r6.z, r9.w, -c84.x, -r10.z
                                mul r9.z, r5.w, r6.z  // ::v<0>

#line 2446
                                mov r1.z, -c105.w
                              else
                                add r5.w, r10.x, c36.w
                                cmp r1.z, -r5_abs.w, c105_abs.w, c105_abs.z

#line 519
                                add r6.z, r8.y, r8.x
                                add r6.z, r8.z, r6.z  // ::sum<0>

#line 524
                                rcp r8.w, r6.z
                                mul r10.yz, r8.w, r8.xxyw  // ::XYZ_xyY<0,1>
                                cmp r11.xy, -r6_abs.z, c118.z, r10.yzzw  // ::XYZ_xyY<0,1>

#line 2447
                                mov r11.z, r8.y
                                cmp r9.xyz, -r5_abs.w, r11, r9  // ::FLrgb<0,1,2>
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r1.z, -r1.z

#line 2465
              else

#line 2449
                if_eq r10.x, -c37.x

#line 1369
                  add r1.z, r8.y, r8.x
                  add r1.z, r8.z, r1.z  // ::sum<0>
                  rcp r5.w, r1.z
                  mul r10.yz, r5.w, r8.xxyw
                  cmp r10.yz, -r1_abs.z, c118.z, r10  // ::x<0>, ::y<0>

#line 1374
                  rcp r1.z, r10.z
                  mul r1.z, r1.z, r10.y
                  mov_sat r5.w, r1_abs.z
                  add r6.z, r1_abs.z, c105.w
                  rcp r8.w, r1_abs.z
                  cmp r6.z, r6.z, r8.w, -c105.w
                  mul r5.w, r5.w, r6.z
                  mul r6.z, r5.w, r5.w
                  mad r8.w, r6.z, c49.x, c49.y
                  mad r8.w, r6.z, r8.w, c50.w
                  mad r8.w, r6.z, r8.w, c51.w
                  mad r6.z, r6.z, r8.w, c49.z
                  mul r5.w, r5.w, r6.z
                  add r6.z, -r1_abs.z, -c105.w
                  cmp r6.z, r6.z, c105_abs.z, c105_abs.w
                  mad r8.w, r5.w, c52.x, c52.y
                  mad r5.w, r8.w, r6.z, r5.w
                  min r6.z, r1.z, -c105.w
                  cmp r1.z, r6.z, c105_abs.z, c105_abs.w
                  add r6.z, r5.w, r5.w
                  mad r1.z, r1.z, -r6.z, r5.w
                  mad r11.xy, r1.z, c78.x, c78.yzzw
                  cmp r1.z, r10.z, c118.z, r11.y
                  cmp r9.x, -r10.z, r1.z, r11.x  // ::tsl<0>
                  mul r10.yz, r10, r10
                  add r1.z, r10.z, r10.y
                  rsq r1.z, r1.z
                  rcp r9.y, r1.z  // ::tsl<1>
                  dp3 r9.z, r8, c144  // ::tsl<2>

#line 2449
                  mov r1.z, -c105.w
                else
                  if_eq r10.x, -c37.y

#line 470
                    mul r10.yzw, r8.y, c18.xxyz
                    mad r10.yzw, r8.x, c17.xxyz, r10
                    mad r10.yzw, r8.z, c19.xxyz, r10  // ::x<0>, ::y<0>, ::z<0>

#line 1905
                    mad r5.w, r10.z, -c58.x, -r10.y
                    add r5.w, r10.w, r5.w
                    mul r9.z, r5.w, -c154.y  // ::Lrgb_UCS<2>

#line 2450
                    mul r9.xy, r10.yzzw, c142.zwzw
                    mov r1.z, -c105.w
                  else
                    if_eq r10.x, -c37.z

#line 508
                      abs r5.w, c13.x

#line 512
                      rcp r6.z, c13.x
                      mul r11.x, r6.z, c12.x  // ::xyY_XYZ<0>
                      mov r12.x, c13.x  // ::WhiteY<0>
                      add r8.w, -r12.x, -c12.x
                      add r8.w, r8.w, -c105.w
                      mul r11.z, r6.z, r8.w  // ::xyY_XYZ<2>
                      mov r11.y, -c105.w
                      cmp r10.yzw, -r5.w, c115.z, r11.xxyz  // ::xyY_XYZ<0,1,2>

#line 470
                      mul r11, r8.y, c18.xyzx
                      mad r11, r8.x, c17.xyzx, r11
                      mad r11, r8.z, c19.xyzx, r11  // ::x<0>, ::y<0>, ::z<0>, ::x<0>

#line 1943
                      cmp r5.w, -r5.w, c129.y, c129.w
                      add r5.w, r5.w, r10.y
                      mul r6.z, r10.y, -c58.z
                      mad r5.w, r10.w, -c58.x, r5.w
                      rcp r5.w, r5.w
                      mul r8.w, r10.z, r5.w

#line 1947
                      mul r10.yzw, r11.xxyw, c141.xxyz  // ::x<0>
                      add r9.w, r10.z, r10.y
                      mad r9.w, r11.z, c102.z, r9.w  // ::uv<0>
                      rcp r10.y, r9.w
                      mul r10.z, r10.y, r10.w
                      cmp r10.z, -r9_abs.w, c118.z, r10.z  // ::_u<0>
                      mul r10.y, r11.y, r10.y
                      mul r10.y, r10.y, c102.w
                      cmp r9.w, -r9_abs.w, c118.z, r10.y  // ::_v<0>

#line 1951
                      mad r5.w, r6.z, -r5.w, r10.z
                      mul r9.x, r5.w, c78.w  // ::u<0>
                      mad r5.w, r8.w, c105.y, r9.w
                      mul r9.y, r5.w, c78.w  // ::v<0>

#line 2451
                      mov r9.z, -c62.z
                      mov r1.z, -c105.w
                    else
                      if_eq r10.x, -c37.w

#line 2138
                        dp3 r5.w, r8, c146  // ::y<0>
                        add r10.yz, -r5.w, r8.xzxw

#line 2162
                        mad r9.x, r5.w, c150.x, c150.y  // ::Lrgb_xvYCC<0>
                        mad r9.yz, r10, c151.xxyw, c151.z  // ::Lrgb_xvYCC<1,2>

#line 2452
                        mov r1.z, -c105.w
                      else
                        if_eq r10.x, -c47.x

#line 470
                          mul r10.yzw, r8.y, c18.xxyz
                          mad r10.yzw, r8.x, c17.xxyz, r10
                          mad r9.xyz, r8.z, c19.xzyw, r10.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 519
                          add r5.w, r9.z, r9.x
                          add r5.w, r9.y, r5.w  // ::sum<0>

#line 524
                          rcp r6.z, r5.w
                          mul r10.yz, r6.z, r9.xxzw  // ::XYZ_xyY<0,1>
                          cmp r9.xy, -r5_abs.w, c118.z, r10.yzzw  // ::XYZ_xyY<0,1>

#line 2453
                          mov r1.z, -c105.w
                        else
                          if_eq r10.x, -c47.y

#line 470
                            mul r10.yzw, r8.y, c18.xxyz
                            mad r10.yzw, r8.x, c17.xxyz, r10
                            mad r9.xyz, r8.z, c19.xzyw, r10.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 519
                            add r5.w, r9.z, r9.x
                            add r5.w, r9.y, r5.w  // ::sum<0>

#line 524
                            rcp r6.z, r5.w
                            mul r10.yz, r6.z, r9.xxzw  // ::XYZ_xyY<0,1>
                            cmp r9.xy, -r5_abs.w, c118.z, r10.yzzw  // ::XYZ_xyY<0,1>

#line 2454
                            mov r1.z, -c105.w
                          else
                            if_eq r10.x, -c47.z

#line 470
                              mul r10.yzw, r8.y, c18.xxyz
                              mad r10.yzw, r8.x, c17.xxyz, r10
                              mad r9.xyz, r8.z, c19, r10.yzww  // ::x<0>, ::y<0>, ::z<0>

#line 2455
                              mov r1.z, -c105.w
                            else

#line 2458
                              add r10.yzw, r10.x, c103.xxyz

#line 2051
                              mul r11, r8.y, c143

#line 2032
                              mad r12.xyz, r8.x, c145, r11.xyyw

#line 2050
                              mul r5.w, r8.z, -c154.y

#line 2032
                              mad r13.xy, r8.z, c145.wyzw, r12  // ::y<0>, ::Lrgb_YCoCg<0>

#line 2140
                              add r11.xy, r8.zxzw, -r13.x

#line 2182
                              mad r14.x, r13.x, c150.x, c150.y  // ::Lrgb_YCbCr<0>
                              mad r14.yz, r11.xxyw, c151.xxyw, c151.z  // ::Lrgb_YCbCr<1,2>

#line 2032
                              mad r13.z, r8.z, -c78.y, r12.z  // ::Lrgb_YCoCg<1>
                              mad r13.w, r8.x, -c154.y, -r5.w  // ::Lrgb_YCoCg<2>

#line 2458
                              cmp r5.w, -r10_abs.w, c105_abs.w, c105_abs.z

#line 2052
                              mul r11.xy, r8, c142
                              mad r6.z, r8.x, c69.z, r11.z
                              mad r12.x, r8.z, c68.x, r6.z  // ::Lrgb_YDbDr<0>
                              mad r6.z, r8.x, c144.w, -r11.w
                              mad r12.y, r8.z, -c154.z, r6.z  // ::Lrgb_YDbDr<1>
                              add r6.z, r11.y, r11.x
                              mad r12.z, r8.z, c141.w, r6.z  // ::Lrgb_YDbDr<2>

#line 2458
                              cmp r11.xyz, -r10_abs.w, r12, r9  // ::FLrgb<0,1,2>
                              cmp r11.xyz, -r10_abs.z, r13.yzww, r11  // ::FLrgb<0,1,2>
                              cmp r5.w, -r10_abs.z, -c105.w, r5.w
                              cmp r9.xyz, -r10_abs.y, r14, r11  // ::FLrgb<0,1,2>
                              cmp r1.z, -r10_abs.y, -c105.w, r5.w
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
                if_ne r1.z, -r1.z

#line 2465
                else

#line 2460
                  if_eq r10.x, -c45.x

#line 2086
                    mul r10.yzw, r8.y, c125.xxyz
                    mad r10.yzw, r8.x, c125_abs.xwyz, r10  // ::Lrgb_YES<1>
                    mad r10.yw, r8.z, c72.xxzy, r10  // ::Lrgb_YES<0,2>

#line 2460
                    mov r1.z, -c105.w
                  else

#line 2463
                    add r11.xyz, r10.x, c45.yzww

#line 2138
                    mul r12, r8.y, c74
                    mad r12, r8.x, c73, r12

#line 2109
                    add r13.xy, -r8.yzzw, r8
                    cmp r13.xy, -r13_abs, c105_abs.z, c105_abs.w
                    add r5.w, r13.y, r13.x

#line 2138
                    mad r12, r8.z, c75, r12  // ::y<0>, ::i<0>, ::q<0>, ::y<0>

#line 2113
                    cmp r13.yz, -r5.w, c118.z, r12  // ::i<0>, ::q<0>

#line 2140
                    add r14.xy, r8.zxzw, -r12.w
                    mul r14.yz, r14.xxyw, c72.xzww  // ::pb<0>, ::pr<0>

#line 2463
                    cmp r5.w, -r11_abs.z, c105_abs.w, c105_abs.z

#line 2244
                    mul r15.xy, r8.y, c76
                    mad r15.xy, r8.x, c76.zwzw, r15
                    mad r12.yz, r8.z, c77.xxyw, r15.xxyw  // ::u<0>, ::v<0>

#line 2463
                    cmp r15.xyz, -r11_abs.z, r12, r9  // ::FLrgb<0,1,2>
                    mov r14.x, r12.w
                    cmp r12.yzw, -r11_abs.y, r14.xxyz, r15.xxyz  // ::FLrgb<0,1,2>
                    cmp r5.w, -r11_abs.y, -c105.w, r5.w
                    mov r13.x, r12.x
                    cmp r10.yzw, -r11_abs.x, r13.xxyz, r12  // ::FLrgb<0,1,2>
                    cmp r1.z, -r11_abs.x, -c105.w, r5.w
                  endif
                  cmp r9.xyz, -r1.z, r8, r10.yzww  // ::FLrgb<0,1,2>
                endif
              endif
            endif
          endif

#line 458
          max r1.z, r7.y, r7.z
          max r5.w, r7.x, r1.z  // ::GetMaximum<0>

#line 2691
          add r1.z, -r5.w, c44.x
          mov r8.x, c6.x  // ::X<0>
          mul r6.z, r8.x, c43.x
          mul r10.x, r6.z, c103.w  // ::tx<0>
          mov r11.x, c7.x  // ::Y<0>
          mul r6.z, r11.x, c43.x
          mul r10.y, r6.z, c103.w  // ::ty<0>
          mov r12.x, c8.x  // ::Z<0>
          mul r6.z, r12.x, c43.x
          mul r10.z, r6.z, c103.w  // ::tz<0>

#line 2698
          add r5.w, -r5.w, c42.x
          mul r6.z, r8.x, c41.x
          mul r13.x, r6.z, c103.w  // ::tx<0>
          mul r6.z, r11.x, c41.x
          mul r13.y, r6.z, c103.w  // ::ty<0>
          mul r6.z, r12.x, c41.x
          mul r13.z, r6.z, c103.w  // ::tz<0>

#line 2707
          mul r6.z, r8.x, c39.x
          mul r8.x, r6.z, c103.w  // ::tx<0>
          mul r6.z, r11.x, c39.x
          mul r8.y, r6.z, c103.w  // ::ty<0>
          mul r6.z, r12.x, c39.x
          mul r8.z, r6.z, c103.w  // ::tz<0>
          cmp r8.xyz, r5.w, r13, r8  // ::tx<0>, ::ty<0>, ::tz<0>
          cmp r8.xyz, r1.z, r10, r8  // ::tx<0>, ::ty<0>, ::tz<0>

#line 351
          add r1.z, r4.x, r5.x
          add r5.w, r5.x, r9.x
          add r1.z, r1.z, -r5.w
          mad r10.z, r1.z, r8.x, r9.x  // ::FLerp<0>
          add r1.z, r4.y, r5.y
          add r5.w, r5.y, r9.y
          add r1.z, r1.z, -r5.w
          mad r11.x, r1.z, r8.y, r9.y  // ::FLerp<1>
          add r1.z, r4.z, r5.z
          add r5.w, r5.z, r9.z
          add r1.z, r1.z, -r5.w
          mul r5.w, r8.z, r1.z
          mad r11.y, r1.z, r8.z, r9.z  // ::FLerp<2>

#line 2472
          if_eq c0.x, r0.z

#line 1782
            mul r8, r11.xxyy, c77.zwzw
            add r12.z, r8.z, r8.y  // ::RCA_Lrgb<1>
            mad r12.xy, r10.z, c77.wzzw, r8.xwzw  // ::RCA_Lrgb<0,2>

#line 2472
            mov r1.z, -c105.w
          else
            if_eq c0.x, r0.w

#line 1842
              mul r8, r11.yyxx, c77.zwwz
              mad r12.xz, r10.z, c77.wyzw, r8  // ::RGV_Lrgb<0,1>
              add r12.y, r8.w, r8.y  // ::RGV_Lrgb<2>

#line 2473
              mov r1.z, -c105.w
            else
              mov r8.x, c0.x  // ::Model<0>
              if_eq r8.x, -c58.x

#line 1854
                min r6.z, r11.y, r11.x
                min r8.y, r6.z, r10.z  // ::white<0>
                add r6.z, -r8.y, r10.z  // ::r<0>
                add r8.zw, -r8.y, r11.xyxy  // ::y<0>, ::b<0>
                add r9.x, -r8.w, r8.z
                cmp r13.xw, r9.x, r8.zyzw, r8.wyzz  // ::g<0>
                max r9.x, r6.z, r13.x  // ::mY<0>

#line 1864
                add r8.z, r8.z, -r13.w  // ::y<0>
                add r13.z, r8.w, -r13.w  // ::b<0>

#line 1871
                cmp r8.w, -r13.w, -c105_abs.z, -c105_abs.w
                cmp r8.w, -r13.z, c118.z, r8.w
                mul r9.yw, r13.xzzw, c162.w
                cmp r13.yz, r8.w, r13.xzww, r9.xyww  // ::b<0>, ::g<0>
                add r13.x, r6.z, r8.z  // ::r<0>
                add r13.w, r8.z, r13.z  // ::g<0>
                max r6.z, r13.w, r13.y
                max r8.z, r13.x, r6.z  // ::mG<0>

#line 1880
                rcp r6.z, r8.z
                mul r6.z, r6.z, r9.x  // ::mN<0>

#line 1884
                mul r9.xyw, r6.z, r13.xwzy  // ::r<0>, ::g<0>, ::b<0>
                cmp r9.xyw, -r8.z, r13.xwzy, r9  // ::r<0>, ::g<0>, ::b<0>

#line 1889
                add r8.yzw, r8.y, r9.xxyw  // ::r<0>, ::g<0>, ::b<0>
                frc r9.xyw, r8.yzzw
                add r8.yzw, r8, -r9.xxyw
                mul r12.xyz, r8.ywzw, c106.x  // ::RYB_Lrgb<0,2,1>

#line 2474
                mov r1.z, -c105.w
              else
                if_eq r8.x, -c58.z

#line 655
                  add r12.x, -r10.z, -c105.w  // ::CMY_Lrgb<0>
                  add r12.yz, -r11.xyxw, -c105.w  // ::CMY_Lrgb<2,1>

#line 2475
                  mov r1.z, -c105.w
                else
                  if_eq r8.x, -c132.x

#line 705
                    mul r13, r11.xyyy, c103.w  // ::c<0>, ::g<0,0,0>

#line 713
                    if_eq r13.x, c118.z

#line 762
                      mov r12.xyz, r13.ywzw  // ::HCV_Lrgb<0,2,1>
                    else

#line 705
                      mul r6.z, r10.z, c106.y  // ::h<0>

#line 713
                      cmp r8.y, r10.z, c121.x, c121.y
                      mul r6.z, r6.z, r8.y
                      frc r6.z, r6.z
                      mul r6.z, r6.z, r8.y
                      mul r8.y, r6.z, -c105.y  // ::hi<0>
                      cmp r6.z, r6.z, c121.x, c121.y
                      mul r8.z, r6.z, r8.y

#line 718
                      frc r8.zw, r8.xyzy

#line 714
                      mul r14.x, r6.z, r8.z  // ::v<0>

#line 718
                      add r8.y, -r8.w, r8.y  // ::fhi<0>

#line 744
                      add r15, r8.y, c165

#line 755
                      mov r14.yz, c105_abs.xzww
                      mad r14.w, r6.z, -r8.z, -c105.w
                      cmp r9.xyw, -r15_abs.w, r14.xyzz, r14.zyzw  // ::pure<0,1,2>
                      mad r16.xyz, r14.xzyw, c121.yxxw, c121.xzzw
                      cmp r9.xyw, -r15_abs.z, r16.zxzy, r9  // ::pure<0,1,2>
                      cmp r9.xyw, -r15_abs.y, r14.yzzx, r9  // ::pure<0,1,2>
                      cmp r9.xyw, -r15_abs.x, r16.xyzz, r9  // ::pure<0,1,2>
                      cmp r8.yzw, -r8_abs.y, r14.xzxy, r9.xxyw  // ::pure<0,1,2>

#line 761
                      lrp r12.xyz, r13.x, r8.ywzw, r13.w  // ::result<0,2,1>
                    endif

#line 2476
                    mov r1.z, -c105.w
                  else
                    if_eq c0.x, -r6.y

#line 797
                      cmp r6.yz, r10.z, c107.xxyw, c107.xzww
                      mul r6.z, r6.z, r10.z
                      frc r6.z, r6.z
                      mad r6.y, r6.y, r6.z, c156.x
                      mul r6.z, r6.z, c156.x
                      cmp r6.y, r10.z, r6.z, r6.y
                      mul r8.yz, r11.xxyw, c106.xzxw  // ::s<0>, ::i<0>

#line 804
                      if_lt r6.y, c106.w
                        mad r6.z, r11.x, -c166.x, c166.y
                        mul r12.y, r6.z, r8.z  // ::b<0>
                        mad r6.z, r6.y, c166.z, c166.w
                        frc r6.z, r6.z
                        mad r6.z, r6.z, c79.x, c79.y
                        sincos r13.x, r6.z
                        mul r6.z, r8.y, r13.x
                        mad r8.w, r6.y, -c79.z, c79.w
                        mad r8.w, r8.w, c108.x, c108.y
                        frc r8.w, r8.w
                        mad r8.w, r8.w, c79.x, c79.y
                        sincos r14.x, r8.w
                        rcp r8.w, r14.x
                        mad r6.z, r6.z, r8.w, -c105.w
                        mul r12.x, r6.z, r8.z  // ::r<0>
                        mad r6.z, r13.x, -r8.w, -c105.w
                        mad r6.z, r8.y, r6.z, -c105.w
                        mul r12.z, r6.z, r8.z  // ::g<0>
                      else
                        if_lt r6.y, c131.y
                          mad r6.z, r6.y, c108.z, c108.w  // ::h<0>
                          mad r8.w, r11.x, -c166.x, c166.y
                          mul r12.x, r8.w, r8.z  // ::r<0>
                          mad r8.w, r6.z, c108.x, c108.y
                          frc r8.w, r8.w
                          mad r8.w, r8.w, c79.x, c79.y
                          sincos r13.x, r8.w
                          mul r8.w, r8.y, r13.x
                          add r6.z, -r6.z, c79.w
                          mad r6.z, r6.z, c108.x, c108.y
                          frc r6.z, r6.z
                          mad r6.z, r6.z, c79.x, c79.y
                          sincos r14.x, r6.z
                          rcp r6.z, r14.x
                          mad r8.w, r8.w, r6.z, -c105.w
                          mul r12.z, r8.w, r8.z  // ::g<0>

#line 815
                          mad r6.z, r13.x, -r6.z, -c105.w
                          mad r6.z, r8.y, r6.z, -c105.w
                          mul r12.y, r6.z, r8.z  // ::b<0>
                        else

#line 819
                          mad r6.y, r6.y, c109.x, c109.y  // ::h<0>
                          mad r6.z, r11.x, -c166.x, c166.y
                          mul r12.z, r6.z, r8.z  // ::g<0>
                          mad r6.z, r6.y, c108.x, c108.y
                          frc r6.z, r6.z
                          mad r6.z, r6.z, c79.x, c79.y
                          sincos r13.x, r6.z
                          mul r6.z, r8.y, r13.x
                          add r6.y, -r6.y, c79.w
                          mad r6.y, r6.y, c108.x, c108.y
                          frc r6.y, r6.y
                          mad r6.y, r6.y, c79.x, c79.y
                          sincos r14.x, r6.y
                          rcp r6.y, r14.x
                          mad r6.z, r6.z, r6.y, -c105.w
                          mad r6.y, r13.x, -r6.y, -c105.w
                          mad r6.y, r8.y, r6.y, -c105.w
                          mul r12.xy, r6.yzzw, r8.z  // ::r<0>, ::b<0>
                        endif
                      endif

#line 2477
                      mov r1.z, -c105.w
                    else
                      if_eq r8.x, -c62.x

#line 1680
                        if_lt c155.w, r11.y

#line 1688
                          mad r12.xyz, r10.z, c82.yzyw, c82.wyyw
                        else

#line 1680
                          add r6.y, r11.y, c109.z

#line 1683
                          if_lt r11.y, c109.w
                            cmp r10.xy, r6.y, c155.wxzw, c155.x  // ::HPLuv_Lrgb<0,1>

#line 1688
                            mov r12.xyz, r10.xzyw  // ::HPLuv_Lrgb<0,2,1>
                          else

#line 386
                            add r6.y, r11.y, c153.w
                            mul r6.z, r6.y, r6.y
                            mul r8.y, r6.z, r6.y
                            mul r8.y, r8.y, c80.x  // ::s1<0>
                            mad r6.z, r6.y, -r6.z, c80.y

#line 1613
                            mul r13, r11.y, c111

#line 387
                            cmp r6.z, r6.z, r13.x, r8.y  // ::s2<0>

#line 372
                            mul r8.y, r11.y, r6.z
                            mul r8.z, r8.y, c80.z  // ::y<0>
                            mul r9.xy, r6.z, c81  // ::x<0>, ::z<0>
                            rcp r8.w, r9.y
                            mul r9.y, r8.w, r9.x  // ::GetBounds2<0>
                            mul r8.z, r8.w, r8.z  // ::GetBounds2<1>

#line 403
                            rcp r9.w, r9.y

#line 366
                            mad r8.w, r9.x, -r8.w, -r9.w
                            rcp r8.w, r8.w
                            mul r8.w, r8.w, r8.z  // ::GetIntersection<0>

#line 404
                            mad r8.z, r8.w, r9.y, r8.z  // GetDistance::input<1>

#line 361
                            mul r8.z, r8.z, r8.z
                            mad r8.z, r8.w, r8.w, r8.z
                            rsq r8.z, r8.z
                            rcp r8.z, r8.z  // ::GetDistance<0>

#line 406
                            min r9.y, r8.z, c80.w  // ::GetChroma1a<0>

#line 372
                            mad r8.y, r8.y, c80.z, -r13.y  // ::y<0>
                            mad r6.z, r6.z, c81.y, c81.z  // ::z<0>
                            rcp r6.z, r6.z
                            mul r8.z, r6.z, r9.x  // ::GetBounds2<0>
                            mul r8.y, r6.z, r8.y  // ::GetBounds2<1>

#line 403
                            rcp r8.w, r8.z

#line 366
                            mad r6.z, r9.x, -r6.z, -r8.w
                            rcp r6.z, r6.z
                            mul r6.z, r6.z, r8.y  // ::GetIntersection<0>

#line 404
                            mad r8.y, r6.z, r8.z, r8.y  // GetDistance::input<1>

#line 361
                            mul r8.y, r8.y, r8.y
                            mad r6.z, r6.z, r6.z, r8.y
                            rsq r6.z, r6.z
                            rcp r6.z, r6.z  // ::GetDistance<0>

#line 406
                            min r8.y, r6.z, r9.y  // ::GetChroma1a<0>

#line 1684
                            mul r6.z, r11.x, r8.y
                            mul r6.z, r6.z, c103.w  // ::C<0>

#line 589
                            mad r8.y, r10.z, c166.z, c166.w
                            frc r8.y, r8.y
                            mad r8.y, r8.y, c79.x, c79.y
                            sincos r14.xy, r8.y
                            mul r8.yz, r6.z, r14.xxyw  // ::a<0>, ::b<0>

#line 508
                            abs r6.z, c13.x

#line 512
                            rcp r8.w, c13.x
                            mul r14.x, r8.w, c12.x  // ::xyY_XYZ<0>
                            mov r9.x, c13.x  // ::WhiteY<0>
                            add r9.x, -r9.x, -c12.x
                            add r9.x, r9.x, -c105.w
                            mul r14.z, r8.w, r9.x  // ::xyY_XYZ<2>
                            mov r14.y, -c105.w
                            cmp r9.xyw, -r6.z, c115.z, r14.xyzz  // ::xyY_XYZ<0,1,2>

#line 571
                            cmp r6.z, -r6.z, c129.y, c129.w
                            add r6.z, r6.z, r9.x
                            mul r8.w, r9.x, -c58.z
                            mad r6.z, r9.w, -c58.x, r6.z
                            rcp r6.z, r6.z
                            mul r8.w, r6.z, r8.w  // ::ComputeKu<0>

#line 576
                            mul r6.z, r9.y, r6.z
                            mul r6.z, r6.z, -c84.x  // ::ComputeKv<0>

#line 1611
                            add r9.x, -r11.y, c81.w
                            mul r6.y, r6.y, c82.x
                            mul r9.y, r6.y, r6.y
                            mul r6.y, r6.y, r9.y
                            cmp r6.y, r9.x, r13.x, r6.y  // ::Y<0>
                            mad r8.y, r13.w, r8.w, r8.y
                            rcp r8.y, r8.y
                            mad r8.y, r13.z, r8.y, c105.w
                            mul r8.y, r8.y, c53.z  // ::a<0>
                            mul r8.w, r6.y, c132.x  // ::b<0>
                            mul r9.x, r11.y, -c40.x
                            mad r6.z, r13.w, r6.z, r8.z
                            rcp r6.z, r6.z
                            mad r6.z, r9.x, r6.z, c132.x
                            mad r6.z, r6.y, r6.z, -r8.w
                            rcp r8.z, r8.y
                            mul r6.z, r6.z, r8.z  // ::X<0>
                            mad r8.y, r6.z, r8.y, r8.w  // ::Z<0>

#line 1622
                            max r8.z, r6.z, c118.z  // ::X<0>

#line 1625
                            max r8.w, r6.y, c118.z  // ::Y<0>

#line 1628
                            max r6.y, r8.y, c118.z  // ::Z<0>

#line 470
                            mul r9.xyw, r8.w, c24.xyzz
                            mad r8.yzw, r8.z, c23.xxyz, r9.xxyw
                            mad r12.xyz, r6.y, c25.xzyw, r8.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 1688
                          endif
                        endif

#line 2478
                        mov r1.z, -c105.w
                      else
                        if_eq r8.x, -c62.z

#line 850
                          mul r6.y, r11.x, c103.w  // ::_s<0>
                          mul r13.y, r11.y, c103.w  // ::_b<0>

#line 853
                          add r6.z, -r10.z, c83.x

#line 865
                          mul r8.y, r10.z, c83.y
                          cmp r6.z, r6.z, r8.y, c83.z  // ::SectorPosition<0>
                          frc r8.y, r6.z
                          add r8.y, r6.z, -r8.y  // ::SectorNumber<0>

#line 869
                          add r6.z, r6.z, -r8.y  // ::FractionalSector<0>

#line 872
                          mad r8.z, r11.x, -c166.x, c166.y
                          mul r13.z, r8.z, r13.y  // ::p<0>
                          mad r8.z, r6.y, -r6.z, -c105.w
                          mul r13.w, r8.z, r13.y  // ::q<0>
                          add r6.z, -r6.z, -c105.w
                          mad r6.z, r6.y, -r6.z, -c105.w
                          mul r13.x, r6.z, r13.y  // ::t<0>

#line 901
                          add r14, r8.y, c165

#line 907
                          add r6.z, r8.y, c132.x

#line 912
                          cmp r9.xyw, -r6_abs.z, r13.yzzw, c118.z  // ::r<0>, ::g<0>, ::b<0>
                          cmp r9.xyw, -r14_abs.w, r13.xzzy, r9  // ::r<0>, ::g<0>, ::b<0>
                          cmp r9.xyw, -r14_abs.z, r13.zwzy, r9  // ::r<0>, ::g<0>, ::b<0>
                          cmp r9.xyw, -r14_abs.y, r13.zyzx, r9  // ::r<0>, ::g<0>, ::b<0>
                          cmp r9.xyw, -r14_abs.x, r13.wyzz, r9  // ::r<0>, ::g<0>, ::b<0>
                          cmp r8.yzw, -r8_abs.y, r13.xyxz, r9.xxyw  // ::r<0>, ::g<0>, ::b<0>
                          cmp r12.xyz, -r6_abs.y, r13.y, r8.ywzw  // ::r<0>, ::b<0>, ::g<0>

#line 2479
                          mov r1.z, -c105.w
                        else
                          if_eq r8.x, -c84.x

#line 850
                            mul r6.y, r11.x, c103.w  // ::_s<0>
                            mul r8.y, r11.y, c103.w  // ::_b<0>

#line 853
                            add r6.z, -r10.z, c83.x

#line 865
                            mul r9.x, r10.z, c83.y
                            cmp r6.z, r6.z, r9.x, c83.z  // ::SectorPosition<0>
                            frc r9.x, r6.z
                            add r9.x, r6.z, -r9.x  // ::SectorNumber<0>

#line 869
                            add r6.z, r6.z, -r9.x  // ::FractionalSector<0>

#line 872
                            mad r9.y, r11.x, -c166.x, c166.y
                            mul r8.z, r8.y, r9.y  // ::p<0>
                            mad r9.y, r6.y, -r6.z, -c105.w
                            mul r8.w, r8.y, r9.y  // ::q<0>
                            add r6.z, -r6.z, -c105.w
                            mad r6.z, r6.y, -r6.z, -c105.w
                            mul r8.x, r6.z, r8.y  // ::t<0>

#line 901
                            add r13, r9.x, c165

#line 907
                            add r6.z, r9.x, c132.x

#line 912
                            cmp r14.xyz, -r6_abs.z, r8.yzww, c118.z  // ::r<0>, ::g<0>, ::b<0>
                            cmp r14.xyz, -r13_abs.w, r8.xzyw, r14  // ::r<0>, ::g<0>, ::b<0>
                            cmp r14.xyz, -r13_abs.z, r8.zwyw, r14  // ::r<0>, ::g<0>, ::b<0>
                            cmp r13.yzw, -r13_abs.y, r8.xzyx, r14.xxyz  // ::r<0>, ::g<0>, ::b<0>
                            cmp r13.xyz, -r13_abs.x, r8.wyzw, r13.yzww  // ::r<0>, ::g<0>, ::b<0>
                            cmp r8.xzw, -r9_abs.x, r8.yyxz, r13.xyyz  // ::r<0>, ::g<0>, ::b<0>
                            cmp r12.xyz, -r6_abs.y, r8.y, r8.xwzw  // ::r<0>, ::b<0>, ::g<0>

#line 2480
                            mov r1.z, -c105.w
                          else
                            add r6.y, r6.x, c0.x
                            cmp r1.z, -r6_abs.y, c105_abs.w, c105_abs.z
                            if_eq c0.x, -r6.x

#line 959
                              mul r12.xyz, r11.y, c103.w  // ::l<0,0,0>

#line 966
                              if_lt -r11.x, c118.z

#line 960
                                min r6.x, r10.z, c83.x  // ::h<0>
                                mul r6.y, r6.x, c83.y  // ::h<0>

#line 968
                                mul r6.z, r11.x, c103.w  // ::s<0>
                                mad r8.x, r11.y, c117.x, c117.y
                                add r8.x, -r8_abs.x, -c105.w
                                mul r8.x, r6.z, r8.x  // ::chroma<0>
                                cmp r9.xy, r6.x, c159, c159.zwzw
                                mul r6.y, r6.y, r9.y
                                frc r6.y, r6.y
                                mad r6.y, r9.x, r6.y, c105.w
                                add r6.y, -r6_abs.y, -c105.w
                                mul r8.y, r6.y, r8.x  // ::v<0>

#line 989
                                add r13, -r6.x, c116

#line 995
                                add r14, r6.x, -c116.wzyx

#line 1001
                                add r6.y, r6.x, c83.w
                                add r9.xy, -r6.x, c117.zwzw

#line 1006
                                cmp r9.xy, r9, -c105_abs.w, -c105_abs.z
                                cmp r6.y, r6.y, r9.x, c118.z
                                mov r8.z, c118.z
                                cmp r15.xyz, r6.y, c118.z, r8.xzyw  // ::result<0,1,2>
                                cmp r6.y, r14.w, r9.y, c118.z
                                cmp r9.xyw, r6.y, r15.xyzz, r8.yzzx  // ::result<0,1,2>
                                cmp r13, r13, -c105_abs.w, -c105_abs.z
                                cmp r13.xyz, r14.zyxw, r13, c118.z
                                cmp r9.xyw, r13.x, r9, r8.zyzx  // ::result<0,1,2>
                                cmp r9.xyw, r13.y, r9, r8.zxzy  // ::result<0,1,2>
                                cmp r9.xyw, r13.z, r9, r8.yxzz  // ::result<0,1,2>
                                cmp r6.x, r6.x, r13.w, c118.z
                                cmp r6.xyz, r6.x, r9.xyww, r8  // ::result<0,1,2>
                                mad r8.x, r8.x, c154.y, r12.y  // ::w<0>

#line 1011
                                add r12.xyz, r6.xzyw, r8.x  // ::result<0,2,1>

#line 1016
                              endif

#line 2481
                            else
                              mov r12.xyz, c118.z
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r1.z, -r1.z

#line 2521
          else

#line 2483
            mov r6.x, c0.x  // ::Model<0>
            if_eq r6.x, -c64.x

#line 959
              mul r12.xyz, r11.y, c103.w  // ::l<0,0,0>

#line 966
              if_lt -r11.x, c118.z

#line 960
                min r1.z, r10.z, c83.x  // ::h<0>
                mul r6.y, r1.z, c83.y  // ::h<0>

#line 968
                mul r6.z, r11.x, c103.w  // ::s<0>
                mad r8.x, r11.y, c117.x, c117.y
                add r8.x, -r8_abs.x, -c105.w
                mul r8.x, r6.z, r8.x  // ::chroma<0>
                cmp r9.xy, r1.z, c159, c159.zwzw
                mul r6.y, r6.y, r9.y
                frc r6.y, r6.y
                mad r6.y, r9.x, r6.y, c105.w
                add r6.y, -r6_abs.y, -c105.w
                mul r8.y, r6.y, r8.x  // ::v<0>

#line 989
                add r13, -r1.z, c116

#line 995
                add r14, r1.z, -c116.wzyx

#line 1001
                add r6.y, r1.z, c83.w
                add r9.xy, -r1.z, c117.zwzw

#line 1006
                cmp r9.xy, r9, -c105_abs.w, -c105_abs.z
                cmp r6.y, r6.y, r9.x, c118.z
                mov r8.z, c118.z
                cmp r15.xyz, r6.y, c118.z, r8.xzyw  // ::result<0,1,2>
                cmp r6.y, r14.w, r9.y, c118.z
                cmp r9.xyw, r6.y, r15.xyzz, r8.yzzx  // ::result<0,1,2>
                cmp r13, r13, -c105_abs.w, -c105_abs.z
                cmp r13.xyz, r14.zyxw, r13, c118.z
                cmp r9.xyw, r13.x, r9, r8.zyzx  // ::result<0,1,2>
                cmp r9.xyw, r13.y, r9, r8.zxzy  // ::result<0,1,2>
                cmp r9.xyw, r13.z, r9, r8.yxzz  // ::result<0,1,2>
                cmp r1.z, r1.z, r13.w, c118.z
                cmp r8.yzw, r1.z, r9.xxyw, r8.xxyz  // ::result<0,1,2>
                mad r1.z, r8.x, c154.y, r12.y  // ::w<0>

#line 1011
                add r12.xyz, r1.z, r8.ywzw  // ::result<0,2,1>

#line 1016
              endif

#line 2483
              mov r1.z, -c105.w
            else
              if_eq r6.x, -c64.y

#line 1725
                if_lt c155.w, r11.y

#line 1733
                  mad r12.xyz, r10.z, c82.yzyw, c82.wyyw
                else

#line 1725
                  add r6.y, r11.y, c109.z

#line 1728
                  if_lt r11.y, c109.w
                    cmp r12.xz, r6.y, c155.wyxw, c155.x  // ::HSLuv_Lrgb<0,1>

#line 1733
                    mov r12.y, r10.z
                  else

#line 386
                    add r6.y, r11.y, c153.w
                    mul r6.z, r6.y, r6.y
                    mul r8.x, r6.z, r6.y
                    mul r8.x, r8.x, c80.x  // ::s1<0>
                    mad r6.z, r6.y, -r6.z, c80.y

#line 1613
                    mul r13, r11.y, c111

#line 387
                    cmp r6.z, r6.z, r13.x, r8.x  // ::s2<0>

#line 372
                    mul r8.x, r11.y, r6.z
                    mul r8.y, r8.x, c80.z  // ::y<0>
                    mul r14, r6.z, c140  // ::x<0>, ::z<0>, ::x<0>, ::z<0>
                    rcp r8.z, r14.y
                    mul r8.w, r8.z, r14.x  // ::GetBounds2<0>
                    mul r8.y, r8.z, r8.y  // ::GetBounds2<1>
                    mad r8.x, r8.x, c80.z, -r13.y  // ::y<0>
                    mad r9.xy, r6.z, c167, c167.z  // ::z<0,0>
                    rcp r8.z, r9.x
                    mul r9.x, r8.z, r14.x  // ::GetBounds2<0>
                    mul r8.x, r8.z, r8.x  // ::GetBounds2<1>
                    mul r8.z, r6.z, r13.y  // ::y<0>
                    rcp r9.w, r14.w
                    mul r10.w, r9.w, r14.z  // ::GetBounds2<0>
                    mul r9.w, r8.z, r9.w  // ::GetBounds2<1>
                    mad r12.w, r13.y, r6.z, -r13.y  // ::y<0>
                    rcp r9.y, r9.y
                    mul r13.y, r9.y, r14.z  // ::GetBounds2<0>
                    mul r9.y, r9.y, r12.w  // ::GetBounds2<1>
                    mul r14.xy, r6.z, c138  // ::x<0>, ::z<0>
                    rcp r14.y, r14.y
                    mul r14.z, r14.y, r14.x  // ::GetBounds2<0>
                    mul r8.z, r8.z, r14.y  // ::GetBounds2<1>
                    mad r6.z, r6.z, c167.w, c167.z  // ::z<0>
                    rcp r6.z, r6.z
                    mul r14.x, r6.z, r14.x  // ::GetBounds2<0>
                    mul r6.z, r6.z, r12.w  // ::GetBounds2<1>

#line 420
                    mad r12.w, r10.z, c166.z, c166.w
                    frc r12.w, r12.w
                    mad r12.w, r12.w, c79.x, c79.y
                    sincos r15.xy, r12.w
                    mad r8.w, r8.w, -r15.x, r15.y
                    rcp r8.w, r8.w
                    mul r8.y, r8.w, r8.y  // ::length<0>
                    min r12.w, r8.y, c80.w  // GetChroma2a::result<0>
                    cmp r8.y, r8.y, r12.w, c80.w  // GetChroma2a::result<0>
                    mad r8.w, r9.x, -r15.x, r15.y
                    rcp r8.w, r8.w
                    mul r8.x, r8.w, r8.x  // ::length<0>
                    min r9.x, r8.x, r8.y  // GetChroma2a::result<0>
                    cmp r8.x, r8.x, r9.x, r8.y  // GetChroma2a::result<0>
                    mad r8.y, r10.w, -r15.x, r15.y
                    rcp r8.y, r8.y
                    mul r8.y, r8.y, r9.w  // ::length<0>
                    min r9.x, r8.y, r8.x  // GetChroma2a::result<0>
                    cmp r8.x, r8.y, r9.x, r8.x  // GetChroma2a::result<0>
                    mad r8.y, r13.y, -r15.x, r15.y
                    rcp r8.y, r8.y
                    mul r8.y, r8.y, r9.y  // ::length<0>
                    min r9.x, r8.y, r8.x  // GetChroma2a::result<0>
                    cmp r8.x, r8.y, r9.x, r8.x  // GetChroma2a::result<0>
                    mad r8.y, r14.z, -r15.x, r15.y
                    rcp r8.y, r8.y
                    mul r8.y, r8.y, r8.z  // ::length<0>
                    min r9.x, r8.y, r8.x  // GetChroma2a::result<0>
                    cmp r8.x, r8.y, r9.x, r8.x  // GetChroma2a::result<0>
                    mad r8.y, r14.x, -r15.x, r15.y
                    rcp r8.y, r8.y
                    mul r6.z, r6.z, r8.y  // ::length<0>
                    min r9.x, r6.z, r8.x  // GetChroma2a::result<0>
                    cmp r6.z, r6.z, r9.x, r8.x  // GetChroma2a::result<0>

#line 1729
                    mul r6.z, r11.x, r6.z
                    mul r6.z, r6.z, c103.w  // ::C<0>

#line 590
                    mul r8.xy, r15, r6.z  // ::a<0>, ::b<0>

#line 508
                    abs r6.z, c13.x

#line 512
                    rcp r8.z, c13.x
                    mul r14.x, r8.z, c12.x  // ::xyY_XYZ<0>
                    mov r9.x, c13.x  // ::WhiteY<0>
                    add r8.w, -r9.x, -c12.x
                    add r8.w, r8.w, -c105.w
                    mul r14.z, r8.z, r8.w  // ::xyY_XYZ<2>
                    mov r14.y, -c105.w
                    cmp r9.xyw, -r6.z, c115.z, r14.xyzz  // ::xyY_XYZ<0,1,2>

#line 571
                    cmp r6.z, -r6.z, c129.y, c129.w
                    add r6.z, r6.z, r9.x
                    mul r8.z, r9.x, -c58.z
                    mad r6.z, r9.w, -c58.x, r6.z
                    rcp r6.z, r6.z
                    mul r8.z, r6.z, r8.z  // ::ComputeKu<0>

#line 576
                    mul r6.z, r9.y, r6.z
                    mul r6.z, r6.z, -c84.x  // ::ComputeKv<0>

#line 1611
                    add r8.w, -r11.y, c81.w
                    mul r6.y, r6.y, c82.x
                    mul r9.x, r6.y, r6.y
                    mul r6.y, r6.y, r9.x
                    cmp r6.y, r8.w, r13.x, r6.y  // ::Y<0>
                    mad r8.x, r13.w, r8.z, r8.x
                    rcp r8.x, r8.x
                    mad r8.x, r13.z, r8.x, c105.w
                    mul r8.x, r8.x, c53.z  // ::a<0>
                    mul r8.z, r6.y, c132.x  // ::b<0>
                    mul r8.w, r11.y, -c40.x
                    mad r6.z, r13.w, r6.z, r8.y
                    rcp r6.z, r6.z
                    mad r6.z, r8.w, r6.z, c132.x
                    mad r6.z, r6.y, r6.z, -r8.z
                    rcp r8.y, r8.x
                    mul r6.z, r6.z, r8.y  // ::X<0>
                    mad r8.x, r6.z, r8.x, r8.z  // ::Z<0>

#line 1622
                    max r8.y, r6.z, c118.z  // ::X<0>

#line 1625
                    max r8.z, r6.y, c118.z  // ::Y<0>

#line 1628
                    max r6.y, r8.x, c118.z  // ::Z<0>

#line 470
                    mul r8.xzw, r8.z, c24.xyyz
                    mad r8.xyz, r8.y, c23, r8.xzww
                    mad r12.xyz, r6.y, c25.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 1733
                  endif
                endif

#line 2484
                mov r1.z, -c105.w
              else
                if_eq r6.x, -c65.x

#line 1060
                  mul r6.y, r11.x, c138.z
                  mad r6.z, r10.z, c122.x, c122.y
                  frc r6.z, r6.z
                  mad r6.z, r6.z, c79.x, c79.y
                  sincos r8.x, r6.z
                  mul r6.z, r6.y, r8.x
                  mul r12.xz, r11.y, c122.zyww  // ::m<0>
                  mad r6.y, r6.y, r8.x, r12.z
                  mad r6.y, r11.y, -c138.w, r6.y
                  mul r12.z, r6.y, c78.y  // ::g<0>
                  mad r6.y, r11.y, c117.x, -r6.z
                  mul r12.y, r6.y, -c154.y  // ::b<0>

#line 2485
                  mov r1.z, -c105.w
                else
                  if_eq r6.x, -c65.y

#line 1126
                    mad r6.y, r11.x, -c166.x, c166.y  // ::minOverMax<0>
                    if_lt -r6.y, c118.z

#line 1131
                      if_lt r10.z, c63.x
                        mul r6.z, r10.z, c83.y  // ::h<0>
                        rcp r8.x, r6.y
                        lrp r9.x, r6.z, r8.x, -c105.w  // ::part<0>
                        mul r8.y, r8.x, r8.x
                        mul r8.z, r9.x, r9.x
                        mul r8.z, r8.z, c69.w
                        mad r8.y, r8.y, c69.z, r8.z
                        add r8.y, r8.y, c68.x
                        rsq r8.y, r8.y
                        mul r13.z, r8.y, r11.y  // ::b<0>
                        mul r13.x, r8.x, r13.z  // ::r<0>
                        mad r8.x, r13.z, r8.x, -r13.z
                        mad r13.y, r6.z, r8.x, r13.z  // ::g<0>
                      else
                        if_lt r10.z, c106.w

#line 1142
                          mad r6.z, r10.z, -c85.x, c85.y
                          mul r6.z, r6.z, -c105.y  // ::h<0>
                          rcp r8.x, r6.y
                          lrp r9.x, r6.z, r8.x, -c105.w  // ::part<0>
                          mul r8.y, r8.x, r8.x
                          mul r8.z, r9.x, r9.x
                          mul r8.z, r8.z, c69.z
                          mad r8.y, r8.y, c69.w, r8.z
                          add r8.y, r8.y, c68.x
                          rsq r8.y, r8.y
                          mul r13.z, r8.y, r11.y  // ::b<0>
                          mul r13.y, r8.x, r13.z  // ::g<0>
                          mad r8.x, r13.z, r8.x, -r13.z
                          mad r13.x, r6.z, r8.x, r13.z  // ::r<0>
                        else
                          if_lt r10.z, c85.z
                            mad r6.z, r10.z, c85.x, c85.w
                            mul r6.z, r6.z, -c105.y  // ::h<0>
                            rcp r8.x, r6.y
                            lrp r9.x, r6.z, r8.x, -c105.w  // ::part<0>

#line 1153
                            mul r8.y, r8.x, r8.x
                            mul r8.z, r9.x, r9.x
                            mul r8.z, r8.z, c68.x
                            mad r8.y, r8.y, c69.w, r8.z
                            add r8.y, r8.y, c69.z
                            rsq r8.y, r8.y
                            mul r13.x, r8.y, r11.y  // ::r<0>
                            mul r13.y, r8.x, r13.x  // ::g<0>
                            mad r8.x, r13.x, r8.x, -r13.x
                            mad r13.z, r6.z, r8.x, r13.x  // ::b<0>
                          else
                            if_lt r10.z, c131.y
                              mad r6.z, r10.z, -c110.x, c110.y
                              mul r6.z, r6.z, -c105.y  // ::h<0>
                              rcp r8.x, r6.y
                              lrp r9.x, r6.z, r8.x, -c105.w  // ::part<0>
                              mul r8.y, r8.x, r8.x
                              mul r8.z, r9.x, r9.x
                              mul r8.z, r8.z, c69.w
                              mad r8.y, r8.y, c68.x, r8.z
                              add r8.y, r8.y, c69.z
                              rsq r8.y, r8.y
                              mul r13.x, r8.y, r11.y  // ::r<0>
                              mul r13.z, r8.x, r13.x  // ::b<0>

#line 1164
                              mad r8.x, r13.x, r8.x, -r13.x
                              mad r13.y, r6.z, r8.x, r13.x  // ::g<0>
                            else
                              add r6.z, r10.z, -c102.z
                              mad r8.x, r10.z, c110.x, c110.z
                              mul r8.x, r8.x, -c105.y  // ::h<0>
                              rcp r6.y, r6.y
                              lrp r9.x, r8.x, r6.y, -c105.w  // ::part<0>
                              mul r8.y, r6.y, r6.y

#line 1180
                              mul r8.yz, r8.y, c144.xzxw

#line 1171
                              mul r8.w, r9.x, r9.x
                              mad r8.y, r8.w, c69.z, r8.y
                              add r8.y, r8.y, c69.w
                              rsq r8.y, r8.y
                              mul r14.y, r8.y, r11.y  // ::g<0>
                              mul r14.z, r6.y, r14.y  // ::b<0>
                              mad r8.y, r14.y, r6.y, -r14.y
                              mad r14.x, r8.x, r8.y, r14.y  // ::r<0>

#line 1178
                              mad r8.x, r10.z, -c166.z, c166.y
                              mul r8.x, r8.x, -c105.y  // ::h<0>
                              lrp r9.x, r8.x, r6.y, -c105.w  // ::part<0>
                              mul r8.y, r9.x, r9.x
                              mad r8.y, r8.y, c68.x, r8.z
                              add r8.y, r8.y, c69.w
                              rsq r8.y, r8.y
                              mul r15.y, r8.y, r11.y  // ::g<0>
                              mul r15.x, r6.y, r15.y  // ::r<0>
                              mad r6.y, r15.y, r6.y, -r15.y
                              mad r15.z, r8.x, r6.y, r15.y  // ::b<0>
                              cmp r13.xyz, r6.z, r15, r14  // ::r<0>, ::g<0>, ::b<0>
                            endif
                          endif
                        endif
                      endif
                    else

#line 1188
                      if_lt r10.z, c63.x
                        mul r6.y, r10.z, c83.y  // ::h<0>
                        mul r6.z, r11.y, r11.y
                        mul r8.x, r10.z, r6.y
                        mad r8.x, r8.x, c123.x, c123.y
                        rcp r8.x, r8.x
                        mul r6.z, r6.z, r8.x
                        rsq r6.z, r6.z
                        rcp r13.x, r6.z  // ::r<0>
                        mul r13.y, r6.y, r13.x  // ::g<0>
                        mov r13.z, c118.z
                      else
                        if_lt r10.z, c106.w
                          mad r6.y, r10.z, -c85.x, c85.y
                          mul r6.z, r6.y, -c105.y  // ::h<0>

#line 1199
                          mul r8.x, r11.y, r11.y
                          mul r6.y, r6.y, r6.z
                          mad r6.y, r6.y, c123.z, c123.w
                          rcp r6.y, r6.y
                          mul r6.y, r6.y, r8.x
                          rsq r6.y, r6.y
                          rcp r13.y, r6.y  // ::g<0>
                          mul r13.x, r6.z, r13.y  // ::r<0>
                          mov r13.z, c118.z
                        else

#line 1222
                          mad r6.yz, r10.z, c110.x, c110.xwzw
                          mul r8.xy, r6.yzzw, -c105.y  // ::h<0,0>

#line 1207
                          mul r8.z, r11.y, r11.y

#line 1223
                          mul r6.yz, r6, r8.xxyw
                          mad r6.yz, r6, c168.xxyw, c168.xzww

#line 1207
                          rcp r6.y, r6.y
                          mul r6.y, r6.y, r8.z
                          rsq r6.y, r6.y
                          rcp r14.y, r6.y  // ::g<0>
                          mul r14.z, r8.x, r14.y  // ::b<0>

#line 1230
                          mad r8.xw, r10.z, -c137.x, c137.yyzz
                          mul r9.xy, r8.xwzw, -c105.y  // ::h<0,0>
                          mul r8.xw, r8, r9.xyzy
                          mad r8.xw, r8, c124.xyzy, c124.zyzw

#line 1215
                          rcp r6.y, r8.x
                          mul r6.y, r6.y, r8.z
                          rsq r6.y, r6.y
                          rcp r15.z, r6.y  // ::b<0>
                          mul r15.y, r9.x, r15.z  // ::g<0>

#line 1220
                          add r16.xyz, r10.z, c119

#line 1223
                          rcp r6.y, r6.z
                          mul r6.y, r6.y, r8.z
                          rsq r6.y, r6.y
                          rcp r17.z, r6.y  // ::b<0>
                          mul r17.x, r8.y, r17.z  // ::r<0>

#line 1231
                          rcp r6.y, r8.w
                          mul r6.y, r6.y, r8.z
                          rsq r6.y, r6.y
                          rcp r8.x, r6.y  // ::r<0>
                          mul r8.z, r9.y, r8.x  // ::b<0>
                          mov r8.y, c118.z
                          mov r17.y, c118.z
                          cmp r8.xyz, r16.z, r8, r17  // ::r<0>, ::g<0>, ::b<0>
                          mov r15.x, c118.z
                          cmp r8.xyz, r16.y, r8, r15  // ::r<0>, ::g<0>, ::b<0>
                          mov r14.x, c118.z
                          cmp r13.xyz, r16.x, r8, r14  // ::r<0>, ::g<0>, ::b<0>
                        endif
                      endif
                    endif

#line 1238
                    add r8.xyz, r13, -c154.y
                    frc r9.xyw, r8.xyzz
                    add r8.xyz, r8, -r9.xyww
                    mul_sat r12.xyz, r8.xzyw, c106.x  // ::result<0,2,1>

#line 2486
                    mov r1.z, -c105.w
                  else
                    if_eq r6.x, -c65.z

#line 1309
                      mul r6.yz, r11.xxyw, c103.w  // ::white<0>, ::black<0>
                      add r6.z, r6.z, r6.y

#line 1317
                      if_ge r6.z, -c105.w

#line 1313
                        rcp r6.z, r6.z
                        mul r12.xyz, r6.z, r6.y  // ::gray<0,0,0>

#line 1328
                      else

#line 853
                        add r6.z, -r10.z, c83.x

#line 865
                        mul r8.x, r10.z, c83.y
                        cmp r6.z, r6.z, r8.x, c83.z  // ::SectorPosition<0>
                        frc r8.x, r6.z
                        add r8.x, r6.z, -r8.x  // ::SectorNumber<0>

#line 869
                        add r6.z, r6.z, -r8.x  // ::FractionalSector<0>

#line 873
                        add r13.x, -r6.z, -c105.w  // ::q<0>

#line 901
                        add r14, r8.x, c165

#line 907
                        add r6.z, r8.x, c132.x
                        cmp r15.x, -r6_abs.z, c105_abs.w, c105_abs.z  // ::r<0>

#line 912
                        mov r13.y, c118.z
                        cmp r15.yz, -r6_abs.z, r13.xyxw, c118.z  // ::g<0>, ::b<0>
                        mad r13.zw, r13.x, c121.xyyz, c121.x
                        cmp r8.yzw, -r14_abs.w, r13.xzyw, r15.xxyz  // ::r<0>, ::g<0>, ::b<0>
                        cmp r8.yzw, -r14_abs.z, r13.xyxw, r8  // ::r<0>, ::g<0>, ::b<0>
                        mad r9.xyw, r13.wxzy, c121.xyzx, c121.zxzz
                        cmp r8.yzw, -r14_abs.y, r9.xwxy, r8  // ::r<0>, ::g<0>, ::b<0>
                        cmp r8.yzw, -r14_abs.x, r13.xxwy, r8  // ::r<0>, ::g<0>, ::b<0>
                        cmp r8.xyz, -r8_abs.x, r9.xyww, r8.yzww  // ::r<0>, ::g<0>, ::b<0>

#line 1320
                        mad r6.z, r11.x, -c166.x, c166.y
                        mad r6.z, r11.y, -c103.w, r6.z

#line 1327
                        mad r12.xyz, r8.xzyw, r6.z, r6.y  // ::rgb<0,2,1>
                      endif

#line 2487
                      mov r1.z, -c105.w
                    else
                      if_eq r6.x, c153.w

#line 470
                        mul r8.xyz, r11.x, c87
                        mad r8.xyz, r10.z, c86, r8
                        mad r12.xyz, r11.y, c88.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2488
                        mov r1.z, -c105.w
                      else
                        if_eq r6.x, -c46.x

#line 2190
                          add r6.yz, r11.xyxw, c118.w
                          mad r8.x, r6.z, -c137.w, r10.z
                          mad r8.x, r6.y, -c119.w, r8.x  // ::ycbcr<1>
                          mad r6.yz, r6, c94.xxyw, r10.z  // ::ycbcr<0,2>

#line 2170
                          add r6.yz, r6, -c150.xyww
                          add r8.x, r8.x, c118.w

#line 2125
                          mul r8.yz, r6, c94.xzww  // ::ypbpr<0>
                          add r12.x, r8.z, r8.y  // ::r<0>
                          mad r12.y, r8.x, c87.w, r8.y  // ::b<0>
                          mul r6.z, r12.x, c146.x
                          mad r6.y, r6.y, c86.w, -r6.z
                          mad r6.y, r12.y, -c146.z, r6.y
                          mul r12.z, r6.y, c88.w  // ::g<0>

#line 2489
                          mov r1.z, -c105.w
                        else
                          if_eq r6.x, -c46.y

#line 1397
                            add r6.y, r10.z, c153.w
                            mul r6.z, r6.y, c82.x  // ::fy<0>
                            mul r8.x, r11.y, c89.x
                            mad r8.y, r11.x, c89.y, r6.z  // ::fx<0>
                            mad r6.y, r6.y, c82.x, -r8.x  // ::fz<0>
                            mul r8.x, r8.y, r8.y
                            mul r8.z, r8.x, r8.y  // ::fx3<0>
                            mul r8.w, r6.y, r6.y
                            mul r9.x, r6.y, r8.w  // ::fz3<0>
                            mad r8.x, r8.y, -r8.x, c102.x
                            mad r8.y, r8.y, c89.z, c89.w
                            mul r8.y, r8.y, c111.x
                            cmp r8.x, r8.x, r8.y, r8.z  // ::xr<0>
                            add r8.y, -r10.z, c81.w
                            mul r8.z, r6.z, r6.z
                            mul r6.z, r6.z, r8.z
                            mul r8.z, r10.z, c111.x
                            cmp r6.z, r8.y, r8.z, r6.z  // ::yr<0>
                            mad r8.y, r6.y, -r8.w, c102.x
                            mad r6.y, r6.y, c89.z, c89.w
                            mul r6.y, r6.y, c111.x
                            cmp r6.y, r8.y, r6.y, r9.x  // ::zr<0>

#line 508
                            abs r8.y, c13.x

#line 512
                            rcp r8.z, c13.x
                            mul r13.x, r8.z, c12.x  // ::xyY_XYZ<0>
                            mov r9.x, c13.x  // ::WhiteY<0>
                            add r8.w, -r9.x, -c12.x
                            add r8.w, r8.w, -c105.w
                            mul r13.z, r8.z, r8.w  // ::xyY_XYZ<2>
                            mov r13.y, -c105.w
                            cmp r8.yzw, -r8.y, c115.z, r13.xxyz  // ::xyY_XYZ<0,1,2>

#line 1409
                            mul r12.x, r8.y, r8.x  // ::Lab_Lrgb<0>
                            mul r12.yz, r6, r8.xwzw  // ::Lab_Lrgb<2,1>

#line 2490
                            mov r1.z, -c105.w
                          else
                            if_eq r6.x, -c66.x

#line 508
                              abs r6.y, c13.x

#line 512
                              rcp r6.z, c13.x
                              mul r8.x, r6.z, c12.x  // ::xyY_XYZ<0>
                              mov r9.x, c13.x  // ::WhiteY<0>
                              add r8.w, -r9.x, -c12.x
                              add r8.w, r8.w, -c105.w
                              mul r8.z, r6.z, r8.w  // ::xyY_XYZ<2>
                              mov r8.y, -c105.w
                              cmp r8.xyz, -r6.y, c115.z, r8  // ::xyY_XYZ<0,1,2>

#line 552
                              add r9.xy, r8.xzzw, c90

#line 555
                              cmp r6.z, -r9_abs.y, -c105_abs.w, -c105_abs.z
                              cmp r6.z, -r6.y, c118.z, r6.z
                              cmp r6.z, -r9_abs.x, r6.z, c118.z

#line 565
                              add r9.xy, r8.yzzw, r8
                              mul r9.xy, r9, c90.zwzw  // ::Ka<0,0>

#line 1453
                              mul r8.w, r10.z, c103.w
                              mul r8.w, r8.w, r8.w
                              mul r8.y, r8.y, r8.w  // ::Y<0>
                              rcp r8.w, r9.x
                              cmp r8.w, r6.z, r8.w, c91.x
                              mul r8.w, r8.w, r11.x
                              cmp r6.y, -r6.y, c114.z, c114.w
                              mul r6.y, r6.y, r8.y
                              rsq r9.x, r6.y
                              rcp r9.x, r9.x
                              mad r8.w, r8.w, r9.x, r6.y
                              mul r8.x, r8.x, r8.w  // ::X<0>
                              rcp r8.w, r9.y
                              cmp r6.z, r6.z, r8.w, c91.y
                              mul r6.z, r6.z, r11.y
                              mad r6.y, r6.z, r9.x, -r6.y
                              mul r6.y, -r8.z, r6.y  // ::Z<0>

#line 470
                              mul r8.yzw, r8.y, c24.xxyz
                              mad r8.xyz, r8.x, c23, r8.yzww
                              mad r12.xyz, r6.y, c25.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2491
                              mov r1.z, -c105.w
                            else
                              add r6.y, r6.x, c66.y
                              cmp r1.z, -r6_abs.y, c105_abs.w, c105_abs.z
                              mov r11.z, r10.z
                              cmp r12.xyz, -r6_abs.y, r11.zyxw, r12  // ::TLrgb<0,2,1>
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r1.z, -r1.z

#line 2521
            else

#line 2494
              if_eq r6.x, -c66.z

#line 1499
                add r1.z, r10.z, -c70.w  // ::Jz<0>
                mad r6.y, r1.z, c91.z, c91.w
                rcp r6.y, r6.y

#line 1504
                mul r8.xy, r11.x, c136
                mad r6.z, r1.z, r6.y, r8.x
                mad r6.z, r11.y, c136.z, r6.z  // PerceptualQuantizerInverse::X<0>

#line 491
                pow r8.z, r6.z, c136.w  // ::XX<0>
                add r6.z, -r8.z, c59.z
                mad r8.z, r8.z, c92.x, c92.y
                rcp r8.z, r8.z
                mul r6.z, r6.z, r8.z
                pow r8.z, r6.z, c92.z

#line 1504
                mad r6.yz, r1.z, r6.y, -r8.xxyw
                mad r6.yz, r11.y, -c135.xxyw, r6  // PerceptualQuantizerInverse::X<0,0>

#line 491
                pow r1.z, r6.y, c136.w  // ::XX<0>
                add r6.y, -r1.z, c59.z
                mad r1.z, r1.z, c92.x, c92.y
                rcp r1.z, r1.z
                mul r1.z, r1.z, r6.y
                pow r6.y, r1.z, c92.z
                pow r1.z, r6.z, c136.w  // ::XX<0>
                add r6.z, -r1.z, c59.z
                mad r1.z, r1.z, c92.x, c92.y
                rcp r1.z, r1.z
                mul r1.z, r1.z, r6.z
                pow r6.z, r1.z, c92.z

#line 1508
                mul r8.xyw, r6.y, c134.xyzz
                mad r8.xw, r8.z, c135.zyzw, -r8
                mad r1.z, r8.z, c92.w, r8.y
                mad r1.z, r6.z, -c134.w, r1.z  // ::Y<0>
                mad r6.yz, r6.z, c133.xxyw, r8.xxww  // ::X<0>, ::Z<0>
                mul r1.z, r1.z, c93.z  // ::xyz<1>
                mul r6.yz, r6, c93.z  // ::xyz<0,2>

#line 470
                mul r8.xyz, r1.z, c24
                mad r8.xyz, r6.y, c23, r8
                mad r12.xyz, r6.z, c25.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2494
                mov r1.z, -c105.w
              else
                if_eq r6.x, -c66.w

#line 508
                  abs r6.y, c13.x

#line 512
                  rcp r6.z, c13.x
                  mul r8.x, r6.z, c12.x  // ::xyY_XYZ<0>
                  mov r9.x, c13.x  // ::WhiteY<0>
                  add r8.w, -r9.x, -c12.x
                  add r8.w, r8.w, -c105.w
                  mul r8.z, r6.z, r8.w  // ::xyY_XYZ<2>
                  mov r8.y, -c105.w
                  cmp r8.xyz, -r6.y, c115.z, r8  // ::xyY_XYZ<0,1,2>

#line 470
                  mul r9.xyw, r11.x, c27.xyzz
                  mad r9.xyw, r10.z, c26.xyzz, r9
                  mad r9.xyw, r11.y, c28.xyzz, r9  // ::x<0>, ::y<0>, ::z<0>

#line 500
                  mul r13.xyz, r9.xyww, r9.xyww
                  mul r9.xyw, r9, r13.xyzz  // ::Pow3<0,0,0>

#line 470
                  mul r13.xyz, r9.y, c33
                  mad r13.xyz, r9.x, c32, r13
                  mad r9.xyw, r9.w, c34.xyzz, r13.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 1557
                  mul r8.xyz, r8, r9.xyww  // ::xyz<0,1,2>

#line 470
                  mul r9.xyw, r8.y, c24.xyzz
                  mad r8.xyw, r8.x, c23.xyzz, r9
                  mad r12.xyz, r8.z, c25.xzyw, r8.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2495
                  mov r1.z, -c105.w
                else
                  if_eq r6.x, -c35.x

#line 589
                    mad r6.y, r11.y, c166.z, c166.w
                    frc r6.y, r6.y
                    mad r6.y, r6.y, c79.x, c79.y
                    sincos r8.xy, r6.y
                    mul r6.yz, r8.xxyw, r11.x  // ::a<0>, ::b<0>

#line 1397
                    add r8.x, r10.z, c153.w
                    mul r8.y, r8.x, c82.x  // ::fy<0>
                    mul r6.z, r6.z, c89.x
                    mad r6.y, r6.y, c89.y, r8.y  // ::fx<0>
                    mad r6.z, r8.x, c82.x, -r6.z  // ::fz<0>

#line 1402
                    mul r8.xw, r6.yyzz, r6.yyzz
                    mul r8.z, r6.y, r8.x  // ::fx3<0>
                    mul r9.x, r6.z, r8.w  // ::fz3<0>
                    mad r8.x, r6.y, -r8.x, c102.x
                    mad r6.y, r6.y, c89.z, c89.w
                    mul r6.y, r6.y, c111.x
                    cmp r6.y, r8.x, r6.y, r8.z  // ::xr<0>
                    add r8.x, -r10.z, c81.w
                    mul r8.z, r8.y, r8.y
                    mul r8.y, r8.z, r8.y
                    mul r8.z, r10.z, c111.x
                    cmp r8.x, r8.x, r8.z, r8.y  // ::yr<0>
                    mad r8.y, r6.z, -r8.w, c102.x
                    mad r6.z, r6.z, c89.z, c89.w
                    mul r6.z, r6.z, c111.x
                    cmp r6.z, r8.y, r6.z, r9.x  // ::zr<0>

#line 508
                    abs r8.y, c13.x

#line 512
                    rcp r8.z, c13.x
                    mul r13.x, r8.z, c12.x  // ::xyY_XYZ<0>
                    mov r9.x, c13.x  // ::WhiteY<0>
                    add r8.w, -r9.x, -c12.x
                    add r8.w, r8.w, -c105.w
                    mul r13.z, r8.z, r8.w  // ::xyY_XYZ<2>
                    mov r13.y, -c105.w
                    cmp r8.yzw, -r8.y, c115.z, r13.xxyz  // ::xyY_XYZ<0,1,2>

#line 1409
                    mul r12.z, r8.z, r8.x  // ::Lab_Lrgb<1>
                    mul r12.xy, r6.yzzw, r8.ywzw  // ::Lab_Lrgb<0,2>

#line 2496
                    mov r1.z, -c105.w
                  else
                    if_eq r6.x, -c35.y

#line 589
                      mad r6.y, r11.y, c166.z, c166.w
                      frc r6.y, r6.y
                      mad r6.y, r6.y, c79.x, c79.y
                      sincos r8.xy, r6.y
                      mul r6.yz, r8.xxyw, r11.x  // ::a<0>, ::b<0>

#line 508
                      abs r8.x, c13.x

#line 512
                      rcp r8.y, c13.x
                      mul r13.x, r8.y, c12.x  // ::xyY_XYZ<0>
                      mov r9.x, c13.x  // ::WhiteY<0>
                      add r8.z, -r9.x, -c12.x
                      add r8.z, r8.z, -c105.w
                      mul r13.z, r8.y, r8.z  // ::xyY_XYZ<2>
                      mov r13.y, -c105.w
                      cmp r8.yzw, -r8.x, c115.z, r13.xxyz  // ::xyY_XYZ<0,1,2>

#line 552
                      add r9.xy, r8.ywzw, c90

#line 555
                      cmp r9.y, -r9_abs.y, -c105_abs.w, -c105_abs.z
                      cmp r9.y, -r8.x, c118.z, r9.y
                      cmp r9.x, -r9_abs.x, r9.y, c118.z

#line 565
                      add r9.yw, r8.xzzw, r8.xyzz
                      mul r9.yw, r9, c90.xzzw  // ::Ka<0,0>

#line 1453
                      mul r10.w, r10.z, c103.w
                      mul r10.w, r10.w, r10.w
                      mul r8.z, r8.z, r10.w  // ::Y<0>
                      rcp r9.y, r9.y
                      cmp r9.y, r9.x, r9.y, c91.x
                      mul r6.y, r6.y, r9.y
                      cmp r8.x, -r8.x, c114.z, c114.w
                      mul r8.x, r8.x, r8.z
                      rsq r9.y, r8.x
                      rcp r9.y, r9.y
                      mad r6.y, r6.y, r9.y, r8.x
                      mul r6.y, r8.y, r6.y  // ::X<0>
                      rcp r8.y, r9.w
                      cmp r8.y, r9.x, r8.y, c91.y
                      mul r6.z, r6.z, r8.y
                      mad r6.z, r6.z, r9.y, -r8.x
                      mul r6.z, -r8.w, r6.z  // ::Z<0>

#line 470
                      mul r8.xyz, r8.z, c24
                      mad r8.xyz, r6.y, c23, r8
                      mad r12.xyz, r6.z, c25.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2497
                      mov r1.z, -c105.w
                    else
                      if_eq r6.x, -c35.z

#line 589
                        mad r6.y, r11.y, c166.z, c166.w
                        frc r6.y, r6.y
                        mad r6.y, r6.y, c79.x, c79.y
                        sincos r8.xy, r6.y
                        mul r8, r8.xyxy, r11.x  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1499
                        add r6.y, r10.z, -c70.w  // ::Jz<0>
                        mad r6.z, r6.y, c91.z, c91.w
                        rcp r6.z, r6.z

#line 1504
                        mul r8.xz, r8, c136.xyyw
                        mad r9.x, r6.y, r6.z, r8.x
                        mad r9.x, r8.y, c136.z, r9.x  // PerceptualQuantizerInverse::X<0>

#line 491
                        pow r10.w, r9.x, c136.w  // ::XX<0>
                        add r9.x, -r10.w, c59.z
                        mad r9.y, r10.w, c92.x, c92.y
                        rcp r9.y, r9.y
                        mul r9.x, r9.y, r9.x
                        pow r10.w, r9.x, c92.z

#line 1504
                        mad r6.yz, r6.y, r6.z, -r8.xxzw
                        mad r6.yz, r8.xyww, -c135.xxyw, r6  // PerceptualQuantizerInverse::X<0,0>

#line 491
                        pow r8.x, r6.y, c136.w  // ::XX<0>
                        add r6.y, -r8.x, c59.z
                        mad r8.x, r8.x, c92.x, c92.y
                        rcp r8.x, r8.x
                        mul r6.y, r6.y, r8.x
                        pow r8.x, r6.y, c92.z
                        pow r8.y, r6.z, c136.w  // ::XX<0>
                        add r6.y, -r8.y, c59.z
                        mad r6.z, r8.y, c92.x, c92.y
                        rcp r6.z, r6.z
                        mul r6.y, r6.z, r6.y
                        pow r8.y, r6.y, c92.z

#line 1508
                        mul r8.xzw, r8.x, c134.xyyz
                        mad r6.yz, r10.w, c135.xzww, -r8.xxww
                        mad r8.x, r10.w, c92.w, r8.z
                        mad r8.x, r8.y, -c134.w, r8.x  // ::Y<0>
                        mad r6.yz, r8.y, c133.xxyw, r6  // ::X<0>, ::Z<0>
                        mul r8.x, r8.x, c93.z  // ::xyz<1>
                        mul r6.yz, r6, c93.z  // ::xyz<0,2>

#line 470
                        mul r8.xyz, r8.x, c24
                        mad r8.xyz, r6.y, c23, r8
                        mad r12.xyz, r6.z, c25.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2498
                        mov r1.z, -c105.w
                      else
                        if_eq r6.x, -c35.w

#line 589
                          mad r6.y, r11.y, c166.z, c166.w
                          frc r6.y, r6.y
                          mad r6.y, r6.y, c79.x, c79.y
                          sincos r8.xy, r6.y
                          mul r6.yz, r8.xxyw, r11.x  // ::a<0>, ::b<0>

#line 508
                          abs r8.x, c13.x

#line 512
                          rcp r8.y, c13.x
                          mul r13.x, r8.y, c12.x  // ::xyY_XYZ<0>
                          mov r9.x, c13.x  // ::WhiteY<0>
                          add r8.z, -r9.x, -c12.x
                          add r8.z, r8.z, -c105.w
                          mul r13.z, r8.y, r8.z  // ::xyY_XYZ<2>
                          mov r13.y, -c105.w
                          cmp r8.yzw, -r8.x, c115.z, r13.xxyz  // ::xyY_XYZ<0,1,2>

#line 571
                          cmp r8.x, -r8.x, c129.y, c129.w
                          add r8.x, r8.x, r8.y
                          mul r8.y, r8.y, -c58.z
                          mad r8.x, r8.w, -c58.x, r8.x
                          rcp r8.x, r8.x
                          mul r8.y, r8.x, r8.y  // ::ComputeKu<0>

#line 576
                          mul r8.x, r8.z, r8.x
                          mul r8.x, r8.x, -c84.x  // ::ComputeKv<0>

#line 1611
                          add r8.z, -r10.z, c81.w
                          add r8.w, r10.z, c153.w
                          mul r8.w, r8.w, c82.x
                          mul r9.x, r8.w, r8.w
                          mul r8.w, r8.w, r9.x

#line 1616
                          mul r13, r10.z, c139

#line 1611
                          cmp r8.z, r8.z, r13.x, r8.w  // ::Y<0>
                          mad r6.y, r13.z, r8.y, r6.y
                          rcp r6.y, r6.y
                          mad r6.y, r13.y, r6.y, c105.w
                          mul r6.y, r6.y, c53.z  // ::a<0>
                          mul r8.y, r8.z, c132.x  // ::b<0>
                          mad r6.z, r13.z, r8.x, r6.z
                          rcp r6.z, r6.z
                          mad r6.z, r13.w, r6.z, c132.x
                          mad r6.z, r8.z, r6.z, -r8.y
                          rcp r8.x, r6.y
                          mul r6.z, r6.z, r8.x  // ::X<0>
                          mad r6.y, r6.z, r6.y, r8.y  // ::Z<0>

#line 1622
                          max r8.x, r6.z, c118.z  // ::X<0>

#line 1625
                          max r6.z, r8.z, c118.z  // ::Y<0>

#line 1628
                          max r8.y, r6.y, c118.z  // ::Z<0>

#line 470
                          mul r9.xyw, r6.z, c24.xyzz
                          mad r8.xzw, r8.x, c23.xyyz, r9.xyyw
                          mad r12.xyz, r8.y, c25.xzyw, r8.xwzw  // ::x<0>, ::z<0>, ::y<0>

#line 2499
                          mov r1.z, -c105.w
                        else
                          if_eq r6.x, -c36.x

#line 589
                            mad r6.y, r11.y, c166.z, c166.w
                            frc r6.y, r6.y
                            mad r6.y, r6.y, c79.x, c79.y
                            sincos r8.xy, r6.y
                            mul r10.xy, r8, r11.x  // ::a<0>, ::b<0>

#line 1974
                            add r8.xyz, r10, c155.wwxw
                            mul r8.xzw, r8.xyyz, c133.zyzw  // ::result<0,1,2>

#line 512
                            mul r6.y, r8.w, r8.x
                            rcp r6.z, r8.z
                            mul r13.x, r6.z, r6.y  // ::xyY_XYZ<0>
                            mad r6.y, r8.y, -c89.x, -r8.x
                            add r6.y, r6.y, -c105.w
                            mul r6.y, r8.w, r6.y
                            mul r13.z, r6.z, r6.y  // ::xyY_XYZ<2>
                            mov r13.y, r8.w
                            cmp r8.xyz, -r8_abs.z, c115.z, r13  // ::xyY_XYZ<0,1,2>

#line 470
                            mul r9.xyw, r8.y, c24.xyzz
                            mad r8.xyw, r8.x, c23.xyzz, r9
                            mad r12.xyz, r8.z, c25.xzyw, r8.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2500
                            mov r1.z, -c105.w
                          else
                            if_eq r6.x, -c36.y

#line 470
                              mul r8.xyz, r11.x, c15
                              mad r8.xyz, r10.z, c14, r8
                              mad r8.xyz, r11.y, c16, r8  // ::x<0>, ::y<0>, ::z<0>
                              mul r9.xyw, r8.y, c24.xyzz
                              mad r8.xyw, r8.x, c23.xyzz, r9
                              mad r12.xyz, r8.z, c25.xzyw, r8.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2501
                              mov r1.z, -c105.w
                            else
                              if_eq r6.x, -c36.z

#line 508
                                abs r6.y, c13.x

#line 512
                                rcp r6.z, c13.x
                                mul r8.x, r6.z, c12.x  // ::xyY_XYZ<0>
                                mov r9.x, c13.x  // ::WhiteY<0>
                                add r8.w, -r9.x, -c12.x
                                add r8.w, r8.w, -c105.w
                                mul r8.z, r6.z, r8.w  // ::xyY_XYZ<2>
                                mov r8.y, -c105.w
                                cmp r8.xyz, -r6.y, c115.z, r8  // ::xyY_XYZ<0,1,2>

#line 571
                                cmp r6.y, -r6.y, c129.y, c129.w
                                add r6.y, r6.y, r8.x
                                mul r6.z, r8.x, -c58.z
                                mad r6.y, r8.z, -c58.x, r6.y
                                rcp r6.y, r6.y
                                mul r6.z, r6.y, r6.z  // ::ComputeKu<0>

#line 576
                                mul r6.y, r8.y, r6.y
                                mul r6.y, r6.y, -c84.x  // ::ComputeKv<0>

#line 1611
                                add r8.x, -r10.z, c81.w
                                add r8.y, r10.z, c153.w
                                mul r8.y, r8.y, c82.x
                                mul r8.z, r8.y, r8.y
                                mul r8.y, r8.z, r8.y

#line 1616
                                mul r13, r10.z, c139

#line 1611
                                cmp r8.x, r8.x, r13.x, r8.y  // ::Y<0>
                                mad r6.z, r13.z, r6.z, r11.x
                                rcp r6.z, r6.z
                                mad r6.z, r13.y, r6.z, c105.w
                                mul r6.z, r6.z, c53.z  // ::a<0>
                                mul r8.y, r8.x, c132.x  // ::b<0>
                                mad r6.y, r13.z, r6.y, r11.y
                                rcp r6.y, r6.y
                                mad r6.y, r13.w, r6.y, c132.x
                                mad r6.y, r8.x, r6.y, -r8.y
                                rcp r8.z, r6.z
                                mul r6.y, r6.y, r8.z  // ::X<0>
                                mad r6.z, r6.y, r6.z, r8.y  // ::Z<0>

#line 1622
                                max r8.y, r6.y, c118.z  // ::X<0>

#line 1625
                                max r6.y, r8.x, c118.z  // ::Y<0>

#line 1628
                                max r8.x, r6.z, c118.z  // ::Z<0>

#line 470
                                mul r9.xyw, r6.y, c24.xyzz
                                mad r8.yzw, r8.y, c23.xxyz, r9.xxyw
                                mad r12.xyz, r8.x, c25.xzyw, r8.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2502
                                mov r1.z, -c105.w
                              else
                                add r6.y, r6.x, c36.w
                                cmp r1.z, -r6_abs.y, c105_abs.w, c105_abs.z

#line 512
                                mul r6.z, r10.z, r11.y
                                rcp r8.x, r11.x
                                mul r13.x, r6.z, r8.x  // ::xyY_XYZ<0>
                                add r6.z, -r10.z, -r11.x
                                add r6.z, r6.z, -c105.w
                                mul r6.z, r11.y, r6.z
                                mul r13.z, r8.x, r6.z  // ::xyY_XYZ<2>
                                mov r13.y, r11.y
                                cmp r8.xyz, -r11_abs.x, c115.z, r13  // ::xyY_XYZ<0,1,2>

#line 2503
                                cmp r12.xyz, -r6_abs.y, r8.xzyw, r12  // ::TLrgb<0,2,1>
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r1.z, -r1.z

#line 2521
              else

#line 2505
                if_eq r6.x, -c37.x

#line 1353
                  mad r1.z, r10.z, c126.x, c126.y
                  frc r1.z, r1.z
                  mad r1.z, r1.z, c79.x, c79.y
                  sincos r8.xy, r1.z
                  rcp r1.z, r8.x
                  mul r1.z, r1.z, r8.y  // ::x<0>
                  mul r6.y, r1.z, r1.z  // ::x<0>
                  mul r6.z, r11.x, r11.x
                  mul r6.z, r6.z, -c132.x
                  rcp r6.y, r6.y
                  add r6.y, r6.y, -c105.w
                  mul r6.y, r6.y, -c84.x
                  rcp r6.y, r6.y
                  mul r6.y, r6.y, r6.z
                  rsq r6.y, r6.y
                  rcp r6.y, r6.y  // ::r<0>
                  mad r1.z, r1.z, r1.z, -c105.w
                  mul r1.z, r1.z, -c84.x
                  rcp r1.z, r1.z
                  mul r1.z, r1.z, r6.z
                  rsq r1.z, r1.z
                  rcp r1.z, r1.z  // ::g<0>
                  mul r6.z, r1.z, c126.z
                  mad r6.z, r6.y, c126.w, r6.z
                  add r6.z, r6.z, c68.x
                  rcp r6.z, r6.z
                  mul r6.z, r6.z, r11.y  // ::k<0>
                  add r8.x, -r6.y, -c105.w
                  add r8.x, -r1.z, r8.x
                  mul r12.y, r6.z, r8.x  // ::B<0>
                  mul r12.z, r1.z, r6.z  // ::G<0>
                  mul r12.x, r6.y, r6.z  // ::R<0>

#line 2505
                  mov r1.z, -c105.w
                else
                  if_eq r6.x, -c37.y

#line 1899
                    mul r6.y, r10.z, c112.x  // XYZ_Lrgb::input<0>
                    mad r6.z, r11.x, c58.x, r6.y
                    mad r6.z, r11.y, c162.w, r6.z  // XYZ_Lrgb::input<2>

#line 470
                    mul r8.xyz, r11.x, c24
                    mad r8.xyz, r6.y, c23, r8
                    mad r12.xyz, r6.z, c25.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2506
                    mov r1.z, -c105.w
                  else
                    if_eq r6.x, -c37.z

#line 1919
                      if_eq r9.z, -r5.w

#line 1932
                        mov r12.xyz, c118.z  // ::UVW_Lrgb<0,2,1>
                      else

#line 508
                        abs r5.w, c13.x

#line 512
                        rcp r6.y, c13.x
                        mul r8.x, r6.y, c12.x  // ::xyY_XYZ<0>
                        mov r9.x, c13.x  // ::WhiteY<0>
                        add r6.z, -r9.x, -c12.x
                        add r6.z, r6.z, -c105.w
                        mul r8.z, r6.y, r6.z  // ::xyY_XYZ<2>
                        mov r8.y, -c105.w
                        cmp r8.xyz, -r5.w, c115.z, r8  // ::xyY_XYZ<0,1,2>

#line 1920
                        cmp r5.w, -r5.w, c129.y, c129.w
                        add r5.w, r5.w, r8.x
                        mul r6.y, r8.x, -c58.z
                        mad r5.w, r8.z, -c58.x, r5.w
                        rcp r5.w, r5.w
                        mul r6.y, r5.w, r6.y  // ::uN<0>
                        mul r5.w, r8.y, r5.w
                        mul r5.w, r5.w, -c105.y  // ::vN<0>
                        add r6.z, r11.y, -c46.x
                        mul r6.z, r6.z, c112.y
                        mul r8.x, r6.z, r6.z
                        mul r6.z, r6.z, r8.x  // ::y<0>
                        mul r8.x, r11.y, -c65.x
                        rcp r8.y, r8.x
                        mad r6.y, r10.z, r8.y, r6.y
                        cmp r6.y, -r8_abs.x, c118.z, r6.y  // ::_u<0>
                        mad r5.w, r11.x, r8.y, r5.w
                        cmp r5.w, -r8_abs.x, c118.z, r5.w  // ::_v<0>
                        mul r8.x, r6.y, r6.z
                        rcp r5.w, r5.w
                        mul r8.x, r5.w, r8.x  // ::x<0>
                        add r8.y, r5.w, r5.w
                        mul r5.w, r6.y, r5.w
                        mad r5.w, r5.w, c154.y, r8.y
                        add r5.w, r5.w, c132.x
                        mul r5.w, r5.w, r6.z  // ::z<0>

#line 1931
                        mul r6.y, r8.x, c103.w  // ::xyz<0>
                        mul r6.z, r6.z, c103.w  // ::xyz<1>
                        mul r5.w, r5.w, c103.w  // ::xyz<2>

#line 470
                        mul r8.xyz, r6.z, c24
                        mad r8.xyz, r6.y, c23, r8
                        mad r12.xyz, r5.w, c25.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 1932
                      endif

#line 2507
                      mov r1.z, -c105.w
                    else
                      if_eq r6.x, -c37.w

#line 2150
                        add r5.w, r10.z, -c153.w
                        mul r6.y, r5.w, c86.w  // ::ypbpr<0>
                        add r8.xy, r11, c118.w

#line 2126
                        mad r12.xy, r8.yxzw, c112.zwzw, r6.y  // ::r<0>, ::b<0>
                        mul r6.y, r12.x, c146.x
                        mad r5.w, r5.w, c86.w, -r6.y
                        mad r5.w, r12.y, -c146.z, r5.w
                        mul r12.z, r5.w, c88.w  // ::g<0>

#line 2508
                        mov r1.z, -c105.w
                      else
                        if_eq r6.x, -c47.x

#line 512
                          mul r5.w, r10.z, r11.y
                          rcp r6.y, r11.x
                          mul r8.x, r5.w, r6.y  // ::xyY_XYZ<0>
                          add r5.w, -r10.z, -r11.x
                          add r5.w, r5.w, -c105.w
                          mul r5.w, r11.y, r5.w
                          mul r8.z, r6.y, r5.w  // ::xyY_XYZ<2>
                          mov r8.y, r11.y
                          cmp r8.xyz, -r11_abs.x, c115.z, r8  // ::xyY_XYZ<0,1,2>

#line 470
                          mul r9.xyz, r8.y, c24
                          mad r8.xyw, r8.x, c23.xyzz, r9.xyzz
                          mad r12.xyz, r8.z, c25.xzyw, r8.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2509
                          mov r1.z, -c105.w
                        else
                          if_eq r6.x, -c47.y

#line 508
                            abs r5.w, c13.x

#line 512
                            rcp r6.y, c13.x
                            mul r8.x, r6.y, c12.x  // ::xyY_XYZ<0>
                            mov r9.x, c13.x  // ::WhiteY<0>
                            add r6.z, -r9.x, -c12.x
                            add r6.z, r6.z, -c105.w
                            mul r8.z, r6.y, r6.z  // ::xyY_XYZ<2>

#line 1991
                            mov r8.y, -c105.w
                            mul r8.xyz, r8, c155.w
                            cmp r8.xyz, -r5.w, c130.x, r8  // ::white<0,1,2>

#line 1995
                            add r5.w, r8.y, r8.x
                            add r5.w, r8.z, r5.w
                            rcp r6.y, r5.w
                            mul r6.y, r6.y, r8.y  // ::x0<0>
                            mul r5.w, r5.w, c103.w  // ::ew<0>

#line 2000
                            mul r6.z, r11.y, r11.y
                            mul r8.y, r6.z, c103.w  // ::Y<0>

#line 2004
                            mul r9.xy, c38.yxzw, c38.xzzw
                            mul r8.w, r6.y, r6.z
                            mul r9.xy, r11.x, r9
                            mul r9.xz, r9.xyyw, c155.w
                            mad r8.w, r8.w, r5.w, r9.x
                            mul r6.y, r6.y, r9.z
                            mad r6.y, r6.y, -r5.w, r8.w
                            mul r8.w, r11.x, c155.w
                            mul r9.xw, r8.w, c38.xyzz
                            mul r10.x, r5.w, r9.z
                            mad r8.w, r8.w, c38.x, -r10.x
                            mad r8.w, r6.z, r5.w, r8.w
                            rcp r8.w, r8.w
                            mul r6.y, r6.y, r8.w  // ::x<0>
                            mad r6.z, r9.w, c38.x, r6.z
                            mad r6.z, r9.y, -c155.w, r6.z
                            mul r8.w, r5.w, r8.y
                            mad r8.w, r8.w, c155.w, r9.x
                            mad r5.w, r9.z, -r5.w, r8.w
                            rcp r5.w, r5.w
                            mul r8.w, r5.w, r6.z  // ::y<0>

#line 512
                            mul r9.x, r8.y, r6.y
                            rcp r9.y, r8.w
                            mul r8.x, r9.y, r9.x  // ::xyY_XYZ<0>
                            mad r5.w, r6.z, -r5.w, -r6.y
                            add r5.w, r5.w, -c105.w
                            mul r5.w, r8.y, r5.w
                            mul r8.z, r9.y, r5.w  // ::xyY_XYZ<2>
                            cmp r8.xyz, -r8_abs.w, c115.z, r8  // ::xyY_XYZ<0,1,2>

#line 470
                            mul r9.xyz, r8.y, c24
                            mad r8.xyw, r8.x, c23.xyzz, r9.xyzz
                            mad r12.xyz, r8.z, c25.xzyw, r8.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2510
                            mov r1.z, -c105.w
                          else

#line 2514
                            add r8, r6.x, c169

#line 470
                            mul r9.xyz, r11.x, c24
                            mad r9.xyz, r10.z, c23, r9
                            mad r9.xyz, r11.y, c25, r9  // ::x<0>, ::y<0>, ::z<0>

#line 2170
                            add r5.w, r10.z, -c153.w
                            mul r6.y, r5.w, c86.w  // ::ypbpr<0>
                            add r10.xy, r11, c118.w

#line 2126
                            mad r13.xz, r10.yyxw, c112.zyww, r6.y  // ::r<0>, ::b<0>
                            mul r6.y, r13.x, c146.x
                            mad r5.w, r5.w, c86.w, -r6.y
                            mad r5.w, r13.z, -c146.z, r5.w
                            mul r13.y, r5.w, c88.w  // ::g<0>

#line 2026
                            add r5.w, r10.z, -r11.x  // ::c<0>
                            add r14.x, r11.y, r5.w  // ::YCoCg_Lrgb<0>
                            add r14.y, r10.z, r11.x  // ::YCoCg_Lrgb<1>
                            add r14.z, -r11.y, r5.w  // ::YCoCg_Lrgb<2>

#line 2514
                            cmp r5.w, -r8_abs.w, c105_abs.w, c105_abs.z

#line 2042
                            mad r6.yz, r11.x, c130, r10.z
                            mad r9.w, r11.x, -c130.w, r10.z
                            mad r15.y, r11.y, c127.x, r9.w  // ::g<0>
                            mad r15.xz, r11.y, -c127.yyzw, r6.yyzw  // ::r<0>, ::b<0>

#line 2514
                            cmp r10.xyw, -r8_abs.w, r15.xyzz, r12.xzzy  // ::TLrgb<0,1,2>
                            cmp r10.xyw, -r8_abs.z, r14.xyzz, r10  // ::TLrgb<0,1,2>
                            cmp r5.w, -r8_abs.z, -c105.w, r5.w
                            cmp r10.xyw, -r8_abs.y, r13.xyzz, r10  // ::TLrgb<0,1,2>
                            cmp r5.w, -r8_abs.y, -c105.w, r5.w
                            cmp r12.xyz, -r8_abs.x, r9.xzyw, r10.xwyw  // ::TLrgb<0,2,1>
                            cmp r1.z, -r8_abs.x, -c105.w, r5.w
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
                if_ne r1.z, -r1.z

#line 2521
                else

#line 2516
                  if_eq r6.x, -c45.x

#line 2071
                    mad r8.xyz, r11.x, c95, r10.z
                    mad r8.xyz, r11.y, c113.xxyw, r8  // ::r<0>, ::g<0>, ::b<0>

#line 2516
                    mov r1.z, -c105.w
                  else

#line 2519
                    add r6.xyz, r6.x, c45.yzww

#line 2126
                    mad r9, r11.x, c96.xywz, r10.z  // ::b<0>

#line 2095
                    mad r10.xyw, r11.y, c97.xyzz, r9  // ::r<0>, ::g<0>, ::b<0>

#line 2099
                    mov_sat r13.xyz, r10.xyww
                    cmp r10.xyw, r10, r13.xyzz, c118.z  // ::r<0>, ::g<0>, ::b<0>

#line 2125
                    mad r9.x, r11.y, c127.w, r10.z  // ::r<0>
                    mad r5.w, r9.x, -c146.x, r10.z
                    mad r5.w, r9.z, -c146.z, r5.w
                    mul r9.y, r5.w, c88.w  // ::g<0>

#line 2519
                    cmp r5.w, -r6_abs.z, c105_abs.w, c105_abs.z

#line 2220
                    mad r13.xyz, r11.yxxw, c98, r10.z  // ::r<0>, ::b<0>

#line 2217
                    mad r8.w, r11.y, c95.w, r13.y  // ::g<0>

#line 2226
                    mov_sat r13.yw, r13.xxzz
                    mov_sat r9.w, r8.w
                    cmp r14.y, r8.w, r9.w, c118.z  // ::g<0>
                    cmp r14.xz, r13, r13.yyww, c118.z  // ::r<0>, ::b<0>

#line 2519
                    cmp r13.xyz, -r6_abs.z, r14, r12.xzyw  // ::TLrgb<0,1,2>
                    cmp r9.xyz, -r6_abs.y, r9, r13  // ::TLrgb<0,1,2>
                    cmp r5.w, -r6_abs.y, -c105.w, r5.w
                    cmp r8.xyz, -r6_abs.x, r10.xyww, r9  // ::TLrgb<0,1,2>
                    cmp r1.z, -r6_abs.x, -c105.w, r5.w
                  endif
                  mov r11.w, r10.z
                  cmp r12.xyz, -r1.z, r11.wyxw, r8.xzyw  // ::TLrgb<0,2,1>
                endif
              endif
            endif
          endif

#line 2339
          rcp r1.z, c11.x
          log r5.w, r12.x
          mul r6.x, r1.z, r5.w
          exp r7.x, r6.x  // ::V<0>

#line 2344
          if_eq c10.x, r0.z

#line 2404
          else

#line 2344
            add r6.x, r6.w, c10.x

#line 2352
            add r6.y, -r12.x, -c105.w
            rsq r6.z, r12.x
            rcp r6.z, r6.z
            mul r6.z, r6.z, -c154.y  // ::Transfer<0>
            cmp r6.y, r6.y, -c105_abs.w, -c105_abs.z
            cmp r6.y, r12.x, r6.y, c118.z
            add r8.x, r12.x, c101.y
            log r8.x, r8.x
            mad r8.x, r8.x, c101.z, c101.w  // ::Transfer<0>
            cmp r6.y, r6.y, r8.x, r6.z  // ::Transfer<0>
            cmp r7.x, -r6_abs.x, r6.y, r7.x  // ::Transfer<0>

#line 2359
            if_eq c10.x, -r6.w

#line 2404
            else

#line 2359
              add r6.x, -r0.w, c10.x

#line 2362
              add r6.y, -r12.x, c102.x
              mul r6.z, r12.x, c113.z
              cmp r6.y, r6.y, r6.z, -c105.w  // ::V<0>
              cmp r7.x, -r6_abs.x, r6.y, r7.x  // ::Transfer<0>

#line 2367
              if_eq c10.x, r0.w

#line 2404
              else

#line 2367
                mov r6.x, c10.x  // ::Companding<0>
                add r6.y, r6.x, c58.x

#line 2382
                if_eq r6.x, -c58.x

#line 2376
                  mul r6.z, r5.w, c113.w
                  exp r6.z, r6.z
                  add r8.x, r6.z, -c59.z
                  max r9.x, r8.x, c118.z  // ::a<0>
                  mad r6.z, r6.z, -c59.y, c59.x  // ::b<0>
                  rcp r6.z, r6.z
                  mul r6.z, r6.z, r9.x
                  pow r8.x, r6.z, c92.z
                  mul r6.z, r8.x, c97.w  // ::Transfer<0>
                  cmp r7.x, -r6_abs.y, r6.z, r7.x  // ::Transfer<0>

#line 2404
                else

#line 2398
                  add r6.xyz, r6.x, c152

#line 2393
                  add r8.xy, r12.x, c120

#line 2401
                  mul r8.zw, r12.x, c120
                  mul r9.xy, r5.w, c100

#line 2385
                  exp r5.w, r9.x

#line 2393
                  mad r9.xz, r5.w, c104.xyyw, c104.zyww
                  cmp r8.xy, r8, r9.xzzw, r8.z  // ::V<0,0>

#line 2401
                  add r5.w, -r12.x, c98.w
                  exp r8.z, r9.y
                  mad r8.z, r8.z, c100.z, c100.w
                  cmp r5.w, r5.w, r8.w, r8.z  // ::V<0>

#line 2404
                  cmp r5.w, -r6_abs.z, r5.w, r12.x  // ::Transfer<0>
                  cmp r5.w, -r6_abs.y, r8.y, r5.w  // ::Transfer<0>
                  cmp r7.x, -r6_abs.x, r8.x, r5.w  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2339
          log r5.w, r12.z
          mul r6.x, r1.z, r5.w
          exp r7.y, r6.x  // ::V<0>

#line 2344
          if_eq c10.x, r0.z

#line 2404
          else

#line 2344
            add r6.x, r6.w, c10.x

#line 2352
            add r6.y, -r12.z, -c105.w
            rsq r6.z, r12.z
            rcp r6.z, r6.z
            mul r6.z, r6.z, -c154.y  // ::Transfer<0>
            cmp r6.y, r6.y, -c105_abs.w, -c105_abs.z
            cmp r6.y, r12.z, r6.y, c118.z
            add r8.x, r12.z, c101.y
            log r8.x, r8.x
            mad r8.x, r8.x, c101.z, c101.w  // ::Transfer<0>
            cmp r6.y, r6.y, r8.x, r6.z  // ::Transfer<0>
            cmp r7.y, -r6_abs.x, r6.y, r7.y  // ::Transfer<0>

#line 2359
            if_eq c10.x, -r6.w

#line 2404
            else

#line 2359
              add r6.x, -r0.w, c10.x

#line 2362
              add r6.y, -r12.z, c102.x
              mul r6.z, r12.z, c113.z
              cmp r6.y, r6.y, r6.z, -c105.w  // ::V<0>
              cmp r7.y, -r6_abs.x, r6.y, r7.y  // ::Transfer<0>

#line 2367
              if_eq c10.x, r0.w

#line 2404
              else

#line 2367
                mov r6.x, c10.x  // ::Companding<0>
                add r6.y, r6.x, c58.x

#line 2382
                if_eq r6.x, -c58.x

#line 2376
                  mul r6.z, r5.w, c113.w
                  exp r6.z, r6.z
                  add r8.x, r6.z, -c59.z
                  max r9.x, r8.x, c118.z  // ::a<0>
                  mad r6.z, r6.z, -c59.y, c59.x  // ::b<0>
                  rcp r6.z, r6.z
                  mul r6.z, r6.z, r9.x
                  pow r8.x, r6.z, c92.z
                  mul r6.z, r8.x, c97.w  // ::Transfer<0>
                  cmp r7.y, -r6_abs.y, r6.z, r7.y  // ::Transfer<0>

#line 2404
                else

#line 2398
                  add r6.xyz, r6.x, c152

#line 2393
                  add r8.xy, r12.z, c120

#line 2401
                  mul r8.zw, r12.z, c120
                  mul r9.xy, r5.w, c100

#line 2385
                  exp r5.w, r9.x

#line 2393
                  mad r9.xz, r5.w, c104.xyyw, c104.zyww
                  cmp r8.xy, r8, r9.xzzw, r8.z  // ::V<0,0>

#line 2401
                  add r5.w, -r12.z, c98.w
                  exp r8.z, r9.y
                  mad r8.z, r8.z, c100.z, c100.w
                  cmp r5.w, r5.w, r8.w, r8.z  // ::V<0>

#line 2404
                  cmp r5.w, -r6_abs.z, r5.w, r12.z  // ::Transfer<0>
                  cmp r5.w, -r6_abs.y, r8.y, r5.w  // ::Transfer<0>
                  cmp r7.y, -r6_abs.x, r8.x, r5.w  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2339
          log r5.w, r12.y
          mul r1.z, r1.z, r5.w
          exp r7.z, r1.z  // ::V<0>

#line 2344
          if_eq c10.x, r0.z

#line 2404
          else

#line 2344
            add r1.z, r6.w, c10.x

#line 2352
            add r6.x, -r12.y, -c105.w
            rsq r6.y, r12.y
            rcp r6.y, r6.y
            mul r6.y, r6.y, -c154.y  // ::Transfer<0>
            cmp r6.x, r6.x, -c105_abs.w, -c105_abs.z
            cmp r6.x, r12.y, r6.x, c118.z
            add r6.z, r12.y, c101.y
            log r6.z, r6.z
            mad r6.z, r6.z, c101.z, c101.w  // ::Transfer<0>
            cmp r6.x, r6.x, r6.z, r6.y  // ::Transfer<0>
            cmp r7.z, -r1_abs.z, r6.x, r7.z  // ::Transfer<0>

#line 2359
            if_eq c10.x, -r6.w

#line 2404
            else

#line 2359
              add r1.z, -r0.w, c10.x

#line 2362
              add r6.x, -r12.y, c102.x
              mul r6.y, r12.y, c113.z
              cmp r6.x, r6.x, r6.y, -c105.w  // ::V<0>
              cmp r7.z, -r1_abs.z, r6.x, r7.z  // ::Transfer<0>

#line 2367
              if_eq c10.x, r0.w

#line 2404
              else

#line 2367
                mov r6.x, c10.x  // ::Companding<0>
                add r1.z, r6.x, c58.x

#line 2382
                if_eq r6.x, -c58.x

#line 2376
                  mul r6.y, r5.w, c113.w
                  exp r6.y, r6.y
                  add r6.z, r6.y, -c59.z
                  max r8.x, r6.z, c118.z  // ::a<0>
                  mad r6.y, r6.y, -c59.y, c59.x  // ::b<0>
                  rcp r6.y, r6.y
                  mul r6.y, r6.y, r8.x
                  pow r8.x, r6.y, c92.z
                  mul r6.y, r8.x, c97.w  // ::Transfer<0>
                  cmp r7.z, -r1_abs.z, r6.y, r7.z  // ::Transfer<0>

#line 2404
                else

#line 2398
                  add r6.xyz, r6.x, c152

#line 2393
                  add r8.xy, r12.y, c120

#line 2401
                  mul r8.zw, r12.y, c120
                  mul r9.xy, r5.w, c100

#line 2385
                  exp r1.z, r9.x

#line 2393
                  mad r9.xz, r1.z, c104.xyyw, c104.zyww
                  cmp r8.xy, r8, r9.xzzw, r8.z  // ::V<0,0>

#line 2401
                  add r1.z, -r12.y, c98.w
                  exp r5.w, r9.y
                  mad r5.w, r5.w, c100.z, c100.w
                  cmp r1.z, r1.z, r8.w, r5.w  // ::V<0>

#line 2404
                  cmp r1.z, -r6_abs.z, r1.z, r12.y  // ::Transfer<0>
                  cmp r1.z, -r6_abs.y, r8.y, r1.z  // ::Transfer<0>
                  cmp r7.z, -r6_abs.x, r8.x, r1.z  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2719
          mov oC0, r7  // ::main<0,1,2,3>
        else
          mov oC0, c118.z  // ::main<0,1,2,3>
        endif
        mov r3.x, r1.w  // ::input4<0>
        mov r3.yz, r2  // ::input4<1,2>
        mov r2.yw, r1.xxzy  // ::input3<0,1>
      endif
    endif
    if_ne r4.w, -r4.w

#line 2737
    else

#line 2721
      if_ge c0.x, r0.y
        mov r0.y, c154.y  // ::Minimum3<133>
        mad r1, r3.xwyz, c5.x, -r0.y
        frc r6, r1
        add r1, r1, -r6
        rcp r0.y, c5.x
        mul r1, r0.y, r1
        cmp r1, -c5.x, r3.xwyz, r1  // ::input4<0,3,1,2>

#line 668
        add r3, -r1, -c105.w
        mul r6.xyz, r3.y, r3.xzww  // ::r<0>, ::g<0>, ::b<0>

#line 2529
        mov r7.x, c0.x  // ::Model<0>
        add r7.xyz, r7.x, c99

#line 691
        mad r3.xzw, r3, r3.y, r1.y  // ::c<0>, ::m<0>, ::y<0>

#line 1795
        mul r8.xyz, r1.xzww, r3.y  // ::r<0>, ::g<0>, ::b<0>

#line 1818
        lrp r9.xyz, r1.xzww, -c105.w, r1.y  // ::r<0>, ::g<0>, ::b<0>

#line 2529
        cmp r1.xyz, -r7_abs.y, r8, r9  // ::TLrgb<0,1,2>
        cmp r1.xyz, -r7_abs.x, r3.xzww, r1  // ::TLrgb<0,1,2>
        cmp r1.xyz, -r0_abs.x, r6, r1  // ::TLrgb<0,1,2>
        cmp r0.y, -r7_abs.z, -c105_abs.w, -c105_abs.z
        cmp r0.y, -r7_abs.y, c105.w, r0.y
        cmp r0.y, -r7_abs.x, c105.w, r0.y
        cmp r0.x, -r0_abs.x, c105.w, r0.y
        cmp r1.xyz, r0.x, c118.z, r1  // ::TLrgb<0,1,2>

#line 2339
        rcp r0.x, c11.x
        log r0.y, r1.x
        mul r1.w, r0.y, r0.x
        exp r3.x, r1.w  // ::V<0>

#line 2344
        if_eq c10.x, r0.z

#line 2404
        else

#line 2344
          mov r1.w, c105.w
          add r2.z, r1.w, c10.x

#line 2352
          add r3.w, -r1.x, -c105.w
          rsq r4.w, r1.x
          rcp r4.w, r4.w
          mul r4.w, r4.w, -c154.y  // ::Transfer<0>
          cmp r3.w, r3.w, -c105_abs.w, -c105_abs.z
          cmp r3.w, r1.x, r3.w, c118.z
          add r5.w, r1.x, c101.y
          log r5.w, r5.w
          mad r5.w, r5.w, c101.z, c101.w  // ::Transfer<0>
          cmp r3.w, r3.w, r5.w, r4.w  // ::Transfer<0>
          cmp r3.x, -r2_abs.z, r3.w, r3.x  // ::Transfer<0>

#line 2359
          if_eq c10.x, -r1.w

#line 2404
          else

#line 2359
            add r1.w, -r0.w, c10.x

#line 2362
            add r2.z, -r1.x, c102.x
            mul r3.w, r1.x, c113.z
            cmp r2.z, r2.z, r3.w, -c105.w  // ::V<0>
            cmp r3.x, -r1_abs.w, r2.z, r3.x  // ::Transfer<0>

#line 2367
            if_eq c10.x, r0.w

#line 2404
            else

#line 2367
              mov r6.x, c10.x  // ::Companding<0>
              add r1.w, r6.x, c58.x

#line 2382
              if_eq r6.x, -c58.x

#line 2376
                mul r2.z, r0.y, c113.w
                exp r2.z, r2.z
                add r3.w, r2.z, -c59.z
                max r4.w, r3.w, c118.z  // ::a<0>
                mad r2.z, r2.z, -c59.y, c59.x  // ::b<0>
                rcp r2.z, r2.z
                mul r2.z, r2.z, r4.w
                pow r3.w, r2.z, c92.z
                mul r2.z, r3.w, c97.w  // ::Transfer<0>
                cmp r3.x, -r1_abs.w, r2.z, r3.x  // ::Transfer<0>

#line 2404
              else

#line 2398
                add r6.xyz, r6.x, c152

#line 2393
                add r7.xy, r1.x, c120

#line 2401
                mul r7.zw, r1.x, c120
                mul r8.xy, r0.y, c100

#line 2385
                exp r0.y, r8.x

#line 2393
                mad r8.xz, r0.y, c104.xyyw, c104.zyww
                cmp r7.xy, r7, r8.xzzw, r7.z  // ::V<0,0>

#line 2401
                add r0.y, -r1.x, c98.w
                exp r1.w, r8.y
                mad r1.w, r1.w, c100.z, c100.w
                cmp r0.y, r0.y, r7.w, r1.w  // ::V<0>

#line 2404
                cmp r0.y, -r6_abs.z, r0.y, r1.x  // ::Transfer<0>
                cmp r0.y, -r6_abs.y, r7.y, r0.y  // ::Transfer<0>
                cmp r3.x, -r6_abs.x, r7.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2339
        log r0.y, r1.y
        mul r1.x, r0.y, r0.x
        exp r3.y, r1.x  // ::V<0>

#line 2344
        if_eq c10.x, r0.z

#line 2404
        else

#line 2344
          mov r1.w, c105.w
          add r1.x, r1.w, c10.x

#line 2352
          add r2.z, -r1.y, -c105.w
          rsq r3.w, r1.y
          rcp r3.w, r3.w
          mul r3.w, r3.w, -c154.y  // ::Transfer<0>
          cmp r2.z, r2.z, -c105_abs.w, -c105_abs.z
          cmp r2.z, r1.y, r2.z, c118.z
          add r4.w, r1.y, c101.y
          log r4.w, r4.w
          mad r4.w, r4.w, c101.z, c101.w  // ::Transfer<0>
          cmp r2.z, r2.z, r4.w, r3.w  // ::Transfer<0>
          cmp r3.y, -r1_abs.x, r2.z, r3.y  // ::Transfer<0>

#line 2359
          if_eq c10.x, -r1.w

#line 2404
          else

#line 2359
            add r1.x, -r0.w, c10.x

#line 2362
            add r1.w, -r1.y, c102.x
            mul r2.z, r1.y, c113.z
            cmp r1.w, r1.w, r2.z, -c105.w  // ::V<0>
            cmp r3.y, -r1_abs.x, r1.w, r3.y  // ::Transfer<0>

#line 2367
            if_eq c10.x, r0.w

#line 2404
            else

#line 2367
              mov r1.x, c10.x  // ::Companding<0>
              add r1.w, r1.x, c58.x

#line 2382
              if_eq r1.x, -c58.x

#line 2376
                mul r2.z, r0.y, c113.w
                exp r2.z, r2.z
                add r3.w, r2.z, -c59.z
                max r4.w, r3.w, c118.z  // ::a<0>
                mad r2.z, r2.z, -c59.y, c59.x  // ::b<0>
                rcp r2.z, r2.z
                mul r2.z, r2.z, r4.w
                pow r3.w, r2.z, c92.z
                mul r2.z, r3.w, c97.w  // ::Transfer<0>
                cmp r3.y, -r1_abs.w, r2.z, r3.y  // ::Transfer<0>

#line 2404
              else

#line 2398
                add r6.xyz, r1.x, c152

#line 2393
                add r1.xw, r1.y, c120.xyzy

#line 2401
                mul r7.xy, r1.y, c120.zwzw
                mul r7.zw, r0.y, c100.xyxy

#line 2385
                exp r0.y, r7.z

#line 2393
                mad r8.xy, r0.y, c104, c104.zwzw
                cmp r1.xw, r1, r8.xyzy, r7.x  // ::V<0,0>

#line 2401
                add r0.y, -r1.y, c98.w
                exp r2.z, r7.w
                mad r2.z, r2.z, c100.z, c100.w
                cmp r0.y, r0.y, r7.y, r2.z  // ::V<0>

#line 2404
                cmp r0.y, -r6_abs.z, r0.y, r1.y  // ::Transfer<0>
                cmp r0.y, -r6_abs.y, r1.w, r0.y  // ::Transfer<0>
                cmp r3.y, -r6_abs.x, r1.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2339
        log r0.y, r1.z
        mul r0.x, r0.y, r0.x
        exp r3.z, r0.x  // ::V<0>

#line 2344
        if_eq c10.x, r0.z

#line 2404
        else

#line 2344
          mov r1.w, c105.w
          add r0.x, r1.w, c10.x

#line 2352
          add r1.x, -r1.z, -c105.w
          rsq r1.y, r1.z
          rcp r1.y, r1.y
          mul r1.y, r1.y, -c154.y  // ::Transfer<0>
          cmp r1.x, r1.x, -c105_abs.w, -c105_abs.z
          cmp r1.x, r1.z, r1.x, c118.z
          add r2.z, r1.z, c101.y
          log r2.z, r2.z
          mad r2.z, r2.z, c101.z, c101.w  // ::Transfer<0>
          cmp r1.x, r1.x, r2.z, r1.y  // ::Transfer<0>
          cmp r3.z, -r0_abs.x, r1.x, r3.z  // ::Transfer<0>

#line 2359
          if_eq c10.x, -r1.w

#line 2404
          else

#line 2359
            add r0.x, -r0.w, c10.x

#line 2362
            add r1.x, -r1.z, c102.x
            mul r1.y, r1.z, c113.z
            cmp r1.x, r1.x, r1.y, -c105.w  // ::V<0>
            cmp r3.z, -r0_abs.x, r1.x, r3.z  // ::Transfer<0>

#line 2367
            if_eq c10.x, r0.w

#line 2404
            else

#line 2367
              mov r0.x, c10.x  // ::Companding<0>
              add r1.x, r0.x, c58.x

#line 2382
              if_eq r0.x, -c58.x

#line 2376
                mul r1.y, r0.y, c113.w
                exp r1.y, r1.y
                add r1.w, r1.y, -c59.z
                max r2.z, r1.w, c118.z  // ::a<0>
                mad r1.y, r1.y, -c59.y, c59.x  // ::b<0>
                rcp r1.y, r1.y
                mul r1.y, r1.y, r2.z
                pow r2.z, r1.y, c92.z
                mul r1.y, r2.z, c97.w  // ::Transfer<0>
                cmp r3.z, -r1_abs.x, r1.y, r3.z  // ::Transfer<0>

#line 2404
              else

#line 2398
                add r1.xyw, r0.x, c152.xyzz

#line 2393
                add r6.xy, r1.z, c120

#line 2401
                mul r6.zw, r1.z, c120
                mul r0.xy, r0.y, c100

#line 2385
                exp r0.x, r0.x

#line 2393
                mad r7.xy, r0.x, c104, c104.zwzw
                cmp r6.xy, r6, r7, r6.z  // ::V<0,0>

#line 2401
                add r0.x, -r1.z, c98.w
                exp r0.y, r0.y
                mad r0.y, r0.y, c100.z, c100.w
                cmp r0.x, r0.x, r6.w, r0.y  // ::V<0>

#line 2404
                cmp r0.x, -r1_abs.w, r0.x, r1.z  // ::Transfer<0>
                cmp r0.x, -r1_abs.y, r6.y, r0.x  // ::Transfer<0>
                cmp r3.z, -r1_abs.x, r6.x, r0.x  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2727
      else

#line 2730
        mov r0.y, c154.y  // ::Minimum3<133>
        mad r1.xyz, r2.ywxw, c5.x, -r0.y
        frc r6.xyz, r1
        add r1.xyz, r1, -r6
        rcp r0.x, c5.x
        mul r1.xyz, r0.x, r1
        cmp r1.xyz, -c5.x, r2.ywxw, r1  // ::input3<0,1,2>

#line 328
        lrp r2.z, r1.x, r5.x, r4.x  // ::ConvertRange<0>
        lrp r6.x, r1.y, r5.y, r4.y  // ::ConvertRange<0>
        add r0.x, -r4.z, r5.z
        mul r0.x, r0.x, r1.z
        lrp r6.y, r1.z, r5.z, r4.z  // ::ConvertRange<0>

#line 2472
        if_eq c0.x, r0.z

#line 1782
          mul r1, r6.xxyy, c77.zwzw
          add r5.z, r1.z, r1.y  // ::RCA_Lrgb<1>
          mad r5.xy, r2.z, c77.wzzw, r1.xwzw  // ::RCA_Lrgb<0,2>

#line 2472
          mov r0.y, -c105.w
        else
          if_eq c0.x, r0.w

#line 1842
            mul r1, r6.yyxx, c77.zwwz
            mad r5.xz, r2.z, c77.wyzw, r1  // ::RGV_Lrgb<0,1>
            add r5.y, r1.w, r1.y  // ::RGV_Lrgb<2>

#line 2473
            mov r0.y, -c105.w
          else
            mov r1.x, c0.x  // ::Model<0>
            if_eq r1.x, -c58.x

#line 1854
              min r1.y, r6.y, r6.x
              min r3.w, r1.y, r2.z  // ::white<0>
              add r1.y, r2.z, -r3.w  // ::r<0>
              add r1.zw, -r3.w, r6.xyxy  // ::y<0>, ::b<0>
              add r2.w, -r1.w, r1.z
              cmp r7.xw, r2.w, r1.zyzw, r1.wyzz  // ::g<0>
              max r2.w, r1.y, r7.x  // ::mY<0>

#line 1864
              add r1.z, r1.z, -r7.w  // ::y<0>
              add r7.z, r1.w, -r7.w  // ::b<0>

#line 1871
              cmp r1.w, -r7.w, -c105_abs.z, -c105_abs.w
              cmp r1.w, -r7.z, c118.z, r1.w
              mul r4.xy, r7.zwzw, c162.w
              cmp r7.yz, r1.w, r7.xzww, r4.xxyw  // ::b<0>, ::g<0>
              add r7.x, r1.z, r1.y  // ::r<0>
              add r7.w, r1.z, r7.z  // ::g<0>
              max r1.y, r7.w, r7.y
              max r4.x, r7.x, r1.y  // ::mG<0>

#line 1880
              rcp r1.y, r4.x
              mul r1.y, r1.y, r2.w  // ::mN<0>

#line 1884
              mul r1.yzw, r1.y, r7.xxwy  // ::r<0>, ::g<0>, ::b<0>
              cmp r1.yzw, -r4.x, r7.xxwy, r1  // ::r<0>, ::g<0>, ::b<0>

#line 1889
              add r1.yzw, r3.w, r1  // ::r<0>, ::g<0>, ::b<0>
              frc r4.xyw, r1.yzzw
              add r1.yzw, r1, -r4.xxyw
              mul r5.xyz, r1.ywzw, c106.x  // ::RYB_Lrgb<0,2,1>

#line 2474
              mov r0.y, -c105.w
            else
              if_eq r1.x, -c58.z

#line 655
                add r5.x, -r2.z, -c105.w  // ::CMY_Lrgb<0>
                add r5.yz, -r6.xyxw, -c105.w  // ::CMY_Lrgb<2,1>

#line 2475
                mov r0.y, -c105.w
              else
                if_eq r1.x, -c132.x

#line 705
                  mul r7, r6.xyyy, c103.w  // ::c<0>, ::g<0,0,0>

#line 713
                  if_eq r7.x, c118.z

#line 762
                    mov r5.xyz, r7.ywzw  // ::HCV_Lrgb<0,2,1>
                  else

#line 705
                    mul r1.y, r2.z, c106.y  // ::h<0>

#line 713
                    cmp r1.z, r2.z, c121.x, c121.y
                    mul r1.y, r1.z, r1.y
                    frc r1.y, r1.y
                    mul r1.y, r1.y, r1.z
                    mul r1.z, r1.y, -c105.y  // ::hi<0>
                    cmp r1.y, r1.y, c121.x, c121.y
                    mul r1.w, r1.y, r1.z
                    frc r1.w, r1.w
                    mul r8.x, r1.w, r1.y  // ::v<0>

#line 718
                    frc r2.w, r1.z
                    add r1.z, r1.z, -r2.w  // ::fhi<0>

#line 744
                    add r9, r1.z, c165

#line 755
                    mov r8.yz, c105_abs.xzww
                    mad r8.w, r1.y, -r1.w, -c105.w
                    cmp r4.xyw, -r9_abs.w, r8.xyzz, r8.zyzw  // ::pure<0,1,2>
                    mad r10.xyz, r8.xzyw, c121.yxxw, c121.xzzw
                    cmp r4.xyw, -r9_abs.z, r10.zxzy, r4  // ::pure<0,1,2>
                    cmp r4.xyw, -r9_abs.y, r8.yzzx, r4  // ::pure<0,1,2>
                    cmp r4.xyw, -r9_abs.x, r10.xyzz, r4  // ::pure<0,1,2>
                    cmp r1.yzw, -r1_abs.z, r8.xzxy, r4.xxyw  // ::pure<0,1,2>

#line 761
                    lrp r5.xyz, r7.x, r1.ywzw, r7.w  // ::result<0,2,1>
                  endif

#line 2476
                  mov r0.y, -c105.w
                else
                  if_eq r1.x, -c105.y

#line 797
                    cmp r1.yz, r2.z, c107.xxyw, c107.xzww
                    mul r1.z, r1.z, r2.z
                    frc r1.z, r1.z
                    mad r1.y, r1.y, r1.z, c156.x
                    mul r1.z, r1.z, c156.x
                    cmp r1.y, r2.z, r1.z, r1.y
                    mul r1.zw, r6.xyxy, c106.xyzx  // ::s<0>, ::i<0>

#line 804
                    if_lt r1.y, c106.w
                      mad r2.w, r6.x, -c166.x, c166.y
                      mul r5.y, r1.w, r2.w  // ::b<0>
                      mad r2.w, r1.y, c166.z, c166.w
                      frc r2.w, r2.w
                      mad r2.w, r2.w, c79.x, c79.y
                      sincos r7.x, r2.w
                      mul r2.w, r1.z, r7.x
                      mad r3.w, r1.y, -c79.z, c79.w
                      mad r3.w, r3.w, c108.x, c108.y
                      frc r3.w, r3.w
                      mad r3.w, r3.w, c79.x, c79.y
                      sincos r8.x, r3.w
                      rcp r3.w, r8.x
                      mad r2.w, r2.w, r3.w, -c105.w
                      mul r5.x, r1.w, r2.w  // ::r<0>
                      mad r2.w, r7.x, -r3.w, -c105.w
                      mad r2.w, r1.z, r2.w, -c105.w
                      mul r5.z, r1.w, r2.w  // ::g<0>
                    else
                      if_lt r1.y, c131.y
                        mad r2.w, r1.y, c108.z, c108.w  // ::h<0>
                        mad r3.w, r6.x, -c166.x, c166.y
                        mul r5.x, r1.w, r3.w  // ::r<0>
                        mad r3.w, r2.w, c108.x, c108.y
                        frc r3.w, r3.w
                        mad r3.w, r3.w, c79.x, c79.y
                        sincos r7.x, r3.w
                        mul r3.w, r1.z, r7.x
                        add r2.w, -r2.w, c79.w
                        mad r2.w, r2.w, c108.x, c108.y
                        frc r2.w, r2.w
                        mad r2.w, r2.w, c79.x, c79.y
                        sincos r8.x, r2.w
                        rcp r2.w, r8.x
                        mad r3.w, r3.w, r2.w, -c105.w
                        mul r5.z, r1.w, r3.w  // ::g<0>

#line 815
                        mad r2.w, r7.x, -r2.w, -c105.w
                        mad r2.w, r1.z, r2.w, -c105.w
                        mul r5.y, r1.w, r2.w  // ::b<0>
                      else

#line 819
                        mad r1.y, r1.y, c109.x, c109.y  // ::h<0>
                        mad r2.w, r6.x, -c166.x, c166.y
                        mul r5.z, r1.w, r2.w  // ::g<0>
                        mad r2.w, r1.y, c108.x, c108.y
                        frc r2.w, r2.w
                        mad r2.w, r2.w, c79.x, c79.y
                        sincos r7.x, r2.w
                        mul r2.w, r1.z, r7.x
                        add r1.y, -r1.y, c79.w
                        mad r1.y, r1.y, c108.x, c108.y
                        frc r1.y, r1.y
                        mad r1.y, r1.y, c79.x, c79.y
                        sincos r8.x, r1.y
                        rcp r1.y, r8.x
                        mad r2.w, r2.w, r1.y, -c105.w
                        mul r5.y, r1.w, r2.w  // ::b<0>
                        mad r1.y, r7.x, -r1.y, -c105.w
                        mad r1.y, r1.z, r1.y, -c105.w
                        mul r5.x, r1.y, r1.w  // ::r<0>
                      endif
                    endif

#line 2477
                    mov r0.y, -c105.w
                  else
                    if_eq r1.x, -c62.x

#line 1680
                      if_lt c155.w, r6.y

#line 1688
                        mad r5.xyz, r2.z, c82.yzyw, c82.wyyw
                      else

#line 1680
                        add r1.y, r6.y, c109.z

#line 1683
                        if_lt r6.y, c109.w
                          cmp r2.xy, r1.y, c155.wxzw, c155.x  // ::HPLuv_Lrgb<0,1>

#line 1688
                          mov r5.xyz, r2.xzyw  // ::HPLuv_Lrgb<0,2,1>
                        else

#line 386
                          add r1.y, r6.y, c153.w
                          mul r1.z, r1.y, r1.y
                          mul r1.w, r1.z, r1.y
                          mul r1.w, r1.w, c80.x  // ::s1<0>
                          mad r1.z, r1.y, -r1.z, c80.y

#line 1613
                          mul r7, r6.y, c111

#line 387
                          cmp r1.z, r1.z, r7.x, r1.w  // ::s2<0>

#line 372
                          mul r1.w, r6.y, r1.z
                          mul r2.w, r1.w, c80.z  // ::y<0>
                          mul r4.xy, r1.z, c81  // ::x<0>, ::z<0>
                          rcp r3.w, r4.y
                          mul r4.y, r3.w, r4.x  // ::GetBounds2<0>
                          mul r2.w, r2.w, r3.w  // ::GetBounds2<1>

#line 403
                          rcp r4.w, r4.y

#line 366
                          mad r3.w, r4.x, -r3.w, -r4.w
                          rcp r3.w, r3.w
                          mul r3.w, r2.w, r3.w  // ::GetIntersection<0>

#line 404
                          mad r2.w, r3.w, r4.y, r2.w  // GetDistance::input<1>

#line 361
                          mul r2.w, r2.w, r2.w
                          mad r2.w, r3.w, r3.w, r2.w
                          rsq r2.w, r2.w
                          rcp r2.w, r2.w  // ::GetDistance<0>

#line 406
                          min r3.w, r2.w, c80.w  // ::GetChroma1a<0>

#line 372
                          mad r1.w, r1.w, c80.z, -r7.y  // ::y<0>
                          mad r1.z, r1.z, c81.y, c81.z  // ::z<0>
                          rcp r1.z, r1.z
                          mul r2.w, r1.z, r4.x  // ::GetBounds2<0>
                          mul r1.w, r1.z, r1.w  // ::GetBounds2<1>

#line 403
                          rcp r4.y, r2.w

#line 366
                          mad r1.z, r4.x, -r1.z, -r4.y
                          rcp r1.z, r1.z
                          mul r1.z, r1.z, r1.w  // ::GetIntersection<0>

#line 404
                          mad r1.w, r1.z, r2.w, r1.w  // GetDistance::input<1>

#line 361
                          mul r1.w, r1.w, r1.w
                          mad r1.z, r1.z, r1.z, r1.w
                          rsq r1.z, r1.z
                          rcp r1.z, r1.z  // ::GetDistance<0>

#line 406
                          min r2.w, r1.z, r3.w  // ::GetChroma1a<0>

#line 1684
                          mul r1.z, r6.x, r2.w
                          mul r1.z, r1.z, c103.w  // ::C<0>

#line 589
                          mad r1.w, r2.z, c166.z, c166.w
                          frc r1.w, r1.w
                          mad r1.w, r1.w, c79.x, c79.y
                          sincos r8.xy, r1.w
                          mul r1.zw, r1.z, r8.xyxy  // ::a<0>, ::b<0>

#line 508
                          abs r2.w, c13.x

#line 512
                          rcp r3.w, c13.x
                          mul r8.x, r3.w, c12.x  // ::xyY_XYZ<0>
                          mov r4.x, c13.x  // ::WhiteY<0>
                          add r4.x, -r4.x, -c12.x
                          add r4.x, r4.x, -c105.w
                          mul r8.z, r3.w, r4.x  // ::xyY_XYZ<2>
                          mov r8.y, -c105.w
                          cmp r4.xyw, -r2.w, c115.z, r8.xyzz  // ::xyY_XYZ<0,1,2>

#line 571
                          cmp r2.w, -r2.w, c129.y, c129.w
                          add r2.w, r2.w, r4.x
                          mul r3.w, r4.x, -c58.z
                          mad r2.w, r4.w, -c58.x, r2.w
                          rcp r2.w, r2.w
                          mul r3.w, r2.w, r3.w  // ::ComputeKu<0>

#line 576
                          mul r2.w, r4.y, r2.w
                          mul r2.w, r2.w, -c84.x  // ::ComputeKv<0>

#line 1611
                          add r4.x, -r6.y, c81.w
                          mul r1.y, r1.y, c82.x
                          mul r4.y, r1.y, r1.y
                          mul r1.y, r1.y, r4.y
                          cmp r1.y, r4.x, r7.x, r1.y  // ::Y<0>
                          mad r1.z, r7.w, r3.w, r1.z
                          rcp r1.z, r1.z
                          mad r1.z, r7.z, r1.z, c105.w
                          mul r1.z, r1.z, c53.z  // ::a<0>
                          mul r3.w, r1.y, c132.x  // ::b<0>
                          mul r4.x, r6.y, -c40.x
                          mad r1.w, r7.w, r2.w, r1.w
                          rcp r1.w, r1.w
                          mad r1.w, r4.x, r1.w, c132.x
                          mad r1.w, r1.y, r1.w, -r3.w
                          rcp r2.w, r1.z
                          mul r1.w, r1.w, r2.w  // ::X<0>
                          mad r1.z, r1.w, r1.z, r3.w  // ::Z<0>

#line 1622
                          max r2.w, r1.w, c118.z  // ::X<0>

#line 1625
                          max r3.w, r1.y, c118.z  // ::Y<0>

#line 1628
                          max r4.x, r1.z, c118.z  // ::Z<0>

#line 470
                          mul r1.yzw, r3.w, c24.xxyz
                          mad r1.yzw, r2.w, c23.xxyz, r1
                          mad r5.xyz, r4.x, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 1688
                        endif
                      endif

#line 2478
                      mov r0.y, -c105.w
                    else
                      if_eq r1.x, -c62.z

#line 850
                        mul r1.y, r6.x, c103.w  // ::_s<0>
                        mul r7.y, r6.y, c103.w  // ::_b<0>

#line 853
                        add r1.z, -r2.z, c83.x

#line 865
                        mul r1.w, r2.z, c83.y
                        cmp r1.z, r1.z, r1.w, c83.z  // ::SectorPosition<0>
                        frc r1.w, r1.z
                        add r1.w, -r1.w, r1.z  // ::SectorNumber<0>

#line 869
                        add r1.z, -r1.w, r1.z  // ::FractionalSector<0>

#line 872
                        mad r2.w, r6.x, -c166.x, c166.y
                        mul r7.z, r2.w, r7.y  // ::p<0>
                        mad r2.w, r1.y, -r1.z, -c105.w
                        mul r7.w, r2.w, r7.y  // ::q<0>
                        add r1.z, -r1.z, -c105.w
                        mad r1.z, r1.y, -r1.z, -c105.w
                        mul r7.x, r1.z, r7.y  // ::t<0>

#line 901
                        add r8, r1.w, c165

#line 907
                        add r1.z, r1.w, c132.x

#line 912
                        cmp r4.xyw, -r1_abs.z, r7.yzzw, c118.z  // ::r<0>, ::g<0>, ::b<0>
                        cmp r4.xyw, -r8_abs.w, r7.xzzy, r4  // ::r<0>, ::g<0>, ::b<0>
                        cmp r4.xyw, -r8_abs.z, r7.zwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                        cmp r4.xyw, -r8_abs.y, r7.zyzx, r4  // ::r<0>, ::g<0>, ::b<0>
                        cmp r4.xyw, -r8_abs.x, r7.wyzz, r4  // ::r<0>, ::g<0>, ::b<0>
                        cmp r4.xyw, -r1_abs.w, r7.yxzz, r4  // ::r<0>, ::g<0>, ::b<0>
                        cmp r5.xyz, -r1_abs.y, r7.y, r4.xwyw  // ::r<0>, ::b<0>, ::g<0>

#line 2479
                        mov r0.y, -c105.w
                      else
                        if_eq r1.x, -c84.x

#line 850
                          mul r1.y, r6.x, c103.w  // ::_s<0>
                          mul r7.y, r6.y, c103.w  // ::_b<0>

#line 853
                          add r1.z, -r2.z, c83.x

#line 865
                          mul r1.w, r2.z, c83.y
                          cmp r1.z, r1.z, r1.w, c83.z  // ::SectorPosition<0>
                          frc r1.w, r1.z
                          add r1.w, -r1.w, r1.z  // ::SectorNumber<0>

#line 869
                          add r1.z, -r1.w, r1.z  // ::FractionalSector<0>

#line 872
                          mad r2.w, r6.x, -c166.x, c166.y
                          mul r7.z, r2.w, r7.y  // ::p<0>
                          mad r2.w, r1.y, -r1.z, -c105.w
                          mul r7.w, r2.w, r7.y  // ::q<0>
                          add r1.z, -r1.z, -c105.w
                          mad r1.z, r1.y, -r1.z, -c105.w
                          mul r7.x, r1.z, r7.y  // ::t<0>

#line 901
                          add r8, r1.w, c165

#line 907
                          add r1.z, r1.w, c132.x

#line 912
                          cmp r4.xyw, -r1_abs.z, r7.yzzw, c118.z  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r8_abs.w, r7.xzzy, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r8_abs.z, r7.zwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r8_abs.y, r7.zyzx, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r8_abs.x, r7.wyzz, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r1_abs.w, r7.yxzz, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r5.xyz, -r1_abs.y, r7.y, r4.xwyw  // ::r<0>, ::b<0>, ::g<0>

#line 2480
                          mov r0.y, -c105.w
                        else
                          add r1.y, r1.x, c105.x
                          cmp r0.y, -r1_abs.y, c105_abs.w, c105_abs.z
                          if_eq r1.x, -c105.x

#line 959
                            mul r5.xyz, r6.y, c103.w  // ::l<0,0,0>

#line 966
                            if_lt -r6.x, c118.z

#line 960
                              min r1.x, r2.z, c83.x  // ::h<0>
                              mul r1.y, r1.x, c83.y  // ::h<0>

#line 968
                              mul r1.z, r6.x, c103.w  // ::s<0>
                              mad r1.w, r6.y, c117.x, c117.y
                              add r1.w, -r1_abs.w, -c105.w
                              mul r7.x, r1.z, r1.w  // ::chroma<0>
                              cmp r1.zw, r1.x, c159.xyxy, c159
                              mul r1.y, r1.w, r1.y
                              frc r1.y, r1.y
                              mad r1.y, r1.z, r1.y, c105.w
                              add r1.y, -r1_abs.y, -c105.w
                              mul r7.y, r1.y, r7.x  // ::v<0>

#line 989
                              add r8, -r1.x, c116

#line 995
                              add r9, r1.x, -c116.wzyx

#line 1001
                              add r1.y, r1.x, c83.w
                              add r1.zw, -r1.x, c117

#line 1006
                              cmp r1.zw, r1, -c105_abs.w, -c105_abs.z
                              cmp r1.y, r1.y, r1.z, c118.z
                              mov r7.z, c118.z
                              cmp r4.xyw, r1.y, c118.z, r7.xzzy  // ::result<0,1,2>
                              cmp r1.y, r9.w, r1.w, c118.z
                              cmp r1.yzw, r1.y, r4.xxyw, r7.xyzx  // ::result<0,1,2>
                              cmp r8, r8, -c105_abs.w, -c105_abs.z
                              cmp r4.xyw, r9.zyzx, r8.xyzz, c118.z
                              cmp r1.yzw, r4.x, r1, r7.xzyx  // ::result<0,1,2>
                              cmp r1.yzw, r4.y, r1, r7.xzxy  // ::result<0,1,2>
                              cmp r1.yzw, r4.w, r1, r7.xyxz  // ::result<0,1,2>
                              cmp r1.x, r1.x, r8.w, c118.z
                              cmp r1.xyz, r1.x, r1.yzww, r7  // ::result<0,1,2>
                              mad r1.w, r7.x, c154.y, r5.y  // ::w<0>

#line 1011
                              add r5.xyz, r1.w, r1.xzyw  // ::result<0,2,1>

#line 1016
                            endif

#line 2481
                          else
                            mov r5.xyz, c118.z
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
        if_ne r0.y, -r0.y

#line 2521
        else

#line 2483
          mov r1.x, c0.x  // ::Model<0>
          if_eq r1.x, -c64.x

#line 959
            mul r5.xyz, r6.y, c103.w  // ::l<0,0,0>

#line 966
            if_lt -r6.x, c118.z

#line 960
              min r0.y, r2.z, c83.x  // ::h<0>
              mul r1.y, r0.y, c83.y  // ::h<0>

#line 968
              mul r1.z, r6.x, c103.w  // ::s<0>
              mad r1.w, r6.y, c117.x, c117.y
              add r1.w, -r1_abs.w, -c105.w
              mul r7.x, r1.z, r1.w  // ::chroma<0>
              cmp r1.zw, r0.y, c159.xyxy, c159
              mul r1.y, r1.w, r1.y
              frc r1.y, r1.y
              mad r1.y, r1.z, r1.y, c105.w
              add r1.y, -r1_abs.y, -c105.w
              mul r7.y, r1.y, r7.x  // ::v<0>

#line 989
              add r8, -r0.y, c116

#line 995
              add r9, r0.y, -c116.wzyx

#line 1001
              add r1.y, r0.y, c83.w
              add r1.zw, -r0.y, c117

#line 1006
              cmp r1.zw, r1, -c105_abs.w, -c105_abs.z
              cmp r1.y, r1.y, r1.z, c118.z
              mov r7.z, c118.z
              cmp r4.xyw, r1.y, c118.z, r7.xzzy  // ::result<0,1,2>
              cmp r1.y, r9.w, r1.w, c118.z
              cmp r1.yzw, r1.y, r4.xxyw, r7.xyzx  // ::result<0,1,2>
              cmp r8, r8, -c105_abs.w, -c105_abs.z
              cmp r4.xyw, r9.zyzx, r8.xyzz, c118.z
              cmp r1.yzw, r4.x, r1, r7.xzyx  // ::result<0,1,2>
              cmp r1.yzw, r4.y, r1, r7.xzxy  // ::result<0,1,2>
              cmp r1.yzw, r4.w, r1, r7.xyxz  // ::result<0,1,2>
              cmp r0.y, r0.y, r8.w, c118.z
              cmp r1.yzw, r0.y, r1, r7.xxyz  // ::result<0,1,2>
              mad r0.y, r7.x, c154.y, r5.y  // ::w<0>

#line 1011
              add r5.xyz, r0.y, r1.ywzw  // ::result<0,2,1>

#line 1016
            endif

#line 2483
            mov r0.y, -c105.w
          else
            if_eq r1.x, -c64.y

#line 1725
              if_lt c155.w, r6.y

#line 1733
                mad r5.xyz, r2.z, c82.yzyw, c82.wyyw
              else

#line 1725
                add r1.y, r6.y, c109.z

#line 1728
                if_lt r6.y, c109.w
                  cmp r5.xz, r1.y, c155.wyxw, c155.x  // ::HSLuv_Lrgb<0,1>

#line 1733
                  mov r5.y, r2.z
                else

#line 386
                  add r1.y, r6.y, c153.w
                  mul r1.z, r1.y, r1.y
                  mul r1.w, r1.z, r1.y
                  mul r1.w, r1.w, c80.x  // ::s1<0>
                  mad r1.z, r1.y, -r1.z, c80.y

#line 1613
                  mul r7, r6.y, c111

#line 387
                  cmp r1.z, r1.z, r7.x, r1.w  // ::s2<0>

#line 372
                  mul r1.w, r6.y, r1.z
                  mul r2.w, r1.w, c80.z  // ::y<0>
                  mul r8, r1.z, c140  // ::x<0>, ::z<0>, ::x<0>, ::z<0>
                  rcp r3.w, r8.y
                  mul r4.x, r3.w, r8.x  // ::GetBounds2<0>
                  mul r2.w, r2.w, r3.w  // ::GetBounds2<1>
                  mad r1.w, r1.w, c80.z, -r7.y  // ::y<0>
                  mad r4.yw, r1.z, c167.xxzy, c167.z  // ::z<0,0>
                  rcp r3.w, r4.y
                  mul r4.y, r3.w, r8.x  // ::GetBounds2<0>
                  mul r1.w, r1.w, r3.w  // ::GetBounds2<1>
                  mul r3.w, r1.z, r7.y  // ::y<0>
                  rcp r5.w, r8.w
                  mul r8.x, r5.w, r8.z  // ::GetBounds2<0>
                  mul r5.w, r3.w, r5.w  // ::GetBounds2<1>
                  mad r7.y, r7.y, r1.z, -r7.y  // ::y<0>
                  rcp r4.w, r4.w
                  mul r8.y, r4.w, r8.z  // ::GetBounds2<0>
                  mul r4.w, r4.w, r7.y  // ::GetBounds2<1>
                  mul r8.zw, r1.z, c138.xyxy  // ::x<0>, ::z<0>
                  rcp r8.w, r8.w
                  mul r9.x, r8.w, r8.z  // ::GetBounds2<0>
                  mul r3.w, r3.w, r8.w  // ::GetBounds2<1>
                  mad r1.z, r1.z, c167.w, c167.z  // ::z<0>
                  rcp r1.z, r1.z
                  mul r8.z, r1.z, r8.z  // ::GetBounds2<0>
                  mul r1.z, r1.z, r7.y  // ::GetBounds2<1>

#line 420
                  mad r7.y, r2.z, c166.z, c166.w
                  frc r7.y, r7.y
                  mad r7.y, r7.y, c79.x, c79.y
                  sincos r10.xy, r7.y
                  mad r4.x, r4.x, -r10.x, r10.y
                  rcp r4.x, r4.x
                  mul r2.w, r2.w, r4.x  // ::length<0>
                  min r4.x, r2.w, c80.w  // GetChroma2a::result<0>
                  cmp r2.w, r2.w, r4.x, c80.w  // GetChroma2a::result<0>
                  mad r4.x, r4.y, -r10.x, r10.y
                  rcp r4.x, r4.x
                  mul r1.w, r1.w, r4.x  // ::length<0>
                  min r4.x, r1.w, r2.w  // GetChroma2a::result<0>
                  cmp r1.w, r1.w, r4.x, r2.w  // GetChroma2a::result<0>
                  mad r2.w, r8.x, -r10.x, r10.y
                  rcp r2.w, r2.w
                  mul r2.w, r2.w, r5.w  // ::length<0>
                  min r4.x, r2.w, r1.w  // GetChroma2a::result<0>
                  cmp r1.w, r2.w, r4.x, r1.w  // GetChroma2a::result<0>
                  mad r2.w, r8.y, -r10.x, r10.y
                  rcp r2.w, r2.w
                  mul r2.w, r2.w, r4.w  // ::length<0>
                  min r4.x, r2.w, r1.w  // GetChroma2a::result<0>
                  cmp r1.w, r2.w, r4.x, r1.w  // GetChroma2a::result<0>
                  mad r2.w, r9.x, -r10.x, r10.y
                  rcp r2.w, r2.w
                  mul r2.w, r2.w, r3.w  // ::length<0>
                  min r3.w, r2.w, r1.w  // GetChroma2a::result<0>
                  cmp r1.w, r2.w, r3.w, r1.w  // GetChroma2a::result<0>
                  mad r2.w, r8.z, -r10.x, r10.y
                  rcp r2.w, r2.w
                  mul r1.z, r1.z, r2.w  // ::length<0>
                  min r2.w, r1.z, r1.w  // GetChroma2a::result<0>
                  cmp r1.z, r1.z, r2.w, r1.w  // GetChroma2a::result<0>

#line 1729
                  mul r1.z, r6.x, r1.z
                  mul r1.z, r1.z, c103.w  // ::C<0>

#line 590
                  mul r1.zw, r10.xyxy, r1.z  // ::a<0>, ::b<0>

#line 508
                  abs r2.w, c13.x

#line 512
                  rcp r3.w, c13.x
                  mul r8.x, r3.w, c12.x  // ::xyY_XYZ<0>
                  mov r4.x, c13.x  // ::WhiteY<0>
                  add r4.x, -r4.x, -c12.x
                  add r4.x, r4.x, -c105.w
                  mul r8.z, r3.w, r4.x  // ::xyY_XYZ<2>
                  mov r8.y, -c105.w
                  cmp r4.xyw, -r2.w, c115.z, r8.xyzz  // ::xyY_XYZ<0,1,2>

#line 571
                  cmp r2.w, -r2.w, c129.y, c129.w
                  add r2.w, r2.w, r4.x
                  mul r3.w, r4.x, -c58.z
                  mad r2.w, r4.w, -c58.x, r2.w
                  rcp r2.w, r2.w
                  mul r3.w, r2.w, r3.w  // ::ComputeKu<0>

#line 576
                  mul r2.w, r4.y, r2.w
                  mul r2.w, r2.w, -c84.x  // ::ComputeKv<0>

#line 1611
                  add r4.x, -r6.y, c81.w
                  mul r1.y, r1.y, c82.x
                  mul r4.y, r1.y, r1.y
                  mul r1.y, r1.y, r4.y
                  cmp r1.y, r4.x, r7.x, r1.y  // ::Y<0>
                  mad r1.z, r7.w, r3.w, r1.z
                  rcp r1.z, r1.z
                  mad r1.z, r7.z, r1.z, c105.w
                  mul r1.z, r1.z, c53.z  // ::a<0>
                  mul r3.w, r1.y, c132.x  // ::b<0>
                  mul r4.x, r6.y, -c40.x
                  mad r1.w, r7.w, r2.w, r1.w
                  rcp r1.w, r1.w
                  mad r1.w, r4.x, r1.w, c132.x
                  mad r1.w, r1.y, r1.w, -r3.w
                  rcp r2.w, r1.z
                  mul r1.w, r1.w, r2.w  // ::X<0>
                  mad r1.z, r1.w, r1.z, r3.w  // ::Z<0>

#line 1622
                  max r2.w, r1.w, c118.z  // ::X<0>

#line 1625
                  max r3.w, r1.y, c118.z  // ::Y<0>

#line 1628
                  max r4.x, r1.z, c118.z  // ::Z<0>

#line 470
                  mul r1.yzw, r3.w, c24.xxyz
                  mad r1.yzw, r2.w, c23.xxyz, r1
                  mad r5.xyz, r4.x, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 1733
                endif
              endif

#line 2484
              mov r0.y, -c105.w
            else
              if_eq r1.x, -c65.x

#line 1060
                mul r1.y, r6.x, c138.z
                mad r1.z, r2.z, c122.x, c122.y
                frc r1.z, r1.z
                mad r1.z, r1.z, c79.x, c79.y
                sincos r7.x, r1.z
                mul r1.z, r1.y, r7.x
                mul r5.xz, r6.y, c122.zyww  // ::m<0>
                mad r1.y, r1.y, r7.x, r5.z
                mad r1.y, r6.y, -c138.w, r1.y
                mul r5.z, r1.y, c78.y  // ::g<0>
                mad r1.y, r6.y, c117.x, -r1.z
                mul r5.y, r1.y, -c154.y  // ::b<0>

#line 2485
                mov r0.y, -c105.w
              else
                if_eq r1.x, -c65.y

#line 1126
                  mad r1.y, r6.x, -c166.x, c166.y  // ::minOverMax<0>
                  if_lt -r1.y, c118.z

#line 1131
                    if_lt r2.z, c63.x
                      mul r1.z, r2.z, c83.y  // ::h<0>
                      rcp r1.w, r1.y
                      lrp r2.w, r1.z, r1.w, -c105.w  // ::part<0>
                      mul r3.w, r1.w, r1.w
                      mul r2.w, r2.w, r2.w
                      mul r2.w, r2.w, c69.w
                      mad r2.w, r3.w, c69.z, r2.w
                      add r2.w, r2.w, c68.x
                      rsq r2.w, r2.w
                      mul r7.z, r2.w, r6.y  // ::b<0>
                      mul r7.x, r1.w, r7.z  // ::r<0>
                      mad r1.w, r7.z, r1.w, -r7.z
                      mad r7.y, r1.z, r1.w, r7.z  // ::g<0>
                    else
                      if_lt r2.z, c106.w

#line 1142
                        mad r1.z, r2.z, -c85.x, c85.y
                        mul r1.z, r1.z, -c105.y  // ::h<0>
                        rcp r1.w, r1.y
                        lrp r2.w, r1.z, r1.w, -c105.w  // ::part<0>
                        mul r3.w, r1.w, r1.w
                        mul r2.w, r2.w, r2.w
                        mul r2.w, r2.w, c69.z
                        mad r2.w, r3.w, c69.w, r2.w
                        add r2.w, r2.w, c68.x
                        rsq r2.w, r2.w
                        mul r7.z, r2.w, r6.y  // ::b<0>
                        mul r7.y, r1.w, r7.z  // ::g<0>
                        mad r1.w, r7.z, r1.w, -r7.z
                        mad r7.x, r1.z, r1.w, r7.z  // ::r<0>
                      else
                        if_lt r2.z, c85.z
                          mad r1.z, r2.z, c85.x, c85.w
                          mul r1.z, r1.z, -c105.y  // ::h<0>
                          rcp r1.w, r1.y
                          lrp r2.w, r1.z, r1.w, -c105.w  // ::part<0>

#line 1153
                          mul r3.w, r1.w, r1.w
                          mul r2.w, r2.w, r2.w
                          mul r2.w, r2.w, c68.x
                          mad r2.w, r3.w, c69.w, r2.w
                          add r2.w, r2.w, c69.z
                          rsq r2.w, r2.w
                          mul r7.x, r2.w, r6.y  // ::r<0>
                          mul r7.y, r1.w, r7.x  // ::g<0>
                          mad r1.w, r7.x, r1.w, -r7.x
                          mad r7.z, r1.z, r1.w, r7.x  // ::b<0>
                        else
                          if_lt r2.z, c131.y
                            mad r1.z, r2.z, -c110.x, c110.y
                            mul r1.z, r1.z, -c105.y  // ::h<0>
                            rcp r1.w, r1.y
                            lrp r2.w, r1.z, r1.w, -c105.w  // ::part<0>
                            mul r3.w, r1.w, r1.w
                            mul r2.w, r2.w, r2.w
                            mul r2.w, r2.w, c69.w
                            mad r2.w, r3.w, c68.x, r2.w
                            add r2.w, r2.w, c69.z
                            rsq r2.w, r2.w
                            mul r7.x, r2.w, r6.y  // ::r<0>
                            mul r7.z, r1.w, r7.x  // ::b<0>

#line 1164
                            mad r1.w, r7.x, r1.w, -r7.x
                            mad r7.y, r1.z, r1.w, r7.x  // ::g<0>
                          else
                            add r1.z, r2.z, -c102.z
                            mad r1.w, r2.z, c110.x, c110.z
                            mul r1.w, r1.w, -c105.y  // ::h<0>
                            rcp r1.y, r1.y
                            lrp r2.w, r1.w, r1.y, -c105.w  // ::part<0>
                            mul r3.w, r1.y, r1.y

#line 1180
                            mul r4.xy, r3.w, c144.zxzw

#line 1171
                            mul r2.w, r2.w, r2.w
                            mad r2.w, r2.w, c69.z, r4.x
                            add r2.w, r2.w, c69.w
                            rsq r2.w, r2.w
                            mul r8.y, r2.w, r6.y  // ::g<0>
                            mul r8.z, r1.y, r8.y  // ::b<0>
                            mad r2.w, r8.y, r1.y, -r8.y
                            mad r8.x, r1.w, r2.w, r8.y  // ::r<0>

#line 1178
                            mad r1.w, r2.z, -c166.z, c166.y
                            mul r1.w, r1.w, -c105.y  // ::h<0>
                            lrp r2.w, r1.w, r1.y, -c105.w  // ::part<0>
                            mul r2.w, r2.w, r2.w
                            mad r2.w, r2.w, c68.x, r4.y
                            add r2.w, r2.w, c69.w
                            rsq r2.w, r2.w
                            mul r9.y, r2.w, r6.y  // ::g<0>
                            mul r9.x, r1.y, r9.y  // ::r<0>
                            mad r1.y, r9.y, r1.y, -r9.y
                            mad r9.z, r1.w, r1.y, r9.y  // ::b<0>
                            cmp r7.xyz, r1.z, r9, r8  // ::r<0>, ::g<0>, ::b<0>
                          endif
                        endif
                      endif
                    endif
                  else

#line 1188
                    if_lt r2.z, c63.x
                      mul r1.y, r2.z, c83.y  // ::h<0>
                      mul r1.z, r6.y, r6.y
                      mul r1.w, r2.z, r1.y
                      mad r1.w, r1.w, c123.x, c123.y
                      rcp r1.w, r1.w
                      mul r1.z, r1.w, r1.z
                      rsq r1.z, r1.z
                      rcp r7.x, r1.z  // ::r<0>
                      mul r7.y, r1.y, r7.x  // ::g<0>
                      mov r7.z, c118.z
                    else
                      if_lt r2.z, c106.w
                        mad r1.y, r2.z, -c85.x, c85.y
                        mul r1.z, r1.y, -c105.y  // ::h<0>

#line 1199
                        mul r1.w, r6.y, r6.y
                        mul r1.y, r1.y, r1.z
                        mad r1.y, r1.y, c123.z, c123.w
                        rcp r1.y, r1.y
                        mul r1.y, r1.y, r1.w
                        rsq r1.y, r1.y
                        rcp r7.y, r1.y  // ::g<0>
                        mul r7.x, r1.z, r7.y  // ::r<0>
                        mov r7.z, c118.z
                      else

#line 1222
                        mad r1.yz, r2.z, c110.x, c110.xwzw
                        mul r4.xy, r1.yzzw, -c105.y  // ::h<0,0>

#line 1207
                        mul r1.w, r6.y, r6.y

#line 1223
                        mul r1.yz, r1, r4.xxyw
                        mad r1.yz, r1, c168.xxyw, c168.xzww

#line 1207
                        rcp r1.y, r1.y
                        mul r1.y, r1.y, r1.w
                        rsq r1.y, r1.y
                        rcp r8.y, r1.y  // ::g<0>
                        mul r8.z, r4.x, r8.y  // ::b<0>

#line 1230
                        mad r4.xw, r2.z, -c137.x, c137.yyzz
                        mul r9.xy, r4.xwzw, -c105.y  // ::h<0,0>
                        mul r4.xw, r4, r9.xyzy
                        mad r4.xw, r4, c124.xyzy, c124.zyzw

#line 1215
                        rcp r1.y, r4.x
                        mul r1.y, r1.y, r1.w
                        rsq r1.y, r1.y
                        rcp r10.z, r1.y  // ::b<0>
                        mul r10.y, r9.x, r10.z  // ::g<0>

#line 1220
                        add r9.xzw, r2.z, c119.xyyz

#line 1223
                        rcp r1.y, r1.z
                        mul r1.y, r1.y, r1.w
                        rsq r1.y, r1.y
                        rcp r11.z, r1.y  // ::b<0>
                        mul r11.x, r4.y, r11.z  // ::r<0>

#line 1231
                        rcp r1.y, r4.w
                        mul r1.y, r1.y, r1.w
                        rsq r1.y, r1.y
                        rcp r12.x, r1.y  // ::r<0>
                        mul r12.z, r9.y, r12.x  // ::b<0>
                        mov r12.y, c118.z
                        mov r11.y, c118.z
                        cmp r1.yzw, r9.w, r12.xxyz, r11.xxyz  // ::r<0>, ::g<0>, ::b<0>
                        mov r10.x, c118.z
                        cmp r1.yzw, r9.z, r1, r10.xxyz  // ::r<0>, ::g<0>, ::b<0>
                        mov r8.x, c118.z
                        cmp r7.xyz, r9.x, r1.yzww, r8  // ::r<0>, ::g<0>, ::b<0>
                      endif
                    endif
                  endif

#line 1238
                  add r1.yzw, r7.xxyz, -c154.y
                  frc r4.xyw, r1.yzzw
                  add r1.yzw, r1, -r4.xxyw
                  mul_sat r5.xyz, r1.ywzw, c106.x  // ::result<0,2,1>

#line 2486
                  mov r0.y, -c105.w
                else
                  if_eq r1.x, -c65.z

#line 1309
                    mul r1.yz, r6.xxyw, c103.w  // ::white<0>, ::black<0>
                    add r1.z, r1.z, r1.y

#line 1317
                    if_ge r1.z, -c105.w

#line 1313
                      rcp r1.z, r1.z
                      mul r5.xyz, r1.z, r1.y  // ::gray<0,0,0>

#line 1328
                    else

#line 853
                      add r1.z, -r2.z, c83.x

#line 865
                      mul r1.w, r2.z, c83.y
                      cmp r1.z, r1.z, r1.w, c83.z  // ::SectorPosition<0>
                      frc r1.w, r1.z
                      add r1.w, -r1.w, r1.z  // ::SectorNumber<0>

#line 869
                      add r1.z, -r1.w, r1.z  // ::FractionalSector<0>

#line 873
                      add r7.x, -r1.z, -c105.w  // ::q<0>

#line 901
                      add r8, r1.w, c165

#line 907
                      add r1.z, r1.w, c132.x
                      cmp r9.x, -r1_abs.z, c105_abs.w, c105_abs.z  // ::r<0>

#line 912
                      mov r7.y, c118.z
                      cmp r9.yz, -r1_abs.z, r7.xyxw, c118.z  // ::g<0>, ::b<0>
                      mad r7.zw, r7.x, c121.xyyz, c121.x
                      cmp r4.xyw, -r8_abs.w, r7.zyzw, r9.xyzz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r8_abs.z, r7.yxzw, r4  // ::r<0>, ::g<0>, ::b<0>
                      mad r9.xyz, r7.wxyw, c121.xyxw, c121.zxzw
                      cmp r4.xyw, -r8_abs.y, r9.zxzy, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r8_abs.x, r7.xwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r1_abs.w, r9.xyzz, r4  // ::r<0>, ::g<0>, ::b<0>

#line 1320
                      mad r1.z, r6.x, -c166.x, c166.y
                      mad r1.z, r6.y, -c103.w, r1.z

#line 1327
                      mad r5.xyz, r4.xwyw, r1.z, r1.y  // ::rgb<0,2,1>
                    endif

#line 2487
                    mov r0.y, -c105.w
                  else
                    if_eq r1.x, c153.w

#line 470
                      mul r1.yzw, r6.x, c87.xxyz
                      mad r1.yzw, r2.z, c86.xxyz, r1
                      mad r5.xyz, r6.y, c88.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2488
                      mov r0.y, -c105.w
                    else
                      if_eq r1.x, -c46.x

#line 2190
                        add r1.yz, r6.xyxw, c118.w
                        mad r1.w, r1.z, -c137.w, r2.z
                        mad r1.w, r1.y, -c119.w, r1.w  // ::ycbcr<1>
                        mad r1.yz, r1, c94.xxyw, r2.z  // ::ycbcr<0,2>

#line 2170
                        add r1.yz, r1, -c150.xyww
                        add r1.w, r1.w, c118.w

#line 2125
                        mul r4.xy, r1.yzzw, c94.zwzw  // ::ypbpr<0>
                        add r5.x, r4.y, r4.x  // ::r<0>
                        mad r5.y, r1.w, c87.w, r4.x  // ::b<0>
                        mul r1.z, r5.x, c146.x
                        mad r1.y, r1.y, c86.w, -r1.z
                        mad r1.y, r5.y, -c146.z, r1.y
                        mul r5.z, r1.y, c88.w  // ::g<0>

#line 2489
                        mov r0.y, -c105.w
                      else
                        if_eq r1.x, -c46.y

#line 1397
                          add r1.y, r2.z, c153.w
                          mul r1.z, r1.y, c82.x  // ::fy<0>
                          mul r1.w, r6.y, c89.x
                          mad r2.w, r6.x, c89.y, r1.z  // ::fx<0>
                          mad r1.y, r1.y, c82.x, -r1.w  // ::fz<0>
                          mul r1.w, r2.w, r2.w
                          mul r3.w, r1.w, r2.w  // ::fx3<0>
                          mul r4.x, r1.y, r1.y
                          mul r4.y, r1.y, r4.x  // ::fz3<0>
                          mad r1.w, r2.w, -r1.w, c102.x
                          mad r2.w, r2.w, c89.z, c89.w
                          mul r2.w, r2.w, c111.x
                          cmp r1.w, r1.w, r2.w, r3.w  // ::xr<0>
                          add r2.w, -r2.z, c81.w
                          mul r3.w, r1.z, r1.z
                          mul r1.z, r1.z, r3.w
                          mul r3.w, r2.z, c111.x
                          cmp r1.z, r2.w, r3.w, r1.z  // ::yr<0>
                          mad r2.w, r1.y, -r4.x, c102.x
                          mad r1.y, r1.y, c89.z, c89.w
                          mul r1.y, r1.y, c111.x
                          cmp r1.y, r2.w, r1.y, r4.y  // ::zr<0>

#line 508
                          abs r2.w, c13.x

#line 512
                          rcp r3.w, c13.x
                          mul r7.x, r3.w, c12.x  // ::xyY_XYZ<0>
                          mov r4.x, c13.x  // ::WhiteY<0>
                          add r4.x, -r4.x, -c12.x
                          add r4.x, r4.x, -c105.w
                          mul r7.z, r3.w, r4.x  // ::xyY_XYZ<2>
                          mov r7.y, -c105.w
                          cmp r4.xyw, -r2.w, c115.z, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 1409
                          mul r5.xyz, r1.wyzw, r4.xwyw  // ::Lab_Lrgb<0,2,1>

#line 2490
                          mov r0.y, -c105.w
                        else
                          if_eq r1.x, -c66.x

#line 508
                            abs r1.y, c13.x

#line 512
                            rcp r1.z, c13.x
                            mul r7.x, r1.z, c12.x  // ::xyY_XYZ<0>
                            mov r4.x, c13.x  // ::WhiteY<0>
                            add r1.w, -r4.x, -c12.x
                            add r1.w, r1.w, -c105.w
                            mul r7.z, r1.z, r1.w  // ::xyY_XYZ<2>
                            mov r7.y, -c105.w
                            cmp r4.xyw, -r1.y, c115.z, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 552
                            add r1.zw, r4.xyxw, c90.xyxy

#line 555
                            cmp r1.w, -r1_abs.w, -c105_abs.w, -c105_abs.z
                            cmp r1.w, -r1.y, c118.z, r1.w
                            cmp r1.z, -r1_abs.z, r1.w, c118.z

#line 565
                            add r7.xy, r4.ywzw, r4
                            mul r7.xy, r7, c90.zwzw  // ::Ka<0,0>

#line 1453
                            mul r1.w, r2.z, c103.w
                            mul r1.w, r1.w, r1.w
                            mul r1.w, r4.y, r1.w  // ::Y<0>
                            rcp r2.w, r7.x
                            cmp r2.w, r1.z, r2.w, c91.x
                            mul r2.w, r2.w, r6.x
                            cmp r1.y, -r1.y, c114.z, c114.w
                            mul r1.y, r1.y, r1.w
                            rsq r3.w, r1.y
                            rcp r3.w, r3.w
                            mad r2.w, r2.w, r3.w, r1.y
                            mul r2.w, r4.x, r2.w  // ::X<0>
                            rcp r4.x, r7.y
                            cmp r1.z, r1.z, r4.x, c91.y
                            mul r1.z, r1.z, r6.y
                            mad r1.y, r1.z, r3.w, -r1.y
                            mul r1.y, -r4.w, r1.y  // ::Z<0>

#line 470
                            mul r4.xyw, r1.w, c24.xyzz
                            mad r4.xyw, r2.w, c23.xyzz, r4
                            mad r5.xyz, r1.y, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2491
                            mov r0.y, -c105.w
                          else
                            add r1.y, r1.x, c66.y
                            cmp r0.y, -r1_abs.y, c105_abs.w, c105_abs.z
                            mov r6.z, r2.z
                            cmp r5.xyz, -r1_abs.y, r6.zyxw, r5  // ::TLrgb<0,2,1>
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r0.y, -r0.y

#line 2521
          else

#line 2494
            if_eq r1.x, -c66.z

#line 1499
              add r0.y, r2.z, -c70.w  // ::Jz<0>
              mad r1.y, r0.y, c91.z, c91.w
              rcp r1.y, r1.y

#line 1504
              mul r1.zw, r6.x, c136.xyxy
              mad r2.w, r0.y, r1.y, r1.z
              mad r2.w, r6.y, c136.z, r2.w  // PerceptualQuantizerInverse::X<0>

#line 491
              pow r3.w, r2.w, c136.w  // ::XX<0>
              add r2.w, -r3.w, c59.z
              mad r3.w, r3.w, c92.x, c92.y
              rcp r3.w, r3.w
              mul r2.w, r2.w, r3.w
              pow r3.w, r2.w, c92.z

#line 1504
              mad r1.yz, r0.y, r1.y, -r1.xzww
              mad r1.yz, r6.y, -c135.xxyw, r1  // PerceptualQuantizerInverse::X<0,0>

#line 491
              pow r0.y, r1.y, c136.w  // ::XX<0>
              add r1.y, -r0.y, c59.z
              mad r0.y, r0.y, c92.x, c92.y
              rcp r0.y, r0.y
              mul r0.y, r0.y, r1.y
              pow r1.y, r0.y, c92.z
              pow r0.y, r1.z, c136.w  // ::XX<0>
              add r1.z, -r0.y, c59.z
              mad r0.y, r0.y, c92.x, c92.y
              rcp r0.y, r0.y
              mul r0.y, r0.y, r1.z
              pow r1.z, r0.y, c92.z

#line 1508
              mul r4.xyw, r1.y, c134.xyzz
              mad r1.yw, r3.w, c135.xzzw, -r4.xxzw
              mad r0.y, r3.w, c92.w, r4.y
              mad r0.y, r1.z, -c134.w, r0.y  // ::Y<0>
              mad r1.yz, r1.z, c133.xxyw, r1.xyww  // ::X<0>, ::Z<0>
              mul r0.y, r0.y, c93.z  // ::xyz<1>
              mul r1.yz, r1, c93.z  // ::xyz<0,2>

#line 470
              mul r4.xyw, r0.y, c24.xyzz
              mad r4.xyw, r1.y, c23.xyzz, r4
              mad r5.xyz, r1.z, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2494
              mov r0.y, -c105.w
            else
              if_eq r1.x, -c66.w

#line 508
                abs r1.y, c13.x

#line 512
                rcp r1.z, c13.x
                mul r7.x, r1.z, c12.x  // ::xyY_XYZ<0>
                mov r4.x, c13.x  // ::WhiteY<0>
                add r1.w, -r4.x, -c12.x
                add r1.w, r1.w, -c105.w
                mul r7.z, r1.z, r1.w  // ::xyY_XYZ<2>
                mov r7.y, -c105.w
                cmp r1.yzw, -r1.y, c115.z, r7.xxyz  // ::xyY_XYZ<0,1,2>

#line 470
                mul r4.xyw, r6.x, c27.xyzz
                mad r4.xyw, r2.z, c26.xyzz, r4
                mad r4.xyw, r6.y, c28.xyzz, r4  // ::x<0>, ::y<0>, ::z<0>

#line 500
                mul r7.xyz, r4.xyww, r4.xyww
                mul r4.xyw, r4, r7.xyzz  // ::Pow3<0,0,0>

#line 470
                mul r7.xyz, r4.y, c33
                mad r7.xyz, r4.x, c32, r7
                mad r4.xyw, r4.w, c34.xyzz, r7.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 1557
                mul r1.yzw, r1, r4.xxyw  // ::xyz<0,1,2>

#line 470
                mul r4.xyw, r1.z, c24.xyzz
                mad r4.xyw, r1.y, c23.xyzz, r4
                mad r5.xyz, r1.w, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2495
                mov r0.y, -c105.w
              else
                if_eq r1.x, -c35.x

#line 589
                  mad r1.y, r6.y, c166.z, c166.w
                  frc r1.y, r1.y
                  mad r1.y, r1.y, c79.x, c79.y
                  sincos r7.xy, r1.y
                  mul r1.yz, r6.x, r7.xxyw  // ::a<0>, ::b<0>

#line 1397
                  add r1.w, r2.z, c153.w
                  mul r2.w, r1.w, c82.x  // ::fy<0>
                  mul r1.z, r1.z, c89.x
                  mad r1.y, r1.y, c89.y, r2.w  // ::fx<0>
                  mad r1.z, r1.w, c82.x, -r1.z  // ::fz<0>
                  mul r1.w, r1.y, r1.y
                  mul r3.w, r1.w, r1.y  // ::fx3<0>
                  mul r4.x, r1.z, r1.z
                  mul r4.y, r1.z, r4.x  // ::fz3<0>
                  mad r1.w, r1.y, -r1.w, c102.x
                  mad r1.y, r1.y, c89.z, c89.w
                  mul r1.y, r1.y, c111.x
                  cmp r1.y, r1.w, r1.y, r3.w  // ::xr<0>
                  add r1.w, -r2.z, c81.w
                  mul r3.w, r2.w, r2.w
                  mul r2.w, r2.w, r3.w
                  mul r3.w, r2.z, c111.x
                  cmp r1.w, r1.w, r3.w, r2.w  // ::yr<0>
                  mad r2.w, r1.z, -r4.x, c102.x
                  mad r1.z, r1.z, c89.z, c89.w
                  mul r1.z, r1.z, c111.x
                  cmp r1.z, r2.w, r1.z, r4.y  // ::zr<0>

#line 508
                  abs r2.w, c13.x

#line 512
                  rcp r3.w, c13.x
                  mul r7.x, r3.w, c12.x  // ::xyY_XYZ<0>
                  mov r4.x, c13.x  // ::WhiteY<0>
                  add r4.x, -r4.x, -c12.x
                  add r4.x, r4.x, -c105.w
                  mul r7.z, r3.w, r4.x  // ::xyY_XYZ<2>
                  mov r7.y, -c105.w
                  cmp r4.xyw, -r2.w, c115.z, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 1409
                  mul r5.xyz, r1.yzww, r4.xwyw  // ::Lab_Lrgb<0,2,1>

#line 2496
                  mov r0.y, -c105.w
                else
                  if_eq r1.x, -c35.y

#line 589
                    mad r1.y, r6.y, c166.z, c166.w
                    frc r1.y, r1.y
                    mad r1.y, r1.y, c79.x, c79.y
                    sincos r7.xy, r1.y
                    mul r1.yz, r6.x, r7.xxyw  // ::a<0>, ::b<0>

#line 508
                    abs r1.w, c13.x

#line 512
                    rcp r2.w, c13.x
                    mul r7.x, r2.w, c12.x  // ::xyY_XYZ<0>
                    mov r4.x, c13.x  // ::WhiteY<0>
                    add r3.w, -r4.x, -c12.x
                    add r3.w, r3.w, -c105.w
                    mul r7.z, r2.w, r3.w  // ::xyY_XYZ<2>
                    mov r7.y, -c105.w
                    cmp r4.xyw, -r1.w, c115.z, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 552
                    add r7.xy, r4.xwzw, c90

#line 555
                    cmp r2.w, -r7_abs.y, -c105_abs.w, -c105_abs.z
                    cmp r2.w, -r1.w, c118.z, r2.w
                    cmp r2.w, -r7_abs.x, r2.w, c118.z

#line 565
                    add r7.xy, r4.ywzw, r4
                    mul r7.xy, r7, c90.zwzw  // ::Ka<0,0>

#line 1453
                    mul r3.w, r2.z, c103.w
                    mul r3.w, r3.w, r3.w
                    mul r3.w, r4.y, r3.w  // ::Y<0>
                    rcp r4.y, r7.x
                    cmp r4.y, r2.w, r4.y, c91.x
                    mul r1.y, r1.y, r4.y
                    cmp r1.w, -r1.w, c114.z, c114.w
                    mul r1.w, r1.w, r3.w
                    rsq r4.y, r1.w
                    rcp r4.y, r4.y
                    mad r1.y, r1.y, r4.y, r1.w
                    mul r1.y, r4.x, r1.y  // ::X<0>
                    rcp r4.x, r7.y
                    cmp r2.w, r2.w, r4.x, c91.y
                    mul r1.z, r1.z, r2.w
                    mad r1.z, r1.z, r4.y, -r1.w
                    mul r1.z, -r4.w, r1.z  // ::Z<0>

#line 470
                    mul r4.xyw, r3.w, c24.xyzz
                    mad r4.xyw, r1.y, c23.xyzz, r4
                    mad r5.xyz, r1.z, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2497
                    mov r0.y, -c105.w
                  else
                    if_eq r1.x, -c35.z

#line 589
                      mad r1.y, r6.y, c166.z, c166.w
                      frc r1.y, r1.y
                      mad r1.y, r1.y, c79.x, c79.y
                      sincos r7.xy, r1.y
                      mul r7, r6.x, r7.xyxy  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1499
                      add r1.y, r2.z, -c70.w  // ::Jz<0>
                      mad r1.z, r1.y, c91.z, c91.w
                      rcp r1.z, r1.z

#line 1504
                      mul r4.xy, r7.xzzw, c136
                      mad r1.w, r1.y, r1.z, r4.x
                      mad r1.w, r7.y, c136.z, r1.w  // PerceptualQuantizerInverse::X<0>

#line 491
                      pow r2.w, r1.w, c136.w  // ::XX<0>
                      add r1.w, -r2.w, c59.z
                      mad r2.w, r2.w, c92.x, c92.y
                      rcp r2.w, r2.w
                      mul r1.w, r1.w, r2.w
                      pow r2.w, r1.w, c92.z

#line 1504
                      mad r1.yz, r1.y, r1.z, -r4.xxyw
                      mad r1.yz, r7.xyww, -c135.xxyw, r1  // PerceptualQuantizerInverse::X<0,0>

#line 491
                      pow r3.w, r1.y, c136.w  // ::XX<0>
                      add r1.y, -r3.w, c59.z
                      mad r1.w, r3.w, c92.x, c92.y
                      rcp r1.w, r1.w
                      mul r1.y, r1.w, r1.y
                      pow r3.w, r1.y, c92.z
                      pow r4.x, r1.z, c136.w  // ::XX<0>
                      add r1.y, -r4.x, c59.z
                      mad r1.z, r4.x, c92.x, c92.y
                      rcp r1.z, r1.z
                      mul r1.y, r1.z, r1.y
                      pow r4.x, r1.y, c92.z

#line 1508
                      mul r1.yzw, r3.w, c134.xxyz
                      mad r1.yw, r2.w, c135.xzzw, -r1
                      mad r1.z, r2.w, c92.w, r1.z
                      mad r1.z, r4.x, -c134.w, r1.z  // ::Y<0>
                      mad r1.yw, r4.x, c133.xxzy, r1  // ::X<0>, ::Z<0>
                      mul r1.yzw, r1, c93.z  // ::xyz<0,1,2>

#line 470
                      mul r4.xyw, r1.z, c24.xyzz
                      mad r4.xyw, r1.y, c23.xyzz, r4
                      mad r5.xyz, r1.w, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2498
                      mov r0.y, -c105.w
                    else
                      if_eq r1.x, -c35.w

#line 589
                        mad r1.y, r6.y, c166.z, c166.w
                        frc r1.y, r1.y
                        mad r1.y, r1.y, c79.x, c79.y
                        sincos r7.xy, r1.y
                        mul r1.yz, r6.x, r7.xxyw  // ::a<0>, ::b<0>

#line 508
                        abs r1.w, c13.x

#line 512
                        rcp r2.w, c13.x
                        mul r7.x, r2.w, c12.x  // ::xyY_XYZ<0>
                        mov r4.x, c13.x  // ::WhiteY<0>
                        add r3.w, -r4.x, -c12.x
                        add r3.w, r3.w, -c105.w
                        mul r7.z, r2.w, r3.w  // ::xyY_XYZ<2>
                        mov r7.y, -c105.w
                        cmp r4.xyw, -r1.w, c115.z, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 571
                        cmp r1.w, -r1.w, c129.y, c129.w
                        add r1.w, r1.w, r4.x
                        mul r2.w, r4.x, -c58.z
                        mad r1.w, r4.w, -c58.x, r1.w
                        rcp r1.w, r1.w
                        mul r2.w, r1.w, r2.w  // ::ComputeKu<0>

#line 576
                        mul r1.w, r4.y, r1.w
                        mul r1.w, r1.w, -c84.x  // ::ComputeKv<0>

#line 1611
                        add r3.w, -r2.z, c81.w
                        add r4.x, r2.z, c153.w
                        mul r4.x, r4.x, c82.x
                        mul r4.y, r4.x, r4.x
                        mul r4.x, r4.y, r4.x

#line 1616
                        mul r7, r2.z, c139

#line 1611
                        cmp r3.w, r3.w, r7.x, r4.x  // ::Y<0>
                        mad r1.y, r7.z, r2.w, r1.y
                        rcp r1.y, r1.y
                        mad r1.y, r7.y, r1.y, c105.w
                        mul r1.y, r1.y, c53.z  // ::a<0>
                        mul r2.w, r3.w, c132.x  // ::b<0>
                        mad r1.z, r7.z, r1.w, r1.z
                        rcp r1.z, r1.z
                        mad r1.z, r7.w, r1.z, c132.x
                        mad r1.z, r3.w, r1.z, -r2.w
                        rcp r1.w, r1.y
                        mul r1.z, r1.w, r1.z  // ::X<0>
                        mad r1.y, r1.z, r1.y, r2.w  // ::Z<0>

#line 1622
                        max r2.w, r1.z, c118.z  // ::X<0>

#line 1625
                        max r1.z, r3.w, c118.z  // ::Y<0>

#line 1628
                        max r3.w, r1.y, c118.z  // ::Z<0>

#line 470
                        mul r1.yzw, r1.z, c24.xxyz
                        mad r1.yzw, r2.w, c23.xxyz, r1
                        mad r5.xyz, r3.w, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2499
                        mov r0.y, -c105.w
                      else
                        if_eq r1.x, -c36.x

#line 589
                          mad r1.y, r6.y, c166.z, c166.w
                          frc r1.y, r1.y
                          mad r1.y, r1.y, c79.x, c79.y
                          sincos r7.xy, r1.y
                          mul r2.xy, r6.x, r7  // ::a<0>, ::b<0>

#line 1974
                          add r1.yzw, r2.xxyz, c155.xwwx
                          mul r2.xyw, r1.yzzw, c133.zzzw  // ::result<0,1,2>

#line 512
                          mul r1.y, r2.w, r2.x
                          rcp r1.w, r2.y
                          mul r7.x, r1.w, r1.y  // ::xyY_XYZ<0>
                          mad r1.y, r1.z, -c89.x, -r2.x
                          add r1.y, r1.y, -c105.w
                          mul r1.y, r2.w, r1.y
                          mul r7.z, r1.w, r1.y  // ::xyY_XYZ<2>
                          mov r7.y, r2.w
                          cmp r1.yzw, -r2_abs.y, c115.z, r7.xxyz  // ::xyY_XYZ<0,1,2>

#line 470
                          mul r2.xyw, r1.z, c24.xyzz
                          mad r2.xyw, r1.y, c23.xyzz, r2
                          mad r5.xyz, r1.w, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2500
                          mov r0.y, -c105.w
                        else
                          if_eq r1.x, -c36.y

#line 470
                            mul r1.yzw, r6.x, c15.xxyz
                            mad r1.yzw, r2.z, c14.xxyz, r1
                            mad r1.yzw, r6.y, c16.xxyz, r1  // ::x<0>, ::y<0>, ::z<0>
                            mul r2.xyw, r1.z, c24.xyzz
                            mad r2.xyw, r1.y, c23.xyzz, r2
                            mad r5.xyz, r1.w, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2501
                            mov r0.y, -c105.w
                          else
                            if_eq r1.x, -c36.z

#line 508
                              abs r1.y, c13.x

#line 512
                              rcp r1.z, c13.x
                              mul r7.x, r1.z, c12.x  // ::xyY_XYZ<0>
                              mov r2.x, c13.x  // ::WhiteY<0>
                              add r1.w, -r2.x, -c12.x
                              add r1.w, r1.w, -c105.w
                              mul r7.z, r1.z, r1.w  // ::xyY_XYZ<2>
                              mov r7.y, -c105.w
                              cmp r2.xyw, -r1.y, c115.z, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 571
                              cmp r1.y, -r1.y, c129.y, c129.w
                              add r1.y, r1.y, r2.x
                              mul r1.z, r2.x, -c58.z
                              mad r1.y, r2.w, -c58.x, r1.y
                              rcp r1.y, r1.y
                              mul r1.z, r1.y, r1.z  // ::ComputeKu<0>

#line 576
                              mul r1.y, r2.y, r1.y
                              mul r1.y, r1.y, -c84.x  // ::ComputeKv<0>

#line 1611
                              add r1.w, -r2.z, c81.w
                              add r2.x, r2.z, c153.w
                              mul r2.x, r2.x, c82.x
                              mul r2.y, r2.x, r2.x
                              mul r2.x, r2.y, r2.x

#line 1616
                              mul r7, r2.z, c139

#line 1611
                              cmp r1.w, r1.w, r7.x, r2.x  // ::Y<0>
                              mad r1.z, r7.z, r1.z, r6.x
                              rcp r1.z, r1.z
                              mad r1.z, r7.y, r1.z, c105.w
                              mul r1.z, r1.z, c53.z  // ::a<0>
                              mul r2.x, r1.w, c132.x  // ::b<0>
                              mad r1.y, r7.z, r1.y, r6.y
                              rcp r1.y, r1.y
                              mad r1.y, r7.w, r1.y, c132.x
                              mad r1.y, r1.w, r1.y, -r2.x
                              rcp r2.y, r1.z
                              mul r1.y, r1.y, r2.y  // ::X<0>
                              mad r1.z, r1.y, r1.z, r2.x  // ::Z<0>

#line 1622
                              max r2.x, r1.y, c118.z  // ::X<0>

#line 1625
                              max r2.y, r1.w, c118.z  // ::Y<0>

#line 1628
                              max r2.w, r1.z, c118.z  // ::Z<0>

#line 470
                              mul r1.yzw, r2.y, c24.xxyz
                              mad r1.yzw, r2.x, c23.xxyz, r1
                              mad r5.xyz, r2.w, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2502
                              mov r0.y, -c105.w
                            else
                              add r1.y, r1.x, c36.w
                              cmp r0.y, -r1_abs.y, c105_abs.w, c105_abs.z

#line 512
                              mul r1.z, r2.z, r6.y
                              rcp r1.w, r6.x
                              mul r7.x, r1.w, r1.z  // ::xyY_XYZ<0>
                              add r1.z, -r2.z, -r6.x
                              add r1.z, r1.z, -c105.w
                              mul r1.z, r6.y, r1.z
                              mul r7.z, r1.w, r1.z  // ::xyY_XYZ<2>
                              mov r7.y, r6.y
                              cmp r2.xyw, -r6_abs.x, c115.z, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 2503
                              cmp r5.xyz, -r1_abs.y, r2.xwyw, r5  // ::TLrgb<0,2,1>
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r0.y, -r0.y

#line 2521
            else

#line 2505
              if_eq r1.x, -c37.x

#line 1353
                mad r0.y, r2.z, c126.x, c126.y
                frc r0.y, r0.y
                mad r0.y, r0.y, c79.x, c79.y
                sincos r7.xy, r0.y
                rcp r0.y, r7.x
                mul r0.y, r0.y, r7.y  // ::x<0>
                mul r1.y, r0.y, r0.y  // ::x<0>
                mul r1.z, r6.x, r6.x
                mul r1.z, r1.z, -c132.x
                rcp r1.y, r1.y
                add r1.y, r1.y, -c105.w
                mul r1.y, r1.y, -c84.x
                rcp r1.y, r1.y
                mul r1.y, r1.y, r1.z
                rsq r1.y, r1.y
                rcp r1.y, r1.y  // ::r<0>
                mad r0.y, r0.y, r0.y, -c105.w
                mul r0.y, r0.y, -c84.x
                rcp r0.y, r0.y
                mul r0.y, r0.y, r1.z
                rsq r0.y, r0.y
                rcp r0.y, r0.y  // ::g<0>
                mul r1.z, r0.y, c126.z
                mad r1.z, r1.y, c126.w, r1.z
                add r1.z, r1.z, c68.x
                rcp r1.z, r1.z
                mul r1.z, r1.z, r6.y  // ::k<0>
                add r1.w, -r1.y, -c105.w
                add r1.w, -r0.y, r1.w
                mul r5.z, r0.y, r1.z  // ::G<0>
                mul r5.xy, r1.ywzw, r1.z  // ::R<0>, ::B<0>

#line 2505
                mov r0.y, -c105.w
              else
                if_eq r1.x, -c37.y

#line 1899
                  mul r1.y, r2.z, c112.x  // XYZ_Lrgb::input<0>
                  mad r1.z, r6.x, c58.x, r1.y
                  mad r1.z, r6.y, c162.w, r1.z  // XYZ_Lrgb::input<2>

#line 470
                  mul r2.xyw, r6.x, c24.xyzz
                  mad r2.xyw, r1.y, c23.xyzz, r2
                  mad r5.xyz, r1.z, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2506
                  mov r0.y, -c105.w
                else
                  if_eq r1.x, -c37.z

#line 1919
                    if_eq r0.x, -r4.z

#line 1932
                      mov r5.xyz, c118.z  // ::UVW_Lrgb<0,2,1>
                    else

#line 508
                      abs r0.x, c13.x

#line 512
                      rcp r1.y, c13.x
                      mul r4.x, r1.y, c12.x  // ::xyY_XYZ<0>
                      mov r2.x, c13.x  // ::WhiteY<0>
                      add r1.z, -r2.x, -c12.x
                      add r1.z, r1.z, -c105.w
                      mul r4.z, r1.y, r1.z  // ::xyY_XYZ<2>
                      mov r4.y, -c105.w
                      cmp r1.yzw, -r0.x, c115.z, r4.xxyz  // ::xyY_XYZ<0,1,2>

#line 1920
                      cmp r0.x, -r0.x, c129.y, c129.w
                      add r0.x, r0.x, r1.y
                      mul r1.y, r1.y, -c58.z
                      mad r0.x, r1.w, -c58.x, r0.x
                      rcp r0.x, r0.x
                      mul r1.y, r0.x, r1.y  // ::uN<0>
                      mul r0.x, r1.z, r0.x
                      mul r0.x, r0.x, -c105.y  // ::vN<0>
                      add r1.z, r6.y, -c46.x
                      mul r1.z, r1.z, c112.y
                      mul r1.w, r1.z, r1.z
                      mul r1.z, r1.w, r1.z  // ::y<0>
                      mul r1.w, r6.y, -c65.x
                      rcp r2.x, r1.w
                      mad r1.y, r2.z, r2.x, r1.y
                      cmp r1.y, -r1_abs.w, c118.z, r1.y  // ::_u<0>
                      mad r0.x, r6.x, r2.x, r0.x
                      cmp r0.x, -r1_abs.w, c118.z, r0.x  // ::_v<0>
                      mul r1.w, r1.y, r1.z
                      rcp r0.x, r0.x
                      mul r1.w, r0.x, r1.w  // ::x<0>
                      add r2.x, r0.x, r0.x
                      mul r0.x, r1.y, r0.x
                      mad r0.x, r0.x, c154.y, r2.x
                      add r0.x, r0.x, c132.x
                      mul r0.x, r0.x, r1.z  // ::z<0>

#line 1931
                      mul r1.yz, r1.xwzw, c103.w  // ::xyz<0,1>
                      mul r0.x, r0.x, c103.w  // ::xyz<2>

#line 470
                      mul r2.xyw, r1.z, c24.xyzz
                      mad r1.yzw, r1.y, c23.xxyz, r2.xxyw
                      mad r5.xyz, r0.x, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 1932
                    endif

#line 2507
                    mov r0.y, -c105.w
                  else
                    if_eq r1.x, -c37.w

#line 2150
                      add r0.x, r2.z, -c153.w
                      mul r1.y, r0.x, c86.w  // ::ypbpr<0>
                      add r1.zw, r6.xyxy, c118.w

#line 2126
                      mad r5.xy, r1.wzzw, c112.zwzw, r1.y  // ::r<0>, ::b<0>
                      mul r1.y, r5.x, c146.x
                      mad r0.x, r0.x, c86.w, -r1.y
                      mad r0.x, r5.y, -c146.z, r0.x
                      mul r5.z, r0.x, c88.w  // ::g<0>

#line 2508
                      mov r0.y, -c105.w
                    else
                      if_eq r1.x, -c47.x

#line 512
                        mul r0.x, r2.z, r6.y
                        rcp r1.y, r6.x
                        mul r4.x, r0.x, r1.y  // ::xyY_XYZ<0>
                        add r0.x, -r2.z, -r6.x
                        add r0.x, r0.x, -c105.w
                        mul r0.x, r6.y, r0.x
                        mul r4.z, r1.y, r0.x  // ::xyY_XYZ<2>
                        mov r4.y, r6.y
                        cmp r1.yzw, -r6_abs.x, c115.z, r4.xxyz  // ::xyY_XYZ<0,1,2>

#line 470
                        mul r2.xyw, r1.z, c24.xyzz
                        mad r2.xyw, r1.y, c23.xyzz, r2
                        mad r5.xyz, r1.w, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2509
                        mov r0.y, -c105.w
                      else
                        if_eq r1.x, -c47.y

#line 508
                          abs r0.x, c13.x

#line 512
                          rcp r1.y, c13.x
                          mul r4.x, r1.y, c12.x  // ::xyY_XYZ<0>
                          mov r2.x, c13.x  // ::WhiteY<0>
                          add r1.z, -r2.x, -c12.x
                          add r1.z, r1.z, -c105.w
                          mul r4.z, r1.y, r1.z  // ::xyY_XYZ<2>

#line 1991
                          mov r4.y, -c105.w
                          mul r1.yzw, r4.xxyz, c155.w
                          cmp r1.yzw, -r0.x, c130.x, r1  // ::white<0,1,2>

#line 1995
                          add r0.x, r1.z, r1.y
                          add r0.x, r1.w, r0.x
                          rcp r1.y, r0.x
                          mul r1.y, r1.y, r1.z  // ::x0<0>
                          mul r0.x, r0.x, c103.w  // ::ew<0>

#line 2000
                          mul r1.z, r6.y, r6.y
                          mul r4.y, r1.z, c103.w  // ::Y<0>

#line 2004
                          mul r2.xy, c38.yxzw, c38.xzzw
                          mul r1.w, r1.y, r1.z
                          mul r2.xy, r6.x, r2
                          mul r2.xw, r2.xyzy, c155.w
                          mad r1.w, r1.w, r0.x, r2.x
                          mul r1.y, r1.y, r2.w
                          mad r1.y, r1.y, -r0.x, r1.w
                          mul r1.w, r6.x, c155.w
                          mul r7.xy, r1.w, c38.xzzw
                          mul r2.x, r0.x, r2.w
                          mad r1.w, r1.w, c38.x, -r2.x
                          mad r1.w, r1.z, r0.x, r1.w
                          rcp r1.w, r1.w
                          mul r1.y, r1.w, r1.y  // ::x<0>
                          mad r1.z, r7.y, c38.x, r1.z
                          mad r1.z, r2.y, -c155.w, r1.z
                          mul r1.w, r0.x, r4.y
                          mad r1.w, r1.w, c155.w, r7.x
                          mad r0.x, r2.w, -r0.x, r1.w
                          rcp r0.x, r0.x
                          mul r1.w, r0.x, r1.z  // ::y<0>

#line 512
                          mul r2.x, r4.y, r1.y
                          rcp r2.y, r1.w
                          mul r4.x, r2.y, r2.x  // ::xyY_XYZ<0>
                          mad r0.x, r1.z, -r0.x, -r1.y
                          add r0.x, r0.x, -c105.w
                          mul r0.x, r4.y, r0.x
                          mul r4.z, r2.y, r0.x  // ::xyY_XYZ<2>
                          cmp r1.yzw, -r1_abs.w, c115.z, r4.xxyz  // ::xyY_XYZ<0,1,2>

#line 470
                          mul r2.xyw, r1.z, c24.xyzz
                          mad r2.xyw, r1.y, c23.xyzz, r2
                          mad r5.xyz, r1.w, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2510
                          mov r0.y, -c105.w
                        else

#line 2514
                          add r4, r1.x, c169

#line 470
                          mul r1.yzw, r6.x, c24.xxyz
                          mad r1.yzw, r2.z, c23.xxyz, r1
                          mad r1.yzw, r6.y, c25.xxyz, r1  // ::x<0>, ::y<0>, ::z<0>

#line 2170
                          add r0.x, r2.z, -c153.w
                          mul r2.x, r0.x, c86.w  // ::ypbpr<0>
                          add r2.yw, r6.xxzy, c118.w

#line 2126
                          mad r7.xz, r2.wyyw, c112.zyww, r2.x  // ::r<0>, ::b<0>
                          mul r2.x, r7.x, c146.x
                          mad r0.x, r0.x, c86.w, -r2.x
                          mad r0.x, r7.z, -c146.z, r0.x
                          mul r7.y, r0.x, c88.w  // ::g<0>

#line 2026
                          add r0.x, r2.z, -r6.x  // ::c<0>
                          add r8.x, r6.y, r0.x  // ::YCoCg_Lrgb<0>
                          add r8.y, r2.z, r6.x  // ::YCoCg_Lrgb<1>
                          add r8.z, -r6.y, r0.x  // ::YCoCg_Lrgb<2>

#line 2514
                          cmp r0.x, -r4_abs.w, c105_abs.w, c105_abs.z

#line 2042
                          mad r2.xy, r6.x, c130.yzzw, r2.z
                          mad r2.w, r6.x, -c130.w, r2.z
                          mad r9.y, r6.y, c127.x, r2.w  // ::g<0>
                          mad r9.xz, r6.y, -c127.yyzw, r2.xyyw  // ::r<0>, ::b<0>

#line 2514
                          cmp r2.xyw, -r4_abs.w, r9.xyzz, r5.xzzy  // ::TLrgb<0,1,2>
                          cmp r2.xyw, -r4_abs.z, r8.xyzz, r2  // ::TLrgb<0,1,2>
                          cmp r0.x, -r4_abs.z, -c105.w, r0.x
                          cmp r2.xyw, -r4_abs.y, r7.xyzz, r2  // ::TLrgb<0,1,2>
                          cmp r0.x, -r4_abs.y, -c105.w, r0.x
                          cmp r5.xyz, -r4_abs.x, r1.ywzw, r2.xwyw  // ::TLrgb<0,2,1>
                          cmp r0.y, -r4_abs.x, -c105.w, r0.x
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r0.y, -r0.y

#line 2521
              else

#line 2516
                if_eq r1.x, -c45.x

#line 2071
                  mad r1.yzw, r6.x, c95.xxyz, r2.z
                  mad r1.yzw, r6.y, c113.xxxy, r1  // ::r<0>, ::g<0>, ::b<0>

#line 2516
                  mov r0.x, -c105.w
                else

#line 2519
                  add r2.xyw, r1.x, c45.yzzw

#line 2126
                  mad r4, r6.x, c96.xywz, r2.z  // ::b<0>

#line 2095
                  mad r7.xyz, r6.y, c97, r4.xyww  // ::r<0>, ::g<0>, ::b<0>

#line 2099
                  mov_sat r8.xyz, r7
                  cmp r7.xyz, r7, r8, c118.z  // ::r<0>, ::g<0>, ::b<0>

#line 2125
                  mad r4.x, r6.y, c127.w, r2.z  // ::r<0>
                  mad r0.y, r4.x, -c146.x, r2.z
                  mad r0.y, r4.z, -c146.z, r0.y
                  mul r4.y, r0.y, c88.w  // ::g<0>

#line 2519
                  cmp r0.y, -r2_abs.w, c105_abs.w, c105_abs.z

#line 2220
                  mad r8.xyz, r6.yxxw, c98, r2.z  // ::r<0>, ::b<0>

#line 2217
                  mad r1.x, r6.y, c95.w, r8.y  // ::g<0>

#line 2226
                  mov_sat r8.yw, r8.xxzz
                  mov_sat r3.w, r1.x
                  cmp r9.y, r1.x, r3.w, c118.z  // ::g<0>
                  cmp r9.xz, r8, r8.yyww, c118.z  // ::r<0>, ::b<0>

#line 2519
                  cmp r8.xyz, -r2_abs.w, r9, r5.xzyw  // ::TLrgb<0,1,2>
                  cmp r4.xyz, -r2_abs.y, r4, r8  // ::TLrgb<0,1,2>
                  cmp r0.y, -r2_abs.y, -c105.w, r0.y
                  cmp r1.yzw, -r2_abs.x, r7.xxyz, r4.xxyz  // ::TLrgb<0,1,2>
                  cmp r0.x, -r2_abs.x, -c105.w, r0.y
                endif
                mov r6.w, r2.z
                cmp r5.xyz, -r0.x, r6.wyxw, r1.ywzw  // ::TLrgb<0,2,1>
              endif
            endif
          endif
        endif

#line 2339
        rcp r0.x, c11.x
        log r0.y, r5.x
        mul r1.x, r0.y, r0.x
        exp r3.x, r1.x  // ::V<0>

#line 2344
        if_eq c10.x, r0.z

#line 2404
        else

#line 2344
          mov r1.w, c105.w
          add r1.x, r1.w, c10.x

#line 2352
          add r1.y, -r5.x, -c105.w
          rsq r1.z, r5.x
          rcp r1.z, r1.z
          mul r1.z, r1.z, -c154.y  // ::Transfer<0>
          cmp r1.y, r1.y, -c105_abs.w, -c105_abs.z
          cmp r1.y, r5.x, r1.y, c118.z
          add r2.x, r5.x, c101.y
          log r2.x, r2.x
          mad r2.x, r2.x, c101.z, c101.w  // ::Transfer<0>
          cmp r1.y, r1.y, r2.x, r1.z  // ::Transfer<0>
          cmp r3.x, -r1_abs.x, r1.y, r3.x  // ::Transfer<0>

#line 2359
          if_eq c10.x, -r1.w

#line 2404
          else

#line 2359
            add r1.x, -r0.w, c10.x

#line 2362
            add r1.y, -r5.x, c102.x
            mul r1.z, r5.x, c113.z
            cmp r1.y, r1.y, r1.z, -c105.w  // ::V<0>
            cmp r3.x, -r1_abs.x, r1.y, r3.x  // ::Transfer<0>

#line 2367
            if_eq c10.x, r0.w

#line 2404
            else

#line 2367
              mov r1.x, c10.x  // ::Companding<0>
              add r1.y, r1.x, c58.x

#line 2382
              if_eq r1.x, -c58.x

#line 2376
                mul r1.z, r0.y, c113.w
                exp r1.z, r1.z
                add r1.w, r1.z, -c59.z
                max r2.x, r1.w, c118.z  // ::a<0>
                mad r1.z, r1.z, -c59.y, c59.x  // ::b<0>
                rcp r1.z, r1.z
                mul r1.z, r1.z, r2.x
                pow r2.x, r1.z, c92.z
                mul r1.z, r2.x, c97.w  // ::Transfer<0>
                cmp r3.x, -r1_abs.y, r1.z, r3.x  // ::Transfer<0>

#line 2404
              else

#line 2398
                add r1.xyz, r1.x, c152

#line 2393
                add r2.xy, r5.x, c120

#line 2401
                mul r2.zw, r5.x, c120
                mul r4.xy, r0.y, c100

#line 2385
                exp r0.y, r4.x

#line 2393
                mad r4.xz, r0.y, c104.xyyw, c104.zyww
                cmp r2.xy, r2, r4.xzzw, r2.z  // ::V<0,0>

#line 2401
                add r0.y, -r5.x, c98.w
                exp r1.w, r4.y
                mad r1.w, r1.w, c100.z, c100.w
                cmp r0.y, r0.y, r2.w, r1.w  // ::V<0>

#line 2404
                cmp r0.y, -r1_abs.z, r0.y, r5.x  // ::Transfer<0>
                cmp r0.y, -r1_abs.y, r2.y, r0.y  // ::Transfer<0>
                cmp r3.x, -r1_abs.x, r2.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2339
        log r0.y, r5.z
        mul r1.x, r0.y, r0.x
        exp r3.y, r1.x  // ::V<0>

#line 2344
        if_eq c10.x, r0.z

#line 2404
        else

#line 2344
          mov r1.w, c105.w
          add r1.x, r1.w, c10.x

#line 2352
          add r1.y, -r5.z, -c105.w
          rsq r1.z, r5.z
          rcp r1.z, r1.z
          mul r1.z, r1.z, -c154.y  // ::Transfer<0>
          cmp r1.y, r1.y, -c105_abs.w, -c105_abs.z
          cmp r1.y, r5.z, r1.y, c118.z
          add r2.x, r5.z, c101.y
          log r2.x, r2.x
          mad r2.x, r2.x, c101.z, c101.w  // ::Transfer<0>
          cmp r1.y, r1.y, r2.x, r1.z  // ::Transfer<0>
          cmp r3.y, -r1_abs.x, r1.y, r3.y  // ::Transfer<0>

#line 2359
          if_eq c10.x, -r1.w

#line 2404
          else

#line 2359
            add r1.x, -r0.w, c10.x

#line 2362
            add r1.y, -r5.z, c102.x
            mul r1.z, r5.z, c113.z
            cmp r1.y, r1.y, r1.z, -c105.w  // ::V<0>
            cmp r3.y, -r1_abs.x, r1.y, r3.y  // ::Transfer<0>

#line 2367
            if_eq c10.x, r0.w

#line 2404
            else

#line 2367
              mov r1.x, c10.x  // ::Companding<0>
              add r1.y, r1.x, c58.x

#line 2382
              if_eq r1.x, -c58.x

#line 2376
                mul r1.z, r0.y, c113.w
                exp r1.z, r1.z
                add r1.w, r1.z, -c59.z
                max r2.x, r1.w, c118.z  // ::a<0>
                mad r1.z, r1.z, -c59.y, c59.x  // ::b<0>
                rcp r1.z, r1.z
                mul r1.z, r1.z, r2.x
                pow r2.x, r1.z, c92.z
                mul r1.z, r2.x, c97.w  // ::Transfer<0>
                cmp r3.y, -r1_abs.y, r1.z, r3.y  // ::Transfer<0>

#line 2404
              else

#line 2398
                add r1.xyz, r1.x, c152

#line 2393
                add r2.xy, r5.z, c120

#line 2401
                mul r2.zw, r5.z, c120
                mul r4.xy, r0.y, c100

#line 2385
                exp r0.y, r4.x

#line 2393
                mad r4.xz, r0.y, c104.xyyw, c104.zyww
                cmp r2.xy, r2, r4.xzzw, r2.z  // ::V<0,0>

#line 2401
                add r0.y, -r5.z, c98.w
                exp r1.w, r4.y
                mad r1.w, r1.w, c100.z, c100.w
                cmp r0.y, r0.y, r2.w, r1.w  // ::V<0>

#line 2404
                cmp r0.y, -r1_abs.z, r0.y, r5.z  // ::Transfer<0>
                cmp r0.y, -r1_abs.y, r2.y, r0.y  // ::Transfer<0>
                cmp r3.y, -r1_abs.x, r2.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2339
        log r0.y, r5.y
        mul r0.x, r0.y, r0.x
        exp r3.z, r0.x  // ::V<0>

#line 2344
        if_eq c10.x, r0.z

#line 2404
        else

#line 2344
          mov r1.w, c105.w
          add r0.x, r1.w, c10.x

#line 2352
          add r0.z, -r5.y, -c105.w
          rsq r1.x, r5.y
          rcp r1.x, r1.x
          mul r1.x, r1.x, -c154.y  // ::Transfer<0>
          cmp r0.z, r0.z, -c105_abs.w, -c105_abs.z
          cmp r0.z, r5.y, r0.z, c118.z
          add r1.y, r5.y, c101.y
          log r1.y, r1.y
          mad r1.y, r1.y, c101.z, c101.w  // ::Transfer<0>
          cmp r0.z, r0.z, r1.y, r1.x  // ::Transfer<0>
          cmp r3.z, -r0_abs.x, r0.z, r3.z  // ::Transfer<0>

#line 2359
          if_eq c10.x, -r1.w

#line 2404
          else

#line 2359
            add r0.x, -r0.w, c10.x

#line 2362
            add r0.z, -r5.y, c102.x
            mul r1.x, r5.y, c113.z
            cmp r0.z, r0.z, r1.x, -c105.w  // ::V<0>
            cmp r3.z, -r0_abs.x, r0.z, r3.z  // ::Transfer<0>

#line 2367
            if_eq c10.x, r0.w

#line 2404
            else

#line 2367
              mov r0.x, c10.x  // ::Companding<0>
              add r0.z, r0.x, c58.x

#line 2382
              if_eq r0.x, -c58.x

#line 2376
                mul r0.w, r0.y, c113.w
                exp r0.w, r0.w
                add r1.x, r0.w, -c59.z
                max r2.x, r1.x, c118.z  // ::a<0>
                mad r0.w, r0.w, -c59.y, c59.x  // ::b<0>
                rcp r0.w, r0.w
                mul r0.w, r0.w, r2.x
                pow r1.x, r0.w, c92.z
                mul r0.w, r1.x, c97.w  // ::Transfer<0>
                cmp r3.z, -r0_abs.z, r0.w, r3.z  // ::Transfer<0>

#line 2404
              else

#line 2398
                add r0.xzw, r0.x, c152.xyyz

#line 2393
                add r1.xy, r5.y, c120

#line 2401
                mul r1.zw, r5.y, c120
                mul r2.xy, r0.y, c100

#line 2385
                exp r0.y, r2.x

#line 2393
                mad r2.xz, r0.y, c104.xyyw, c104.zyww
                cmp r1.xy, r1, r2.xzzw, r1.z  // ::V<0,0>

#line 2401
                add r0.y, -r5.y, c98.w
                exp r1.z, r2.y
                mad r1.z, r1.z, c100.z, c100.w
                cmp r0.y, r0.y, r1.w, r1.z  // ::V<0>

#line 2404
                cmp r0.y, -r0_abs.w, r0.y, r5.y  // ::Transfer<0>
                cmp r0.y, -r0_abs.z, r1.y, r0.y  // ::Transfer<0>
                cmp r3.z, -r0_abs.x, r1.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2734
      endif

#line 2737
      mov oC0.xyz, r3  // ::main<0,1,2>
      mov oC0.w, -c105.w  // ::main<3>

#line 2721
    endif

// approximately 5432 instruction slots used (1 texture, 5431 arithmetic)
