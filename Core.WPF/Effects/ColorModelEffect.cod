//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float Companding;
//   float Depth;
//   float Gamma;
//   float HighlightAmount;
//   float3 LABk_LMSk_x;
//   float3 LABk_LMSk_y;
//   float3 LABk_LMSk_z;
//   float3 LMS_XYZ_x;
//   float3 LMS_XYZ_y;
//   float3 LMS_XYZ_z;
//   float3 LMSk_LABk_x;
//   float3 LMSk_LABk_y;
//   float3 LMSk_LABk_z;
//   float3 LMSk_XYZk_x;
//   float3 LMSk_XYZk_y;
//   float3 LMSk_XYZk_z;
//   float MidtoneAmount;
//   float MidtoneRange;
//   float Mode;
//   float Model;
//   float3 RGB_XYZ_x;
//   float3 RGB_XYZ_y;
//   float3 RGB_XYZ_z;
//   float ShadowAmount;
//   float ShadowRange;
//   float Shape;
//   float W;
//   float WhiteX;
//   float WhiteY;
//   float X;
//   float XComponent;
//   float3 XYZ_LMS_x;
//   float3 XYZ_LMS_y;
//   float3 XYZ_LMS_z;
//   float3 XYZ_RGB_x;
//   float3 XYZ_RGB_y;
//   float3 XYZ_RGB_z;
//   float Y;
//   float YComponent;
//   float Z;
//   sampler2D input;
//   float3 xyYC_exy;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   Model           c0       1
//   XComponent      c1       1
//   YComponent      c2       1
//   Mode            c3       1
//   Shape           c4       1
//   Depth           c5       1
//   X               c6       1
//   Y               c7       1
//   Z               c8       1
//   W               c9       1
//   Companding      c10      1
//   Gamma           c11      1
//   WhiteX          c12      1
//   WhiteY          c13      1
//   LMS_XYZ_x       c14      1
//   LMS_XYZ_y       c15      1
//   LMS_XYZ_z       c16      1
//   RGB_XYZ_x       c17      1
//   RGB_XYZ_y       c18      1
//   RGB_XYZ_z       c19      1
//   XYZ_LMS_x       c20      1
//   XYZ_LMS_y       c21      1
//   XYZ_LMS_z       c22      1
//   XYZ_RGB_x       c23      1
//   XYZ_RGB_y       c24      1
//   XYZ_RGB_z       c25      1
//   LABk_LMSk_x     c26      1
//   LABk_LMSk_y     c27      1
//   LABk_LMSk_z     c28      1
//   LMSk_LABk_x     c29      1
//   LMSk_LABk_y     c30      1
//   LMSk_LABk_z     c31      1
//   LMSk_XYZk_x     c32      1
//   LMSk_XYZk_y     c33      1
//   LMSk_XYZk_z     c34      1
//   xyYC_exy        c38      1
//   HighlightAmount c39      1
//   MidtoneAmount   c41      1
//   MidtoneRange    c42      1
//   ShadowAmount    c43      1
//   ShadowRange     c44      1
//   input           s0       1
//

    ps_3_0
    def c35, -17, -18, -19, -20
    def c36, -21, -22, -23, -24
    def c37, -25, -26, -27, -28
    def c40, -37, -38, -39, -40
    def c45, -9, -41, -10, -42
    def c46, -1, -13, -26, -27
    def c47, -29, -30, -31, -32
    def c48, -42, -43, -44, -45
    def c49, 1.41421354, 1, 2, 3
    def c50, 0.0208350997, -0.0851330012, -0.330299497, 0.999866009
    def c51, 100, 224, 122, 0.180141002
    def c52, -2, 1.57079637, -0, -3.14159274
    def c53, -0.212114394, 1.57072878, -2, 3.14159274
    def c54, 7.85398197, 1.57079673, 6.28318548, 0.159154937
    def c55, 12, -0.284668922, 0.123957433, 0.559910715
    def c56, 1, -1, 0, 0.0799999982
    def c57, 0.110705636, 0.159999996, 0.862069011, 0.159301758
    def c58, -0.0810000002, 0.0989999995, -0.0812428594, 0.0992968082
    def c59, 2.22222233, 0.0404499993, 0.0549999997, 0.947867334
    def c60, -41, -2, -34, 16
    def c61, 0.222222224, 0.0773993805, 0.909918129, 0.909672439
    def c62, 0.333333343, 57.2957764, 60, 50
    def c63, -7, -39, -8, -40
    def c64, -11, -33, -43, -45
    def c65, -33, -34, -35, -36
    def c66, 0.142857149, 0.156173766, 7, 1
    def c67, 2.4000001, 0.166666672, -0.0187292993, 0.0742610022
    def c68, -0, -32, -12, -44
    def c69, 6.99999952, 0.857142866, -6, 0.114
    def c70, 18.8515625, 18.6875, 0.8359375, 1
    def c71, -1.62954997e-011, 0.00885645207, 903.296326, 300
    def c72, 0.252999991, 0.5, 0.25, 0.000980392215
    def c73, 0.114, 0.216999993, 0.063000001, -0.5
    def c74, 0.298999995, 0.596000016, 0.211999997, 0.212599993
    def c75, 0.587000012, -0.275000006, -0.527999997, 0.715200007
    def c76, 0.114, -0.32100001, 0.31099999, 0.0722000003
    def c77, -0.147129998, 0.61500001, 0.43599999, -0.10001
    def c78, 0.538909256, 0.635001242, -0.288859993, -0.514989972
    def c79, 0.159154937, 0.25, 0.75, 600
    def c80, 360, 0.00277777785, -360, -0.00277777785
    def c81, 0.00294117676, 0.000980392215, 0.00392156886, 0.00277777785
    def c82, 0.0174532942, 1.04719758, 0.159154937, 0.5
    def c83, 100, 0, 6.40657674e-007, 13824.001
    def c84, 769859.875, 1394988.5, -120846.469, 3.40282347e+038
    def c85, -120846.469, 126452, 8.00000095, 0.00862068962
    def c86, 0.00110705639, 769860, 52, 13
    def c87, 0, 1, 100, 359
    def c88, 0.00277777785, -0.666666687, 1, -0.333333343
    def c89, 0.999778986, 1.07094002, 0.324891001, 0.714139998
    def c90, 1.00014997, -0.377743989, 0.220439002, 0.344139993
    def c91, 0.999768972, 0.0629495978, -0.809638023, 1.77199996
    def c92, -0.980705976, -1.18224943, 88.3659897, 32.0938988
    def c93, 0.00571428565, 0.0142857144, 0.560000002, 0.439999998
    def c94, 6742.07861, 3827.99316, 475.70459, 9.99999975e-005
    def c95, 0.00200000009, 0.00499999989, 116, -16
    def c96, 0.00456620986, 0.00703035761, 0.00828392897, 1.39821029
    def c97, 1.43099999, -0.569000006, 0.430999994, 1.13982999
    def c98, 0.126000002, -1.87399995, -0.394650012, 2.02310991
    def c99, 0.95599997, -0.272000015, -1.10800004, 1.8556
    def c100, 0.620999992, -0.647000015, 1.70500004, -0.580600023
    def c101, -3, -35, -4, -36
    def c102, 9.0329628, 0.0126833133, 10000, 0.00313080009
    def c103, -5, -37, -6, -38
    def c104, -46, 46, 0, -128
    def c105, -47, -48, -49, 0
    def c106, 0.587000012, 0.883000016, 1.11600006, 0.00999999978
    def c107, 0.0174532942, -2.09439516, -4.18879032, -9.99999994e-009
    def c108, 180, 0.00277777785, -0.333333343, 0.666666687
    def c109, -14, -15, -16, -17
    def c110, 18.6875, -18.8515625, 6.27739477, -3250.75854
    def c111, 0.47299999, 0.185000002, 1.5, 0.0399999991
    def c112, 0.449999988, 0.416666657, 1.05499995, -0.0549999997
    def c113, 1.09899998, 1.09929681, -0.0989999995, -0.0992968082
    def c114, 175, 70, 9.99999983e+012, 1
    def c115, 0.5, 128, 0.0813120008, 9.99999982e-014
    def c116, 239.999985, 179.999985, 119.999992, 59.9999962
    def c117, -299.999969, 359.999969, 299.999969, 0.0640312433
    def c118, -0.0179999992, -0.0180539694, 4.5, 12.9200001
    def c119, -180, -240, -300, 1.40199995
    def c120, 0.298999995, 0.587000012, 0.666666687, 0.331263989
    def c121, 0.0097833341, 0.298999995, 1.79399991, 0.587000012
    def c122, 3.52200007, 0.684000015, 0.114, 0.298999995
    def c123, 0.684000015, 1.79399991, 0.587000012, 0.114
    def c124, 0.0166666675, 5.98333359, 0.0199999996, -1
    def c125, 0.267899334, 0.525912642, 7.92025457e-005, 1.57480001
    def c126, 6, 0.166666672, -6, -0.166666672
    def c127, 10, 0, -0.5, -1.33299994
    def c128, 9.99999983e+012, 1.49999999e-012, 1, 15
    def c129, 9.99999996e-012, 9.23037151e-005, 0.66467905, 0.129132897
    def c130, 0.058047317, 0.811891913, 16613.7305, -909.828125
    def c131, 0.138605043, 0.0960192457, 0.058047317, 0.00746077253
    def c132, 2313.62085, 15227.666, 0.00499999989, 0.00999999978
    def c133, 9145.23047, 15718.4707, 3127.28296, 2182.53833
    def c134, 0.0745098069, 0.00784313772, 0.00277777785, 0.333333343
    def c135, -986593.562, 694074.125, 0.00392156886, 0.0901960805
    def c136, 0.00110705639, 52, 13, 39
    def c137, 0.212599993, 0.715200007, 0.0722000003, 0.418687999
    def c138, 1394988.5, -120846.469, -315176.688, -210946.25
    def c139, 100, 1500, 400, -0.449999988
    def c140, 0.25, -0.25, 0.5, -0.684000015
    def c141, 0.298999995, 0.587000012, 0.114, 104
    def c142, 1.29587495, 0.219999999, 0.280000001, 1
    def c143, 4.06670809, 1.09679902, 0.54270798, 0.199075997
    def c144, 1492.84155, 833.27301, 6709.7002, 3.52399993
    def c145, 134.034378, 7396.2832, 709.410828, 1747.68005
    def c146, 120.715675, 142.24028, 128, 0.168735996
    def c147, 360, 0.5, 219, 16
    def c148, 78.84375, -4, -5, -6
    def c149, 0, -1, -134, -140
    def c150, 0, -0.595700026, -0.522599995, 255
    def c151, 360, 100, 255, 128
    def c152, 1, 360, 76, 100
    def c153, 235, 240, 1, 0.5
    def c154, 1, 1.33299994, 0.595700026, 0.522599995
    def c155, 2, 0.5, -2, -0.5
    def c156, -18, -19, -20, -21
    def c157, -22, -23, -24, -25
    def c158, -28, -29, -30, -31
    def c159, -2, -34, -3, -35
    def c160, -4, -36, -5, -37
    def c161, 0.666666687, 1, 0.298999995, -1.33299994
    def c162, -1, -2, -3, -4
    def c163, 120, 0.00999999978, 1, 1.04719758
    def c164, 0.00277777785, 0.5, 6.28318548, -3.14159274
    def c165, -120846.469, -210946.25, 126452, 694074.125
    dcl_texcoord v0.xy  // uv<0,1>
    dcl_2d s0

#line 2629 "C:\Users\james\GitHub\Core.WPF\Core.WPF\Effects\ColorModelEffect.fx"
    mov r0.xyz, c104
    add r0.x, r0.x, c0.x
    if_ge c0.x, r0.y

#line 2637
      mov r1.xy, c104.z  // ::input3<0,1>
      mov r2.x, c104.z  // ::input3<2>
      mov r1.w, c6.x  // ::input4<0>
      mov r2.y, c7.x  // ::input4<1>
      mov r2.z, c8.x  // ::input4<2>
      mov r3.w, c9.x  // ::input4<3>
      mov r4.xyz, c104.z
      mov r5.xyz, c104.z
    else

#line 2640
      frc r0.w, c0.x
      add r0.w, -r0.w, c0.x
      add r6, r0.w, c35
      add r7, r0.w, c36
      add r8, r0.w, c37
      add r9, r0.w, c47
      add r10, r0.w, c65
      add r11, r0.w, c40
      add r12, r0.w, c48
      add r13.xyz, r0.w, c60
      cmp r14.xyz, -r6_abs.x, c104.zwww, c104.z
      cmp r14.xyz, -r6_abs.y, c149.xyyw, r14
      cmp r6.xyz, -r6_abs.z, c104.z, r14
      cmp r6.xyz, -r6_abs.w, c104.z, r6
      cmp r6.xyz, -r7_abs.x, c104.z, r6
      cmp r6.xyz, -r7_abs.y, c104.z, r6
      cmp r6.xyz, -r7_abs.z, c104.z, r6
      cmp r6.xyz, -r7_abs.w, c104.z, r6
      cmp r6.xyz, -r8_abs.x, c104.z, r6
      cmp r6.xyz, -r8_abs.y, c104.z, r6
      cmp r6.xyz, -r8_abs.z, c104.z, r6
      cmp r6.xyz, -r8_abs.w, c104.z, r6
      cmp r6.xyz, -r9_abs.x, c104.z, r6
      cmp r6.xyz, -r9_abs.y, c149.xzww, r6
      cmp r6.xyz, -r9_abs.z, c104.z, r6
      cmp r6.xyz, -r9_abs.w, c104.z, r6
      cmp r6.xyz, -r10_abs.x, c104.z, r6
      cmp r6.xyz, -r10_abs.y, c149.zwxw, r6
      cmp r6.xyz, -r10_abs.z, c104.z, r6
      cmp r6.xyz, -r10_abs.w, c104.z, r6
      cmp r6.xyz, -r11_abs.x, c127.xyyw, r6
      cmp r6.xyz, -r11_abs.y, c104.z, r6
      cmp r6.xyz, -r11_abs.z, c60.w, r6
      cmp r6.xyz, -r11_abs.w, c127.yzzw, r6
      cmp r6.xyz, -r13_abs.x, c127.ywww, r6
      cmp r6.xyz, -r12_abs.x, c104.z, r6
      cmp r6.xyz, -r12_abs.y, c150, r6
      cmp r6.xyz, -r12_abs.z, c127.yzzw, r6
      cmp r4.xyz, -r12_abs.w, c127.yzzw, r6  // ::min3<0,1,2>
      add r6, r0.w, c68
      add r7, r0.w, c46
      add r8, r0.w, c45
      add r9, r0.w, c64
      add r10, r0.w, c109
      add r11, r0.w, c156
      add r12, r0.w, c157
      add r14, r0.w, c158
      add r15, r0.w, c101
      add r16, r0.w, c103
      add r17, r0.w, c63
      mov r7, r7_abs
      mov r9.yw, r9_abs
      cmp r18.xyz, -r6_abs.x, c150.w, c150.x
      cmp r18.xyz, -r7.x, -c149.y, r18
      cmp r13.xyw, -r13_abs.y, c150.w, r18.xyzz
      cmp r13.xyw, -r15_abs.x, c150.w, r13
      cmp r13.xyw, -r15_abs.z, -c149.y, r13
      cmp r13.xyw, -r16_abs.x, c151.xyzy, r13
      cmp r13.xyw, -r16_abs.z, c151.xyzz, r13
      cmp r13.xyw, -r17_abs.x, c151.xyzy, r13
      cmp r13.xyw, -r17_abs.z, c151.xyzy, r13
      cmp r13.xyw, -r8_abs.x, c151.xyzy, r13
      cmp r13.xyw, -r8_abs.z, c151.xyzy, r13
      cmp r13.xyw, -r9_abs.x, c151.xyzz, r13
      cmp r13.xyw, -r6_abs.z, c151.xyzz, r13
      cmp r13.xyw, -r7.y, c151.xyzy, r13
      cmp r13.xyw, -r10_abs.x, -c149.y, r13
      cmp r13.xyw, -r10_abs.y, c150.w, r13
      cmp r10.xyz, -r10_abs.z, c151.y, r13.xyww
      cmp r10.xyz, -r10_abs.w, c151.ywww, r10
      cmp r10.xyz, -r11_abs.x, -c149.y, r10
      cmp r10.xyz, -r11_abs.y, -c149.y, r10
      cmp r10.xyz, -r11_abs.z, c151.xyyw, r10
      cmp r10.xyz, -r11_abs.w, c151.xyyw, r10
      cmp r10.xyz, -r12_abs.x, c151.xyyw, r10
      cmp r10.xyz, -r12_abs.y, c151.yyxw, r10
      cmp r10.xyz, -r12_abs.z, c151.yyxw, r10
      cmp r10.xyz, -r12_abs.w, c152.xxyw, r10
      cmp r7.xyz, -r7.z, c151.yyxw, r10
      cmp r7.xyz, -r7.w, c151.yyxw, r7
      cmp r7.xyz, -r14_abs.x, c151.yyxw, r7
      cmp r7.xyz, -r14_abs.y, -c149.y, r7
      cmp r7.xyz, -r14_abs.z, c51, r7
      cmp r7.xyz, -r14_abs.w, -c149.y, r7
      cmp r6.xyz, -r6_abs.y, -c149.y, r7
      cmp r6.xyz, -r9.y, -c149.y, r6
      cmp r6.xyz, -r13_abs.z, c51.yzxw, r6
      cmp r6.xyz, -r15_abs.y, c150.w, r6
      cmp r6.xyz, -r15_abs.w, -c149.y, r6
      cmp r6.xyz, -r16_abs.y, c152.zwww, r6
      cmp r6.xyz, -r16_abs.w, -c149.y, r6
      cmp r6.xyz, -r17_abs.y, c153.xyyw, r6
      cmp r6.xyz, -r17_abs.w, c153.zwww, r6
      cmp r6.xyz, -r8_abs.y, c154.xyyw, r6
      cmp r6.xyz, -r8_abs.w, -c149.y, r6
      cmp r6.xyz, -r9_abs.z, c154.xzww, r6
      cmp r6.xyz, -r6_abs.w, c153.zwww, r6
      cmp r5.xyz, -r9.w, c153.zwww, r6  // ::max3<0,1,2>

#line 2644
      mov r1.x, c6.x  // ::input3<0>
      mov r1.y, c7.x  // ::input3<1>
      mov r2.x, c8.x  // ::input3<2>
      mov r1.w, c104.z  // ::input4<0>
      mov r2.yz, c104.z  // ::input4<1,2>
      mov r3.w, c104.z  // ::input4<3>
    endif

#line 2650
    mov r6.xyw, c60  // ::Minimum3<119>
    if_eq c3.x, -r6.y

#line 2656
      mov r7.y, c149.y
      add r0.w, r7.y, c4.x

#line 460
      add r7.xyz, c153.wzww, -v0.xyyw  // ::N<0>
      mul r7.xz, r7_abs, r7_abs
      add r4.w, r7.z, r7.x
      rsq r4.w, r4.w
      rcp r4.w, r4.w  // ::GetDistance<0>

#line 2658
      mad r4.w, r4.w, -c49.x, c49.y  // ::N<0>
      cmp r1.z, -r0_abs.w, r4.w, r7.y  // ::N<0>
      abs r0.w, c1.x
      cmp r7.xy, r0.x, r1.xzzw, r1.zwzw  // ::input3<0>, ::input4<0>

#line 2673
      mov r8.yzw, c49
      add r8.xyz, -r8.yzww, c1.x

#line 2667
      mov r2.w, r1.z
      cmp r9.xy, r0.x, r1.yzzw, r2.wyzw  // ::input3<1>, ::input4<1>

#line 2671
      cmp r3.xy, r0.x, r2.xwzw, r2.wzzw  // ::input3<2>, ::input4<2>

#line 2675
      cmp r4.w, r0.x, r2.w, r3.w  // ::input4<3>
      cmp r10.x, -r8_abs.z, r4.w, r3.w  // ::input4<3>
      mov r10.yz, r2.xxzw
      cmp r11.xyz, -r8_abs.y, r3.ywxw, r10.zxyw  // ::input4<2,3>, ::input3<2>
      mov r9.z, r10.z
      mov r9.w, r3.w
      mov r11.w, r2.y
      cmp r12.yzw, -r8_abs.x, r9, r11.xwxy  // ::input4<1,2,3>
      mov r10.w, r9.x
      mov r11.y, r1.y
      cmp r1.yz, -r8_abs.x, r10.xwyw, r11  // ::input3<1,2>
      mov r9.x, r7.y
      mov r9.yz, r2
      mov r12.x, r1.w
      cmp r3, -r0.w, r9, r12  // ::input4<0,1,2,3>
      mov r7.z, r11.y
      mov r7.w, r10.y
      cmp r2.xyw, -r0.w, r7.wxzz, r1.zxzy  // ::input3<2,0,1>
      mov oC0, c104.z  // ::main<0,1,2,3>
      mov r0.w, c104.z
    else
      mov r7.y, c149.y
      if_eq c3.x, -r7.y

#line 2685
        add r4.w, r7.y, c4.x

#line 2688
        add r7.xzw, c153.zyww, -v0.yyxy  // ::N<0>

#line 460
        add r5.w, -r7.x, -c127.z
        mul r5.w, r5_abs.w, r5_abs.w
        mad r5.w, r7_abs.z, r7_abs.z, r5.w
        rsq r5.w, r5.w
        rcp r5.w, r5.w  // ::GetDistance<0>

#line 2687
        mad r8.x, r5.w, -c49.x, c49.y  // ::xN<0>
        add r5.w, c127.z, v0.x
        min r6.z, r5_abs.w, r7_abs.w
        max r8.z, r7_abs.w, r5_abs.w
        rcp r7.x, r8.z
        mul r6.z, r6.z, r7.x
        mul r7.x, r6.z, r6.z
        mad r7.z, r7.x, c50.x, c50.y
        mad r7.z, r7.x, r7.z, c51.w
        mad r7.z, r7.x, r7.z, c50.z
        mad r7.x, r7.x, r7.z, c50.w
        mul r6.z, r6.z, r7.x
        add r7.x, -r7_abs.w, r5_abs.w
        cmp r7.x, r7.x, c149_abs.x, c149_abs.y
        mad r7.z, r6.z, c52.x, c52.y
        mad r6.z, r7.z, r7.x, r6.z
        cmp r7.x, r5.w, c52.z, c52.w
        add r6.z, r6.z, r7.x
        min r8.z, r5.w, r7.w
        max r8.w, r7.w, r5.w
        cmp r5.w, r8.w, c149_abs.y, c149_abs.x
        cmp r5.w, r8.z, c104.z, r5.w
        add r7.x, r6.z, r6.z
        mad r5.w, r5.w, -r7.x, r6.z
        add r7.xz, r5.w, c54.xyyw  // ::yN<0>
        add r5.w, -r7.x, c54.z
        cmp r5.w, r5.w, r7.x, r7.z  // ::yN<0>
        mul r8.y, r5.w, c54.w  // ::yN<0>

#line 2695
        mad r7.xz, v0.xyyw, c56.xyyw, c56.zyxw
        cmp r8.yw, -r4_abs.w, r8.xxzy, r7.xxzz  // ::M<0>, ::N<0>
        abs r4.w, c1.x
        mov r8.xz, r1.xyww
        cmp r9.xz, r0.x, r8.xyyw, r8.yyzw  // ::input3<0>, ::input4<0>

#line 2709
        mov r10.yzw, c49
        add r7.xzw, -r10.yyzw, c1.x

#line 2703
        mov r1.x, r8.y

#line 2707
        mov r1.zw, r2.xyyx

#line 2703
        cmp r11.xy, r0.x, r1.yxzw, r1.xzzw  // ::input3<1>, ::input4<1>

#line 2712
        mov r12.xy, r1.xzzw

#line 2707
        mov r12.z, r2.z
        cmp r3.xz, r0.x, r1.wyxw, r12  // ::input3<2>, ::input4<2>

#line 2711
        cmp r5.w, r0.x, r8.y, r3.w  // ::input4<3>
        cmp r2.w, -r7_abs.w, r5.w, r3.w  // ::input4<3>
        cmp r12.xzw, -r7_abs.z, r3, r2  // ::input3<2>, ::input4<2,3>
        mov r3.xz, r2
        mov r3.y, r11.y
        cmp r13, -r7_abs.x, r3, r12  // ::input3<2>, ::input4<1,2,3>
        cmp r8.y, -r7_abs.x, r11.x, r1.y  // ::input3<1>
        mov r12.xzw, r3
        cmp r11, -r4.w, r12, r13  // ::input3<2>, ::input4<1,2,3>
        mov r9.y, r1.y
        cmp r8.xyz, -r4.w, r9.yxzw, r8.yxzw  // ::input3<1,0>, ::input4<0>
        abs r1.z, c2.x
        cmp r9.xy, r0.x, r8.ywzw, r8.wzzw  // ::input3<0>, ::input4<0>

#line 2726
        add r7.xzw, -r10.yyzw, c2.x

#line 2720
        mov r10.z, r8.w

#line 2724
        mov r10.xyw, r11.xzzy

#line 2720
        cmp r12.xy, r0.x, r8.xwzw, r10.zwzw  // ::input3<1>, ::input4<1>

#line 2724
        cmp r13.xy, r0.x, r10.xzzw, r10.zyzw  // ::input3<2>, ::input4<2>

#line 2728
        cmp r4.w, r0.x, r8.w, r11.w  // ::input4<3>
        cmp r14.x, -r7_abs.w, r4.w, r11.w  // ::input4<3>
        mov r13.z, r11.w
        mov r14.yz, r10.xxyw
        cmp r10.xyz, -r7_abs.z, r13.yzxw, r14.zxyw  // ::input4<2,3>, ::input3<2>
        mov r12.zw, r11
        cmp r13.yzw, -r7_abs.x, r12, r10.xwxy  // ::input4<1,2,3>
        mov r14.w, r12.x
        mov r10.y, r8.x
        cmp r12.yz, -r7_abs.x, r14.xwyw, r10  // ::input3<1,2>
        mov r11.x, r9.y
        mov r13.x, r8.z
        cmp r3, -r1.z, r11, r13  // ::input4<0,1,2,3>
        mov r9.z, r10.y
        mov r9.w, r14.y
        mov r12.x, r8.y
        cmp r2.xyw, -r1.z, r9.wxzz, r12.zxzy  // ::input3<2,0,1>
        mov oC0, c104.z  // ::main<0,1,2,3>
        mov r0.w, c104.z
      else
        abs r1.z, c3.x
        cmp r0.w, -r1.z, c149_abs.y, c149_abs.x
        if_eq c3.x, r0.z

#line 2620
          texld r8, v0, s0  // ::color<0,1,2,3>

#line 2310
          log r1.z, r8.x
          mul r4.w, r1.z, c11.x
          exp r9.x, r4.w  // ::v<0>

#line 2315
          if_eq c10.x, r0.z

#line 2373
          else

#line 2315
            add r4.w, r7.y, c10.x

#line 2324
            mul r5.w, r8.x, -c101.x
            rsq r5.w, r5.w
            rcp r5.w, r5.w  // ::TransferInverse<0>
            cmp r6.z, -r8.x, -c149_abs.y, -c149_abs.x
            cmp r6.z, r8.x, r6.z, c104.z
            mad r7.x, r8.x, c55.x, c55.y
            log r7.x, r7.x
            mad r7.x, r7.x, c55.z, c55.w  // ::TransferInverse<0>
            cmp r5.w, r6.z, r7.x, r5.w  // ::TransferInverse<0>
            cmp r9.x, -r4_abs.w, r5.w, r9.x  // ::TransferInverse<0>

#line 2328
            if_eq c10.x, -r7.y

#line 2373
            else

#line 2328
              add r4.w, r6.y, c10.x

#line 2331
              add r5.w, -r8.x, c56.w
              mul r6.z, r8.x, c57.x
              add r7.x, r8.x, c57.y
              mul r7.x, r7.x, c57.z
              mul r7.z, r7.x, r7.x
              mul r7.x, r7.z, r7.x
              cmp r5.w, r5.w, r6.z, r7.x  // ::v<0>
              cmp r9.x, -r4_abs.w, r5.w, r9.x  // ::TransferInverse<0>

#line 2336
              if_eq c10.x, -r6.y

#line 2373
              else

#line 2336
                mov r7.x, c10.x  // ::Companding<0>
                add r4.w, r7.x, c101.x

#line 2351
                if_eq r7.x, -c101.x

#line 2345
                  mul r1.z, r1.z, c57.w
                  exp r1.z, r1.z
                  mad r7.zw, r1.z, c70.xyxy, c70  // ::a<0>, ::b<0>
                  rcp r1.z, r7.w
                  mul r1.z, r1.z, r7.z
                  pow r5.w, r1.z, c148.x  // ::TransferInverse<0>
                  cmp r9.x, -r4_abs.w, r5.w, r9.x  // ::TransferInverse<0>

#line 2373
                else

#line 2367
                  add r7.xzw, r7.x, c148.yyzw

#line 2370
                  mul r10.xy, r8.x, c61

#line 2362
                  add r11, r8.x, c58
                  mul r10.zw, r11.xyyw, c61

#line 2354
                  pow r1.z, r10.z, c59.x
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2362
                  pow r4.w, r10.w, c59.x
                  cmp r4.w, r11.z, r4.w, r10.x  // ::L<0>

#line 2370
                  add r5.w, -r8.x, c59.y
                  add r6.z, r8.x, c59.z
                  mul r6.z, r6.z, c59.w
                  pow r9.w, r6.z, c67.x
                  cmp r5.w, r5.w, r10.y, r9.w  // ::v<0>

#line 2373
                  cmp r5.w, -r7_abs.w, r5.w, r8.x  // ::TransferInverse<0>
                  cmp r4.w, -r7_abs.z, r4.w, r5.w  // ::TransferInverse<0>
                  cmp r9.x, -r7_abs.x, r1.z, r4.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2310
          log r1.z, r8.y
          mul r4.w, r1.z, c11.x
          exp r9.y, r4.w  // ::v<0>

#line 2315
          if_eq c10.x, r0.z

#line 2373
          else

#line 2315
            add r4.w, r7.y, c10.x

#line 2324
            mul r5.w, r8.y, -c101.x
            rsq r5.w, r5.w
            rcp r5.w, r5.w  // ::TransferInverse<0>
            cmp r6.z, -r8.y, -c149_abs.y, -c149_abs.x
            cmp r6.z, r8.y, r6.z, c104.z
            mad r7.x, r8.y, c55.x, c55.y
            log r7.x, r7.x
            mad r7.x, r7.x, c55.z, c55.w  // ::TransferInverse<0>
            cmp r5.w, r6.z, r7.x, r5.w  // ::TransferInverse<0>
            cmp r9.y, -r4_abs.w, r5.w, r9.y  // ::TransferInverse<0>

#line 2328
            if_eq c10.x, -r7.y

#line 2373
            else

#line 2328
              add r4.w, r6.y, c10.x

#line 2331
              add r5.w, -r8.y, c56.w
              mul r6.z, r8.y, c57.x
              add r7.x, r8.y, c57.y
              mul r7.x, r7.x, c57.z
              mul r7.z, r7.x, r7.x
              mul r7.x, r7.z, r7.x
              cmp r5.w, r5.w, r6.z, r7.x  // ::v<0>
              cmp r9.y, -r4_abs.w, r5.w, r9.y  // ::TransferInverse<0>

#line 2336
              if_eq c10.x, -r6.y

#line 2373
              else

#line 2336
                mov r7.x, c10.x  // ::Companding<0>
                add r4.w, r7.x, c101.x

#line 2351
                if_eq r7.x, -c101.x

#line 2345
                  mul r1.z, r1.z, c57.w
                  exp r1.z, r1.z
                  mad r7.zw, r1.z, c70.xyxy, c70  // ::a<0>, ::b<0>
                  rcp r1.z, r7.w
                  mul r1.z, r1.z, r7.z
                  pow r5.w, r1.z, c148.x  // ::TransferInverse<0>
                  cmp r9.y, -r4_abs.w, r5.w, r9.y  // ::TransferInverse<0>

#line 2373
                else

#line 2367
                  add r7.xzw, r7.x, c148.yyzw

#line 2370
                  mul r10.xy, r8.y, c61

#line 2362
                  add r11, r8.y, c58
                  mul r10.zw, r11.xyyw, c61

#line 2354
                  pow r1.z, r10.z, c59.x
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2362
                  pow r4.w, r10.w, c59.x
                  cmp r4.w, r11.z, r4.w, r10.x  // ::L<0>

#line 2370
                  add r5.w, -r8.y, c59.y
                  add r6.z, r8.y, c59.z
                  mul r6.z, r6.z, c59.w
                  pow r9.w, r6.z, c67.x
                  cmp r5.w, r5.w, r10.y, r9.w  // ::v<0>

#line 2373
                  cmp r5.w, -r7_abs.w, r5.w, r8.y  // ::TransferInverse<0>
                  cmp r4.w, -r7_abs.z, r4.w, r5.w  // ::TransferInverse<0>
                  cmp r9.y, -r7_abs.x, r1.z, r4.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2310
          log r1.z, r8.z
          mul r4.w, r1.z, c11.x
          exp r9.z, r4.w  // ::v<0>

#line 2315
          if_eq c10.x, r0.z

#line 2373
          else

#line 2315
            add r4.w, r7.y, c10.x

#line 2324
            mul r5.w, r8.z, -c101.x
            rsq r5.w, r5.w
            rcp r5.w, r5.w  // ::TransferInverse<0>
            cmp r6.z, -r8.z, -c149_abs.y, -c149_abs.x
            cmp r6.z, r8.z, r6.z, c104.z
            mad r7.x, r8.z, c55.x, c55.y
            log r7.x, r7.x
            mad r7.x, r7.x, c55.z, c55.w  // ::TransferInverse<0>
            cmp r5.w, r6.z, r7.x, r5.w  // ::TransferInverse<0>
            cmp r9.z, -r4_abs.w, r5.w, r9.z  // ::TransferInverse<0>

#line 2328
            if_eq c10.x, -r7.y

#line 2373
            else

#line 2328
              add r4.w, r6.y, c10.x

#line 2331
              add r5.w, -r8.z, c56.w
              mul r6.z, r8.z, c57.x
              add r7.x, r8.z, c57.y
              mul r7.x, r7.x, c57.z
              mul r7.z, r7.x, r7.x
              mul r7.x, r7.z, r7.x
              cmp r5.w, r5.w, r6.z, r7.x  // ::v<0>
              cmp r9.z, -r4_abs.w, r5.w, r9.z  // ::TransferInverse<0>

#line 2336
              if_eq c10.x, -r6.y

#line 2373
              else

#line 2336
                mov r7.x, c10.x  // ::Companding<0>
                add r4.w, r7.x, c101.x

#line 2351
                if_eq r7.x, -c101.x

#line 2345
                  mul r1.z, r1.z, c57.w
                  exp r1.z, r1.z
                  mad r7.zw, r1.z, c70.xyxy, c70  // ::a<0>, ::b<0>
                  rcp r1.z, r7.w
                  mul r1.z, r1.z, r7.z
                  pow r5.w, r1.z, c148.x  // ::TransferInverse<0>
                  cmp r9.z, -r4_abs.w, r5.w, r9.z  // ::TransferInverse<0>

#line 2373
                else

#line 2367
                  add r7.xzw, r7.x, c148.yyzw

#line 2370
                  mul r10.xy, r8.z, c61

#line 2362
                  add r11, r8.z, c58
                  mul r10.zw, r11.xyyw, c61

#line 2354
                  pow r1.z, r10.z, c59.x
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2362
                  pow r4.w, r10.w, c59.x
                  cmp r4.w, r11.z, r4.w, r10.x  // ::L<0>

#line 2370
                  add r5.w, -r8.z, c59.y
                  add r6.z, r8.z, c59.z
                  mul r6.z, r6.z, c59.w
                  pow r9.w, r6.z, c67.x
                  cmp r5.w, r5.w, r10.y, r9.w  // ::v<0>

#line 2373
                  cmp r5.w, -r7_abs.w, r5.w, r8.z  // ::TransferInverse<0>
                  cmp r4.w, -r7_abs.z, r4.w, r5.w  // ::TransferInverse<0>
                  cmp r9.z, -r7_abs.x, r1.z, r4.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2466
          if_eq c0.x, r0.z
            mov r10.xyz, r9  // ::FLrgb<0,1,2>
            mov r1.z, -c149.y
          else
            if_eq c0.x, -r6.y
              mov r10.xyz, r9  // ::FLrgb<0,1,2>
              mov r1.z, -c149.y
            else
              mov r7.x, c0.x  // ::Model<0>
              if_eq r7.x, -c101.x
                mov r10.xyz, r9  // ::FLrgb<0,1,2>
                mov r1.z, -c149.y
              else
                if_eq r7.x, -c101.z

#line 667
                  add r10.xyz, -r9, -c149.y  // ::Lrgb_CMY<0,1,2>

#line 2469
                  mov r1.z, -c149.y
                else
                  if_eq r7.x, -c103.x

#line 793
                    add r11.xyz, -r9.zxyw, r9.yzxw

#line 466
                    cmp r7.zw, r11.x, r9.xyzy, r9.xyyz
                    min r4.w, r7.z, r9.x  // ::GetMinimum<0>
                    max r5.w, r9.x, r7.w  // ::GetMaximum<0>

#line 775
                    add r6.z, -r4.w, r5.w  // ::c<0>
                    add r7.z, r6.z, c149.y
                    add r7.w, -r6.z, -c149.y
                    rcp r7.w, r7.w
                    mul r4.w, r4.w, r7.w  // ::v<0>

#line 787
                    add r12.xy, -r9, r5.w
                    rcp r5.w, r6.z

#line 793
                    mul r7.w, r5.w, r11.x

#line 785
                    cmp r11.xw, r7.w, c126.xyzy, c126.zyzw
                    mul r7.w, r7.w, r11.w
                    frc r7.w, r7.w
                    mul r7.w, r7.w, r11.x  // ::h<0>

#line 789
                    mad r9.w, r11.y, r5.w, -c60.y  // ::h<0>

#line 793
                    mad r5.w, r11.z, r5.w, -c101.z  // ::h<0>
                    cmp r5.w, -r12_abs.y, r9.w, r5.w  // ::h<0>
                    cmp r5.w, -r12_abs.x, r7.w, r5.w  // ::h<0>
                    mul r7.w, r5.w, c67.y  // ::h<0>
                    cmp r5.w, r5.w, c56.x, c56.y
                    mul r7.w, r5.w, r7.w
                    frc r7.w, r7.w
                    mul r5.w, r5.w, r7.w  // ::h<0>
                    mul r5.w, r5.w, c151.x
                    cmp r10.x, -r6.z, c104.z, r5.w  // ::Lrgb_HCV<0>
                    mul r10.y, r6.z, c151.y  // ::Lrgb_HCV<1>
                    mul r4.w, r4.w, c151.y
                    cmp r10.z, r7.z, c104.z, r4.w  // ::Lrgb_HCV<2>

#line 2470
                    mov r1.z, -c149.y
                  else
                    if_eq r7.x, -c103.z

#line 472
                      add r4.w, r9.y, r9.x
                      add r4.w, r9.z, r4.w  // ::GetSum<0>

#line 838
                      rcp r5.w, r4.w
                      mul r11.xyz, r5.w, r9  // ::r<0>, ::g<0>, ::b<0>
                      mad r12.xyz, r9.xxyw, r5.w, -r11.yzzw
                      add r5.w, r12.y, r12.x
                      mul r5.w, r5.w, -c127.z
                      mul r7.zw, r12.xyxz, r12.xyxy
                      add r6.z, r7.w, r7.z
                      rsq r6.z, r6.z
                      mul r5.w, r5.w, r6.z
                      add r6.z, -r5_abs.w, -c149.y
                      rsq r6.z, r6.z
                      rcp r6.z, r6.z
                      mad r7.z, r5_abs.w, c67.z, c67.w
                      mad r7.z, r7.z, r5_abs.w, c53.x
                      mad r7.z, r7.z, r5_abs.w, c53.y
                      mul r6.z, r6.z, r7.z
                      mad r7.z, r6.z, c53.z, c53.w
                      cmp r5.w, r5.w, c149_abs.x, c149_abs.y
                      mad r5.w, r7.z, r5.w, r6.z  // ::h<0>

#line 843
                      add r6.z, -r5.w, c54.z  // ::h<0>
                      cmp r5.w, r12.z, r5.w, r6.z  // ::h<0>

#line 468
                      min r6.z, r11.z, r11.y
                      min r7.z, r6.z, r11.x  // ::GetMinimum<0>

#line 847
                      mad r6.z, r7.z, -c49.w, c49.y  // ::s<0>
                      mul r10.z, r4.w, c62.x  // ::i<0>
                      mul r10.x, r5.w, c62.y  // ::Lrgb_HCY<0>
                      mul r10.y, r6.z, c151.y  // ::Lrgb_HCY<1>

#line 2471
                      mov r1.z, -c149.y
                    else
                      if_eq r7.x, -c63.x

#line 1053
                        add r11.xyz, -r9.zyxw, r9.yxzw

#line 466
                        cmp r7.zw, r11.x, r9.xyzy, r9.xyyz
                        min r4.w, r7.z, r9.x  // ::GetMinimum<0>
                        max r5.w, r9.x, r7.w  // ::GetMaximum<0>

#line 1032
                        add r6.z, -r4.w, r5.w  // ::chroma<0>
                        add r4.w, r4.w, r5.w

#line 1037
                        add r7.z, r4.w, c149.y
                        rcp r7.w, r4.w
                        mul r7.w, r6.z, r7.w
                        add r9.w, -r4.w, -c60.y
                        rcp r9.w, r9.w
                        mul r9.w, r6.z, r9.w
                        cmp r12.y, r7.z, r9.w, r7.w  // ::s<0>

#line 1051
                        add r13.xyz, -r5.w, r9.xzyw

#line 1043
                        rcp r5.w, r6.z

#line 1053
                        mul r7.z, r5.w, r11.x  // ::h<0>

#line 1049
                        mad r11.yw, r11.xxzy, r5.w, -c148.xwzy  // ::h<0>

#line 1044
                        cmp r7.z, r11.x, r7.z, r11.y  // ::h<0>

#line 1053
                        mad r5.w, r11.z, r5.w, -c60.y  // ::h<0>
                        cmp r5.w, -r13_abs.z, r5.w, c104.z  // ::h<0>
                        cmp r5.w, -r13_abs.y, r11.w, r5.w  // ::h<0>
                        cmp r5.w, -r13_abs.x, r7.z, r5.w  // ::h<0>
                        mul r12.x, r5.w, c62.z  // ::h<0>
                        cmp r10.xw, -r6_abs.z, c104.z, r12.xyzy  // ::h<0>, ::s<0>
                        mul r10.z, r4.w, c62.w  // ::Lrgb_HSL<2>

#line 2472
                        mul r10.y, r10.w, c151.y
                        mov r1.z, -c149.y
                      else
                        if_eq r7.x, -c63.z

#line 955
                          add r11.xyz, -r9.zxyw, r9.yzxw

#line 466
                          cmp r7.zw, r11.x, r9.xyzy, r9.xyyz
                          min r4.w, r7.z, r9.x  // ::GetMinimum<0>
                          max r5.w, r9.x, r7.w  // ::GetMaximum<0>

#line 934
                          add r4.w, -r4.w, r5.w  // ::chroma<0>

#line 943
                          rcp r6.z, r5.w
                          mul r12.y, r4.w, r6.z  // ::_s<0>

#line 954
                          add r13.xyz, -r5.w, r9

#line 947
                          rcp r6.z, r4.w

#line 955
                          mul r7.z, r6.z, r11.x  // ::_h<0>
                          mad r11.zw, r11.xyxz, r6.z, -c148.xywy  // ::_h<0>

#line 948
                          cmp r7.z, r11.x, r7.z, r11.z  // ::_h<0>

#line 952
                          mad r6.z, r11.y, r6.z, -c60.y  // ::_h<0>

#line 955
                          cmp r7.w, -r13_abs.z, r11.w, c104.z  // ::_h<0>
                          cmp r6.z, -r13_abs.y, r6.z, r7.w  // ::_h<0>
                          cmp r6.z, -r13_abs.x, r7.z, r6.z  // ::_h<0>
                          mul r12.x, r6.z, c62.z  // ::_h<0>
                          cmp r10.xw, -r4_abs.w, c104.z, r12.xyzy  // ::_h<0>, ::_s<0>
                          mul r10.z, r5.w, c151.y  // ::Lrgb_HSB<2>

#line 2473
                          mul r10.y, r10.w, c151.y
                          mov r1.z, -c149.y
                        else
                          add r4.w, r7.x, c45.x
                          cmp r1.z, -r4_abs.w, c149_abs.y, c149_abs.x

#line 1053
                          add r7.xzw, -r9.zyyx, r9.yyxz

#line 466
                          cmp r11.xy, r7.x, r9.zyzw, r9.yzzw
                          min r4.w, r11.x, r9.x  // ::GetMinimum<0>
                          max r5.w, r9.x, r11.y  // ::GetMaximum<0>

#line 1032
                          add r6.z, -r4.w, r5.w  // ::chroma<0>
                          add r4.w, r4.w, r5.w

#line 1037
                          add r9.w, r4.w, c149.y
                          rcp r11.x, r4.w
                          add r11.y, -r4.w, -c60.y
                          rcp r11.y, r11.y
                          mul r11.xy, r6.z, r11
                          cmp r11.y, r9.w, r11.y, r11.x  // ::s<0>

#line 1051
                          add r12.xyz, -r5.w, r9.xzyw

#line 1043
                          rcp r5.w, r6.z

#line 1053
                          mul r9.w, r5.w, r7.x  // ::h<0>

#line 1049
                          mad r11.zw, r7.xyxz, r5.w, -c148.xywy  // ::h<0>

#line 1044
                          cmp r7.x, r7.x, r9.w, r11.z  // ::h<0>

#line 1053
                          mad r5.w, r7.w, r5.w, -c60.y  // ::h<0>
                          cmp r5.w, -r12_abs.z, r5.w, c104.z  // ::h<0>
                          cmp r5.w, -r12_abs.y, r11.w, r5.w  // ::h<0>
                          cmp r5.w, -r12_abs.x, r7.x, r5.w  // ::h<0>
                          mul r11.x, r5.w, c62.z  // ::h<0>
                          cmp r10.xw, -r6_abs.z, c104.z, r11.xyzy  // ::h<0>, ::s<0>
                          mul r10.z, r4.w, c62.w  // ::Lrgb_HSL<2>

#line 2474
                          mul r10.y, r10.w, c151.y
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r1.z, -r1.z

#line 2516
          else

#line 2476
            mov r7.x, c0.x  // ::Model<0>
            if_eq r7.x, c127.x

#line 1053
              add r11.xyz, -r9.zyxw, r9.yxzw

#line 466
              cmp r7.zw, r11.x, r9.xyzy, r9.xyyz
              min r1.z, r7.z, r9.x  // ::GetMinimum<0>
              max r4.w, r9.x, r7.w  // ::GetMaximum<0>

#line 1032
              add r5.w, -r1.z, r4.w  // ::chroma<0>
              add r1.z, r1.z, r4.w

#line 1037
              add r6.z, r1.z, c149.y
              rcp r7.z, r1.z
              add r7.w, -r1.z, -c60.y
              rcp r7.w, r7.w
              mul r7.zw, r5.w, r7
              cmp r12.y, r6.z, r7.w, r7.z  // ::s<0>

#line 1051
              add r13.xyz, -r4.w, r9.xzyw

#line 1043
              rcp r4.w, r5.w

#line 1053
              mul r6.z, r4.w, r11.x  // ::h<0>

#line 1049
              mad r7.zw, r11.xyxy, r4.w, -c148.xywy  // ::h<0>

#line 1044
              cmp r6.z, r11.x, r6.z, r7.z  // ::h<0>

#line 1053
              mad r4.w, r11.z, r4.w, -c60.y  // ::h<0>
              cmp r4.w, -r13_abs.z, r4.w, c104.z  // ::h<0>
              cmp r4.w, -r13_abs.y, r7.w, r4.w  // ::h<0>
              cmp r4.w, -r13_abs.x, r6.z, r4.w  // ::h<0>
              mul r12.x, r4.w, c62.z  // ::h<0>
              cmp r10.xw, -r5_abs.w, c104.z, r12.xyzy  // ::h<0>, ::s<0>
              mul r10.z, r1.z, c62.w  // ::Lrgb_HSL<2>

#line 2476
              mul r10.y, r10.w, c151.y
              mov r1.z, -c149.y
            else
              if_eq r7.x, -c64.x

#line 1081
                frc r4.w, c0.x
                add r4.w, -r4.w, c0.x
                add r11, r4.w, c68
                add r12, r4.w, c46
                add r13, r4.w, c45
                add r14, r4.w, c64
                add r15, r4.w, c109
                add r16, r4.w, c156
                add r17, r4.w, c157
                add r18, r4.w, c158
                add r19, r4.w, c159
                add r20, r4.w, c160
                add r7.zw, r4.w, c103
                add r21, r4.w, c63
                mov r12, r12_abs
                mov r14.yw, r14_abs
                cmp r22.xyz, -r11_abs.x, c150.w, c150.x
                cmp r22.xyz, -r12.x, -c149.y, r22
                cmp r22.xyz, -r19_abs.x, c150.w, r22
                cmp r22.xyz, -r19_abs.z, c150.w, r22
                cmp r22.xyz, -r20_abs.x, -c149.y, r22
                cmp r22.xyz, -r20_abs.z, c151.xyyw, r22
                cmp r22.xyz, -r7_abs.z, c151, r22
                cmp r22.xyz, -r21_abs.x, c151.xyyw, r22
                cmp r22.xyz, -r21_abs.z, c151.xyyw, r22
                cmp r22.xyz, -r13_abs.x, c151.xyyw, r22
                cmp r22.xyz, -r13_abs.z, c151.xyyw, r22
                cmp r22.xyz, -r14_abs.x, c151, r22
                cmp r22.xyz, -r11_abs.z, c151, r22
                cmp r22.xyz, -r12.y, c151.xyyw, r22
                cmp r22.xyz, -r15_abs.x, -c149.y, r22
                cmp r22.xyz, -r15_abs.y, c150.w, r22
                cmp r15.xyz, -r15_abs.z, c151.y, r22
                cmp r15.xyz, -r15_abs.w, c151.ywww, r15
                cmp r15.xyz, -r16_abs.x, -c149.y, r15
                cmp r15.xyz, -r16_abs.y, -c149.y, r15
                cmp r15.xyz, -r16_abs.z, c151.xyyw, r15
                cmp r15.xyz, -r16_abs.w, c151.xyyw, r15
                cmp r15.xyz, -r17_abs.x, c151.xyyw, r15
                cmp r15.xyz, -r17_abs.y, c151.yyxw, r15
                cmp r15.xyz, -r17_abs.z, c151.yyxw, r15
                cmp r15.xyz, -r17_abs.w, c152.xxyw, r15
                cmp r12.xyz, -r12.z, c151.yyxw, r15
                cmp r12.xyz, -r12.w, c151.yyxw, r12
                cmp r12.xyz, -r18_abs.x, c151.yyxw, r12
                cmp r12.xyz, -r18_abs.y, -c149.y, r12
                cmp r12.xyz, -r18_abs.z, c51, r12
                cmp r12.xyz, -r18_abs.w, -c149.y, r12
                cmp r11.xyz, -r11_abs.y, -c149.y, r12
                cmp r11.xyz, -r14.y, -c149.y, r11
                cmp r11.xyz, -r19_abs.y, c51.yzxw, r11
                cmp r11.xyz, -r19_abs.w, c150.w, r11
                cmp r11.xyz, -r20_abs.y, -c149.y, r11
                cmp r11.xyz, -r20_abs.w, c152.zwww, r11
                cmp r11.xyz, -r7_abs.w, -c149.y, r11
                cmp r11.xyz, -r21_abs.y, c153.xyyw, r11
                cmp r11.xyz, -r21_abs.w, c153.zwww, r11
                cmp r11.xyz, -r13_abs.y, c154.xyyw, r11
                cmp r11.xyz, -r13_abs.w, -c149.y, r11
                cmp r11.xyz, -r14_abs.z, c154.xzww, r11
                cmp r11.xyz, -r11_abs.w, c153.zwww, r11
                cmp r11.xyz, -r14.w, c153.zwww, r11  // ::max<0,1,2>
                add r4.w, r9.y, r9.y
                mad r4.w, r9.x, -c101.z, r4.w
                add r4.w, r9.z, r4.w

#line 1120
                mul r5.w, r4.w, c66.x  // ::m<0>

#line 1087
                mad r12.xyz, r4.w, -c66.x, r9
                mul r6.z, r12.y, -c101.z
                mad r6.z, r12.x, -c101.x, -r6.z
                mad r6.z, r12.z, c101.z, r6.z
                mul r6.z, r6.z, c66.y  // ::j<0>
                mul r7.zw, r12.xyxy, r12.xyxy
                add r7.z, r7.w, r7.z
                mad r7.z, r12.z, r12.z, r7.z
                rsq r7.z, r7.z
                mul r6.z, r6.z, r7.z
                add r7.w, -r6_abs.z, -c149.y
                rsq r7.w, r7.w
                rcp r7.w, r7.w
                mad r9.w, r6_abs.z, c67.z, c67.w
                mad r9.w, r9.w, r6_abs.z, c53.x
                mad r9.w, r9.w, r6_abs.z, c53.y
                mul r7.w, r7.w, r9.w
                mad r9.w, r7.w, c53.z, c53.w
                cmp r6.z, r6.z, c149_abs.x, c149_abs.y
                mad r6.z, r9.w, r6.z, r7.w  // ::t<0>
                add r7.w, -r9.z, r9.y
                add r9.w, -r6.z, c54.z
                cmp r6.z, r7.w, r6.z, r9.w  // ::w<0>

#line 1120
                mad r12.xy, r4.w, -c66.x, c66.zwzw  // Pow2::input<0,0>

#line 506
                mul r7.w, r12.x, r12.x  // ::Pow2<0>

#line 1100
                dp2add r7.w, r5.w, r5.w, r7.w  // ::v<0>

#line 329
                add r9.w, -r4.w, c69.x

#line 1120
                mad r11.w, r4.w, c69.y, c69.z  // Pow2::input<0>

#line 506
                mul r11.w, r11.w, r11.w  // ::Pow2<0>

#line 1120
                dp2add r11.w, r12.y, r12.y, r11.w  // ::v<0>
                cmp r9.w, r9.w, -c149_abs.y, -c149_abs.x
                cmp r9.w, -r4.w, c104.z, r9.w
                cmp r9.w, r9.w, c104.z, r11.w  // ::v<0>
                cmp r11.w, -r4.w, -c149_abs.y, -c149_abs.x
                cmp r4.w, r4.w, r11.w, c104.z
                cmp r4.w, r4.w, r9.w, r7.w  // ::v<0>
                mul r6.z, r11.x, r6.z
                rcp r7.z, r7.z
                rsq r4.w, r4.w
                mul r4.w, r4.w, r7.z  // ::s<0>
                mul r10.x, r6.z, c54.w  // ::Lrgb_HSM<0>
                mul r10.y, r11.y, r4.w  // ::Lrgb_HSM<1>
                mul r10.z, r11.z, r5.w  // ::Lrgb_HSM<2>

#line 2477
                mov r1.z, -c149.y
              else
                if_eq r7.x, -c68.z

#line 1260
                  mul r11.xyz, r9, c150.w  // ::_input<0,1,2>

#line 1264
                  mul r12.xyz, r11, r11
                  mul r7.zw, r12.xyxy, c120.xyxy
                  add r4.w, r7.w, r7.z
                  mad r4.w, r12.z, c69.w, r4.w
                  rsq r4.w, r4.w
                  rcp r4.w, r4.w  // ::p<0>
                  mad r7.zw, r9.x, c150.w, -r11.xyzy
                  cmp r5.w, -r7_abs.z, c149_abs.y, c149_abs.x
                  cmp r5.w, -r7_abs.w, r5.w, c104.z
                  if_ne r5.w, -r5.w

#line 1269
                    mov r12.xy, c104.z  // ::h<0>, ::s<0>
                  else

#line 1282
                    mad r12.zw, r9.xyyz, c150.w, -r11.xyzy
                    mul r13.xy, r12.wzzw, c67.y

#line 1277
                    rcp r5.w, r7.w
                    mad r14.y, r13.x, -r5.w, -c149.y  // ::h<0>
                    rcp r5.w, r11.x

#line 1282
                    rcp r6.z, r7.z
                    mul r14.x, r6.z, r13.y  // ::h<0>
                    mad r14.zw, r11.xyyz, -r5.w, -c149.y  // ::s<0,0>
                    cmp r13.xy, r12.w, r14.yzzw, r14.xwzw  // ::h<0>, ::s<0>
                    cmp r5.w, r7.z, -c149_abs.y, -c149_abs.x
                    cmp r5.w, r7.w, r5.w, c104.z
                    cmp r13.xy, r5.w, c104.z, r13  // ::h<0>, ::s<0>

#line 1312
                    mul r13.zw, r7, c67.y

#line 1292
                    rcp r5.w, r12.z
                    mad r14.y, r13.z, -r5.w, c62.x  // ::h<0>
                    rcp r5.w, r11.y

#line 1297
                    mad r15.xy, r9.yzzw, c150.w, -r11.x

#line 1307
                    mul r15.zw, r15.xyyx, c67.y

#line 1297
                    rcp r6.z, r15.x
                    mad r14.x, r15.z, r6.z, c62.x  // ::h<0>
                    mad r14.zw, r11.xyzx, -r5.w, -c149.y  // ::s<0,0>
                    cmp r7.zw, r7.z, r14.xyyz, r14.xyxw  // ::h<0>, ::s<0>

#line 1315
                    cmp r14.xy, r12.zwzw, -c149_abs.y, -c149_abs.x
                    cmp r14.xy, r15, r14, c104.z

#line 1300
                    cmp r7.zw, r14.x, r13.xyxy, r7  // ::h<0>, ::s<0>

#line 1307
                    rcp r5.w, r15.y
                    mad r16.y, r15.w, -r5.w, c120.z  // ::h<0>
                    rcp r5.w, r11.z

#line 1312
                    rcp r6.z, r12.w
                    mad r16.x, r13.w, r6.z, c120.z  // ::h<0>
                    mad r16.zw, r11.xyxy, -r5.w, -c149.y  // ::s<0,0>
                    cmp r11.xy, r15.x, r16.yzzw, r16.xwzw  // ::h<0>, ::s<0>
                    cmp r12.xy, r14.y, r7.zwzw, r11  // ::h<0>, ::s<0>
                  endif
                  mul r10.y, r12.y, c151.y  // ::Lrgb_HSP<1>
                  mad r5.w, r12.x, c147.x, c147.y
                  frc r6.z, r5.w
                  add r10.x, r5.w, -r6.z  // ::Lrgb_HSP<0>
                  add r4.w, r4.w, -c127.z
                  frc r5.w, r4.w
                  add r10.z, r4.w, -r5.w  // ::Lrgb_HSP<2>

#line 2478
                  mov r1.z, -c149.y
                else
                  if_eq r7.x, -c46.y

#line 955
                    add r11.xyz, -r9.zxyw, r9.yzxw

#line 466
                    cmp r7.zw, r11.x, r9.xyzy, r9.xyyz
                    min r4.w, r7.z, r9.x  // ::GetMinimum<0>
                    max r5.w, r9.x, r7.w  // ::GetMaximum<0>

#line 934
                    add r6.z, -r4.w, r5.w  // ::chroma<0>

#line 954
                    add r12.xyz, -r5.w, r9

#line 947
                    rcp r7.z, r6.z

#line 955
                    mul r7.w, r7.z, r11.x  // ::_h<0>
                    mad r11.zw, r11.xyxz, r7.z, -c148.xywy  // ::_h<0>

#line 948
                    cmp r7.w, r11.x, r7.w, r11.z  // ::_h<0>

#line 952
                    mad r7.z, r11.y, r7.z, -c60.y  // ::_h<0>

#line 955
                    cmp r9.w, -r12_abs.z, r11.w, c104.z  // ::_h<0>
                    cmp r7.z, -r12_abs.y, r7.z, r9.w  // ::_h<0>
                    cmp r7.z, -r12_abs.x, r7.w, r7.z  // ::_h<0>
                    mul r7.z, r7.z, c62.z  // ::_h<0>
                    cmp r10.x, -r6_abs.z, c104.z, r7.z  // ::_h<0>

#line 1349
                    add r5.w, -r5.w, -c149.y  // ::black<0>
                    mul r10.y, r4.w, c151.y  // ::Lrgb_HWB<1>
                    mul r10.z, r5.w, c151.y  // ::Lrgb_HWB<2>

#line 2479
                    mov r1.z, -c149.y
                  else
                    if_eq r7.x, -c109.x
                      mov r10.xyz, r9  // ::FLrgb<0,1,2>
                      mov r1.z, -c149.y
                    else
                      if_eq r7.x, -c109.y

#line 2188
                        dp3 r4.w, r9, c137  // ::y<0>
                        add r7.zw, -r4.w, r9.xyzx

#line 2232
                        mad r4.w, r4.w, c147.z, c147.w  // ::Lrgb_YCbCr<0>
                        mad r7.zw, r7, c146.xyxy, c146.z  // ::Lrgb_YCbCr<1,2>

#line 2252
                        mul r5.w, r7.z, c120.y
                        mad r5.w, r4.w, c120.x, r5.w
                        mad r10.x, r7.w, c69.w, r5.w  // ::Lrgb_JPEG<0>
                        mad r5.w, r4.w, -c146.w, c146.z
                        mad r5.w, r7.z, -c120.w, r5.w
                        mad r10.y, r7.w, -c127.z, r5.w  // ::Lrgb_JPEG<1>
                        mad r4.w, r4.w, c115.x, c115.y
                        mad r4.w, r7.z, -c137.w, r4.w
                        mad r10.z, r7.w, -c115.z, r4.w  // ::Lrgb_JPEG<2>

#line 2481
                        mov r1.z, -c149.y
                      else
                        if_eq c0.x, r6.w
                          mov r10.xyz, c104.z  // ::FLrgb<0,1,2>
                          mov r1.z, -c149.y
                        else
                          if_eq r7.x, -c35.x

#line 516
                            abs r4.w, c13.x

#line 520
                            rcp r5.w, c13.x
                            mul r11.x, r5.w, c12.x  // ::xyY_XYZ<0>
                            mov r12.x, c13.x  // ::WhiteY<0>
                            add r6.z, -r12.x, -c12.x
                            add r6.z, r6.z, -c149.y
                            mul r11.z, r5.w, r6.z  // ::xyY_XYZ<2>
                            mov r11.y, -c149.y
                            cmp r11.xyz, -r4.w, c115.w, r11  // ::xyY_XYZ<0,1,2>

#line 478
                            mul r12.xyz, r9.y, c18
                            mad r12.xyz, r9.x, c17, r12
                            mad r12.xyz, r9.z, c19, r12  // ::x<0>, ::y<0>, ::z<0>

#line 560
                            add r7.zw, r11.xyxz, c92.xyxy

#line 563
                            cmp r5.w, -r7_abs.w, -c149_abs.y, -c149_abs.x
                            cmp r5.w, -r4.w, c104.z, r5.w
                            cmp r5.w, -r7_abs.z, r5.w, c104.z

#line 573
                            add r7.zw, r11.xyyz, r11.xyxy
                            mul r7.zw, r7, c92  // ::Ka<0,0>
                            cmp r7.zw, r5.w, r7, c114.xyxy  // ::ComputeKa<0>, ::ComputeKb<0>

#line 1498
                            cmp r4.w, -r4.w, c114.z, c114.w
                            mul r4.w, r4.w, r12.y
                            rsq r5.w, r4.w
                            rcp r6.z, r5.w
                            mul r10.x, r6.z, c151.y  // ::L<0>
                            rcp r6.z, r11.x
                            mad r6.z, r12.x, r6.z, -r4.w
                            mul r6.z, r5.w, r6.z
                            mul r10.y, r6.z, r7.z  // ::a<0>
                            rcp r6.z, r11.z
                            mad r4.w, r12.z, -r6.z, r4.w
                            mul r4.w, r5.w, r4.w
                            mul r10.z, r4.w, r7.w  // ::b<0>

#line 2483
                            mov r1.z, -c149.y
                          else
                            if_eq r7.x, -c35.y

#line 478
                              mul r11, r9.y, c18.yzxy
                              mad r11, r9.x, c17.yzxy, r11
                              mad r11, r9.z, c19.yzxy, r11  // ::y<0>, ::z<0>, ::x<0>, ::y<0>

#line 1547
                              mul r7.zw, r11, c94.xyxy
                              add r4.w, r7.w, r7.z
                              mad r4.w, r11.y, -c94.z, r4.w  // PerceptualQuantizer::x<0>

#line 492
                              mul r4.w, r4.w, c94.w
                              pow r5.w, r4.w, c57.w  // ::xx<0>
                              mad r7.zw, r5.w, c70.xyxy, c70
                              rcp r4.w, r7.w
                              mul r4.w, r4.w, r7.z
                              pow r5.w, r4.w, c145.x  // ::result<0>

#line 1548
                              mul r12.xyz, r11.xzww, c145.yzww
                              mad r4.w, r11.z, c144.x, r12.x
                              mad r4.w, r11.y, c144.y, r4.w  // PerceptualQuantizer::x<0>

#line 492
                              mul r4.w, r4.w, c94.w
                              pow r6.z, r4.w, c57.w  // ::xx<0>
                              mad r7.zw, r6.z, c70.xyxy, c70
                              rcp r4.w, r7.w
                              mul r4.w, r4.w, r7.z
                              pow r6.z, r4.w, c145.x  // ::result<0>

#line 1548
                              add r4.w, r12.z, r12.y
                              mad r4.w, r11.y, c144.z, r4.w  // PerceptualQuantizer::x<0>

#line 492
                              mul r4.w, r4.w, c94.w
                              pow r7.z, r4.w, c57.w  // ::xx<0>
                              mad r7.zw, r7.z, c70.xyxy, c70
                              rcp r4.w, r7.w
                              mul r4.w, r4.w, r7.z
                              pow r7.z, r4.w, c145.x  // ::result<0>

#line 1550
                              add r4.w, r5.w, r6.z

#line 1553
                              mul r11.xy, r6.z, c143
                              mad r6.z, r5.w, c144.w, -r11.x
                              mad r10.y, r7.z, c143.z, r6.z  // ::az<0>
                              mad r5.w, r5.w, c143.w, r11.y
                              mad r10.z, r7.z, -c142.x, r5.w  // ::bz<0>
                              mul r5.w, r4.w, c142.y
                              mad r4.w, r4.w, -c142.z, c142.w
                              rcp r4.w, r4.w
                              mad r10.x, r5.w, r4.w, c71.x  // ::Jz<0>

#line 2484
                              mov r1.z, -c149.y
                            else
                              add r4.w, r7.x, c35.z
                              cmp r1.z, -r4_abs.w, c149_abs.y, c149_abs.x

#line 478
                              mov r11.xyz, c29  // ::LMSk_LABk_x<0,1,2>
                              add r11.xyz, r11, c30
                              add r11.xyz, r11, c31  // ::x<0>, ::y<0>, ::z<0>

#line 2485
                              cmp r10.xyz, -r4_abs.w, r11, r10  // ::FLrgb<0,1,2>
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r1.z, -r1.z

#line 2516
            else

#line 2487
              if_eq r7.x, -c35.w

#line 955
                add r11.xyz, -r9.zxyw, r9.yzxw

#line 466
                cmp r7.zw, r11.x, r9.xyzy, r9.xyyz
                min r1.z, r7.z, r9.x  // ::GetMinimum<0>
                max r4.w, r9.x, r7.w  // ::GetMaximum<0>

#line 934
                add r1.z, -r1.z, r4.w  // ::chroma<0>

#line 943
                rcp r5.w, r4.w
                mul r12.y, r1.z, r5.w  // ::_s<0>

#line 954
                add r13.xyz, -r4.w, r9

#line 947
                rcp r5.w, r1.z

#line 955
                mul r6.z, r5.w, r11.x  // ::_h<0>
                mad r7.zw, r11.xyxz, r5.w, -c148.xywy  // ::_h<0>

#line 948
                cmp r6.z, r11.x, r6.z, r7.z  // ::_h<0>

#line 952
                mad r5.w, r11.y, r5.w, -c60.y  // ::_h<0>

#line 955
                cmp r7.z, -r13_abs.z, r7.w, c104.z  // ::_h<0>
                cmp r5.w, -r13_abs.y, r5.w, r7.z  // ::_h<0>
                cmp r5.w, -r13_abs.x, r6.z, r5.w  // ::_h<0>
                mul r12.x, r5.w, c62.z  // ::_h<0>
                cmp r10.xw, -r1_abs.z, c104.z, r12.xyzy  // ::_h<0>, ::_s<0>
                mul r10.z, r4.w, c151.y  // ::Lrgb_HSB<2>

#line 2487
                mul r10.y, r10.w, c151.y
                mov r1.z, -c149.y
              else
                if_eq r7.x, -c36.x

#line 1053
                  add r11.xyz, -r9.zyxw, r9.yxzw

#line 466
                  cmp r7.zw, r11.x, r9.xyzy, r9.xyyz
                  min r4.w, r7.z, r9.x  // ::GetMinimum<0>
                  max r5.w, r9.x, r7.w  // ::GetMaximum<0>

#line 1032
                  add r6.z, -r4.w, r5.w  // ::chroma<0>
                  add r4.w, r4.w, r5.w

#line 1037
                  add r7.z, r4.w, c149.y
                  rcp r7.w, r4.w
                  mul r7.w, r6.z, r7.w
                  add r9.w, -r4.w, -c60.y
                  rcp r9.w, r9.w
                  mul r9.w, r6.z, r9.w
                  cmp r12.y, r7.z, r9.w, r7.w  // ::s<0>

#line 1051
                  add r13.xyz, -r5.w, r9.xzyw

#line 1043
                  rcp r5.w, r6.z

#line 1053
                  mul r7.z, r5.w, r11.x  // ::h<0>

#line 1049
                  mad r11.yw, r11.xxzy, r5.w, -c148.xwzy  // ::h<0>

#line 1044
                  cmp r7.z, r11.x, r7.z, r11.y  // ::h<0>

#line 1053
                  mad r5.w, r11.z, r5.w, -c60.y  // ::h<0>
                  cmp r5.w, -r13_abs.z, r5.w, c104.z  // ::h<0>
                  cmp r5.w, -r13_abs.y, r11.w, r5.w  // ::h<0>
                  cmp r5.w, -r13_abs.x, r7.z, r5.w  // ::h<0>
                  mul r12.x, r5.w, c62.z  // ::h<0>
                  cmp r10.xw, -r6_abs.z, c104.z, r12.xyzy  // ::h<0>, ::s<0>
                  mul r10.z, r4.w, c62.w  // ::Lrgb_HSL<2>

#line 2488
                  mul r10.y, r10.w, c151.y
                  mov r1.z, -c149.y
                else
                  if_eq r7.x, -c36.y

#line 955
                    add r11.xyz, -r9.zxyw, r9.yzxw

#line 466
                    cmp r7.zw, r11.x, r9.xyzy, r9.xyyz
                    min r4.w, r7.z, r9.x  // ::GetMinimum<0>
                    max r5.w, r9.x, r7.w  // ::GetMaximum<0>

#line 934
                    add r6.z, -r4.w, r5.w  // ::chroma<0>

#line 954
                    add r12.xyz, -r5.w, r9

#line 947
                    rcp r7.z, r6.z

#line 955
                    mul r7.w, r7.z, r11.x  // ::_h<0>
                    mad r11.zw, r11.xyxz, r7.z, -c148.xywy  // ::_h<0>

#line 948
                    cmp r7.w, r11.x, r7.w, r11.z  // ::_h<0>

#line 952
                    mad r7.z, r11.y, r7.z, -c60.y  // ::_h<0>

#line 955
                    cmp r9.w, -r12_abs.z, r11.w, c104.z  // ::_h<0>
                    cmp r7.z, -r12_abs.y, r7.z, r9.w  // ::_h<0>
                    cmp r7.z, -r12_abs.x, r7.w, r7.z  // ::_h<0>
                    mul r7.z, r7.z, c62.z  // ::_h<0>
                    cmp r10.x, -r6_abs.z, c104.z, r7.z  // ::_h<0>

#line 1349
                    add r5.w, -r5.w, -c149.y  // ::black<0>
                    mul r10.y, r4.w, c151.y  // ::Lrgb_HWB<1>
                    mul r10.z, r5.w, c151.y  // ::Lrgb_HWB<2>

#line 2489
                    mov r1.z, -c149.y
                  else
                    if_eq r7.x, -c36.z
                      mov r10.xyz, c104.z  // ::FLrgb<0,1,2>
                      mov r1.z, -c149.y
                    else
                      if_eq r7.x, -c36.w
                        mov r10.xyz, c104.z  // ::FLrgb<0,1,2>
                        mov r1.z, -c149.y
                      else
                        if_eq r7.x, -c37.x
                          mov r10.xyz, c104.z  // ::FLrgb<0,1,2>
                          mov r1.z, -c149.y
                        else
                          if_eq r7.x, -c37.y
                            mov r10.xyz, c104.z  // ::FLrgb<0,1,2>
                            mov r1.z, -c149.y
                          else
                            if_eq r7.x, -c37.z
                              mov r10.xyz, c104.z  // ::FLrgb<0,1,2>
                              mov r1.z, -c149.y
                            else
                              add r7.zw, r7.x, c158.xyxy
                              cmp r4.w, -r7_abs.w, c149_abs.y, c149_abs.x

#line 478
                              mul r11.xyz, r9.y, c18
                              mad r11.xyz, r9.x, c17, r11
                              mad r11.xyz, r9.z, c19, r11  // ::x<0>, ::y<0>, ::z<0>
                              mul r12.xyz, r11.y, c21
                              mad r11.xyw, r11.x, c20.xyzz, r12.xyzz
                              mad r11.xyz, r11.z, c22, r11.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 2496
                              cmp r11.xyz, -r7_abs.w, r11, r10  // ::FLrgb<0,1,2>
                              cmp r10.xyz, -r7_abs.z, c104.z, r11  // ::FLrgb<0,1,2>
                              cmp r1.z, -r7_abs.z, -c149.y, r4.w
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r1.z, -r1.z

#line 2516
              else

#line 2498
                if_eq r7.x, -c47.y

#line 516
                  abs r1.z, c13.x

#line 520
                  rcp r4.w, c13.x
                  mul r11.x, r4.w, c12.x  // ::xyY_XYZ<0>
                  mov r12.x, c13.x  // ::WhiteY<0>
                  add r5.w, -r12.x, -c12.x
                  add r5.w, r5.w, -c149.y
                  mul r11.z, r4.w, r5.w  // ::xyY_XYZ<2>
                  mov r11.y, -c149.y
                  cmp r11.xyz, -r1.z, c115.w, r11  // ::xyY_XYZ<0,1,2>

#line 579
                  cmp r7.zw, -r1.z, c128.xyxy, c128

#line 1657
                  mul r1.z, r7.z, r9.y  // ::yr<0>

#line 579
                  mul r4.w, r9.x, -c101.z
                  mad r5.w, r9.y, -c109.y, r9.x
                  mad r5.w, r9.z, -c101.x, r5.w
                  rcp r5.w, r5.w

#line 584
                  mul r6.z, r9.y, r5.w

#line 579
                  add r7.w, r7.w, r11.x
                  mul r9.w, r11.x, -c101.z
                  mad r7.w, r11.z, -c101.x, r7.w
                  rcp r7.w, r7.w
                  mul r9.w, r7.w, r9.w  // ::ComputeKu<0>

#line 584
                  mul r7.w, r11.y, r7.w
                  mul r7.w, r7.w, -c45.x  // ::ComputeKv<0>

#line 1664
                  mad r7.z, r9.y, -r7.z, c71.y
                  mul r1.z, r1.z, c71.z
                  cmp r1.z, r7.z, r1.z, c151.y  // ::L<0>

#line 1667
                  max r10.x, r1.z, c104.z  // ::L<0>

#line 1670
                  mul r1.z, r10.x, -c46.y
                  mad r4.w, r4.w, r5.w, -r9.w
                  mul r10.y, r1.z, r4.w  // ::u<0>

#line 1673
                  mad r4.w, r6.z, -c45.x, -r7.w
                  mul r10.z, r1.z, r4.w  // ::v<0>

#line 2498
                  mov r1.z, -c149.y
                else
                  if_eq r7.x, -c47.z

#line 527
                    add r4.w, r9.y, r9.x
                    add r4.w, r9.z, r4.w  // ::sum<0>

#line 532
                    rcp r5.w, r4.w
                    mul r7.zw, r5.w, r9.xyxy  // ::XYZ_xyY<0,1>
                    cmp r10.xy, -r4_abs.w, c104.z, r7.zwzw  // ::XYZ_xyY<0,1>

#line 2499
                    mov r10.z, r9.y
                    mov r1.z, -c149.y
                  else
                    if_eq r7.x, -c47.w

#line 1384
                      add r4.w, r9.y, r9.x
                      add r4.w, r9.z, r4.w  // ::sum<0>
                      rcp r5.w, r4.w
                      mul r7.zw, r5.w, r9.xyxy
                      cmp r7.zw, -r4_abs.w, c104.z, r7  // ::x<0>, ::y<0>

#line 1389
                      rcp r4.w, r7.w
                      mul r4.w, r4.w, r7.z
                      mov_sat r5.w, r4_abs.w
                      add r6.z, r4_abs.w, c149.y
                      rcp r9.w, r4_abs.w
                      cmp r6.z, r6.z, r9.w, -c149.y
                      mul r5.w, r5.w, r6.z
                      mul r6.z, r5.w, r5.w
                      mad r9.w, r6.z, c50.x, c50.y
                      mad r9.w, r6.z, r9.w, c51.w
                      mad r9.w, r6.z, r9.w, c50.z
                      mad r6.z, r6.z, r9.w, c50.w
                      mul r5.w, r5.w, r6.z
                      add r6.z, -r4_abs.w, -c149.y
                      cmp r6.z, r6.z, c149_abs.x, c149_abs.y
                      mad r9.w, r5.w, c52.x, c52.y
                      mad r5.w, r9.w, r6.z, r5.w
                      min r6.z, r4.w, -c149.y
                      cmp r4.w, r6.z, c149_abs.x, c149_abs.y
                      add r6.z, r5.w, r5.w
                      mad r4.w, r4.w, -r6.z, r5.w
                      mad r11.xy, r4.w, c79.x, c79.yzzw
                      cmp r4.w, r7.w, c104.z, r11.y
                      cmp r10.x, -r7.w, r4.w, r11.x  // ::tsl<0>
                      mul r7.zw, r7, r7
                      add r4.w, r7.w, r7.z
                      rsq r4.w, r4.w
                      rcp r10.y, r4.w  // ::tsl<1>
                      dp3 r10.z, r9, c141  // ::tsl<2>

#line 2500
                      mov r1.z, -c149.y
                    else
                      if_eq r7.x, -c65.x

#line 478
                        mul r11.xyz, r9.y, c18
                        mad r11.xyz, r9.x, c17, r11
                        mad r11.xyz, r9.z, c19, r11  // ::x<0>, ::y<0>, ::z<0>

#line 1955
                        mad r4.w, r11.y, -c101.x, -r11.x
                        add r4.w, r11.z, r4.w
                        mul r10.z, r4.w, -c127.z  // ::Lrgb_UCS<2>

#line 2501
                        mul r10.xy, r11, c161
                        mov r1.z, -c149.y
                      else
                        if_eq r7.x, -c65.y

#line 516
                          abs r4.w, c13.x

#line 520
                          rcp r5.w, c13.x
                          mul r11.x, r5.w, c12.x  // ::xyY_XYZ<0>
                          mov r12.x, c13.x  // ::WhiteY<0>
                          add r6.z, -r12.x, -c12.x
                          add r6.z, r6.z, -c149.y
                          mul r11.z, r5.w, r6.z  // ::xyY_XYZ<2>
                          mov r11.y, -c149.y
                          cmp r11.xyz, -r4.w, c115.w, r11  // ::xyY_XYZ<0,1,2>

#line 478
                          mul r12, r9.y, c18.xyzx
                          mad r12, r9.x, c17.xyzx, r12
                          mad r12, r9.z, c19.xyzx, r12  // ::x<0>, ::y<0>, ::z<0>, ::x<0>

#line 1993
                          cmp r4.w, -r4.w, c128.y, c128.w
                          add r4.w, r4.w, r11.x
                          mul r5.w, r11.x, -c101.z
                          mad r4.w, r11.z, -c101.x, r4.w
                          rcp r4.w, r4.w
                          mul r6.z, r11.y, r4.w

#line 1997
                          mul r11.xyz, r12.xyww, c139  // ::x<0>
                          add r7.z, r11.y, r11.x
                          mad r7.z, r12.z, c71.w, r7.z  // ::uv<0>
                          rcp r7.w, r7.z
                          mul r9.w, r7.w, r11.z
                          cmp r9.w, -r7_abs.z, c104.z, r9.w  // ::_u<0>
                          mul r7.w, r12.y, r7.w
                          mul r7.w, r7.w, c79.w
                          cmp r7.z, -r7_abs.z, c104.z, r7.w  // ::_v<0>

#line 2001
                          mad r4.w, r5.w, -r4.w, r9.w
                          mul r10.x, r4.w, c141.w  // ::u<0>
                          mad r4.w, r6.z, c103.z, r7.z
                          mul r10.y, r4.w, c141.w  // ::v<0>

#line 2502
                          mov r10.z, -c63.z
                          mov r1.z, -c149.y
                        else
                          if_eq r7.x, -c65.z

#line 2188
                            dp3 r4.w, r9, c137  // ::y<0>
                            add r7.zw, -r4.w, r9.xyzx

#line 2212
                            mad r10.x, r4.w, c147.z, c147.w  // ::Lrgb_xvYCC<0>
                            mad r10.yz, r7.xzww, c146.xxyw, c146.z  // ::Lrgb_xvYCC<1,2>

#line 2503
                            mov r1.z, -c149.y
                          else
                            if_eq r7.x, -c65.w

#line 478
                              mul r11.xyz, r9.y, c18
                              mad r11.xyz, r9.x, c17, r11
                              mad r10.xyz, r9.z, c19.xzyw, r11.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 527
                              add r4.w, r10.z, r10.x
                              add r4.w, r10.y, r4.w  // ::sum<0>

#line 532
                              rcp r5.w, r4.w
                              mul r7.zw, r5.w, r10.xyxz  // ::XYZ_xyY<0,1>
                              cmp r10.xy, -r4_abs.w, c104.z, r7.zwzw  // ::XYZ_xyY<0,1>

#line 2504
                              mov r1.z, -c149.y
                            else

#line 2507
                              add r11.xyz, r7.x, c40

#line 478
                              mul r12.xyz, r9.y, c18
                              mad r12.xyz, r9.x, c17, r12
                              mad r12.xyz, r9.z, c19, r12  // ::x<0>, ::y<0>, ::z<0>

#line 527
                              add r4.w, r12.y, r12.x
                              add r4.w, r12.z, r4.w  // ::sum<0>

#line 532
                              rcp r5.w, r4.w
                              mul r7.zw, r5.w, r12.xyxy  // ::XYZ_xyY<0,1>
                              cmp r13.xy, -r4_abs.w, c104.z, r7.zwzw  // ::XYZ_xyY<0,1>

#line 2507
                              cmp r4.w, -r11_abs.z, c149_abs.y, c149_abs.x

#line 2188
                              dp3 r5.w, r9, c137  // ::y<0>
                              add r7.zw, -r5.w, r9.xyzx

#line 2232
                              mad r14.x, r5.w, c147.z, c147.w  // ::Lrgb_YCbCr<0>
                              mad r14.yz, r7.xzww, c146.xxyw, c146.z  // ::Lrgb_YCbCr<1,2>

#line 2507
                              cmp r14.xyz, -r11_abs.z, r14, r10  // ::FLrgb<0,1,2>
                              cmp r12.xzw, -r11_abs.y, r12.xyyz, r14.xyyz  // ::FLrgb<0,1,2>
                              cmp r4.w, -r11_abs.y, -c149.y, r4.w
                              mov r13.z, r12.y
                              cmp r10.xyz, -r11_abs.x, r13, r12.xzww  // ::FLrgb<0,1,2>
                              cmp r1.z, -r11_abs.x, -c149.y, r4.w
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
                if_ne r1.z, -r1.z

#line 2516
                else

#line 2509
                  if_eq r7.x, -c40.w

#line 2082
                    mul r11.xyz, r9.xxyw, c140
                    add r7.zw, r11.z, r11.xyxy
                    mul r1.z, r9.z, -c127.z
                    mad r11.x, r9.z, c79.y, r7.z  // ::Lrgb_YCoCg<0>
                    mad r11.y, r9.z, -c79.y, r7.w  // ::Lrgb_YCoCg<1>
                    mad r11.z, r9.x, -c127.z, -r1.z  // ::Lrgb_YCoCg<2>

#line 2509
                    mov r1.z, -c149.y
                  else
                    if_eq c0.x, -r6.x

#line 2102
                      mul r12.xyz, r9.y, c106
                      mad r7.zw, r9.x, c161, r12.xyxz
                      mad r4.w, r9.x, c139.w, -r12.y
                      mad r11.y, r9.z, -c127.w, r4.w  // ::Lrgb_YDbDr<1>
                      mad r11.xz, r9.z, c73.xyyw, r7.zyww  // ::Lrgb_YDbDr<0,2>

#line 2510
                      mov r1.z, -c149.y
                    else
                      if_eq r7.x, -c48.x

#line 2136
                        mul r12.xyz, r9.y, -c140.wzyw
                        mad r11.xyz, r9.x, c72, r12  // ::Lrgb_YES<1>
                        mad r11.xz, r9.z, c73.zyww, r11  // ::Lrgb_YES<0,2>

#line 2511
                        mov r1.z, -c149.y
                      else

#line 2514
                        add r7.xzw, r7.x, c48.yyzw

#line 2188
                        mul r12, r9.y, c75
                        mad r12, r9.x, c74, r12

#line 2159
                        add r13.xy, -r9.yzzw, r9
                        cmp r13.xy, -r13_abs, c149_abs.x, c149_abs.y
                        add r4.w, r13.y, r13.x

#line 2188
                        mad r12, r9.z, c76, r12  // ::y<0>, ::i<0>, ::q<0>, ::y<0>

#line 2163
                        cmp r13.yz, -r4.w, c104.z, r12  // ::i<0>, ::q<0>

#line 2190
                        add r14.xy, r9.zxzw, -r12.w
                        mul r14.yz, r14.xxyw, c78.xxyw  // ::pb<0>, ::pr<0>

#line 2514
                        cmp r4.w, -r7_abs.w, c149_abs.y, c149_abs.x

#line 2294
                        mul r15.xy, r9.y, c78.zwzw
                        mad r15.xy, r9.x, c77, r15
                        mad r12.yz, r9.z, c77.xzww, r15.xxyw  // ::u<0>, ::v<0>

#line 2514
                        cmp r15.xyz, -r7_abs.w, r12, r10  // ::FLrgb<0,1,2>
                        mov r14.x, r12.w
                        cmp r12.yzw, -r7_abs.z, r14.xxyz, r15.xxyz  // ::FLrgb<0,1,2>
                        cmp r4.w, -r7_abs.z, -c149.y, r4.w
                        mov r13.x, r12.x
                        cmp r11.xyz, -r7_abs.x, r13, r12.yzww  // ::FLrgb<0,1,2>
                        cmp r1.z, -r7_abs.x, -c149.y, r4.w
                      endif
                    endif
                  endif
                  cmp r10.xyz, -r1.z, r9, r11  // ::FLrgb<0,1,2>
                endif
              endif
            endif
          endif

#line 466
          max r1.z, r8.y, r8.z
          max r4.w, r8.x, r1.z  // ::GetMaximum<0>

#line 2743
          add r1.z, -r4.w, c44.x
          mov r7.x, c6.x  // ::X<0>
          mul r5.w, r7.x, c43.x
          mul r9.x, r5.w, c106.w  // ::tx<0>
          mov r11.x, c7.x  // ::Y<0>
          mul r5.w, r11.x, c43.x
          mul r9.y, r5.w, c106.w  // ::ty<0>
          mov r12.x, c8.x  // ::Z<0>
          mul r5.w, r12.x, c43.x
          mul r9.z, r5.w, c106.w  // ::tz<0>

#line 2750
          add r4.w, -r4.w, c42.x
          mul r5.w, r7.x, c41.x
          mul r13.x, r5.w, c106.w  // ::tx<0>
          mul r5.w, r11.x, c41.x
          mul r13.y, r5.w, c106.w  // ::ty<0>
          mul r5.w, r12.x, c41.x
          mul r13.z, r5.w, c106.w  // ::tz<0>

#line 2759
          mul r5.w, r7.x, c39.x
          mul r14.x, r5.w, c106.w  // ::tx<0>
          mul r5.w, r11.x, c39.x
          mul r14.y, r5.w, c106.w  // ::ty<0>
          mul r5.w, r12.x, c39.x
          mul r14.z, r5.w, c106.w  // ::tz<0>
          cmp r7.xzw, r4.w, r13.xyyz, r14.xyyz  // ::tx<0>, ::ty<0>, ::tz<0>
          cmp r7.xzw, r1.z, r9.xyyz, r7  // ::tx<0>, ::ty<0>, ::tz<0>

#line 359
          add r1.z, r4.x, r5.x
          add r4.w, r5.x, r10.x
          add r1.z, r1.z, -r4.w
          mad r9.z, r1.z, r7.x, r10.x  // ::FLerp<0>
          add r1.z, r4.y, r5.y
          add r4.w, r5.y, r10.y
          add r1.z, r1.z, -r4.w
          mad r11.y, r1.z, r7.z, r10.y  // ::FLerp<1>
          add r1.z, r4.z, r5.z
          add r4.w, r5.z, r10.z
          add r1.z, r1.z, -r4.w
          mul r4.w, r7.w, r1.z
          mad r12.y, r1.z, r7.w, r10.z  // ::FLerp<2>

#line 2523
          if_eq c0.x, r0.z

#line 1813
            mul r1.z, r11.y, c72.w
            mad r13.x, r9.z, c81.x, r1.z  // ::RCA_Lrgb<0>
            mul r7.xz, r12.y, c81.yyxw
            mad r13.z, r11.y, c81.x, r7.x  // ::RCA_Lrgb<1>
            mad r13.y, r9.z, c72.w, r7.z  // ::RCA_Lrgb<2>

#line 2523
            mov r1.z, -c149.y
          else
            if_eq c0.x, -r6.y

#line 1892
              mul r5.w, r12.y, c72.w
              mad r13.x, r9.z, c81.x, r5.w  // ::RGV_Lrgb<0>
              mul r7.xz, r11.y, c81.xyyw
              mad r13.z, r9.z, c72.w, r7.x  // ::RGV_Lrgb<1>
              mad r13.y, r12.y, c81.x, r7.z  // ::RGV_Lrgb<2>

#line 2524
              mov r1.z, -c149.y
            else
              mov r7.x, c0.x  // ::Model<0>
              if_eq r7.x, -c101.x

#line 1904
                min r5.w, r12.y, r11.y
                min r6.z, r5.w, r9.z  // ::white<0>
                add r5.w, -r6.z, r9.z  // ::r<0>
                add r7.z, -r6.z, r11.y  // ::y<0>
                add r7.w, -r6.z, r12.y  // ::b<0>
                max r9.w, r7.z, r7.w
                max r10.x, r5.w, r9.w  // ::mY<0>
                min r14.z, r7.w, r7.z  // ::g<0>
                add r7.z, r7.z, -r14.z  // ::y<0>

#line 1915
                add r14.y, r7.w, -r14.z  // ::b<0>

#line 1921
                cmp r7.w, -r14.z, -c149_abs.x, -c149_abs.y
                cmp r7.w, -r14.y, c104.z, r7.w
                mul r10.yw, r14.xyzz, -c60.y
                cmp r14.yz, r7.w, r14, r10.xyww  // ::b<0>, ::g<0>
                add r14.x, r5.w, r7.z  // ::r<0>
                add r14.w, r7.z, r14.z  // ::g<0>
                max r5.w, r14.w, r14.y
                max r7.z, r14.x, r5.w  // ::mG<0>

#line 1930
                rcp r5.w, r7.z
                mul r5.w, r5.w, r10.x  // ::mN<0>

#line 1934
                mul r10.xyw, r5.w, r14.xwzy  // ::r<0>, ::g<0>, ::b<0>
                cmp r10.xyw, -r7.z, r14.xwzy, r10  // ::r<0>, ::g<0>, ::b<0>

#line 1939
                add r10.xyw, r6.z, r10  // ::r<0>, ::g<0>, ::b<0>
                frc r14.xyz, r10.xyww
                add r10.xyw, r10, -r14.xyzz
                mul r13.xyz, r10.xwyw, c81.z  // ::RYB_Lrgb<0,2,1>

#line 2525
                mov r1.z, -c149.y
              else
                if_eq r7.x, -c101.z

#line 663
                  add r13.x, -r9.z, -c149.y  // ::CMY_Lrgb<0>
                  add r13.z, -r11.y, -c149.y  // ::CMY_Lrgb<1>
                  add r13.y, -r12.y, -c149.y  // ::CMY_Lrgb<2>

#line 2526
                  mov r1.z, -c149.y
                else
                  if_eq r7.x, -c103.x

#line 713
                    mul r5.w, r11.y, c106.w  // ::c<0>
                    mul r10.xyw, r12.y, c106.w  // ::g<0,0,0>

#line 721
                    if_eq r5.w, c104.z

#line 770
                      mov r13.xyz, r10.xwyw  // ::HCV_Lrgb<0,2,1>
                    else

#line 713
                      mul r6.z, r9.z, c81.w  // ::h<0>

#line 721
                      cmp r7.z, r9.z, c56.x, c56.y
                      mul r6.z, r6.z, r7.z
                      frc r6.z, r6.z
                      mul r6.z, r6.z, r7.z
                      mul r7.z, r6.z, -c103.z  // ::hi<0>
                      cmp r6.z, r6.z, c56.x, c56.y
                      mul r7.w, r6.z, r7.z
                      frc r7.w, r7.w
                      mul r14.x, r6.z, r7.w  // ::v<0>

#line 726
                      frc r9.w, r7.z
                      add r7.z, r7.z, -r9.w  // ::fhi<0>

#line 752
                      add r15, r7.z, c162

#line 763
                      mov r14.yz, c149_abs.xxyw
                      mad r14.w, r6.z, -r7.w, -c149.y
                      cmp r16.xyz, -r15_abs.w, r14, r14.zyww  // ::pure<0,1,2>
                      mad r17.xyz, r14.xzyw, c56.yxxw, c56.xzzw
                      cmp r16.xyz, -r15_abs.z, r17.zxyw, r16  // ::pure<0,1,2>
                      cmp r15.yzw, -r15_abs.y, r14.xyzx, r16.xxyz  // ::pure<0,1,2>
                      cmp r15.xyz, -r15_abs.x, r17, r15.yzww  // ::pure<0,1,2>
                      cmp r14.xyz, -r7_abs.z, r14.zxyw, r15  // ::pure<0,1,2>

#line 769
                      lrp r13.xyz, r5.w, r14.xzyw, r10.w  // ::result<0,2,1>
                    endif

#line 2527
                    mov r1.z, -c149.y
                  else
                    if_eq r7.x, -c103.z

#line 805
                      cmp r7.zw, r9.z, c80.xyxy, c80
                      mul r5.w, r7.w, r9.z
                      frc r5.w, r5.w
                      mad r6.z, r7.z, r5.w, c151.x
                      mul r5.w, r5.w, c151.x
                      cmp r5.w, r9.z, r5.w, r6.z
                      mul r6.z, r11.y, c106.w  // ::s<0>
                      mul r7.z, r12.y, c81.z  // ::i<0>

#line 812
                      if_lt r5.w, c163.x
                        mad r7.w, r11.y, -c163.y, c163.z
                        mul r13.y, r7.w, r7.z  // ::b<0>
                        mad r7.w, r5.w, c164.x, c164.y
                        frc r7.w, r7.w
                        mad r7.w, r7.w, c164.z, c164.w
                        sincos r14.x, r7.w
                        mul r7.w, r6.z, r14.x
                        mad r9.w, r5.w, -c82.x, c82.y
                        mad r9.w, r9.w, c82.z, c82.w
                        frc r9.w, r9.w
                        mad r9.w, r9.w, c164.z, c164.w
                        sincos r15.x, r9.w
                        rcp r9.w, r15.x
                        mad r7.w, r7.w, r9.w, -c149.y
                        mul r13.x, r7.w, r7.z  // ::r<0>
                        mad r7.w, r14.x, -r9.w, -c149.y
                        mad r7.w, r6.z, r7.w, -c149.y
                        mul r13.z, r7.w, r7.z  // ::g<0>
                      else
                        if_lt r5.w, c153.y
                          mad r7.w, r5.w, c107.x, c107.y  // ::h<0>
                          mad r9.w, r11.y, -c163.y, c163.z
                          mul r13.x, r7.z, r9.w  // ::r<0>
                          mad r9.w, r7.w, c82.z, c82.w
                          frc r9.w, r9.w
                          mad r9.w, r9.w, c164.z, c164.w
                          sincos r14.x, r9.w
                          mul r9.w, r6.z, r14.x
                          add r7.w, -r7.w, c163.w
                          mad r7.w, r7.w, c82.z, c82.w
                          frc r7.w, r7.w
                          mad r7.w, r7.w, c164.z, c164.w
                          sincos r15.x, r7.w
                          rcp r7.w, r15.x
                          mad r9.w, r9.w, r7.w, -c149.y
                          mul r13.z, r7.z, r9.w  // ::g<0>

#line 823
                          mad r7.w, r14.x, -r7.w, -c149.y
                          mad r7.w, r6.z, r7.w, -c149.y
                          mul r13.y, r7.w, r7.z  // ::b<0>
                        else

#line 827
                          mad r5.w, r5.w, c107.x, c107.z  // ::h<0>
                          mad r7.w, r11.y, -c163.y, c163.z
                          mul r13.z, r7.w, r7.z  // ::g<0>
                          mad r7.w, r5.w, c82.z, c82.w
                          frc r7.w, r7.w
                          mad r7.w, r7.w, c164.z, c164.w
                          sincos r14.x, r7.w
                          mul r7.w, r6.z, r14.x
                          add r5.w, -r5.w, c163.w
                          mad r5.w, r5.w, c82.z, c82.w
                          frc r5.w, r5.w
                          mad r5.w, r5.w, c164.z, c164.w
                          sincos r15.x, r5.w
                          rcp r5.w, r15.x
                          mad r7.w, r7.w, r5.w, -c149.y
                          mul r13.y, r7.w, r7.z  // ::b<0>
                          mad r5.w, r14.x, -r5.w, -c149.y
                          mad r5.w, r6.z, r5.w, -c149.y
                          mul r13.x, r5.w, r7.z  // ::r<0>
                        endif
                      endif

#line 2528
                      mov r1.z, -c149.y
                    else
                      if_eq r7.x, -c63.x

#line 1699
                        if_lt c151.y, r12.y

#line 1707
                          mad r13.xyz, r9.z, c87.xyxw, c87.zxxw
                        else

#line 1699
                          add r5.w, r12.y, c107.w

#line 1702
                          if_lt r12.y, -c107.w
                            cmp r9.xy, r5.w, c83, c83.y  // ::HPLuv_Lrgb<0,1>

#line 1707
                            mov r13.xyz, r9.xzyw  // ::HPLuv_Lrgb<0,2,1>
                          else

#line 394
                            add r5.w, r12.y, c60.w
                            mul r6.z, r5.w, r5.w
                            mul r7.z, r5.w, r6.z
                            mul r7.z, r7.z, c83.z  // ::s1<0>
                            mad r6.z, r5.w, -r6.z, c83.w

#line 1632
                            mul r14, r12.y, c86

#line 395
                            cmp r6.z, r6.z, r14.x, r7.z  // ::s2<0>

#line 380
                            mul r7.z, r12.y, r6.z
                            mul r7.w, r7.z, c84.x  // ::y<0>
                            mul r10.xy, r6.z, c84.yzzw  // ::x<0>, ::z<0>
                            rcp r9.w, r10.y
                            mul r10.y, r9.w, r10.x  // ::GetBounds2<0>
                            mul r7.w, r7.w, r9.w  // ::GetBounds2<1>

#line 411
                            rcp r10.w, r10.y

#line 374
                            mad r9.w, r10.x, -r9.w, -r10.w
                            rcp r9.w, r9.w
                            mul r9.w, r7.w, r9.w  // ::GetIntersection<0>

#line 412
                            mad r7.w, r9.w, r10.y, r7.w  // GetDistance::input<1>

#line 369
                            mul r7.w, r7.w, r7.w
                            mad r7.w, r9.w, r9.w, r7.w
                            rsq r7.w, r7.w
                            rcp r7.w, r7.w  // ::GetDistance<0>

#line 414
                            min r9.w, r7.w, c84.w  // ::GetChroma1a<0>

#line 380
                            mad r7.z, r7.z, c84.x, -r14.y  // ::y<0>
                            mad r6.z, r6.z, c85.x, c85.y  // ::z<0>
                            rcp r6.z, r6.z
                            mul r7.w, r6.z, r10.x  // ::GetBounds2<0>
                            mul r7.z, r6.z, r7.z  // ::GetBounds2<1>

#line 411
                            rcp r10.y, r7.w

#line 374
                            mad r6.z, r10.x, -r6.z, -r10.y
                            rcp r6.z, r6.z
                            mul r6.z, r6.z, r7.z  // ::GetIntersection<0>

#line 412
                            mad r7.z, r6.z, r7.w, r7.z  // GetDistance::input<1>

#line 369
                            mul r7.z, r7.z, r7.z
                            mad r6.z, r6.z, r6.z, r7.z
                            rsq r6.z, r6.z
                            rcp r6.z, r6.z  // ::GetDistance<0>

#line 414
                            min r7.z, r6.z, r9.w  // ::GetChroma1a<0>

#line 1703
                            mul r6.z, r11.y, r7.z
                            mul r6.z, r6.z, c106.w  // ::C<0>

#line 597
                            mad r7.z, r9.z, c164.x, c164.y
                            frc r7.z, r7.z
                            mad r7.z, r7.z, c164.z, c164.w
                            sincos r15.xy, r7.z
                            mul r7.zw, r6.z, r15.xyxy  // ::a<0>, ::b<0>

#line 516
                            abs r6.z, c13.x

#line 520
                            rcp r9.w, c13.x
                            mul r15.x, r9.w, c12.x  // ::xyY_XYZ<0>
                            mov r10.x, c13.x  // ::WhiteY<0>
                            add r10.x, -r10.x, -c12.x
                            add r10.x, r10.x, -c149.y
                            mul r15.z, r9.w, r10.x  // ::xyY_XYZ<2>
                            mov r15.y, -c149.y
                            cmp r10.xyw, -r6.z, c115.w, r15.xyzz  // ::xyY_XYZ<0,1,2>

#line 579
                            cmp r6.z, -r6.z, c128.y, c128.w
                            add r6.z, r6.z, r10.x
                            mul r9.w, r10.x, -c101.z
                            mad r6.z, r10.w, -c101.x, r6.z
                            rcp r6.z, r6.z
                            mul r9.w, r6.z, r9.w  // ::ComputeKu<0>

#line 584
                            mul r6.z, r10.y, r6.z
                            mul r6.z, r6.z, -c45.x  // ::ComputeKv<0>

#line 1630
                            add r10.x, -r12.y, c85.z
                            mul r5.w, r5.w, c85.w
                            mul r10.y, r5.w, r5.w
                            mul r5.w, r5.w, r10.y
                            cmp r5.w, r10.x, r14.x, r5.w  // ::Y<0>
                            mad r7.z, r14.w, r9.w, r7.z
                            rcp r7.z, r7.z
                            mad r7.z, r14.z, r7.z, c149.y
                            mul r7.z, r7.z, c62.x  // ::a<0>
                            mul r9.w, r5.w, c103.x  // ::b<0>
                            mul r10.x, r12.y, -c40.z
                            mad r6.z, r14.w, r6.z, r7.w
                            rcp r6.z, r6.z
                            mad r6.z, r10.x, r6.z, c103.x
                            mad r6.z, r5.w, r6.z, -r9.w
                            rcp r7.w, r7.z
                            mul r6.z, r6.z, r7.w  // ::X<0>
                            mad r7.z, r6.z, r7.z, r9.w  // ::Z<0>

#line 1641
                            max r7.w, r6.z, c104.z  // ::X<0>

#line 1644
                            max r6.z, r5.w, c104.z  // ::Y<0>

#line 1647
                            max r5.w, r7.z, c104.z  // ::Z<0>

#line 478
                            mul r10.xyw, r6.z, c24.xyzz
                            mad r10.xyw, r7.w, c23.xyzz, r10
                            mad r13.xyz, r5.w, c25.xzyw, r10.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 1707
                          endif
                        endif

#line 2529
                        mov r1.z, -c149.y
                      else
                        if_eq r7.x, -c63.z

#line 858
                          mul r5.w, r11.y, c106.w  // ::_s<0>
                          mul r14.y, r12.y, c106.w  // ::_b<0>

#line 861
                          add r6.z, -r9.z, c87.w

#line 873
                          mul r7.z, r9.z, c124.x
                          cmp r6.z, r6.z, r7.z, c124.y  // ::SectorPosition<0>
                          frc r7.z, r6.z
                          add r7.z, r6.z, -r7.z  // ::SectorNumber<0>

#line 877
                          add r6.z, r6.z, -r7.z  // ::FractionalSector<0>

#line 880
                          mad r7.w, r11.y, -c163.y, c163.z
                          mul r14.z, r7.w, r14.y  // ::p<0>
                          mad r7.w, r5.w, -r6.z, -c149.y
                          mul r14.w, r7.w, r14.y  // ::q<0>
                          add r6.z, -r6.z, -c149.y
                          mad r6.z, r5.w, -r6.z, -c149.y
                          mul r14.x, r6.z, r14.y  // ::t<0>

#line 909
                          add r15, r7.z, c162

#line 915
                          add r6.z, r7.z, c103.x

#line 920
                          cmp r10.xyw, -r6_abs.z, r14.yzzw, c104.z  // ::r<0>, ::g<0>, ::b<0>
                          cmp r10.xyw, -r15_abs.w, r14.xzzy, r10  // ::r<0>, ::g<0>, ::b<0>
                          cmp r10.xyw, -r15_abs.z, r14.zwzy, r10  // ::r<0>, ::g<0>, ::b<0>
                          cmp r10.xyw, -r15_abs.y, r14.zyzx, r10  // ::r<0>, ::g<0>, ::b<0>
                          cmp r10.xyw, -r15_abs.x, r14.wyzz, r10  // ::r<0>, ::g<0>, ::b<0>
                          cmp r10.xyw, -r7_abs.z, r14.yxzz, r10  // ::r<0>, ::g<0>, ::b<0>
                          cmp r13.xyz, -r5_abs.w, r14.y, r10.xwyw  // ::r<0>, ::b<0>, ::g<0>

#line 2530
                          mov r1.z, -c149.y
                        else
                          add r5.w, r7.x, c45.x
                          cmp r1.z, -r5_abs.w, c149_abs.y, c149_abs.x
                          if_eq r7.x, -c45.x

#line 967
                            mul r13.xyz, r12.y, c106.w  // ::l<0,0,0>

#line 974
                            if_lt -r11.y, c104.z

#line 967
                              mul r5.w, r11.y, c106.w  // ::s<0>
                              min r6.z, r9.z, c87.w  // ::h<0>
                              mul r7.x, r6.z, c124.x  // ::h<0>

#line 976
                              mad r7.z, r12.y, c124.z, c124.w
                              add r7.z, -r7_abs.z, -c149.y
                              mul r14.x, r5.w, r7.z  // ::chroma<0>
                              cmp r7.zw, r6.z, c155.xyxy, c155
                              mul r5.w, r7.w, r7.x
                              frc r5.w, r5.w
                              mad r5.w, r7.z, r5.w, c149.y
                              add r5.w, -r5_abs.w, -c149.y
                              mul r14.y, r5.w, r14.x  // ::v<0>

#line 997
                              add r15, -r6.z, c116

#line 1003
                              add r16, r6.z, -c116.wzyx

#line 1009
                              add r5.w, r6.z, c117.x
                              add r7.xz, -r6.z, c117.yyzw

#line 1014
                              cmp r7.xz, r7, -c149_abs.y, -c149_abs.x
                              cmp r5.w, r5.w, r7.x, c104.z
                              mov r14.z, c104.z
                              cmp r10.xyw, r5.w, c104.z, r14.xzzy  // ::result<0,1,2>
                              cmp r5.w, r16.w, r7.z, c104.z
                              cmp r7.xzw, r5.w, r10.xyyw, r14.yyzx  // ::result<0,1,2>
                              cmp r15, r15, -c149_abs.y, -c149_abs.x
                              cmp r10.xyw, r16.zyzx, r15.xyzz, c104.z
                              cmp r7.xzw, r10.x, r7, r14.zyyx  // ::result<0,1,2>
                              cmp r7.xzw, r10.y, r7, r14.zyxy  // ::result<0,1,2>
                              cmp r7.xzw, r10.w, r7, r14.yyxz  // ::result<0,1,2>
                              cmp r5.w, r6.z, r15.w, c104.z
                              cmp r7.xzw, r5.w, r7, r14.xyyz  // ::result<0,1,2>
                              mad r5.w, r14.x, c127.z, r13.y  // ::w<0>

#line 1019
                              add r13.xyz, r5.w, r7.xwzw  // ::result<0,2,1>

#line 1024
                            endif

#line 2531
                          else
                            mov r13.xyz, c104.z
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r1.z, -r1.z

#line 2573
          else

#line 2533
            mov r7.x, c0.x  // ::Model<0>
            if_eq r7.x, c127.x

#line 1744
              if_lt c151.y, r12.y

#line 1752
                mad r13.xyz, r9.z, c87.xyxw, c87.zxxw
              else

#line 1744
                add r1.z, r12.y, c107.w

#line 1747
                if_lt r12.y, -c107.w
                  cmp r13.xz, r1.z, c83.xyyw, c83.y  // ::HSLuv_Lrgb<0,1>

#line 1752
                  mov r13.y, r9.z
                else

#line 394
                  add r1.z, r12.y, c60.w
                  mul r5.w, r1.z, r1.z
                  mul r6.z, r1.z, r5.w
                  mul r6.z, r6.z, c83.z  // ::s1<0>
                  mad r5.w, r1.z, -r5.w, c83.w

#line 1632
                  mul r14, r12.y, c86

#line 395
                  cmp r5.w, r5.w, r14.x, r6.z  // ::s2<0>

#line 380
                  mul r6.z, r12.y, r5.w
                  mul r7.z, r6.z, c84.x  // ::y<0>
                  mul r15, r5.w, c138  // ::x<0>, ::z<0>, ::x<0>, ::z<0>
                  rcp r7.w, r15.y
                  mul r9.w, r7.w, r15.x  // ::GetBounds2<0>
                  mul r7.z, r7.w, r7.z  // ::GetBounds2<1>
                  mad r6.z, r6.z, c84.x, -r14.y  // ::y<0>
                  mad r10.xy, r5.w, c165, c165.z  // ::z<0,0>
                  rcp r7.w, r10.x
                  mul r10.x, r7.w, r15.x  // ::GetBounds2<0>
                  mul r6.z, r6.z, r7.w  // ::GetBounds2<1>
                  mul r7.w, r5.w, r14.y  // ::y<0>
                  rcp r10.w, r15.w
                  mul r11.w, r10.w, r15.z  // ::GetBounds2<0>
                  mul r10.w, r7.w, r10.w  // ::GetBounds2<1>
                  mad r12.w, r14.y, r5.w, -r14.y  // ::y<0>
                  rcp r10.y, r10.y
                  mul r13.w, r10.y, r15.z  // ::GetBounds2<0>
                  mul r10.y, r10.y, r12.w  // ::GetBounds2<1>
                  mul r15.xy, r5.w, c135  // ::x<0>, ::z<0>
                  rcp r14.y, r15.y
                  mul r15.y, r14.y, r15.x  // ::GetBounds2<0>
                  mul r7.w, r7.w, r14.y  // ::GetBounds2<1>
                  mad r5.w, r5.w, c165.w, c165.z  // ::z<0>
                  rcp r5.w, r5.w
                  mul r14.y, r5.w, r15.x  // ::GetBounds2<0>
                  mul r5.w, r5.w, r12.w  // ::GetBounds2<1>

#line 428
                  mad r12.w, r9.z, c164.x, c164.y
                  frc r12.w, r12.w
                  mad r12.w, r12.w, c164.z, c164.w
                  sincos r16.xy, r12.w
                  mad r9.w, r9.w, -r16.x, r16.y
                  rcp r9.w, r9.w
                  mul r7.z, r7.z, r9.w  // ::length<0>
                  min r9.w, r7.z, c84.w  // GetChroma2a::result<0>
                  cmp r7.z, r7.z, r9.w, c84.w  // GetChroma2a::result<0>
                  mad r9.w, r10.x, -r16.x, r16.y
                  rcp r9.w, r9.w
                  mul r6.z, r6.z, r9.w  // ::length<0>
                  min r9.w, r6.z, r7.z  // GetChroma2a::result<0>
                  cmp r6.z, r6.z, r9.w, r7.z  // GetChroma2a::result<0>
                  mad r7.z, r11.w, -r16.x, r16.y
                  rcp r7.z, r7.z
                  mul r7.z, r7.z, r10.w  // ::length<0>
                  min r9.w, r7.z, r6.z  // GetChroma2a::result<0>
                  cmp r6.z, r7.z, r9.w, r6.z  // GetChroma2a::result<0>
                  mad r7.z, r13.w, -r16.x, r16.y
                  rcp r7.z, r7.z
                  mul r7.z, r7.z, r10.y  // ::length<0>
                  min r9.w, r7.z, r6.z  // GetChroma2a::result<0>
                  cmp r6.z, r7.z, r9.w, r6.z  // GetChroma2a::result<0>
                  mad r7.z, r15.y, -r16.x, r16.y
                  rcp r7.z, r7.z
                  mul r7.z, r7.z, r7.w  // ::length<0>
                  min r9.w, r7.z, r6.z  // GetChroma2a::result<0>
                  cmp r6.z, r7.z, r9.w, r6.z  // GetChroma2a::result<0>
                  mad r7.z, r14.y, -r16.x, r16.y
                  rcp r7.z, r7.z
                  mul r5.w, r5.w, r7.z  // ::length<0>
                  min r7.z, r5.w, r6.z  // GetChroma2a::result<0>
                  cmp r5.w, r5.w, r7.z, r6.z  // GetChroma2a::result<0>

#line 1748
                  mul r5.w, r11.y, r5.w
                  mul r5.w, r5.w, c106.w  // ::C<0>

#line 598
                  mul r7.zw, r16.xyxy, r5.w  // ::a<0>, ::b<0>

#line 516
                  abs r5.w, c13.x

#line 520
                  rcp r6.z, c13.x
                  mul r15.x, r6.z, c12.x  // ::xyY_XYZ<0>
                  mov r10.x, c13.x  // ::WhiteY<0>
                  add r9.w, -r10.x, -c12.x
                  add r9.w, r9.w, -c149.y
                  mul r15.z, r6.z, r9.w  // ::xyY_XYZ<2>
                  mov r15.y, -c149.y
                  cmp r10.xyw, -r5.w, c115.w, r15.xyzz  // ::xyY_XYZ<0,1,2>

#line 579
                  cmp r5.w, -r5.w, c128.y, c128.w
                  add r5.w, r5.w, r10.x
                  mul r6.z, r10.x, -c101.z
                  mad r5.w, r10.w, -c101.x, r5.w
                  rcp r5.w, r5.w
                  mul r6.z, r5.w, r6.z  // ::ComputeKu<0>

#line 584
                  mul r5.w, r10.y, r5.w
                  mul r5.w, r5.w, -c45.x  // ::ComputeKv<0>

#line 1630
                  add r9.w, -r12.y, c85.z
                  mul r1.z, r1.z, c85.w
                  mul r10.x, r1.z, r1.z
                  mul r1.z, r1.z, r10.x
                  cmp r1.z, r9.w, r14.x, r1.z  // ::Y<0>
                  mad r6.z, r14.w, r6.z, r7.z
                  rcp r6.z, r6.z
                  mad r6.z, r14.z, r6.z, c149.y
                  mul r6.z, r6.z, c62.x  // ::a<0>
                  mul r7.z, r1.z, c103.x  // ::b<0>
                  mul r9.w, r12.y, -c40.z
                  mad r5.w, r14.w, r5.w, r7.w
                  rcp r5.w, r5.w
                  mad r5.w, r9.w, r5.w, c103.x
                  mad r5.w, r1.z, r5.w, -r7.z
                  rcp r7.w, r6.z
                  mul r5.w, r5.w, r7.w  // ::X<0>
                  mad r6.z, r5.w, r6.z, r7.z  // ::Z<0>

#line 1641
                  max r7.z, r5.w, c104.z  // ::X<0>

#line 1644
                  max r5.w, r1.z, c104.z  // ::Y<0>

#line 1647
                  max r1.z, r6.z, c104.z  // ::Z<0>

#line 478
                  mul r10.xyw, r5.w, c24.xyzz
                  mad r10.xyw, r7.z, c23.xyzz, r10
                  mad r13.xyz, r1.z, c25.xzyw, r10.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 1752
                endif
              endif

#line 2533
              mov r1.z, -c149.y
            else
              if_eq r7.x, -c64.x

#line 1064
                mad r5.w, r9.z, c164.x, c164.y
                frc r5.w, r5.w
                mad r5.w, r5.w, c164.z, c164.w
                sincos r14.x, r5.w  // ::h<0>
                mul r5.w, r11.y, r14.x

#line 1068
                mul r6.z, r5.w, c117.w  // ::j<0>

#line 1076
                mul r13.xz, r12.y, c135.zyww  // ::m<0>
                mad r5.w, r5.w, c117.w, r13.z
                mad r5.w, r12.y, -c134.x, r5.w
                mul r13.z, r5.w, c79.y  // ::g<0>
                mad r5.w, r12.y, c134.y, -r6.z
                mul r13.y, r5.w, -c127.z  // ::b<0>

#line 2534
                mov r1.z, -c149.y
              else
                if_eq r7.x, -c68.z

#line 1141
                  mad r5.w, r11.y, -c163.y, c163.z  // ::minOverMax<0>
                  if_lt -r5.w, c104.z

#line 1146
                    if_lt r9.z, c62.z
                      mul r6.z, r9.z, c124.x  // ::h<0>
                      rcp r7.z, r5.w
                      lrp r9.w, r6.z, r7.z, -c149.y  // ::part<0>
                      mul r7.w, r7.z, r7.z
                      mul r9.w, r9.w, r9.w
                      mul r9.w, r9.w, c120.y
                      mad r7.w, r7.w, c120.x, r9.w
                      add r7.w, r7.w, c69.w
                      rsq r7.w, r7.w
                      mul r14.z, r7.w, r12.y  // ::b<0>
                      mul r14.x, r7.z, r14.z  // ::r<0>
                      mad r7.z, r14.z, r7.z, -r14.z
                      mad r14.y, r6.z, r7.z, r14.z  // ::g<0>
                    else
                      if_lt r9.z, c163.x

#line 1157
                        mad r6.z, r9.z, -c134.z, c134.w
                        mul r6.z, r6.z, -c103.z  // ::h<0>
                        rcp r7.z, r5.w
                        lrp r9.w, r6.z, r7.z, -c149.y  // ::part<0>
                        mul r7.w, r7.z, r7.z
                        mul r9.w, r9.w, r9.w
                        mul r9.w, r9.w, c120.x
                        mad r7.w, r7.w, c120.y, r9.w
                        add r7.w, r7.w, c69.w
                        rsq r7.w, r7.w
                        mul r14.z, r7.w, r12.y  // ::b<0>
                        mul r14.y, r7.z, r14.z  // ::g<0>
                        mad r7.z, r14.z, r7.z, -r14.z
                        mad r14.x, r6.z, r7.z, r14.z  // ::r<0>
                      else
                        if_lt r9.z, c108.x
                          mad r6.z, r9.z, c108.y, c108.z
                          mul r6.z, r6.z, -c103.z  // ::h<0>
                          rcp r7.z, r5.w
                          lrp r9.w, r6.z, r7.z, -c149.y  // ::part<0>

#line 1168
                          mul r7.w, r7.z, r7.z
                          mul r9.w, r9.w, r9.w
                          mul r9.w, r9.w, c69.w
                          mad r7.w, r7.w, c120.y, r9.w
                          add r7.w, r7.w, c120.x
                          rsq r7.w, r7.w
                          mul r14.x, r7.w, r12.y  // ::r<0>
                          mul r14.y, r7.z, r14.x  // ::g<0>
                          mad r7.z, r14.x, r7.z, -r14.x
                          mad r14.z, r6.z, r7.z, r14.x  // ::b<0>
                        else
                          if_lt r9.z, c153.y
                            mad r6.z, r9.z, -c108.y, c108.w
                            mul r6.z, r6.z, -c103.z  // ::h<0>
                            rcp r7.z, r5.w
                            lrp r9.w, r6.z, r7.z, -c149.y  // ::part<0>
                            mul r7.w, r7.z, r7.z
                            mul r9.w, r9.w, r9.w
                            mul r9.w, r9.w, c120.y
                            mad r7.w, r7.w, c69.w, r9.w
                            add r7.w, r7.w, c120.x
                            rsq r7.w, r7.w
                            mul r14.x, r7.w, r12.y  // ::r<0>
                            mul r14.z, r7.z, r14.x  // ::b<0>

#line 1179
                            mad r7.z, r14.x, r7.z, -r14.x
                            mad r14.y, r6.z, r7.z, r14.x  // ::g<0>
                          else
                            add r6.z, r9.z, -c71.w
                            mad r7.z, r9.z, c88.x, c88.y
                            mul r7.z, r7.z, -c103.z  // ::h<0>
                            rcp r5.w, r5.w
                            lrp r9.w, r7.z, r5.w, -c149.y  // ::part<0>
                            mul r7.w, r5.w, r5.w

#line 1195
                            mul r10.xy, r7.w, c141.zxzw

#line 1186
                            mul r7.w, r9.w, r9.w
                            mad r7.w, r7.w, c120.x, r10.x
                            add r7.w, r7.w, c120.y
                            rsq r7.w, r7.w
                            mul r15.y, r7.w, r12.y  // ::g<0>
                            mul r15.z, r5.w, r15.y  // ::b<0>
                            mad r7.w, r15.y, r5.w, -r15.y
                            mad r15.x, r7.z, r7.w, r15.y  // ::r<0>

#line 1193
                            mad r7.z, r9.z, -c88.x, c88.z
                            mul r7.z, r7.z, -c103.z  // ::h<0>
                            lrp r9.w, r7.z, r5.w, -c149.y  // ::part<0>
                            mul r7.w, r9.w, r9.w
                            mad r7.w, r7.w, c69.w, r10.y
                            add r7.w, r7.w, c120.y
                            rsq r7.w, r7.w
                            mul r16.y, r7.w, r12.y  // ::g<0>
                            mul r16.x, r5.w, r16.y  // ::r<0>
                            mad r5.w, r16.y, r5.w, -r16.y
                            mad r16.z, r7.z, r5.w, r16.y  // ::b<0>
                            cmp r14.xyz, r6.z, r16, r15  // ::r<0>, ::g<0>, ::b<0>
                          endif
                        endif
                      endif
                    endif
                  else

#line 1203
                    if_lt r9.z, c62.z
                      mul r5.w, r9.z, c124.x  // ::h<0>
                      mul r6.z, r12.y, r12.y
                      mul r7.z, r9.z, r5.w
                      mad r7.z, r7.z, c121.x, c121.y
                      rcp r7.z, r7.z
                      mul r6.z, r6.z, r7.z
                      rsq r6.z, r6.z
                      rcp r14.x, r6.z  // ::r<0>
                      mul r14.y, r5.w, r14.x  // ::g<0>
                      mov r14.z, c104.z
                    else
                      if_lt r9.z, c163.x
                        mad r5.w, r9.z, -c134.z, c134.w
                        mul r6.z, r5.w, -c103.z  // ::h<0>

#line 1214
                        mul r7.z, r12.y, r12.y
                        mul r5.w, r5.w, r6.z
                        mad r5.w, r5.w, c121.z, c121.w
                        rcp r5.w, r5.w
                        mul r5.w, r5.w, r7.z
                        rsq r5.w, r5.w
                        rcp r14.y, r5.w  // ::g<0>
                        mul r14.x, r6.z, r14.y  // ::r<0>
                        mov r14.z, c104.z
                      else

#line 1237
                        mad r7.zw, r9.z, c88.x, c88.xywy
                        mul r10.xy, r7.zwzw, -c103.z  // ::h<0,0>

#line 1222
                        mul r5.w, r12.y, r12.y

#line 1238
                        mul r7.zw, r7, r10.xyxy
                        mad r7.zw, r7, c123.xyxy, c123

#line 1222
                        rcp r6.z, r7.z
                        mul r6.z, r5.w, r6.z
                        rsq r6.z, r6.z
                        rcp r15.y, r6.z  // ::g<0>
                        mul r15.z, r10.x, r15.y  // ::b<0>

#line 1245
                        mad r10.xw, r9.z, -c88_abs.x, c88_abs.yyzz
                        mul r16.xy, r10.xwzw, -c103.z  // ::h<0,0>
                        mul r10.xw, r10, r16.xyzy
                        mad r10.xw, r10, c122.xyzy, c122.zyzw

#line 1230
                        rcp r6.z, r10.x
                        mul r6.z, r5.w, r6.z
                        rsq r6.z, r6.z
                        rcp r17.z, r6.z  // ::b<0>
                        mul r17.y, r16.x, r17.z  // ::g<0>

#line 1235
                        add r16.xzw, r9.z, c119.xyyz

#line 1238
                        rcp r6.z, r7.w
                        mul r6.z, r5.w, r6.z
                        rsq r6.z, r6.z
                        rcp r18.z, r6.z  // ::b<0>
                        mul r18.x, r10.y, r18.z  // ::r<0>

#line 1246
                        rcp r6.z, r10.w
                        mul r5.w, r5.w, r6.z
                        rsq r5.w, r5.w
                        rcp r19.x, r5.w  // ::r<0>
                        mul r19.z, r16.y, r19.x  // ::b<0>
                        mov r19.y, c104.z
                        mov r18.y, c104.z
                        cmp r10.xyw, r16.w, r19.xyzz, r18.xyzz  // ::r<0>, ::g<0>, ::b<0>
                        mov r17.x, c104.z
                        cmp r10.xyw, r16.z, r10, r17.xyzz  // ::r<0>, ::g<0>, ::b<0>
                        mov r15.x, c104.z
                        cmp r14.xyz, r16.x, r10.xyww, r15  // ::r<0>, ::g<0>, ::b<0>
                      endif
                    endif
                  endif

#line 1253
                  add r10.xyw, r14.xyzz, -c127.z
                  frc r14.xyz, r10.xyww
                  add r10.xyw, r10, -r14.xyzz
                  mul_sat r13.xyz, r10.xwyw, c81.z  // ::result<0,2,1>

#line 2535
                  mov r1.z, -c149.y
                else
                  if_eq r7.x, -c46.y

#line 1323
                    mul r5.w, r11.y, c106.w  // ::white<0>
                    mul r6.z, r12.y, c106.w  // ::black<0>
                    mad r6.z, r11.y, c106.w, r6.z

#line 1332
                    if_ge r6.z, -c149.y

#line 1328
                      rcp r6.z, r6.z
                      mul r13.xyz, r5.w, r6.z  // ::gray<0,0,0>

#line 1343
                    else

#line 861
                      add r6.z, -r9.z, c87.w

#line 873
                      mul r7.z, r9.z, c124.x
                      cmp r6.z, r6.z, r7.z, c124.y  // ::SectorPosition<0>
                      frc r7.z, r6.z
                      add r7.z, r6.z, -r7.z  // ::SectorNumber<0>

#line 877
                      add r6.z, r6.z, -r7.z  // ::FractionalSector<0>

#line 881
                      add r14.x, -r6.z, -c149.y  // ::q<0>

#line 909
                      add r15, r7.z, c162

#line 915
                      add r6.z, r7.z, c103.x
                      cmp r16.x, -r6_abs.z, c149_abs.y, c149_abs.x  // ::r<0>

#line 920
                      mov r14.y, c104.z
                      cmp r16.yz, -r6_abs.z, r14.xyxw, c104.z  // ::g<0>, ::b<0>
                      mad r14.zw, r14.x, c56.xyyz, c56.x
                      cmp r10.xyw, -r15_abs.w, r14.zyzw, r16.xyzz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r10.xyw, -r15_abs.z, r14.yxzw, r10  // ::r<0>, ::g<0>, ::b<0>
                      mad r16.xyz, r14.wxyw, c56.xyxw, c56.zxzw
                      cmp r10.xyw, -r15_abs.y, r16.zxzy, r10  // ::r<0>, ::g<0>, ::b<0>
                      cmp r10.xyw, -r15_abs.x, r14.xwzy, r10  // ::r<0>, ::g<0>, ::b<0>
                      cmp r10.xyw, -r7_abs.z, r16.xyzz, r10  // ::r<0>, ::g<0>, ::b<0>

#line 1335
                      mad r6.z, r11.y, -c163.y, c163.z
                      mad r6.z, r12.y, -c106.w, r6.z

#line 1342
                      mad r13.xyz, r10.xwyw, r6.z, r5.w  // ::rgb<0,2,1>
                    endif

#line 2536
                    mov r1.z, -c149.y
                  else
                    if_eq r7.x, -c109.x

#line 478
                      mul r10.xyw, r11.y, c90.xyzz
                      mad r10.xyw, r9.z, c89.xyzz, r10
                      mad r13.xyz, r12.y, c91.xzyw, r10.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2537
                      mov r1.z, -c149.y
                    else
                      if_eq r7.x, -c109.y

#line 2240
                        add r5.w, r12.y, c104.w
                        mad r6.z, r5.w, c119.w, r9.z  // ::ycbcr<0>
                        add r7.z, r11.y, c104.w
                        mad r7.w, r7.z, -c90.w, r9.z
                        mad r5.w, r5.w, -c89.w, r7.w  // ::ycbcr<1>
                        mad r7.z, r7.z, c91.w, r9.z  // ::ycbcr<2>

#line 2220
                        add r6.z, r6.z, -c60.w
                        mul r7.w, r6.z, c96.x  // ::ypbpr<0>
                        add r5.w, r5.w, c104.w
                        add r7.z, r7.z, c104.w

#line 2175
                        mad r13.x, r7.z, c96.y, r7.w  // ::r<0>
                        mad r13.y, r5.w, c96.z, r7.w  // ::b<0>
                        mul r5.w, r13.x, c137.x
                        mad r5.w, r6.z, c96.x, -r5.w
                        mad r5.w, r13.y, -c137.z, r5.w
                        mul r13.z, r5.w, c96.w  // ::g<0>

#line 2538
                        mov r1.z, -c149.y
                      else
                        if_eq c0.x, r6.w

#line 1424
                          add r5.w, r9.z, c60.w
                          mul r5.w, r5.w, c85.w  // ::fy<0>
                          mad r6.z, r11.y, c95.x, r5.w  // ::fx<0>
                          mad r7.z, r12.y, -c95.y, r5.w  // ::fz<0>
                          mul r7.w, r6.z, r6.z
                          mul r9.w, r6.z, r7.w  // ::fx3<0>
                          mul r10.x, r7.z, r7.z
                          mul r10.y, r7.z, r10.x  // ::fz3<0>
                          mad r7.w, r6.z, -r7.w, c71.y
                          mad r6.z, r6.z, c95.z, c95.w
                          mul r6.z, r6.z, c86.x
                          cmp r6.z, r7.w, r6.z, r9.w  // ::xr<0>
                          add r7.w, -r9.z, c85.z
                          mul r9.w, r5.w, r5.w
                          mul r5.w, r5.w, r9.w
                          mul r9.w, r9.z, c86.x
                          cmp r5.w, r7.w, r9.w, r5.w  // ::yr<0>
                          mad r7.w, r7.z, -r10.x, c71.y
                          mad r7.z, r7.z, c95.z, c95.w
                          mul r7.z, r7.z, c86.x
                          cmp r7.z, r7.w, r7.z, r10.y  // ::zr<0>

#line 516
                          abs r7.w, c13.x

#line 520
                          rcp r9.w, c13.x
                          mul r14.x, r9.w, c12.x  // ::xyY_XYZ<0>
                          mov r10.x, c13.x  // ::WhiteY<0>
                          add r10.x, -r10.x, -c12.x
                          add r10.x, r10.x, -c149.y
                          mul r14.z, r9.w, r10.x  // ::xyY_XYZ<2>
                          mov r14.y, -c149.y
                          cmp r10.xyw, -r7.w, c115.w, r14.xyzz  // ::xyY_XYZ<0,1,2>

#line 1436
                          mul r13.x, r6.z, r10.x  // ::Lab_Lrgb<0>
                          mul r13.z, r5.w, r10.y  // ::Lab_Lrgb<1>
                          mul r13.y, r7.z, r10.w  // ::Lab_Lrgb<2>

#line 2539
                          mov r1.z, -c149.y
                        else
                          if_eq r7.x, -c35.x

#line 516
                            abs r5.w, c13.x

#line 520
                            rcp r6.z, c13.x
                            mul r14.x, r6.z, c12.x  // ::xyY_XYZ<0>
                            mov r10.x, c13.x  // ::WhiteY<0>
                            add r7.z, -r10.x, -c12.x
                            add r7.z, r7.z, -c149.y
                            mul r14.z, r6.z, r7.z  // ::xyY_XYZ<2>
                            mov r14.y, -c149.y
                            cmp r10.xyw, -r5.w, c115.w, r14.xyzz  // ::xyY_XYZ<0,1,2>

#line 560
                            add r7.zw, r10.xyxw, c92.xyxy

#line 563
                            cmp r6.z, -r7_abs.w, -c149_abs.y, -c149_abs.x
                            cmp r6.z, -r5.w, c104.z, r6.z
                            cmp r6.z, -r7_abs.z, r6.z, c104.z

#line 573
                            add r7.zw, r10.xyyw, r10.xyxy
                            mul r7.zw, r7, c92  // ::Ka<0,0>

#line 1480
                            mul r9.w, r9.z, c106.w
                            mul r9.w, r9.w, r9.w
                            mul r9.w, r10.y, r9.w  // ::Y<0>
                            rcp r7.z, r7.z
                            cmp r7.z, r6.z, r7.z, c93.x
                            mul r7.z, r7.z, r11.y
                            cmp r5.w, -r5.w, c114.z, c114.w
                            mul r5.w, r5.w, r9.w
                            rsq r10.y, r5.w
                            rcp r10.y, r10.y
                            mad r7.z, r7.z, r10.y, r5.w
                            mul r7.z, r10.x, r7.z  // ::X<0>
                            rcp r7.w, r7.w
                            cmp r6.z, r6.z, r7.w, c93.y
                            mul r6.z, r6.z, r12.y
                            mad r5.w, r6.z, r10.y, -r5.w
                            mul r5.w, -r10.w, r5.w  // ::Z<0>

#line 478
                            mul r10.xyw, r9.w, c24.xyzz
                            mad r10.xyw, r7.z, c23.xyzz, r10
                            mad r13.xyz, r5.w, c25.xzyw, r10.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2540
                            mov r1.z, -c149.y
                          else
                            if_eq r7.x, -c35.y

#line 1526
                              add r5.w, r9.z, -c71.x  // ::Jz<0>
                              mad r6.z, r5.w, c93.z, c93.w
                              rcp r6.z, r6.z

#line 1531
                              mul r7.zw, r11.y, c131.xyxy
                              mad r9.w, r5.w, r6.z, r7.z
                              mad r9.w, r12.y, c131.z, r9.w  // PerceptualQuantizerInverse::X<0>

#line 499
                              pow r10.x, r9.w, c131.w  // ::XX<0>
                              add r9.w, -r10.x, c70.z
                              mad r10.x, r10.x, c110.x, c110.y
                              rcp r10.x, r10.x
                              mul r9.w, r9.w, r10.x
                              pow r10.x, r9.w, c110.z

#line 1531
                              mad r7.zw, r5.w, r6.z, -r7
                              mad r7.zw, r12.y, -c130.xyxy, r7  // PerceptualQuantizerInverse::X<0,0>

#line 499
                              pow r5.w, r7.z, c131.w  // ::XX<0>
                              add r6.z, -r5.w, c70.z
                              mad r5.w, r5.w, c110.x, c110.y
                              rcp r5.w, r5.w
                              mul r5.w, r5.w, r6.z
                              pow r6.z, r5.w, c110.z
                              pow r5.w, r7.w, c131.w  // ::XX<0>
                              add r7.z, -r5.w, c70.z
                              mad r5.w, r5.w, c110.x, c110.y
                              rcp r5.w, r5.w
                              mul r5.w, r5.w, r7.z
                              pow r7.z, r5.w, c110.z

#line 1535
                              mul r14.xyz, r6.z, c133
                              mad r10.yw, r10.x, c130.xzzw, -r14.xxzz
                              mad r5.w, r10.x, c110.w, r14.y
                              mad r5.w, r7.z, -c133.w, r5.w  // ::Y<0>
                              mad r7.zw, r7.z, c132.xyxy, r10.xyyw  // ::X<0>, ::Z<0>
                              mul r5.w, r5.w, c94.w  // ::xyz<1>
                              mul r7.zw, r7, c94.w  // ::xyz<0,2>

#line 478
                              mul r10.xyw, r5.w, c24.xyzz
                              mad r10.xyw, r7.z, c23.xyzz, r10
                              mad r13.xyz, r7.w, c25.xzyw, r10.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2541
                              mov r1.z, -c149.y
                            else
                              add r5.w, r7.x, c35.z
                              cmp r1.z, -r5_abs.w, c149_abs.y, c149_abs.x

#line 516
                              abs r6.z, c13.x

#line 520
                              rcp r7.z, c13.x
                              mul r14.x, r7.z, c12.x  // ::xyY_XYZ<0>
                              mov r10.x, c13.x  // ::WhiteY<0>
                              add r7.w, -r10.x, -c12.x
                              add r7.w, r7.w, -c149.y
                              mul r14.z, r7.z, r7.w  // ::xyY_XYZ<2>
                              mov r14.y, -c149.y
                              cmp r10.xyw, -r6.z, c115.w, r14.xyzz  // ::xyY_XYZ<0,1,2>

#line 478
                              mul r14.xyz, r11.y, c27
                              mad r14.xyz, r9.z, c26, r14
                              mad r14.xyz, r12.y, c28, r14  // ::x<0>, ::y<0>, ::z<0>

#line 508
                              mul r15.xyz, r14, r14
                              mul r14.xyz, r14, r15  // ::Pow3<0,0,0>

#line 478
                              mul r15.xyz, r14.y, c33
                              mad r14.xyw, r14.x, c32.xyzz, r15.xyzz
                              mad r14.xyz, r14.z, c34, r14.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 1584
                              mul r10.xyw, r10, r14.xyzz  // ::xyz<0,1,2>

#line 478
                              mul r14.xyz, r10.y, c24
                              mad r14.xyz, r10.x, c23, r14
                              mad r10.xyw, r10.w, c25.xyzz, r14.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 2542
                              cmp r13.xyz, -r5_abs.w, r10.xwyw, r13  // ::TLrgb<0,2,1>
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r1.z, -r1.z

#line 2573
            else

#line 2544
              if_eq r7.x, -c35.w

#line 858
                mul r1.z, r11.y, c106.w  // ::_s<0>
                mul r14.y, r12.y, c106.w  // ::_b<0>

#line 861
                add r5.w, -r9.z, c87.w

#line 873
                mul r6.z, r9.z, c124.x
                cmp r5.w, r5.w, r6.z, c124.y  // ::SectorPosition<0>
                frc r6.z, r5.w
                add r6.z, r5.w, -r6.z  // ::SectorNumber<0>

#line 877
                add r5.w, r5.w, -r6.z  // ::FractionalSector<0>

#line 880
                mad r7.z, r11.y, -c163.y, c163.z
                mul r14.z, r7.z, r14.y  // ::p<0>
                mad r7.z, r1.z, -r5.w, -c149.y
                mul r14.w, r7.z, r14.y  // ::q<0>
                add r5.w, -r5.w, -c149.y
                mad r5.w, r1.z, -r5.w, -c149.y
                mul r14.x, r5.w, r14.y  // ::t<0>

#line 909
                add r15, r6.z, c162

#line 915
                add r5.w, r6.z, c103.x

#line 920
                cmp r10.xyw, -r5_abs.w, r14.yzzw, c104.z  // ::r<0>, ::g<0>, ::b<0>
                cmp r10.xyw, -r15_abs.w, r14.xzzy, r10  // ::r<0>, ::g<0>, ::b<0>
                cmp r10.xyw, -r15_abs.z, r14.zwzy, r10  // ::r<0>, ::g<0>, ::b<0>
                cmp r10.xyw, -r15_abs.y, r14.zyzx, r10  // ::r<0>, ::g<0>, ::b<0>
                cmp r10.xyw, -r15_abs.x, r14.wyzz, r10  // ::r<0>, ::g<0>, ::b<0>
                cmp r10.xyw, -r6_abs.z, r14.yxzz, r10  // ::r<0>, ::g<0>, ::b<0>
                cmp r13.xyz, -r1_abs.z, r14.y, r10.xwyw  // ::r<0>, ::b<0>, ::g<0>

#line 2544
                mov r1.z, -c149.y
              else
                if_eq r7.x, -c36.x

#line 967
                  mul r13.xyz, r12.y, c106.w  // ::l<0,0,0>

#line 974
                  if_lt -r11.y, c104.z

#line 967
                    mul r5.w, r11.y, c106.w  // ::s<0>
                    min r6.z, r9.z, c87.w  // ::h<0>
                    mul r7.z, r6.z, c124.x  // ::h<0>

#line 976
                    mad r7.w, r12.y, c124.z, c124.w
                    add r7.w, -r7_abs.w, -c149.y
                    mul r14.x, r5.w, r7.w  // ::chroma<0>
                    cmp r10.xy, r6.z, c155, c155.zwzw
                    mul r5.w, r7.z, r10.y
                    frc r5.w, r5.w
                    mad r5.w, r10.x, r5.w, c149.y
                    add r5.w, -r5_abs.w, -c149.y
                    mul r14.y, r5.w, r14.x  // ::v<0>

#line 997
                    add r15, -r6.z, c116

#line 1003
                    add r16, r6.z, -c116.wzyx

#line 1009
                    add r5.w, r6.z, c117.x
                    add r7.zw, -r6.z, c117.xyyz

#line 1014
                    cmp r7.zw, r7, -c149_abs.y, -c149_abs.x
                    cmp r5.w, r5.w, r7.z, c104.z
                    mov r14.z, c104.z
                    cmp r10.xyw, r5.w, c104.z, r14.xzzy  // ::result<0,1,2>
                    cmp r5.w, r16.w, r7.w, c104.z
                    cmp r10.xyw, r5.w, r10, r14.yzzx  // ::result<0,1,2>
                    cmp r15, r15, -c149_abs.y, -c149_abs.x
                    cmp r15.xyz, r16.zyxw, r15, c104.z
                    cmp r10.xyw, r15.x, r10, r14.zyzx  // ::result<0,1,2>
                    cmp r10.xyw, r15.y, r10, r14.zxzy  // ::result<0,1,2>
                    cmp r10.xyw, r15.z, r10, r14.yxzz  // ::result<0,1,2>
                    cmp r5.w, r6.z, r15.w, c104.z
                    cmp r10.xyw, r5.w, r10, r14.xyzz  // ::result<0,1,2>
                    mad r5.w, r14.x, c127.z, r13.y  // ::w<0>

#line 1019
                    add r13.xyz, r5.w, r10.xwyw  // ::result<0,2,1>

#line 1024
                  endif

#line 2545
                  mov r1.z, -c149.y
                else
                  if_eq r7.x, -c36.y

#line 1323
                    mul r5.w, r11.y, c106.w  // ::white<0>
                    mul r6.z, r12.y, c106.w  // ::black<0>
                    mad r6.z, r11.y, c106.w, r6.z

#line 1332
                    if_ge r6.z, -c149.y

#line 1328
                      rcp r6.z, r6.z
                      mul r13.xyz, r5.w, r6.z  // ::gray<0,0,0>

#line 1343
                    else

#line 861
                      add r6.z, -r9.z, c87.w

#line 873
                      mul r7.z, r9.z, c124.x
                      cmp r6.z, r6.z, r7.z, c124.y  // ::SectorPosition<0>
                      frc r7.z, r6.z
                      add r7.z, r6.z, -r7.z  // ::SectorNumber<0>

#line 877
                      add r6.z, r6.z, -r7.z  // ::FractionalSector<0>

#line 881
                      add r14.x, -r6.z, -c149.y  // ::q<0>

#line 909
                      add r15, r7.z, c162

#line 915
                      add r6.z, r7.z, c103.x
                      cmp r16.x, -r6_abs.z, c149_abs.y, c149_abs.x  // ::r<0>

#line 920
                      mov r14.y, c104.z
                      cmp r16.yz, -r6_abs.z, r14.xyxw, c104.z  // ::g<0>, ::b<0>
                      mad r14.zw, r14.x, c56.xyyz, c56.x
                      cmp r10.xyw, -r15_abs.w, r14.zyzw, r16.xyzz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r10.xyw, -r15_abs.z, r14.yxzw, r10  // ::r<0>, ::g<0>, ::b<0>
                      mad r16.xyz, r14.wxyw, c56.xyxw, c56.zxzw
                      cmp r10.xyw, -r15_abs.y, r16.zxzy, r10  // ::r<0>, ::g<0>, ::b<0>
                      cmp r10.xyw, -r15_abs.x, r14.xwzy, r10  // ::r<0>, ::g<0>, ::b<0>
                      cmp r10.xyw, -r7_abs.z, r16.xyzz, r10  // ::r<0>, ::g<0>, ::b<0>

#line 1335
                      mad r6.z, r11.y, -c163.y, c163.z
                      mad r6.z, r12.y, -c106.w, r6.z

#line 1342
                      mad r13.xyz, r10.xwyw, r6.z, r5.w  // ::rgb<0,2,1>
                    endif

#line 2546
                    mov r1.z, -c149.y
                  else
                    if_eq r7.x, -c36.z

#line 597
                      mad r5.w, r12.y, c164.x, c164.y
                      frc r5.w, r5.w
                      mad r5.w, r5.w, c164.z, c164.w
                      sincos r14.xy, r5.w
                      mul r7.zw, r11.y, r14.xyxy  // ::a<0>, ::b<0>

#line 1424
                      add r5.w, r9.z, c60.w
                      mul r6.z, r5.w, c85.w  // ::fy<0>
                      mul r7.w, r7.w, c95.y
                      mad r7.z, r7.z, c95.x, r6.z  // ::fx<0>
                      mad r5.w, r5.w, c85.w, -r7.w  // ::fz<0>
                      mul r7.w, r7.z, r7.z
                      mul r9.w, r7.w, r7.z  // ::fx3<0>
                      mul r10.x, r5.w, r5.w
                      mul r10.y, r5.w, r10.x  // ::fz3<0>
                      mad r7.w, r7.z, -r7.w, c71.y
                      mad r7.z, r7.z, c95.z, c95.w
                      mul r7.z, r7.z, c86.x
                      cmp r7.z, r7.w, r7.z, r9.w  // ::xr<0>
                      add r7.w, -r9.z, c85.z
                      mul r9.w, r6.z, r6.z
                      mul r6.z, r6.z, r9.w
                      mul r9.w, r9.z, c86.x
                      cmp r6.z, r7.w, r9.w, r6.z  // ::yr<0>
                      mad r7.w, r5.w, -r10.x, c71.y
                      mad r5.w, r5.w, c95.z, c95.w
                      mul r5.w, r5.w, c86.x
                      cmp r5.w, r7.w, r5.w, r10.y  // ::zr<0>

#line 516
                      abs r7.w, c13.x

#line 520
                      rcp r9.w, c13.x
                      mul r14.x, r9.w, c12.x  // ::xyY_XYZ<0>
                      mov r10.x, c13.x  // ::WhiteY<0>
                      add r10.x, -r10.x, -c12.x
                      add r10.x, r10.x, -c149.y
                      mul r14.z, r9.w, r10.x  // ::xyY_XYZ<2>
                      mov r14.y, -c149.y
                      cmp r10.xyw, -r7.w, c115.w, r14.xyzz  // ::xyY_XYZ<0,1,2>

#line 1436
                      mul r13.x, r7.z, r10.x  // ::Lab_Lrgb<0>
                      mul r13.z, r6.z, r10.y  // ::Lab_Lrgb<1>
                      mul r13.y, r5.w, r10.w  // ::Lab_Lrgb<2>

#line 2547
                      mov r1.z, -c149.y
                    else
                      if_eq r7.x, -c36.w

#line 597
                        mad r5.w, r12.y, c164.x, c164.y
                        frc r5.w, r5.w
                        mad r5.w, r5.w, c164.z, c164.w
                        sincos r14.xy, r5.w
                        mul r7.zw, r11.y, r14.xyxy  // ::a<0>, ::b<0>

#line 516
                        abs r5.w, c13.x

#line 520
                        rcp r6.z, c13.x
                        mul r14.x, r6.z, c12.x  // ::xyY_XYZ<0>
                        mov r10.x, c13.x  // ::WhiteY<0>
                        add r9.w, -r10.x, -c12.x
                        add r9.w, r9.w, -c149.y
                        mul r14.z, r6.z, r9.w  // ::xyY_XYZ<2>
                        mov r14.y, -c149.y
                        cmp r10.xyw, -r5.w, c115.w, r14.xyzz  // ::xyY_XYZ<0,1,2>

#line 560
                        add r14.xy, r10.xwzw, c92

#line 563
                        cmp r6.z, -r14_abs.y, -c149_abs.y, -c149_abs.x
                        cmp r6.z, -r5.w, c104.z, r6.z
                        cmp r6.z, -r14_abs.x, r6.z, c104.z

#line 573
                        add r14.xy, r10.ywzw, r10
                        mul r14.xy, r14, c92.zwzw  // ::Ka<0,0>

#line 1480
                        mul r9.w, r9.z, c106.w
                        mul r9.w, r9.w, r9.w
                        mul r9.w, r10.y, r9.w  // ::Y<0>
                        rcp r10.y, r14.x
                        cmp r10.y, r6.z, r10.y, c93.x
                        mul r7.z, r7.z, r10.y
                        cmp r5.w, -r5.w, c114.z, c114.w
                        mul r5.w, r5.w, r9.w
                        rsq r10.y, r5.w
                        rcp r10.y, r10.y
                        mad r7.z, r7.z, r10.y, r5.w
                        mul r7.z, r10.x, r7.z  // ::X<0>
                        rcp r10.x, r14.y
                        cmp r6.z, r6.z, r10.x, c93.y
                        mul r6.z, r6.z, r7.w
                        mad r5.w, r6.z, r10.y, -r5.w
                        mul r5.w, -r10.w, r5.w  // ::Z<0>

#line 478
                        mul r10.xyw, r9.w, c24.xyzz
                        mad r10.xyw, r7.z, c23.xyzz, r10
                        mad r13.xyz, r5.w, c25.xzyw, r10.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2548
                        mov r1.z, -c149.y
                      else
                        if_eq r7.x, -c37.x

#line 597
                          mad r5.w, r12.y, c164.x, c164.y
                          frc r5.w, r5.w
                          mad r5.w, r5.w, c164.z, c164.w
                          sincos r14.xy, r5.w
                          mul r14, r11.y, r14.xyxy  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1526
                          add r5.w, r9.z, -c71.x  // ::Jz<0>
                          mad r6.z, r5.w, c93.z, c93.w
                          rcp r6.z, r6.z

#line 1531
                          mul r7.zw, r14.xyxz, c131.xyxy
                          mad r9.w, r5.w, r6.z, r7.z
                          mad r9.w, r14.y, c131.z, r9.w  // PerceptualQuantizerInverse::X<0>

#line 499
                          pow r10.x, r9.w, c131.w  // ::XX<0>
                          add r9.w, -r10.x, c70.z
                          mad r10.x, r10.x, c110.x, c110.y
                          rcp r10.x, r10.x
                          mul r9.w, r9.w, r10.x
                          pow r10.x, r9.w, c110.z

#line 1531
                          mad r7.zw, r5.w, r6.z, -r7
                          mad r7.zw, r14.xyyw, -c130.xyxy, r7  // PerceptualQuantizerInverse::X<0,0>

#line 499
                          pow r5.w, r7.z, c131.w  // ::XX<0>
                          add r6.z, -r5.w, c70.z
                          mad r5.w, r5.w, c110.x, c110.y
                          rcp r5.w, r5.w
                          mul r5.w, r5.w, r6.z
                          pow r6.z, r5.w, c110.z
                          pow r5.w, r7.w, c131.w  // ::XX<0>
                          add r7.z, -r5.w, c70.z
                          mad r5.w, r5.w, c110.x, c110.y
                          rcp r5.w, r5.w
                          mul r5.w, r5.w, r7.z
                          pow r7.z, r5.w, c110.z

#line 1535
                          mul r14.xyz, r6.z, c133
                          mad r10.yw, r10.x, c130.xzzw, -r14.xxzz
                          mad r5.w, r10.x, c110.w, r14.y
                          mad r5.w, r7.z, -c133.w, r5.w  // ::Y<0>
                          mad r7.zw, r7.z, c132.xyxy, r10.xyyw  // ::X<0>, ::Z<0>
                          mul r5.w, r5.w, c94.w  // ::xyz<1>
                          mul r7.zw, r7, c94.w  // ::xyz<0,2>

#line 478
                          mul r10.xyw, r5.w, c24.xyzz
                          mad r10.xyw, r7.z, c23.xyzz, r10
                          mad r13.xyz, r7.w, c25.xzyw, r10.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2549
                          mov r1.z, -c149.y
                        else
                          if_eq r7.x, -c37.y

#line 597
                            mad r5.w, r12.y, c164.x, c164.y
                            frc r5.w, r5.w
                            mad r5.w, r5.w, c164.z, c164.w
                            sincos r14.xy, r5.w
                            mul r9.xy, r11.y, r14  // ::a<0>, ::b<0>

#line 1876
                            add r10.xyw, r9.xyzz, c83.xxzy
                            mul r14.xyz, r10.xyww, c132.zzww  // ::result<0,1,2>

#line 520
                            mul r5.w, r14.z, r14.x
                            rcp r6.z, r14.y
                            mul r15.x, r5.w, r6.z  // ::xyY_XYZ<0>
                            mad r5.w, r10.y, -c95.y, -r14.x
                            add r5.w, r5.w, -c149.y
                            mul r5.w, r14.z, r5.w
                            mul r15.z, r6.z, r5.w  // ::xyY_XYZ<2>
                            mov r15.y, r14.z
                            cmp r13.xyz, -r14_abs.y, c115.w, r15.xzyw  // ::xyY_XYZ<0,2,1>

#line 2550
                            mov r1.z, -c149.y
                          else
                            if_eq r7.x, -c37.z

#line 597
                              mad r5.w, r12.y, c164.x, c164.y
                              frc r5.w, r5.w
                              mad r5.w, r5.w, c164.z, c164.w
                              sincos r14.xy, r5.w
                              mul r7.zw, r11.y, r14.xyxy  // ::a<0>, ::b<0>

#line 516
                              abs r5.w, c13.x

#line 520
                              rcp r6.z, c13.x
                              mul r14.x, r6.z, c12.x  // ::xyY_XYZ<0>
                              mov r10.x, c13.x  // ::WhiteY<0>
                              add r9.w, -r10.x, -c12.x
                              add r9.w, r9.w, -c149.y
                              mul r14.z, r6.z, r9.w  // ::xyY_XYZ<2>
                              mov r14.y, -c149.y
                              cmp r10.xyw, -r5.w, c115.w, r14.xyzz  // ::xyY_XYZ<0,1,2>

#line 579
                              cmp r5.w, -r5.w, c128.y, c128.w
                              add r5.w, r5.w, r10.x
                              mul r6.z, r10.x, -c101.z
                              mad r5.w, r10.w, -c101.x, r5.w
                              rcp r5.w, r5.w
                              mul r6.z, r5.w, r6.z  // ::ComputeKu<0>

#line 584
                              mul r5.w, r10.y, r5.w
                              mul r5.w, r5.w, -c45.x  // ::ComputeKv<0>

#line 1630
                              add r9.w, -r9.z, c85.z
                              add r10.x, r9.z, c60.w
                              mul r10.x, r10.x, c85.w
                              mul r10.y, r10.x, r10.x
                              mul r10.x, r10.y, r10.x

#line 1635
                              mul r14, r9.z, c136

#line 1630
                              cmp r9.w, r9.w, r14.x, r10.x  // ::Y<0>
                              mad r6.z, r14.z, r6.z, r7.z
                              rcp r6.z, r6.z
                              mad r6.z, r14.y, r6.z, c149.y
                              mul r6.z, r6.z, c62.x  // ::a<0>
                              mul r7.z, r9.w, c103.x  // ::b<0>
                              mad r5.w, r14.z, r5.w, r7.w
                              rcp r5.w, r5.w
                              mad r5.w, r14.w, r5.w, c103.x
                              mad r5.w, r9.w, r5.w, -r7.z
                              rcp r7.w, r6.z
                              mul r5.w, r5.w, r7.w  // ::X<0>
                              mad r6.z, r5.w, r6.z, r7.z  // ::Z<0>

#line 1641
                              max r7.z, r5.w, c104.z  // ::X<0>

#line 1644
                              max r5.w, r9.w, c104.z  // ::Y<0>

#line 1647
                              max r7.w, r6.z, c104.z  // ::Z<0>

#line 478
                              mul r10.xyw, r5.w, c24.xyzz
                              mad r10.xyw, r7.z, c23.xyzz, r10
                              mad r13.xyz, r7.w, c25.xzyw, r10.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2551
                              mov r1.z, -c149.y
                            else
                              if_eq r7.x, -c37.w

#line 597
                                mad r5.w, r12.y, c164.x, c164.y
                                frc r5.w, r5.w
                                mad r5.w, r5.w, c164.z, c164.w
                                sincos r14.xy, r5.w
                                mul r9.xy, r11.y, r14  // ::a<0>, ::b<0>

#line 2024
                                add r9.xyw, r9.xyzz, c83.xxzy
                                mul r10.xyw, r9, c132.zzzw  // ::result<0,1,2>

#line 520
                                mul r5.w, r10.w, r10.x
                                rcp r6.z, r10.y
                                mul r14.x, r5.w, r6.z  // ::xyY_XYZ<0>
                                mad r5.w, r9.y, -c95.y, -r10.x
                                add r5.w, r5.w, -c149.y
                                mul r5.w, r10.w, r5.w
                                mul r14.z, r6.z, r5.w  // ::xyY_XYZ<2>
                                mov r14.y, r10.w
                                cmp r9.xyw, -r10_abs.y, c115.w, r14.xyzz  // ::xyY_XYZ<0,1,2>

#line 478
                                mul r10.xyw, r9.y, c24.xyzz
                                mad r10.xyw, r9.x, c23.xyzz, r10
                                mad r13.xyz, r9.w, c25.xzyw, r10.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2552
                                mov r1.z, -c149.y
                              else
                                add r5.w, r7.x, c47.x
                                cmp r1.z, -r5_abs.w, c149_abs.y, c149_abs.x

#line 478
                                mul r9.xyw, r11.y, c15.xyzz
                                mad r9.xyw, r9.z, c14.xyzz, r9
                                mad r9.xyw, r12.y, c16.xyzz, r9  // ::x<0>, ::y<0>, ::z<0>
                                mul r10.xyw, r9.y, c24.xyzz
                                mad r10.xyw, r9.x, c23.xyzz, r10
                                mad r9.xyw, r9.w, c25.xyzz, r10  // ::x<0>, ::y<0>, ::z<0>

#line 2553
                                cmp r13.xyz, -r5_abs.w, r9.xwyw, r13  // ::TLrgb<0,2,1>
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r1.z, -r1.z

#line 2573
              else

#line 2555
                if_eq r7.x, -c47.y

#line 516
                  abs r1.z, c13.x

#line 520
                  rcp r5.w, c13.x
                  mul r14.x, r5.w, c12.x  // ::xyY_XYZ<0>
                  mov r9.x, c13.x  // ::WhiteY<0>
                  add r6.z, -r9.x, -c12.x
                  add r6.z, r6.z, -c149.y
                  mul r14.z, r5.w, r6.z  // ::xyY_XYZ<2>
                  mov r14.y, -c149.y
                  cmp r9.xyw, -r1.z, c115.w, r14.xyzz  // ::xyY_XYZ<0,1,2>

#line 579
                  cmp r1.z, -r1.z, c128.y, c128.w
                  add r1.z, r1.z, r9.x
                  mul r5.w, r9.x, -c101.z
                  mad r1.z, r9.w, -c101.x, r1.z
                  rcp r1.z, r1.z
                  mul r5.w, r1.z, r5.w  // ::ComputeKu<0>

#line 584
                  mul r1.z, r9.y, r1.z
                  mul r1.z, r1.z, -c45.x  // ::ComputeKv<0>

#line 1630
                  add r6.z, -r9.z, c85.z
                  add r7.z, r9.z, c60.w
                  mul r7.z, r7.z, c85.w
                  mul r7.w, r7.z, r7.z
                  mul r7.z, r7.w, r7.z

#line 1635
                  mul r14, r9.z, c136

#line 1630
                  cmp r6.z, r6.z, r14.x, r7.z  // ::Y<0>
                  mad r5.w, r14.z, r5.w, r11.y
                  rcp r5.w, r5.w
                  mad r5.w, r14.y, r5.w, c149.y
                  mul r5.w, r5.w, c62.x  // ::a<0>
                  mul r7.z, r6.z, c103.x  // ::b<0>
                  mad r1.z, r14.z, r1.z, r12.y
                  rcp r1.z, r1.z
                  mad r1.z, r14.w, r1.z, c103.x
                  mad r1.z, r6.z, r1.z, -r7.z
                  rcp r7.w, r5.w
                  mul r1.z, r1.z, r7.w  // ::X<0>
                  mad r5.w, r1.z, r5.w, r7.z  // ::Z<0>

#line 1641
                  max r7.z, r1.z, c104.z  // ::X<0>

#line 1644
                  max r1.z, r6.z, c104.z  // ::Y<0>

#line 1647
                  max r6.z, r5.w, c104.z  // ::Z<0>

#line 478
                  mul r9.xyw, r1.z, c24.xyzz
                  mad r9.xyw, r7.z, c23.xyzz, r9
                  mad r13.xyz, r6.z, c25.xzyw, r9.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2555
                  mov r1.z, -c149.y
                else
                  if_eq r7.x, -c47.z

#line 520
                    mul r5.w, r9.z, r12.y
                    rcp r6.z, r11.y
                    mul r12.x, r5.w, r6.z  // ::xyY_XYZ<0>
                    add r5.w, -r9.z, -r11.y
                    add r5.w, r5.w, -c149.y
                    mul r5.w, r12.y, r5.w
                    mul r12.z, r6.z, r5.w  // ::xyY_XYZ<2>
                    cmp r13.xyz, -r11_abs.y, c115.w, r12.xzyw  // ::xyY_XYZ<0,2,1>

#line 2556
                    mov r1.z, -c149.y
                  else
                    if_eq r7.x, -c47.w

#line 1368
                      mad r5.w, r9.z, c140.x, c140.z
                      frc r5.w, r5.w
                      mad r5.w, r5.w, c164.z, c164.w
                      sincos r14.xy, r5.w
                      rcp r5.w, r14.x
                      mul r5.w, r5.w, r14.y  // ::x<0>
                      mul r6.z, r5.w, r5.w  // ::x<0>
                      mul r7.z, r11.y, r11.y
                      mul r7.z, r7.z, -c103.x
                      rcp r6.z, r6.z
                      add r6.z, r6.z, -c149.y
                      mul r6.z, r6.z, -c45.x
                      rcp r6.z, r6.z
                      mul r6.z, r6.z, r7.z
                      rsq r6.z, r6.z
                      rcp r6.z, r6.z  // ::r<0>
                      mad r5.w, r5.w, r5.w, -c149.y
                      mul r5.w, r5.w, -c45.x
                      rcp r5.w, r5.w
                      mul r5.w, r5.w, r7.z
                      rsq r5.w, r5.w
                      rcp r5.w, r5.w  // ::g<0>
                      mul r7.z, r5.w, c111.x
                      mad r7.z, r6.z, c111.y, r7.z
                      add r7.z, r7.z, c69.w
                      rcp r7.z, r7.z
                      mul r7.z, r7.z, r12.y  // ::k<0>
                      add r7.w, -r6.z, -c149.y
                      add r7.w, -r5.w, r7.w
                      mul r13.y, r7.w, r7.z  // ::B<0>
                      mul r13.z, r5.w, r7.z  // ::G<0>
                      mul r13.x, r6.z, r7.z  // ::R<0>

#line 2557
                      mov r1.z, -c149.y
                    else
                      if_eq r7.x, -c65.x

#line 1949
                        mul r5.w, r9.z, c111.z  // XYZ_Lrgb::input<0>
                        mad r6.z, r11.y, c101.x, r5.w
                        mad r6.z, r12.y, -c60.y, r6.z  // XYZ_Lrgb::input<2>

#line 478
                        mul r9.xyw, r11.y, c24.xyzz
                        mad r9.xyw, r5.w, c23.xyzz, r9
                        mad r13.xyz, r6.z, c25.xzyw, r9.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2558
                        mov r1.z, -c149.y
                      else
                        if_eq r7.x, -c65.y

#line 1969
                          if_eq r10.z, -r4.w

#line 1982
                            mov r13.xyz, c104.z  // ::UVW_Lrgb<0,2,1>
                          else

#line 516
                            abs r4.w, c13.x

#line 520
                            rcp r5.w, c13.x
                            mul r10.x, r5.w, c12.x  // ::xyY_XYZ<0>
                            mov r9.x, c13.x  // ::WhiteY<0>
                            add r6.z, -r9.x, -c12.x
                            add r6.z, r6.z, -c149.y
                            mul r10.z, r5.w, r6.z  // ::xyY_XYZ<2>
                            mov r10.y, -c149.y
                            cmp r9.xyw, -r4.w, c115.w, r10.xyzz  // ::xyY_XYZ<0,1,2>

#line 1970
                            cmp r4.w, -r4.w, c128.y, c128.w
                            add r4.w, r4.w, r9.x
                            mul r5.w, r9.x, -c101.z
                            mad r4.w, r9.w, -c101.x, r4.w
                            rcp r4.w, r4.w
                            mul r5.w, r4.w, r5.w  // ::uN<0>
                            mul r4.w, r9.y, r4.w
                            mul r4.w, r4.w, -c103.z  // ::vN<0>
                            add r6.z, r12.y, -c35.x
                            mul r6.z, r6.z, c111.w
                            mul r7.z, r6.z, r6.z
                            mul r6.z, r6.z, r7.z  // ::y<0>
                            mul r7.z, r12.y, -c46.y
                            rcp r7.w, r7.z
                            mad r5.w, r9.z, r7.w, r5.w
                            cmp r5.w, -r7_abs.z, c104.z, r5.w  // ::_u<0>
                            mad r4.w, r11.y, r7.w, r4.w
                            cmp r4.w, -r7_abs.z, c104.z, r4.w  // ::_v<0>
                            mul r7.z, r5.w, r6.z
                            rcp r4.w, r4.w
                            mul r7.z, r4.w, r7.z  // ::x<0>
                            add r7.w, r4.w, r4.w
                            mul r4.w, r5.w, r4.w
                            mad r4.w, r4.w, c127.z, r7.w
                            add r4.w, r4.w, c103.x
                            mul r4.w, r4.w, r6.z  // ::z<0>

#line 1981
                            mul r5.w, r7.z, c106.w  // ::xyz<0>
                            mul r6.z, r6.z, c106.w  // ::xyz<1>
                            mul r4.w, r4.w, c106.w  // ::xyz<2>

#line 478
                            mul r9.xyw, r6.z, c24.xyzz
                            mad r9.xyw, r5.w, c23.xyzz, r9
                            mad r13.xyz, r4.w, c25.xzyw, r9.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 1982
                          endif

#line 2559
                          mov r1.z, -c149.y
                        else
                          if_eq r7.x, -c65.z

#line 2200
                            add r4.w, r9.z, -c60.w
                            mul r5.w, r4.w, c96.x  // ::ypbpr<0>
                            add r6.z, r11.y, c104.w
                            add r7.z, r12.y, c104.w

#line 2175
                            mad r13.x, r7.z, c96.y, r5.w  // ::r<0>
                            mad r13.y, r6.z, c96.z, r5.w  // ::b<0>
                            mul r5.w, r13.x, c137.x
                            mad r4.w, r4.w, c96.x, -r5.w
                            mad r4.w, r13.y, -c137.z, r4.w
                            mul r13.z, r4.w, c96.w  // ::g<0>

#line 2560
                            mov r1.z, -c149.y
                          else
                            if_eq r7.x, -c65.w

#line 520
                              mul r4.w, r9.z, r12.y
                              rcp r5.w, r11.y
                              mul r12.x, r4.w, r5.w  // ::xyY_XYZ<0>
                              add r4.w, -r9.z, -r11.y
                              add r4.w, r4.w, -c149.y
                              mul r4.w, r12.y, r4.w
                              mul r12.z, r5.w, r4.w  // ::xyY_XYZ<2>
                              cmp r9.xyw, -r11_abs.y, c115.w, r12.xyzz  // ::xyY_XYZ<0,1,2>

#line 478
                              mul r10.xyz, r9.y, c24
                              mad r10.xyz, r9.x, c23, r10
                              mad r13.xyz, r9.w, c25.xzyw, r10.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2561
                              mov r1.z, -c149.y
                            else
                              if_eq r7.x, -c40.x

#line 516
                                abs r4.w, c13.x

#line 520
                                rcp r5.w, c13.x
                                mul r10.x, r5.w, c12.x  // ::xyY_XYZ<0>
                                mov r9.x, c13.x  // ::WhiteY<0>
                                add r6.z, -r9.x, -c12.x
                                add r6.z, r6.z, -c149.y
                                mul r10.z, r5.w, r6.z  // ::xyY_XYZ<2>

#line 2041
                                mov r10.y, -c149.y
                                mul r9.xyw, r10.xyzz, c151.y
                                cmp r9.xyw, -r4.w, c129.x, r9  // ::white<0,1,2>

#line 2045
                                add r4.w, r9.y, r9.x
                                add r4.w, r9.w, r4.w
                                rcp r5.w, r4.w
                                mul r5.w, r5.w, r9.y  // ::x0<0>
                                mul r4.w, r4.w, c106.w  // ::ew<0>

#line 2050
                                mul r6.z, r12.y, r12.y
                                mul r10.y, r6.z, c106.w  // ::Y<0>

#line 2054
                                mul r7.zw, c38.xyyx, c38.xyxz
                                mul r9.x, r5.w, r6.z
                                mul r7.zw, r11.y, r7
                                mul r9.yw, r7.xzzw, c151.y
                                mad r7.z, r9.x, r4.w, r9.y
                                mul r5.w, r5.w, r9.w
                                mad r5.w, r5.w, -r4.w, r7.z
                                mul r7.z, r11.y, c151.y
                                mul r9.xy, r7.z, c38.xzzw
                                mul r10.w, r4.w, r9.w
                                mad r7.z, r7.z, c38.x, -r10.w
                                mad r7.z, r6.z, r4.w, r7.z
                                rcp r7.z, r7.z
                                mul r5.w, r5.w, r7.z  // ::x<0>
                                mad r6.z, r9.y, c38.x, r6.z
                                mad r6.z, r7.w, -c151.y, r6.z
                                mul r7.z, r4.w, r10.y
                                mad r7.z, r7.z, c151.y, r9.x
                                mad r4.w, r9.w, -r4.w, r7.z
                                rcp r4.w, r4.w
                                mul r7.z, r4.w, r6.z  // ::y<0>

#line 520
                                mul r7.w, r10.y, r5.w
                                rcp r9.x, r7.z
                                mul r10.x, r7.w, r9.x  // ::xyY_XYZ<0>
                                mad r4.w, r6.z, -r4.w, -r5.w
                                add r4.w, r4.w, -c149.y
                                mul r4.w, r10.y, r4.w
                                mul r10.z, r9.x, r4.w  // ::xyY_XYZ<2>
                                cmp r9.xyw, -r7_abs.z, c115.w, r10.xyzz  // ::xyY_XYZ<0,1,2>

#line 478
                                mul r10.xyz, r9.y, c24
                                mad r10.xyz, r9.x, c23, r10
                                mad r13.xyz, r9.w, c25.xzyw, r10.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2562
                                mov r1.z, -c149.y
                              else
                                add r7.zw, r7.x, c40.xyyz

#line 478
                                mul r9.xyw, r11.y, c24.xyzz
                                mad r9.xyw, r9.z, c23.xyzz, r9
                                mad r9.xyw, r12.y, c25.xyzz, r9  // ::x<0>, ::y<0>, ::z<0>

#line 2564
                                cmp r4.w, -r7_abs.w, c149_abs.y, c149_abs.x

#line 2220
                                add r5.w, r9.z, -c60.w
                                mul r6.z, r5.w, c96.x  // ::ypbpr<0>
                                add r10.x, r11.y, c104.w
                                add r10.y, r12.y, c104.w

#line 2175
                                mad r14.x, r10.y, c96.y, r6.z  // ::r<0>
                                mad r14.z, r10.x, c96.z, r6.z  // ::b<0>
                                mul r6.z, r14.x, c137.x
                                mad r5.w, r5.w, c96.x, -r6.z
                                mad r5.w, r14.z, -c137.z, r5.w
                                mul r14.y, r5.w, c96.w  // ::g<0>

#line 2564
                                cmp r10.xyz, -r7_abs.w, r14, r13.xzyw  // ::TLrgb<0,1,2>
                                cmp r13.xyz, -r7_abs.z, r9.xwyw, r10.xzyw  // ::TLrgb<0,2,1>
                                cmp r1.z, -r7_abs.z, -c149.y, r4.w
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
                if_ne r1.z, -r1.z

#line 2573
                else

#line 2566
                  if_eq r7.x, -c40.w

#line 2076
                    add r1.z, r9.z, -r11.y  // ::c<0>
                    add r10.x, r12.y, r1.z  // ::YCoCg_Lrgb<0>
                    add r10.y, r9.z, r11.y  // ::YCoCg_Lrgb<1>
                    add r10.z, -r12.y, r1.z  // ::YCoCg_Lrgb<2>

#line 2566
                    mov r1.z, -c149.y
                  else
                    if_eq c0.x, -r6.x

#line 2092
                      mad r7.zw, r11.y, c129.xyyz, r9.z
                      mad r4.w, r11.y, -c129.w, r9.z
                      mad r10.y, r12.y, c125.x, r4.w  // ::g<0>
                      mad r10.xz, r12.y, -c125.yyzw, r7.zyww  // ::r<0>, ::b<0>

#line 2567
                      mov r1.z, -c149.y
                    else
                      if_eq r7.x, -c48.x

#line 2121
                        mad r9.xyw, r11.y, c97.xyzz, r9.z
                        mad r10.xyz, r12.y, c98.xxyw, r9.xyww  // ::r<0>, ::g<0>, ::b<0>

#line 2568
                        mov r1.z, -c149.y
                      else

#line 2571
                        add r7.xzw, r7.x, c48.yyzw

#line 2176
                        mad r14, r11.y, c99.xywz, r9.z  // ::b<0>

#line 2145
                        mad r9.xyw, r12.y, c100.xyzz, r14  // ::r<0>, ::g<0>, ::b<0>

#line 2149
                        mov_sat r12.xzw, r9.xyyw
                        cmp r9.xyw, r9, r12.xzzw, c104.z  // ::r<0>, ::g<0>, ::b<0>

#line 2175
                        mad r14.x, r12.y, c125.w, r9.z  // ::r<0>
                        mad r4.w, r14.x, -c137.x, r9.z
                        mad r4.w, r14.z, -c137.z, r4.w
                        mul r14.y, r4.w, c96.w  // ::g<0>

#line 2571
                        cmp r4.w, -r7_abs.w, c149_abs.y, c149_abs.x

#line 2264
                        mad r5.w, r12.y, c97.w, r9.z  // ::r<0>

#line 2270
                        mad r12.xz, r11.y, c98.zyww, r9.z  // ::b<0>

#line 2267
                        mad r6.z, r12.y, c100.w, r12.x  // ::g<0>

#line 2274
                        mov_sat r10.w, r5.w
                        cmp r15.x, r5.w, r10.w, c104.z  // ::r<0>
                        mov_sat r5.w, r6.z
                        cmp r15.y, r6.z, r5.w, c104.z  // ::g<0>
                        mov_sat r5.w, r12.z
                        cmp r15.z, r12.z, r5.w, c104.z  // ::b<0>

#line 2571
                        cmp r12.xzw, -r7_abs.w, r15.xyyz, r13.xyzy  // ::TLrgb<0,1,2>
                        cmp r12.xzw, -r7_abs.z, r14.xyyz, r12  // ::TLrgb<0,1,2>
                        cmp r4.w, -r7_abs.z, -c149.y, r4.w
                        cmp r10.xyz, -r7_abs.x, r9.xyww, r12.xzww  // ::TLrgb<0,1,2>
                        cmp r1.z, -r7_abs.x, -c149.y, r4.w
                      endif
                    endif
                  endif
                  mov r11.x, r9.z
                  mov r11.z, r12.y
                  cmp r13.xyz, -r1.z, r11.xzyw, r10.xzyw  // ::TLrgb<0,2,1>
                endif
              endif
            endif
          endif

#line 2389
          rcp r1.z, c11.x
          log r4.w, r13.x
          mul r5.w, r1.z, r4.w
          exp r8.x, r5.w  // ::V<0>

#line 2394
          if_eq c10.x, r0.z

#line 2454
          else

#line 2394
            add r5.w, r7.y, c10.x

#line 2402
            add r6.z, -r13.x, -c149.y
            rsq r7.x, r13.x
            rcp r7.x, r7.x
            mul r7.x, r7.x, -c127.z  // ::Transfer<0>
            cmp r6.z, r6.z, -c149_abs.y, -c149_abs.x
            cmp r6.z, r13.x, r6.z, c104.z
            add r7.z, r13.x, c55.y
            log r7.z, r7.z
            mad r7.z, r7.z, c55.z, c55.w  // ::Transfer<0>
            cmp r6.z, r6.z, r7.z, r7.x  // ::Transfer<0>
            cmp r8.x, -r5_abs.w, r6.z, r8.x  // ::Transfer<0>

#line 2409
            if_eq c10.x, -r7.y

#line 2454
            else

#line 2409
              add r5.w, r6.y, c10.x

#line 2412
              add r6.z, -r13.x, c71.y
              mul r7.x, r13.x, c102.x
              cmp r6.z, r6.z, r7.x, -c149.y  // ::V<0>
              cmp r8.x, -r5_abs.w, r6.z, r8.x  // ::Transfer<0>

#line 2417
              if_eq c10.x, -r6.y

#line 2454
              else

#line 2417
                mov r7.x, c10.x  // ::Companding<0>
                add r5.w, r7.x, c101.x

#line 2432
                if_eq r7.x, -c101.x

#line 2426
                  mul r6.z, r4.w, c102.y
                  exp r6.z, r6.z
                  add r7.z, r6.z, -c70.z
                  max r9.x, r7.z, c104.z  // ::a<0>
                  mad r6.z, r6.z, -c70.y, c70.x  // ::b<0>
                  rcp r6.z, r6.z
                  mul r6.z, r6.z, r9.x
                  pow r7.z, r6.z, c110.z
                  mul r6.z, r7.z, c102.z  // ::Transfer<0>
                  cmp r8.x, -r5_abs.w, r6.z, r8.x  // ::Transfer<0>

#line 2454
                else

#line 2448
                  add r7.xzw, r7.x, c148.yyzw

#line 2443
                  add r9.xy, r13.x, c118

#line 2451
                  mul r9.zw, r13.x, c118
                  mul r10.xy, r4.w, c112

#line 2435
                  exp r4.w, r10.x

#line 2443
                  mad r10.xz, r4.w, c113.xyyw, c113.zyww
                  cmp r9.xy, r9, r10.xzzw, r9.z  // ::V<0,0>

#line 2451
                  add r4.w, -r13.x, c102.w
                  exp r5.w, r10.y
                  mad r5.w, r5.w, c112.z, c112.w
                  cmp r4.w, r4.w, r9.w, r5.w  // ::V<0>

#line 2454
                  cmp r4.w, -r7_abs.w, r4.w, r13.x  // ::Transfer<0>
                  cmp r4.w, -r7_abs.z, r9.y, r4.w  // ::Transfer<0>
                  cmp r8.x, -r7_abs.x, r9.x, r4.w  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2389
          log r4.w, r13.z
          mul r5.w, r1.z, r4.w
          exp r8.y, r5.w  // ::V<0>

#line 2394
          if_eq c10.x, r0.z

#line 2454
          else

#line 2394
            add r5.w, r7.y, c10.x

#line 2402
            add r6.z, -r13.z, -c149.y
            rsq r7.x, r13.z
            rcp r7.x, r7.x
            mul r7.x, r7.x, -c127.z  // ::Transfer<0>
            cmp r6.z, r6.z, -c149_abs.y, -c149_abs.x
            cmp r6.z, r13.z, r6.z, c104.z
            add r7.z, r13.z, c55.y
            log r7.z, r7.z
            mad r7.z, r7.z, c55.z, c55.w  // ::Transfer<0>
            cmp r6.z, r6.z, r7.z, r7.x  // ::Transfer<0>
            cmp r8.y, -r5_abs.w, r6.z, r8.y  // ::Transfer<0>

#line 2409
            if_eq c10.x, -r7.y

#line 2454
            else

#line 2409
              add r5.w, r6.y, c10.x

#line 2412
              add r6.z, -r13.z, c71.y
              mul r7.x, r13.z, c102.x
              cmp r6.z, r6.z, r7.x, -c149.y  // ::V<0>
              cmp r8.y, -r5_abs.w, r6.z, r8.y  // ::Transfer<0>

#line 2417
              if_eq c10.x, -r6.y

#line 2454
              else

#line 2417
                mov r7.x, c10.x  // ::Companding<0>
                add r5.w, r7.x, c101.x

#line 2432
                if_eq r7.x, -c101.x

#line 2426
                  mul r6.z, r4.w, c102.y
                  exp r6.z, r6.z
                  add r7.z, r6.z, -c70.z
                  max r9.x, r7.z, c104.z  // ::a<0>
                  mad r6.z, r6.z, -c70.y, c70.x  // ::b<0>
                  rcp r6.z, r6.z
                  mul r6.z, r6.z, r9.x
                  pow r7.z, r6.z, c110.z
                  mul r6.z, r7.z, c102.z  // ::Transfer<0>
                  cmp r8.y, -r5_abs.w, r6.z, r8.y  // ::Transfer<0>

#line 2454
                else

#line 2448
                  add r7.xzw, r7.x, c148.yyzw

#line 2443
                  add r9.xy, r13.z, c118

#line 2451
                  mul r9.zw, r13.z, c118
                  mul r10.xy, r4.w, c112

#line 2435
                  exp r4.w, r10.x

#line 2443
                  mad r10.xz, r4.w, c113.xyyw, c113.zyww
                  cmp r9.xy, r9, r10.xzzw, r9.z  // ::V<0,0>

#line 2451
                  add r4.w, -r13.z, c102.w
                  exp r5.w, r10.y
                  mad r5.w, r5.w, c112.z, c112.w
                  cmp r4.w, r4.w, r9.w, r5.w  // ::V<0>

#line 2454
                  cmp r4.w, -r7_abs.w, r4.w, r13.z  // ::Transfer<0>
                  cmp r4.w, -r7_abs.z, r9.y, r4.w  // ::Transfer<0>
                  cmp r8.y, -r7_abs.x, r9.x, r4.w  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2389
          log r4.w, r13.y
          mul r1.z, r1.z, r4.w
          exp r8.z, r1.z  // ::V<0>

#line 2394
          if_eq c10.x, r0.z

#line 2454
          else

#line 2394
            add r1.z, r7.y, c10.x

#line 2402
            add r5.w, -r13.y, -c149.y
            rsq r6.z, r13.y
            rcp r6.z, r6.z
            mul r6.z, r6.z, -c127.z  // ::Transfer<0>
            cmp r5.w, r5.w, -c149_abs.y, -c149_abs.x
            cmp r5.w, r13.y, r5.w, c104.z
            add r7.x, r13.y, c55.y
            log r7.x, r7.x
            mad r7.x, r7.x, c55.z, c55.w  // ::Transfer<0>
            cmp r5.w, r5.w, r7.x, r6.z  // ::Transfer<0>
            cmp r8.z, -r1_abs.z, r5.w, r8.z  // ::Transfer<0>

#line 2409
            if_eq c10.x, -r7.y

#line 2454
            else

#line 2409
              add r1.z, r6.y, c10.x

#line 2412
              add r5.w, -r13.y, c71.y
              mul r6.z, r13.y, c102.x
              cmp r5.w, r5.w, r6.z, -c149.y  // ::V<0>
              cmp r8.z, -r1_abs.z, r5.w, r8.z  // ::Transfer<0>

#line 2417
              if_eq c10.x, -r6.y

#line 2454
              else

#line 2417
                mov r7.x, c10.x  // ::Companding<0>
                add r1.z, r7.x, c101.x

#line 2432
                if_eq r7.x, -c101.x

#line 2426
                  mul r5.w, r4.w, c102.y
                  exp r5.w, r5.w
                  add r6.z, r5.w, -c70.z
                  max r7.y, r6.z, c104.z  // ::a<0>
                  mad r5.w, r5.w, -c70.y, c70.x  // ::b<0>
                  rcp r5.w, r5.w
                  mul r5.w, r5.w, r7.y
                  pow r6.z, r5.w, c110.z
                  mul r5.w, r6.z, c102.z  // ::Transfer<0>
                  cmp r8.z, -r1_abs.z, r5.w, r8.z  // ::Transfer<0>

#line 2454
                else

#line 2448
                  add r7.xyz, r7.x, c148.yzww

#line 2443
                  add r9.xy, r13.y, c118

#line 2451
                  mul r9.zw, r13.y, c118
                  mul r10.xy, r4.w, c112

#line 2435
                  exp r1.z, r10.x

#line 2443
                  mad r10.xz, r1.z, c113.xyyw, c113.zyww
                  cmp r9.xy, r9, r10.xzzw, r9.z  // ::V<0,0>

#line 2451
                  add r1.z, -r13.y, c102.w
                  exp r4.w, r10.y
                  mad r4.w, r4.w, c112.z, c112.w
                  cmp r1.z, r1.z, r9.w, r4.w  // ::V<0>

#line 2454
                  cmp r1.z, -r7_abs.z, r1.z, r13.y  // ::Transfer<0>
                  cmp r1.z, -r7_abs.y, r9.y, r1.z  // ::Transfer<0>
                  cmp r8.z, -r7_abs.x, r9.x, r1.z  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2771
          mov oC0, r8  // ::main<0,1,2,3>
        else
          mov oC0, c104.z  // ::main<0,1,2,3>
        endif
        mov r3.x, r1.w  // ::input4<0>
        mov r3.yz, r2  // ::input4<1,2>
        mov r2.yw, r1.xxzy  // ::input3<0,1>
      endif
    endif
    if_ne r0.w, -r0.w

#line 2789
    else

#line 2773
      if_ge c0.x, r0.y
        mov r1.z, c127.z
        mad r1, r3.xwyz, c5.x, -r1.z
        frc r7, r1
        add r1, r1, -r7
        rcp r0.y, c5.x
        mul r1, r0.y, r1
        cmp r1, -c5.x, r3.xwyz, r1  // ::input4<0,3,1,2>

#line 676
        add r3, -r1, -c149.y
        mul r7.xyz, r3.y, r3.xzww  // ::r<0>, ::g<0>, ::b<0>

#line 2581
        mov r8.x, c0.x  // ::Model<0>
        add r8.xyz, r8.x, c105

#line 699
        mad r3.xzw, r3, r3.y, r1.y  // ::c<0>, ::m<0>, ::y<0>

#line 1826
        mul r9.xyz, r1.xzww, r3.y  // ::r<0>, ::g<0>, ::b<0>

#line 1849
        lrp r10.xyz, r1.xzww, -c149.y, r1.y  // ::r<0>, ::g<0>, ::b<0>

#line 2581
        cmp r1.xyz, -r8_abs.y, r9, r10  // ::TLrgb<0,1,2>
        cmp r1.xyz, -r8_abs.x, r3.xzww, r1  // ::TLrgb<0,1,2>
        cmp r1.xyz, -r0_abs.x, r7, r1  // ::TLrgb<0,1,2>
        cmp r0.y, -r8_abs.z, -c149_abs.y, -c149_abs.x
        cmp r0.y, -r8_abs.y, c149.y, r0.y
        cmp r0.y, -r8_abs.x, c149.y, r0.y
        cmp r0.x, -r0_abs.x, c149.y, r0.y
        cmp r0.xyw, r0.x, c104.z, r1.xyzz  // ::TLrgb<0,1,2>

#line 2389
        rcp r1.x, c11.x
        log r1.y, r0.x
        mul r1.z, r1.y, r1.x
        exp r3.x, r1.z  // ::V<0>

#line 2394
        if_eq c10.x, r0.z

#line 2454
        else

#line 2394
          mov r7.y, c149.y
          add r1.z, r7.y, c10.x

#line 2402
          add r1.w, -r0.x, -c149.y
          rsq r2.z, r0.x
          rcp r2.z, r2.z
          mul r2.z, r2.z, -c127.z  // ::Transfer<0>
          cmp r1.w, r1.w, -c149_abs.y, -c149_abs.x
          cmp r1.w, r0.x, r1.w, c104.z
          add r3.w, r0.x, c55.y
          log r3.w, r3.w
          mad r3.w, r3.w, c55.z, c55.w  // ::Transfer<0>
          cmp r1.w, r1.w, r3.w, r2.z  // ::Transfer<0>
          cmp r3.x, -r1_abs.z, r1.w, r3.x  // ::Transfer<0>

#line 2409
          if_eq c10.x, -r7.y

#line 2454
          else

#line 2409
            add r1.z, r6.y, c10.x

#line 2412
            add r1.w, -r0.x, c71.y
            mul r2.z, r0.x, c102.x
            cmp r1.w, r1.w, r2.z, -c149.y  // ::V<0>
            cmp r3.x, -r1_abs.z, r1.w, r3.x  // ::Transfer<0>

#line 2417
            if_eq c10.x, -r6.y

#line 2454
            else

#line 2417
              mov r7.x, c10.x  // ::Companding<0>
              add r1.z, r7.x, c101.x

#line 2432
              if_eq r7.x, -c101.x

#line 2426
                mul r1.w, r1.y, c102.y
                exp r1.w, r1.w
                add r2.z, r1.w, -c70.z
                max r3.w, r2.z, c104.z  // ::a<0>
                mad r1.w, r1.w, -c70.y, c70.x  // ::b<0>
                rcp r1.w, r1.w
                mul r1.w, r1.w, r3.w
                pow r2.z, r1.w, c110.z
                mul r1.w, r2.z, c102.z  // ::Transfer<0>
                cmp r3.x, -r1_abs.z, r1.w, r3.x  // ::Transfer<0>

#line 2454
              else

#line 2448
                add r7.xyz, r7.x, c148.yzww

#line 2443
                add r1.zw, r0.x, c118.xyxy

#line 2451
                mul r8.xy, r0.x, c118.zwzw
                mul r8.zw, r1.y, c112.xyxy

#line 2435
                exp r1.y, r8.z

#line 2443
                mad r9.xy, r1.y, c113, c113.zwzw
                cmp r1.yz, r1.xzww, r9.xxyw, r8.x  // ::V<0,0>

#line 2451
                add r1.w, -r0.x, c102.w
                exp r2.z, r8.w
                mad r2.z, r2.z, c112.z, c112.w
                cmp r1.w, r1.w, r8.y, r2.z  // ::V<0>

#line 2454
                cmp r0.x, -r7_abs.z, r1.w, r0.x  // ::Transfer<0>
                cmp r0.x, -r7_abs.y, r1.z, r0.x  // ::Transfer<0>
                cmp r3.x, -r7_abs.x, r1.y, r0.x  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2389
        log r0.x, r0.y
        mul r1.y, r0.x, r1.x
        exp r3.y, r1.y  // ::V<0>

#line 2394
        if_eq c10.x, r0.z

#line 2454
        else

#line 2394
          mov r1.y, c149.y
          add r1.z, r1.y, c10.x

#line 2402
          add r1.w, -r0.y, -c149.y
          rsq r2.z, r0.y
          rcp r2.z, r2.z
          mul r2.z, r2.z, -c127.z  // ::Transfer<0>
          cmp r1.w, r1.w, -c149_abs.y, -c149_abs.x
          cmp r1.w, r0.y, r1.w, c104.z
          add r3.w, r0.y, c55.y
          log r3.w, r3.w
          mad r3.w, r3.w, c55.z, c55.w  // ::Transfer<0>
          cmp r1.w, r1.w, r3.w, r2.z  // ::Transfer<0>
          cmp r3.y, -r1_abs.z, r1.w, r3.y  // ::Transfer<0>

#line 2409
          if_eq c10.x, -r1.y

#line 2454
          else

#line 2409
            add r1.y, r6.y, c10.x

#line 2412
            add r1.z, -r0.y, c71.y
            mul r1.w, r0.y, c102.x
            cmp r1.z, r1.z, r1.w, -c149.y  // ::V<0>
            cmp r3.y, -r1_abs.y, r1.z, r3.y  // ::Transfer<0>

#line 2417
            if_eq c10.x, -r6.y

#line 2454
            else

#line 2417
              mov r7.x, c10.x  // ::Companding<0>
              add r1.y, r7.x, c101.x

#line 2432
              if_eq r7.x, -c101.x

#line 2426
                mul r1.z, r0.x, c102.y
                exp r1.z, r1.z
                add r1.w, r1.z, -c70.z
                max r2.z, r1.w, c104.z  // ::a<0>
                mad r1.z, r1.z, -c70.y, c70.x  // ::b<0>
                rcp r1.z, r1.z
                mul r1.z, r1.z, r2.z
                pow r2.z, r1.z, c110.z
                mul r1.z, r2.z, c102.z  // ::Transfer<0>
                cmp r3.y, -r1_abs.y, r1.z, r3.y  // ::Transfer<0>

#line 2454
              else

#line 2448
                add r1.yzw, r7.x, c148

#line 2443
                add r7.xy, r0.y, c118

#line 2451
                mul r7.zw, r0.y, c118
                mul r8.xy, r0.x, c112

#line 2435
                exp r0.x, r8.x

#line 2443
                mad r8.xz, r0.x, c113.xyyw, c113.zyww
                cmp r7.xy, r7, r8.xzzw, r7.z  // ::V<0,0>

#line 2451
                add r0.x, -r0.y, c102.w
                exp r2.z, r8.y
                mad r2.z, r2.z, c112.z, c112.w
                cmp r0.x, r0.x, r7.w, r2.z  // ::V<0>

#line 2454
                cmp r0.x, -r1_abs.w, r0.x, r0.y  // ::Transfer<0>
                cmp r0.x, -r1_abs.z, r7.y, r0.x  // ::Transfer<0>
                cmp r3.y, -r1_abs.y, r7.x, r0.x  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2389
        log r0.x, r0.w
        mul r0.y, r0.x, r1.x
        exp r3.z, r0.y  // ::V<0>

#line 2394
        if_eq c10.x, r0.z

#line 2454
        else

#line 2394
          mov r0.y, c149.y
          add r1.x, r0.y, c10.x

#line 2402
          add r1.y, -r0.w, -c149.y
          rsq r1.z, r0.w
          rcp r1.z, r1.z
          mul r1.z, r1.z, -c127.z  // ::Transfer<0>
          cmp r1.y, r1.y, -c149_abs.y, -c149_abs.x
          cmp r1.y, r0.w, r1.y, c104.z
          add r1.w, r0.w, c55.y
          log r1.w, r1.w
          mad r1.w, r1.w, c55.z, c55.w  // ::Transfer<0>
          cmp r1.y, r1.y, r1.w, r1.z  // ::Transfer<0>
          cmp r3.z, -r1_abs.x, r1.y, r3.z  // ::Transfer<0>

#line 2409
          if_eq c10.x, -r0.y

#line 2454
          else

#line 2409
            add r0.y, r6.y, c10.x

#line 2412
            add r1.x, -r0.w, c71.y
            mul r1.y, r0.w, c102.x
            cmp r1.x, r1.x, r1.y, -c149.y  // ::V<0>
            cmp r3.z, -r0_abs.y, r1.x, r3.z  // ::Transfer<0>

#line 2417
            if_eq c10.x, -r6.y

#line 2454
            else

#line 2417
              mov r1.x, c10.x  // ::Companding<0>
              add r0.y, r1.x, c101.x

#line 2432
              if_eq r1.x, -c101.x

#line 2426
                mul r1.y, r0.x, c102.y
                exp r1.y, r1.y
                add r1.z, r1.y, -c70.z
                max r2.z, r1.z, c104.z  // ::a<0>
                mad r1.y, r1.y, -c70.y, c70.x  // ::b<0>
                rcp r1.y, r1.y
                mul r1.y, r1.y, r2.z
                pow r2.z, r1.y, c110.z
                mul r1.y, r2.z, c102.z  // ::Transfer<0>
                cmp r3.z, -r0_abs.y, r1.y, r3.z  // ::Transfer<0>

#line 2454
              else

#line 2448
                add r1.xyz, r1.x, c148.yzww

#line 2443
                add r7.xy, r0.w, c118

#line 2451
                mul r7.zw, r0.w, c118
                mul r0.xy, r0.x, c112

#line 2435
                exp r0.x, r0.x

#line 2443
                mad r8.xy, r0.x, c113, c113.zwzw
                cmp r7.xy, r7, r8, r7.z  // ::V<0,0>

#line 2451
                add r0.x, -r0.w, c102.w
                exp r0.y, r0.y
                mad r0.y, r0.y, c112.z, c112.w
                cmp r0.x, r0.x, r7.w, r0.y  // ::V<0>

#line 2454
                cmp r0.x, -r1_abs.z, r0.x, r0.w  // ::Transfer<0>
                cmp r0.x, -r1_abs.y, r7.y, r0.x  // ::Transfer<0>
                cmp r3.z, -r1_abs.x, r7.x, r0.x  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2779
      else

#line 2782
        mov r1.xz, c127  // ::Minimum3<111>
        mad r0.xyw, r2.ywzx, c5.x, -r1.z
        frc r1.yzw, r0.xxyw
        add r0.xyw, r0, -r1.yzzw
        rcp r1.y, c5.x
        mul r0.xyw, r0, r1.y
        cmp r0.xyw, -c5.x, r2.ywzx, r0  // ::input3<0,1,2>

#line 336
        lrp r2.z, r0.x, r5.x, r4.x  // ::ConvertRange<0>
        lrp r7.y, r0.y, r5.y, r4.y  // ::ConvertRange<0>
        add r0.x, -r4.z, r5.z
        mul r0.x, r0.x, r0.w
        lrp r8.y, r0.w, r5.z, r4.z  // ::ConvertRange<0>

#line 2523
        if_eq c0.x, r0.z

#line 1813
          mul r0.y, r7.y, c72.w
          mad r5.x, r2.z, c81.x, r0.y  // ::RCA_Lrgb<0>
          mul r0.yw, r8.y, c81.xyzx
          mad r5.z, r7.y, c81.x, r0.y  // ::RCA_Lrgb<1>
          mad r5.y, r2.z, c72.w, r0.w  // ::RCA_Lrgb<2>

#line 2523
          mov r0.y, -c149.y
        else
          if_eq c0.x, -r6.y

#line 1892
            mul r0.w, r8.y, c72.w
            mad r5.x, r2.z, c81.x, r0.w  // ::RGV_Lrgb<0>
            mul r1.yz, r7.y, c81.xxyw
            mad r5.z, r2.z, c72.w, r1.y  // ::RGV_Lrgb<1>
            mad r5.y, r8.y, c81.x, r1.z  // ::RGV_Lrgb<2>

#line 2524
            mov r0.y, -c149.y
          else
            mov r4.x, c0.x  // ::Model<0>
            if_eq r4.x, -c101.x

#line 1904
              min r0.w, r8.y, r7.y
              min r1.y, r0.w, r2.z  // ::white<0>
              add r0.w, -r1.y, r2.z  // ::r<0>
              add r1.z, -r1.y, r7.y  // ::y<0>
              add r1.w, -r1.y, r8.y  // ::b<0>
              max r2.w, r1.z, r1.w
              max r3.w, r0.w, r2.w  // ::mY<0>
              min r9.z, r1.w, r1.z  // ::g<0>
              add r1.z, r1.z, -r9.z  // ::y<0>

#line 1915
              add r9.y, r1.w, -r9.z  // ::b<0>

#line 1921
              cmp r1.w, -r9.z, -c149_abs.x, -c149_abs.y
              cmp r1.w, -r9.y, c104.z, r1.w
              mul r4.yw, r9.xyzz, -c60.y
              cmp r9.yz, r1.w, r9, r4.xyww  // ::b<0>, ::g<0>
              add r9.x, r0.w, r1.z  // ::r<0>
              add r9.w, r1.z, r9.z  // ::g<0>
              max r0.w, r9.w, r9.y
              max r1.z, r9.x, r0.w  // ::mG<0>

#line 1930
              rcp r0.w, r1.z
              mul r0.w, r0.w, r3.w  // ::mN<0>

#line 1934
              mul r10.xyz, r0.w, r9.xwyw  // ::r<0>, ::g<0>, ::b<0>
              cmp r9.xyz, -r1.z, r9.xwyw, r10  // ::r<0>, ::g<0>, ::b<0>

#line 1939
              add r1.yzw, r1.y, r9.xxyz  // ::r<0>, ::g<0>, ::b<0>
              frc r9.xyz, r1.yzww
              add r1.yzw, r1, -r9.xxyz
              mul r5.xyz, r1.ywzw, c81.z  // ::RYB_Lrgb<0,2,1>

#line 2525
              mov r0.y, -c149.y
            else
              if_eq r4.x, -c101.z

#line 663
                add r5.x, -r2.z, -c149.y  // ::CMY_Lrgb<0>
                add r5.z, -r7.y, -c149.y  // ::CMY_Lrgb<1>
                add r5.y, -r8.y, -c149.y  // ::CMY_Lrgb<2>

#line 2526
                mov r0.y, -c149.y
              else
                if_eq r4.x, -c103.x

#line 713
                  mul r0.w, r7.y, c106.w  // ::c<0>
                  mul r1.yzw, r8.y, c106.w  // ::g<0,0,0>

#line 721
                  if_eq r0.w, c104.z

#line 770
                    mov r5.xyz, r1.ywzw  // ::HCV_Lrgb<0,2,1>
                  else

#line 713
                    mul r1.y, r2.z, c81.w  // ::h<0>

#line 721
                    cmp r1.z, r2.z, c56.x, c56.y
                    mul r1.y, r1.z, r1.y
                    frc r1.y, r1.y
                    mul r1.y, r1.y, r1.z
                    mul r1.z, r1.y, -c103.z  // ::hi<0>
                    cmp r1.y, r1.y, c56.x, c56.y
                    mul r2.w, r1.y, r1.z
                    frc r2.w, r2.w
                    mul r9.x, r1.y, r2.w  // ::v<0>

#line 726
                    frc r3.w, r1.z
                    add r1.z, r1.z, -r3.w  // ::fhi<0>

#line 752
                    add r10, r1.z, c162

#line 763
                    mov r9.yz, c149_abs.xxyw
                    mad r9.w, r1.y, -r2.w, -c149.y
                    cmp r11.xyz, -r10_abs.w, r9, r9.zyww  // ::pure<0,1,2>
                    mad r12.xyz, r9.xzyw, c56.yxxw, c56.xzzw
                    cmp r11.xyz, -r10_abs.z, r12.zxyw, r11  // ::pure<0,1,2>
                    cmp r10.yzw, -r10_abs.y, r9.xyzx, r11.xxyz  // ::pure<0,1,2>
                    cmp r10.xyz, -r10_abs.x, r12, r10.yzww  // ::pure<0,1,2>
                    cmp r9.xyz, -r1_abs.z, r9.zxyw, r10  // ::pure<0,1,2>

#line 769
                    lrp r5.xyz, r0.w, r9.xzyw, r1.w  // ::result<0,2,1>
                  endif

#line 2527
                  mov r0.y, -c149.y
                else
                  if_eq r4.x, -c103.z

#line 805
                    cmp r1.yz, r2.z, c80.xxyw, c80.xzww
                    mul r0.w, r1.z, r2.z
                    frc r0.w, r0.w
                    mad r1.y, r1.y, r0.w, c151.x
                    mul r0.w, r0.w, c151.x
                    cmp r0.w, r2.z, r0.w, r1.y
                    mul r1.y, r7.y, c106.w  // ::s<0>
                    mul r1.z, r8.y, c81.z  // ::i<0>

#line 812
                    if_lt r0.w, c163.x
                      mad r1.w, r7.y, -c163.y, c163.z
                      mul r5.y, r1.w, r1.z  // ::b<0>
                      mad r1.w, r0.w, c164.x, c164.y
                      frc r1.w, r1.w
                      mad r1.w, r1.w, c164.z, c164.w
                      sincos r9.x, r1.w
                      mul r1.w, r1.y, r9.x
                      mad r2.w, r0.w, -c82.x, c82.y
                      mad r2.w, r2.w, c82.z, c82.w
                      frc r2.w, r2.w
                      mad r2.w, r2.w, c164.z, c164.w
                      sincos r10.x, r2.w
                      rcp r2.w, r10.x
                      mad r1.w, r1.w, r2.w, -c149.y
                      mul r5.x, r1.w, r1.z  // ::r<0>
                      mad r1.w, r9.x, -r2.w, -c149.y
                      mad r1.w, r1.y, r1.w, -c149.y
                      mul r5.z, r1.w, r1.z  // ::g<0>
                    else
                      if_lt r0.w, c153.y
                        mad r1.w, r0.w, c107.x, c107.y  // ::h<0>
                        mad r2.w, r7.y, -c163.y, c163.z
                        mul r5.x, r1.z, r2.w  // ::r<0>
                        mad r2.w, r1.w, c82.z, c82.w
                        frc r2.w, r2.w
                        mad r2.w, r2.w, c164.z, c164.w
                        sincos r9.x, r2.w
                        mul r2.w, r1.y, r9.x
                        add r1.w, -r1.w, c163.w
                        mad r1.w, r1.w, c82.z, c82.w
                        frc r1.w, r1.w
                        mad r1.w, r1.w, c164.z, c164.w
                        sincos r10.x, r1.w
                        rcp r1.w, r10.x
                        mad r2.w, r2.w, r1.w, -c149.y
                        mul r5.z, r1.z, r2.w  // ::g<0>

#line 823
                        mad r1.w, r9.x, -r1.w, -c149.y
                        mad r1.w, r1.y, r1.w, -c149.y
                        mul r5.y, r1.w, r1.z  // ::b<0>
                      else

#line 827
                        mad r0.w, r0.w, c107.x, c107.z  // ::h<0>
                        mad r1.w, r7.y, -c163.y, c163.z
                        mul r5.z, r1.w, r1.z  // ::g<0>
                        mad r1.w, r0.w, c82.z, c82.w
                        frc r1.w, r1.w
                        mad r1.w, r1.w, c164.z, c164.w
                        sincos r9.x, r1.w
                        mul r1.w, r1.y, r9.x
                        add r0.w, -r0.w, c163.w
                        mad r0.w, r0.w, c82.z, c82.w
                        frc r0.w, r0.w
                        mad r0.w, r0.w, c164.z, c164.w
                        sincos r10.x, r0.w
                        rcp r0.w, r10.x
                        mad r1.w, r1.w, r0.w, -c149.y
                        mul r5.y, r1.w, r1.z  // ::b<0>
                        mad r0.w, r9.x, -r0.w, -c149.y
                        mad r0.w, r1.y, r0.w, -c149.y
                        mul r5.x, r0.w, r1.z  // ::r<0>
                      endif
                    endif

#line 2528
                    mov r0.y, -c149.y
                  else
                    if_eq r4.x, -c63.x

#line 1699
                      if_lt c151.y, r8.y

#line 1707
                        mad r5.xyz, r2.z, c87.xyxw, c87.zxxw
                      else

#line 1699
                        add r0.w, r8.y, c107.w

#line 1702
                        if_lt r8.y, -c107.w
                          cmp r2.xy, r0.w, c83, c83.y  // ::HPLuv_Lrgb<0,1>

#line 1707
                          mov r5.xyz, r2.xzyw  // ::HPLuv_Lrgb<0,2,1>
                        else

#line 394
                          add r0.w, r8.y, c60.w
                          mul r1.y, r0.w, r0.w
                          mul r1.z, r0.w, r1.y
                          mul r1.z, r1.z, c83.z  // ::s1<0>
                          mad r1.y, r0.w, -r1.y, c83.w

#line 1632
                          mul r9, r8.y, c86

#line 395
                          cmp r1.y, r1.y, r9.x, r1.z  // ::s2<0>

#line 380
                          mul r1.z, r8.y, r1.y
                          mul r1.w, r1.z, c84.x  // ::y<0>
                          mul r4.yw, r1.y, c84.xyzz  // ::x<0>, ::z<0>
                          rcp r2.w, r4.w
                          mul r3.w, r2.w, r4.y  // ::GetBounds2<0>
                          mul r1.w, r1.w, r2.w  // ::GetBounds2<1>

#line 411
                          rcp r4.w, r3.w

#line 374
                          mad r2.w, r4.y, -r2.w, -r4.w
                          rcp r2.w, r2.w
                          mul r2.w, r1.w, r2.w  // ::GetIntersection<0>

#line 412
                          mad r1.w, r2.w, r3.w, r1.w  // GetDistance::input<1>

#line 369
                          mul r1.w, r1.w, r1.w
                          mad r1.w, r2.w, r2.w, r1.w
                          rsq r1.w, r1.w
                          rcp r1.w, r1.w  // ::GetDistance<0>

#line 414
                          min r2.w, r1.w, c84.w  // ::GetChroma1a<0>

#line 380
                          mad r1.z, r1.z, c84.x, -r9.y  // ::y<0>
                          mad r1.y, r1.y, c85.x, c85.y  // ::z<0>
                          rcp r1.y, r1.y
                          mul r1.w, r1.y, r4.y  // ::GetBounds2<0>
                          mul r1.z, r1.y, r1.z  // ::GetBounds2<1>

#line 411
                          rcp r3.w, r1.w

#line 374
                          mad r1.y, r4.y, -r1.y, -r3.w
                          rcp r1.y, r1.y
                          mul r1.y, r1.y, r1.z  // ::GetIntersection<0>

#line 412
                          mad r1.z, r1.y, r1.w, r1.z  // GetDistance::input<1>

#line 369
                          mul r1.z, r1.z, r1.z
                          mad r1.y, r1.y, r1.y, r1.z
                          rsq r1.y, r1.y
                          rcp r1.y, r1.y  // ::GetDistance<0>

#line 414
                          min r3.w, r1.y, r2.w  // ::GetChroma1a<0>

#line 1703
                          mul r1.y, r7.y, r3.w
                          mul r1.y, r1.y, c106.w  // ::C<0>

#line 597
                          mad r1.z, r2.z, c164.x, c164.y
                          frc r1.z, r1.z
                          mad r1.z, r1.z, c164.z, c164.w
                          sincos r10.xy, r1.z
                          mul r1.yz, r1.y, r10.xxyw  // ::a<0>, ::b<0>

#line 516
                          abs r1.w, c13.x

#line 520
                          rcp r2.w, c13.x
                          mul r10.x, r2.w, c12.x  // ::xyY_XYZ<0>
                          mov r11.x, c13.x  // ::WhiteY<0>
                          add r3.w, -r11.x, -c12.x
                          add r3.w, r3.w, -c149.y
                          mul r10.z, r2.w, r3.w  // ::xyY_XYZ<2>
                          mov r10.y, -c149.y
                          cmp r10.xyz, -r1.w, c115.w, r10  // ::xyY_XYZ<0,1,2>

#line 579
                          cmp r1.w, -r1.w, c128.y, c128.w
                          add r1.w, r1.w, r10.x
                          mul r2.w, r10.x, -c101.z
                          mad r1.w, r10.z, -c101.x, r1.w
                          rcp r1.w, r1.w
                          mul r2.w, r1.w, r2.w  // ::ComputeKu<0>

#line 584
                          mul r1.w, r10.y, r1.w
                          mul r1.w, r1.w, -c45.x  // ::ComputeKv<0>

#line 1630
                          add r3.w, -r8.y, c85.z
                          mul r0.w, r0.w, c85.w
                          mul r4.y, r0.w, r0.w
                          mul r0.w, r0.w, r4.y
                          cmp r0.w, r3.w, r9.x, r0.w  // ::Y<0>
                          mad r1.y, r9.w, r2.w, r1.y
                          rcp r1.y, r1.y
                          mad r1.y, r9.z, r1.y, c149.y
                          mul r1.y, r1.y, c62.x  // ::a<0>
                          mul r2.w, r0.w, c103.x  // ::b<0>
                          mul r3.w, r8.y, -c40.z
                          mad r1.z, r9.w, r1.w, r1.z
                          rcp r1.z, r1.z
                          mad r1.z, r3.w, r1.z, c103.x
                          mad r1.z, r0.w, r1.z, -r2.w
                          rcp r1.w, r1.y
                          mul r1.z, r1.w, r1.z  // ::X<0>
                          mad r1.y, r1.z, r1.y, r2.w  // ::Z<0>

#line 1641
                          max r2.w, r1.z, c104.z  // ::X<0>

#line 1644
                          max r1.z, r0.w, c104.z  // ::Y<0>

#line 1647
                          max r0.w, r1.y, c104.z  // ::Z<0>

#line 478
                          mul r1.yzw, r1.z, c24.xxyz
                          mad r1.yzw, r2.w, c23.xxyz, r1
                          mad r5.xyz, r0.w, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 1707
                        endif
                      endif

#line 2529
                      mov r0.y, -c149.y
                    else
                      if_eq r4.x, -c63.z

#line 858
                        mul r0.w, r7.y, c106.w  // ::_s<0>
                        mul r9.y, r8.y, c106.w  // ::_b<0>

#line 861
                        add r1.y, -r2.z, c87.w

#line 873
                        mul r1.z, r2.z, c124.x
                        cmp r1.y, r1.y, r1.z, c124.y  // ::SectorPosition<0>
                        frc r1.z, r1.y
                        add r1.z, -r1.z, r1.y  // ::SectorNumber<0>

#line 877
                        add r1.y, -r1.z, r1.y  // ::FractionalSector<0>

#line 880
                        mad r1.w, r7.y, -c163.y, c163.z
                        mul r9.z, r1.w, r9.y  // ::p<0>
                        mad r1.w, r0.w, -r1.y, -c149.y
                        add r1.y, -r1.y, -c149.y
                        mad r1.y, r0.w, -r1.y, -c149.y
                        mul r9.xw, r1.yyzw, r9.y  // ::t<0>, ::q<0>

#line 909
                        add r10, r1.z, c162

#line 915
                        add r1.y, r1.z, c103.x

#line 920
                        cmp r11.xyz, -r1_abs.y, r9.yzww, c104.z  // ::r<0>, ::g<0>, ::b<0>
                        cmp r11.xyz, -r10_abs.w, r9.xzyw, r11  // ::r<0>, ::g<0>, ::b<0>
                        cmp r11.xyz, -r10_abs.z, r9.zwyw, r11  // ::r<0>, ::g<0>, ::b<0>
                        cmp r10.yzw, -r10_abs.y, r9.xzyx, r11.xxyz  // ::r<0>, ::g<0>, ::b<0>
                        cmp r10.xyz, -r10_abs.x, r9.wyzw, r10.yzww  // ::r<0>, ::g<0>, ::b<0>
                        cmp r1.yzw, -r1_abs.z, r9.xyxz, r10.xxyz  // ::r<0>, ::g<0>, ::b<0>
                        cmp r5.xyz, -r0_abs.w, r9.y, r1.ywzw  // ::r<0>, ::b<0>, ::g<0>

#line 2530
                        mov r0.y, -c149.y
                      else
                        add r0.w, r4.x, c45.x
                        cmp r0.y, -r0_abs.w, c149_abs.y, c149_abs.x
                        if_eq r4.x, -c45.x

#line 967
                          mul r5.xyz, r8.y, c106.w  // ::l<0,0,0>

#line 974
                          if_lt -r7.y, c104.z

#line 967
                            mul r0.w, r7.y, c106.w  // ::s<0>
                            min r1.y, r2.z, c87.w  // ::h<0>
                            mul r1.z, r1.y, c124.x  // ::h<0>

#line 976
                            mad r1.w, r8.y, c124.z, c124.w
                            add r1.w, -r1_abs.w, -c149.y
                            mul r9.x, r0.w, r1.w  // ::chroma<0>
                            cmp r4.xy, r1.y, c155, c155.zwzw
                            mul r0.w, r1.z, r4.y
                            frc r0.w, r0.w
                            mad r0.w, r4.x, r0.w, c149.y
                            add r0.w, -r0_abs.w, -c149.y
                            mul r9.y, r0.w, r9.x  // ::v<0>

#line 997
                            add r10, -r1.y, c116

#line 1003
                            add r11, r1.y, -c116.wzyx

#line 1009
                            add r0.w, r1.y, c117.x
                            add r1.zw, -r1.y, c117.xyyz

#line 1014
                            cmp r1.zw, r1, -c149_abs.y, -c149_abs.x
                            cmp r0.w, r0.w, r1.z, c104.z
                            mov r9.z, c104.z
                            cmp r4.xyw, r0.w, c104.z, r9.xzzy  // ::result<0,1,2>
                            cmp r0.w, r11.w, r1.w, c104.z
                            cmp r4.xyw, r0.w, r4, r9.yzzx  // ::result<0,1,2>
                            cmp r10, r10, -c149_abs.y, -c149_abs.x
                            cmp r10.xyz, r11.zyxw, r10, c104.z
                            cmp r4.xyw, r10.x, r4, r9.zyzx  // ::result<0,1,2>
                            cmp r4.xyw, r10.y, r4, r9.zxzy  // ::result<0,1,2>
                            cmp r4.xyw, r10.z, r4, r9.yxzz  // ::result<0,1,2>
                            cmp r0.w, r1.y, r10.w, c104.z
                            cmp r1.yzw, r0.w, r4.xxyw, r9.xxyz  // ::result<0,1,2>
                            mad r0.w, r9.x, c127.z, r5.y  // ::w<0>

#line 1019
                            add r5.xyz, r0.w, r1.ywzw  // ::result<0,2,1>

#line 1024
                          endif

#line 2531
                        else
                          mov r5.xyz, c104.z
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
        if_ne r0.y, -r0.y

#line 2573
        else

#line 2533
          if_eq c0.x, r1.x

#line 1744
            if_lt c151.y, r8.y

#line 1752
              mad r5.xyz, r2.z, c87.xyxw, c87.zxxw
            else

#line 1744
              add r0.y, r8.y, c107.w

#line 1747
              if_lt r8.y, -c107.w
                cmp r5.xz, r0.y, c83.xyyw, c83.y  // ::HSLuv_Lrgb<0,1>

#line 1752
                mov r5.y, r2.z
              else

#line 394
                add r0.y, r8.y, c60.w
                mul r0.w, r0.y, r0.y
                mul r1.x, r0.w, r0.y
                mul r1.x, r1.x, c83.z  // ::s1<0>
                mad r0.w, r0.y, -r0.w, c83.w

#line 1632
                mul r9, r8.y, c86

#line 395
                cmp r0.w, r0.w, r9.x, r1.x  // ::s2<0>

#line 380
                mul r1.x, r8.y, r0.w
                mul r1.y, r1.x, c84.x  // ::y<0>
                mul r10, r0.w, c138  // ::x<0>, ::z<0>, ::x<0>, ::z<0>
                rcp r1.z, r10.y
                mul r1.w, r1.z, r10.x  // ::GetBounds2<0>
                mul r1.y, r1.z, r1.y  // ::GetBounds2<1>
                mad r1.x, r1.x, c84.x, -r9.y  // ::y<0>
                mad r4.xy, r0.w, c165, c165.z  // ::z<0,0>
                rcp r1.z, r4.x
                mul r2.w, r1.z, r10.x  // ::GetBounds2<0>
                mul r1.x, r1.z, r1.x  // ::GetBounds2<1>
                mul r1.z, r0.w, r9.y  // ::y<0>
                rcp r3.w, r10.w
                mul r4.x, r3.w, r10.z  // ::GetBounds2<0>
                mul r3.w, r1.z, r3.w  // ::GetBounds2<1>
                mad r4.w, r9.y, r0.w, -r9.y  // ::y<0>
                rcp r4.y, r4.y
                mul r5.w, r4.y, r10.z  // ::GetBounds2<0>
                mul r4.y, r4.y, r4.w  // ::GetBounds2<1>
                mul r10.xy, r0.w, c135  // ::x<0>, ::z<0>
                rcp r6.z, r10.y
                mul r7.w, r6.z, r10.x  // ::GetBounds2<0>
                mul r1.z, r1.z, r6.z  // ::GetBounds2<1>
                mad r0.w, r0.w, c165.w, c165.z  // ::z<0>
                rcp r0.w, r0.w
                mul r6.z, r0.w, r10.x  // ::GetBounds2<0>
                mul r0.w, r0.w, r4.w  // ::GetBounds2<1>

#line 428
                mad r4.w, r2.z, c164.x, c164.y
                frc r4.w, r4.w
                mad r4.w, r4.w, c164.z, c164.w
                sincos r10.xy, r4.w
                mad r1.w, r1.w, -r10.x, r10.y
                rcp r1.w, r1.w
                mul r1.y, r1.w, r1.y  // ::length<0>
                min r4.w, r1.y, c84.w  // GetChroma2a::result<0>
                cmp r1.y, r1.y, r4.w, c84.w  // GetChroma2a::result<0>
                mad r1.w, r2.w, -r10.x, r10.y
                rcp r1.w, r1.w
                mul r1.x, r1.w, r1.x  // ::length<0>
                min r2.w, r1.x, r1.y  // GetChroma2a::result<0>
                cmp r1.x, r1.x, r2.w, r1.y  // GetChroma2a::result<0>
                mad r1.y, r4.x, -r10.x, r10.y
                rcp r1.y, r1.y
                mul r1.y, r1.y, r3.w  // ::length<0>
                min r2.w, r1.y, r1.x  // GetChroma2a::result<0>
                cmp r1.x, r1.y, r2.w, r1.x  // GetChroma2a::result<0>
                mad r1.y, r5.w, -r10.x, r10.y
                rcp r1.y, r1.y
                mul r1.y, r1.y, r4.y  // ::length<0>
                min r2.w, r1.y, r1.x  // GetChroma2a::result<0>
                cmp r1.x, r1.y, r2.w, r1.x  // GetChroma2a::result<0>
                mad r1.y, r7.w, -r10.x, r10.y
                rcp r1.y, r1.y
                mul r1.y, r1.y, r1.z  // ::length<0>
                min r2.w, r1.y, r1.x  // GetChroma2a::result<0>
                cmp r1.x, r1.y, r2.w, r1.x  // GetChroma2a::result<0>
                mad r1.y, r6.z, -r10.x, r10.y
                rcp r1.y, r1.y
                mul r0.w, r0.w, r1.y  // ::length<0>
                min r2.w, r0.w, r1.x  // GetChroma2a::result<0>
                cmp r0.w, r0.w, r2.w, r1.x  // GetChroma2a::result<0>

#line 1748
                mul r0.w, r7.y, r0.w
                mul r0.w, r0.w, c106.w  // ::C<0>

#line 598
                mul r1.xy, r10, r0.w  // ::a<0>, ::b<0>

#line 516
                abs r0.w, c13.x

#line 520
                rcp r1.z, c13.x
                mul r10.x, r1.z, c12.x  // ::xyY_XYZ<0>
                mov r4.x, c13.x  // ::WhiteY<0>
                add r1.w, -r4.x, -c12.x
                add r1.w, r1.w, -c149.y
                mul r10.z, r1.z, r1.w  // ::xyY_XYZ<2>
                mov r10.y, -c149.y
                cmp r4.xyw, -r0.w, c115.w, r10.xyzz  // ::xyY_XYZ<0,1,2>

#line 579
                cmp r0.w, -r0.w, c128.y, c128.w
                add r0.w, r0.w, r4.x
                mul r1.z, r4.x, -c101.z
                mad r0.w, r4.w, -c101.x, r0.w
                rcp r0.w, r0.w
                mul r1.z, r0.w, r1.z  // ::ComputeKu<0>

#line 584
                mul r0.w, r4.y, r0.w
                mul r0.w, r0.w, -c45.x  // ::ComputeKv<0>

#line 1630
                add r1.w, -r8.y, c85.z
                mul r0.y, r0.y, c85.w
                mul r2.w, r0.y, r0.y
                mul r0.y, r0.y, r2.w
                cmp r0.y, r1.w, r9.x, r0.y  // ::Y<0>
                mad r1.x, r9.w, r1.z, r1.x
                rcp r1.x, r1.x
                mad r1.x, r9.z, r1.x, c149.y
                mul r1.x, r1.x, c62.x  // ::a<0>
                mul r1.z, r0.y, c103.x  // ::b<0>
                mul r1.w, r8.y, -c40.z
                mad r0.w, r9.w, r0.w, r1.y
                rcp r0.w, r0.w
                mad r0.w, r1.w, r0.w, c103.x
                mad r0.w, r0.y, r0.w, -r1.z
                rcp r1.y, r1.x
                mul r0.w, r0.w, r1.y  // ::X<0>
                mad r1.x, r0.w, r1.x, r1.z  // ::Z<0>

#line 1641
                max r1.y, r0.w, c104.z  // ::X<0>

#line 1644
                max r1.z, r0.y, c104.z  // ::Y<0>

#line 1647
                max r0.y, r1.x, c104.z  // ::Z<0>

#line 478
                mul r1.xzw, r1.z, c24.xyyz
                mad r1.xyz, r1.y, c23, r1.xzww
                mad r5.xyz, r0.y, c25.xzyw, r1.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 1752
              endif
            endif

#line 2533
            mov r0.y, -c149.y
          else
            mov r1.x, c0.x  // ::Model<0>
            if_eq r1.x, -c64.x

#line 1064
              mad r0.w, r2.z, c164.x, c164.y
              frc r0.w, r0.w
              mad r0.w, r0.w, c164.z, c164.w
              sincos r9.x, r0.w  // ::h<0>
              mul r0.w, r7.y, r9.x

#line 1068
              mul r1.y, r0.w, c117.w  // ::j<0>

#line 1076
              mul r5.xz, r8.y, c135.zyww  // ::m<0>
              mad r0.w, r0.w, c117.w, r5.z
              mad r0.w, r8.y, -c134.x, r0.w
              mul r5.z, r0.w, c79.y  // ::g<0>
              mad r0.w, r8.y, c134.y, -r1.y
              mul r5.y, r0.w, -c127.z  // ::b<0>

#line 2534
              mov r0.y, -c149.y
            else
              if_eq r1.x, -c68.z

#line 1141
                mad r0.w, r7.y, -c163.y, c163.z  // ::minOverMax<0>
                if_lt -r0.w, c104.z

#line 1146
                  if_lt r2.z, c62.z
                    mul r1.y, r2.z, c124.x  // ::h<0>
                    rcp r1.z, r0.w
                    lrp r2.w, r1.y, r1.z, -c149.y  // ::part<0>
                    mul r1.w, r1.z, r1.z
                    mul r2.w, r2.w, r2.w
                    mul r2.w, r2.w, c120.y
                    mad r1.w, r1.w, c120.x, r2.w
                    add r1.w, r1.w, c69.w
                    rsq r1.w, r1.w
                    mul r9.z, r1.w, r8.y  // ::b<0>
                    mul r9.x, r1.z, r9.z  // ::r<0>
                    mad r1.z, r9.z, r1.z, -r9.z
                    mad r9.y, r1.y, r1.z, r9.z  // ::g<0>
                  else
                    if_lt r2.z, c163.x

#line 1157
                      mad r1.y, r2.z, -c134.z, c134.w
                      mul r1.y, r1.y, -c103.z  // ::h<0>
                      rcp r1.z, r0.w
                      lrp r2.w, r1.y, r1.z, -c149.y  // ::part<0>
                      mul r1.w, r1.z, r1.z
                      mul r2.w, r2.w, r2.w
                      mul r2.w, r2.w, c120.x
                      mad r1.w, r1.w, c120.y, r2.w
                      add r1.w, r1.w, c69.w
                      rsq r1.w, r1.w
                      mul r9.z, r1.w, r8.y  // ::b<0>
                      mul r9.y, r1.z, r9.z  // ::g<0>
                      mad r1.z, r9.z, r1.z, -r9.z
                      mad r9.x, r1.y, r1.z, r9.z  // ::r<0>
                    else
                      if_lt r2.z, c108.x
                        mad r1.y, r2.z, c108.y, c108.z
                        mul r1.y, r1.y, -c103.z  // ::h<0>
                        rcp r1.z, r0.w
                        lrp r2.w, r1.y, r1.z, -c149.y  // ::part<0>

#line 1168
                        mul r1.w, r1.z, r1.z
                        mul r2.w, r2.w, r2.w
                        mul r2.w, r2.w, c69.w
                        mad r1.w, r1.w, c120.y, r2.w
                        add r1.w, r1.w, c120.x
                        rsq r1.w, r1.w
                        mul r9.x, r1.w, r8.y  // ::r<0>
                        mul r9.y, r1.z, r9.x  // ::g<0>
                        mad r1.z, r9.x, r1.z, -r9.x
                        mad r9.z, r1.y, r1.z, r9.x  // ::b<0>
                      else
                        if_lt r2.z, c153.y
                          mad r1.y, r2.z, -c108.y, c108.w
                          mul r1.y, r1.y, -c103.z  // ::h<0>
                          rcp r1.z, r0.w
                          lrp r2.w, r1.y, r1.z, -c149.y  // ::part<0>
                          mul r1.w, r1.z, r1.z
                          mul r2.w, r2.w, r2.w
                          mul r2.w, r2.w, c120.y
                          mad r1.w, r1.w, c69.w, r2.w
                          add r1.w, r1.w, c120.x
                          rsq r1.w, r1.w
                          mul r9.x, r1.w, r8.y  // ::r<0>
                          mul r9.z, r1.z, r9.x  // ::b<0>

#line 1179
                          mad r1.z, r9.x, r1.z, -r9.x
                          mad r9.y, r1.y, r1.z, r9.x  // ::g<0>
                        else
                          add r1.y, r2.z, -c71.w
                          mad r1.z, r2.z, c88.x, c88.y
                          mul r1.z, r1.z, -c103.z  // ::h<0>
                          rcp r0.w, r0.w
                          lrp r2.w, r1.z, r0.w, -c149.y  // ::part<0>
                          mul r1.w, r0.w, r0.w

#line 1195
                          mul r4.xy, r1.w, c141.zxzw

#line 1186
                          mul r1.w, r2.w, r2.w
                          mad r1.w, r1.w, c120.x, r4.x
                          add r1.w, r1.w, c120.y
                          rsq r1.w, r1.w
                          mul r10.y, r1.w, r8.y  // ::g<0>
                          mul r10.z, r0.w, r10.y  // ::b<0>
                          mad r1.w, r10.y, r0.w, -r10.y
                          mad r10.x, r1.z, r1.w, r10.y  // ::r<0>

#line 1193
                          mad r1.z, r2.z, -c88.x, c88.z
                          mul r1.z, r1.z, -c103.z  // ::h<0>
                          lrp r2.w, r1.z, r0.w, -c149.y  // ::part<0>
                          mul r1.w, r2.w, r2.w
                          mad r1.w, r1.w, c69.w, r4.y
                          add r1.w, r1.w, c120.y
                          rsq r1.w, r1.w
                          mul r11.y, r1.w, r8.y  // ::g<0>
                          mul r11.x, r0.w, r11.y  // ::r<0>
                          mad r0.w, r11.y, r0.w, -r11.y
                          mad r11.z, r1.z, r0.w, r11.y  // ::b<0>
                          cmp r9.xyz, r1.y, r11, r10  // ::r<0>, ::g<0>, ::b<0>
                        endif
                      endif
                    endif
                  endif
                else

#line 1203
                  if_lt r2.z, c62.z
                    mul r0.w, r2.z, c124.x  // ::h<0>
                    mul r1.y, r8.y, r8.y
                    mul r1.z, r2.z, r0.w
                    mad r1.z, r1.z, c121.x, c121.y
                    rcp r1.z, r1.z
                    mul r1.y, r1.z, r1.y
                    rsq r1.y, r1.y
                    rcp r9.x, r1.y  // ::r<0>
                    mul r9.y, r0.w, r9.x  // ::g<0>
                    mov r9.z, c104.z
                  else
                    if_lt r2.z, c163.x
                      mad r0.w, r2.z, -c134.z, c134.w
                      mul r1.y, r0.w, -c103.z  // ::h<0>

#line 1214
                      mul r1.z, r8.y, r8.y
                      mul r0.w, r0.w, r1.y
                      mad r0.w, r0.w, c121.z, c121.w
                      rcp r0.w, r0.w
                      mul r0.w, r0.w, r1.z
                      rsq r0.w, r0.w
                      rcp r9.y, r0.w  // ::g<0>
                      mul r9.x, r1.y, r9.y  // ::r<0>
                      mov r9.z, c104.z
                    else

#line 1237
                      mad r1.yz, r2.z, c88.x, c88.xwyw
                      mul r4.xy, r1.yzzw, -c103.z  // ::h<0,0>

#line 1222
                      mul r0.w, r8.y, r8.y

#line 1238
                      mul r1.yz, r1, r4.xxyw
                      mad r1.yz, r1, c123.xxyw, c123.xzww

#line 1222
                      rcp r1.y, r1.y
                      mul r1.y, r0.w, r1.y
                      rsq r1.y, r1.y
                      rcp r10.y, r1.y  // ::g<0>
                      mul r10.z, r4.x, r10.y  // ::b<0>

#line 1245
                      mad r1.yw, r2.z, -c88_abs.x, c88_abs.xyzz
                      mul r4.xw, r1.yyzw, -c103.z  // ::h<0,0>
                      mul r1.yw, r1, r4.xxzw
                      mad r1.yw, r1, c122.xxzy, c122.xzzw

#line 1230
                      rcp r1.y, r1.y
                      mul r1.y, r0.w, r1.y
                      rsq r1.y, r1.y
                      rcp r11.z, r1.y  // ::b<0>
                      mul r11.y, r4.x, r11.z  // ::g<0>

#line 1235
                      add r12.xyz, r2.z, c119

#line 1238
                      rcp r1.y, r1.z
                      mul r1.y, r0.w, r1.y
                      rsq r1.y, r1.y
                      rcp r13.z, r1.y  // ::b<0>
                      mul r13.x, r4.y, r13.z  // ::r<0>

#line 1246
                      rcp r1.y, r1.w
                      mul r0.w, r0.w, r1.y
                      rsq r0.w, r0.w
                      rcp r14.x, r0.w  // ::r<0>
                      mul r14.z, r4.w, r14.x  // ::b<0>
                      mov r14.y, c104.z
                      mov r13.y, c104.z
                      cmp r1.yzw, r12.z, r14.xxyz, r13.xxyz  // ::r<0>, ::g<0>, ::b<0>
                      mov r11.x, c104.z
                      cmp r1.yzw, r12.y, r1, r11.xxyz  // ::r<0>, ::g<0>, ::b<0>
                      mov r10.x, c104.z
                      cmp r9.xyz, r12.x, r1.yzww, r10  // ::r<0>, ::g<0>, ::b<0>
                    endif
                  endif
                endif

#line 1253
                add r1.yzw, r9.xxyz, -c127.z
                frc r4.xyw, r1.yzzw
                add r1.yzw, r1, -r4.xxyw
                mul_sat r5.xyz, r1.ywzw, c81.z  // ::result<0,2,1>

#line 2535
                mov r0.y, -c149.y
              else
                if_eq r1.x, -c46.y

#line 1323
                  mul r0.w, r7.y, c106.w  // ::white<0>
                  mul r1.y, r8.y, c106.w  // ::black<0>
                  mad r1.y, r7.y, c106.w, r1.y

#line 1332
                  if_ge r1.y, -c149.y

#line 1328
                    rcp r1.y, r1.y
                    mul r5.xyz, r0.w, r1.y  // ::gray<0,0,0>

#line 1343
                  else

#line 861
                    add r1.y, -r2.z, c87.w

#line 873
                    mul r1.z, r2.z, c124.x
                    cmp r1.y, r1.y, r1.z, c124.y  // ::SectorPosition<0>
                    frc r1.z, r1.y
                    add r1.z, -r1.z, r1.y  // ::SectorNumber<0>

#line 877
                    add r1.y, -r1.z, r1.y  // ::FractionalSector<0>

#line 881
                    add r9.x, -r1.y, -c149.y  // ::q<0>

#line 909
                    add r10, r1.z, c162

#line 915
                    add r1.y, r1.z, c103.x
                    cmp r11.x, -r1_abs.y, c149_abs.y, c149_abs.x  // ::r<0>

#line 920
                    mov r9.y, c104.z
                    cmp r11.yz, -r1_abs.y, r9.xyxw, c104.z  // ::g<0>, ::b<0>
                    mad r9.zw, r9.x, c56.xyyz, c56.x
                    cmp r4.xyw, -r10_abs.w, r9.zyzw, r11.xyzz  // ::r<0>, ::g<0>, ::b<0>
                    cmp r4.xyw, -r10_abs.z, r9.yxzw, r4  // ::r<0>, ::g<0>, ::b<0>
                    mad r11.xyz, r9.wxyw, c56.xyxw, c56.zxzw
                    cmp r4.xyw, -r10_abs.y, r11.zxzy, r4  // ::r<0>, ::g<0>, ::b<0>
                    cmp r4.xyw, -r10_abs.x, r9.xwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                    cmp r1.yzw, -r1_abs.z, r11.xxyz, r4.xxyw  // ::r<0>, ::g<0>, ::b<0>

#line 1335
                    mad r2.w, r7.y, -c163.y, c163.z
                    mad r2.w, r8.y, -c106.w, r2.w

#line 1342
                    mad r5.xyz, r1.ywzw, r2.w, r0.w  // ::rgb<0,2,1>
                  endif

#line 2536
                  mov r0.y, -c149.y
                else
                  if_eq r1.x, -c109.x

#line 478
                    mul r1.yzw, r7.y, c90.xxyz
                    mad r1.yzw, r2.z, c89.xxyz, r1
                    mad r5.xyz, r8.y, c91.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2537
                    mov r0.y, -c149.y
                  else
                    if_eq r1.x, -c109.y

#line 2240
                      add r0.w, r8.y, c104.w
                      mad r1.y, r0.w, c119.w, r2.z  // ::ycbcr<0>
                      add r1.z, r7.y, c104.w
                      mad r1.w, r1.z, -c90.w, r2.z
                      mad r0.w, r0.w, -c89.w, r1.w  // ::ycbcr<1>
                      mad r1.z, r1.z, c91.w, r2.z  // ::ycbcr<2>

#line 2220
                      add r1.y, r1.y, -c60.w
                      mul r1.w, r1.y, c96.x  // ::ypbpr<0>
                      add r0.w, r0.w, c104.w
                      add r1.z, r1.z, c104.w

#line 2175
                      mad r5.x, r1.z, c96.y, r1.w  // ::r<0>
                      mad r5.y, r0.w, c96.z, r1.w  // ::b<0>
                      mul r0.w, r5.x, c137.x
                      mad r0.w, r1.y, c96.x, -r0.w
                      mad r0.w, r5.y, -c137.z, r0.w
                      mul r5.z, r0.w, c96.w  // ::g<0>

#line 2538
                      mov r0.y, -c149.y
                    else
                      if_eq c0.x, r6.w

#line 1424
                        add r0.w, r2.z, c60.w
                        mul r0.w, r0.w, c85.w  // ::fy<0>
                        mad r1.y, r7.y, c95.x, r0.w  // ::fx<0>
                        mad r1.z, r8.y, -c95.y, r0.w  // ::fz<0>
                        mul r1.w, r1.y, r1.y
                        mul r2.w, r1.w, r1.y  // ::fx3<0>
                        mul r3.w, r1.z, r1.z
                        mul r4.x, r1.z, r3.w  // ::fz3<0>
                        mad r1.w, r1.y, -r1.w, c71.y
                        mad r1.y, r1.y, c95.z, c95.w
                        mul r1.y, r1.y, c86.x
                        cmp r1.y, r1.w, r1.y, r2.w  // ::xr<0>
                        add r1.w, -r2.z, c85.z
                        mul r2.w, r0.w, r0.w
                        mul r0.w, r0.w, r2.w
                        mul r2.w, r2.z, c86.x
                        cmp r0.w, r1.w, r2.w, r0.w  // ::yr<0>
                        mad r1.w, r1.z, -r3.w, c71.y
                        mad r1.z, r1.z, c95.z, c95.w
                        mul r1.z, r1.z, c86.x
                        cmp r1.z, r1.w, r1.z, r4.x  // ::zr<0>

#line 516
                        abs r1.w, c13.x

#line 520
                        rcp r2.w, c13.x
                        mul r9.x, r2.w, c12.x  // ::xyY_XYZ<0>
                        mov r4.x, c13.x  // ::WhiteY<0>
                        add r3.w, -r4.x, -c12.x
                        add r3.w, r3.w, -c149.y
                        mul r9.z, r2.w, r3.w  // ::xyY_XYZ<2>
                        mov r9.y, -c149.y
                        cmp r4.xyw, -r1.w, c115.w, r9.xyzz  // ::xyY_XYZ<0,1,2>

#line 1436
                        mul r5.z, r0.w, r4.y  // ::Lab_Lrgb<1>
                        mul r5.xy, r1.yzzw, r4.xwzw  // ::Lab_Lrgb<0,2>

#line 2539
                        mov r0.y, -c149.y
                      else
                        if_eq r1.x, -c35.x

#line 516
                          abs r0.w, c13.x

#line 520
                          rcp r1.y, c13.x
                          mul r9.x, r1.y, c12.x  // ::xyY_XYZ<0>
                          mov r4.x, c13.x  // ::WhiteY<0>
                          add r1.z, -r4.x, -c12.x
                          add r1.z, r1.z, -c149.y
                          mul r9.z, r1.y, r1.z  // ::xyY_XYZ<2>
                          mov r9.y, -c149.y
                          cmp r1.yzw, -r0.w, c115.w, r9.xxyz  // ::xyY_XYZ<0,1,2>

#line 560
                          add r4.xy, r1.ywzw, c92

#line 563
                          cmp r2.w, -r4_abs.y, -c149_abs.y, -c149_abs.x
                          cmp r2.w, -r0.w, c104.z, r2.w
                          cmp r2.w, -r4_abs.x, r2.w, c104.z

#line 573
                          add r4.xy, r1.zwzw, r1.yzzw
                          mul r4.xy, r4, c92.zwzw  // ::Ka<0,0>

#line 1480
                          mul r3.w, r2.z, c106.w
                          mul r3.w, r3.w, r3.w
                          mul r1.z, r1.z, r3.w  // ::Y<0>
                          rcp r3.w, r4.x
                          cmp r3.w, r2.w, r3.w, c93.x
                          mul r3.w, r3.w, r7.y
                          cmp r0.w, -r0.w, c114.z, c114.w
                          mul r0.w, r0.w, r1.z
                          rsq r4.x, r0.w
                          rcp r4.x, r4.x
                          mad r3.w, r3.w, r4.x, r0.w
                          mul r1.y, r1.y, r3.w  // ::X<0>
                          rcp r3.w, r4.y
                          cmp r2.w, r2.w, r3.w, c93.y
                          mul r2.w, r2.w, r8.y
                          mad r0.w, r2.w, r4.x, -r0.w
                          mul r0.w, -r1.w, r0.w  // ::Z<0>

#line 478
                          mul r4.xyw, r1.z, c24.xyzz
                          mad r1.yzw, r1.y, c23.xxyz, r4.xxyw
                          mad r5.xyz, r0.w, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2540
                          mov r0.y, -c149.y
                        else
                          if_eq r1.x, -c35.y

#line 1526
                            add r0.w, r2.z, -c71.x  // ::Jz<0>
                            mad r1.y, r0.w, c93.z, c93.w
                            rcp r1.y, r1.y

#line 1531
                            mul r1.zw, r7.y, c131.xyxy
                            mad r2.w, r0.w, r1.y, r1.z
                            mad r2.w, r8.y, c131.z, r2.w  // PerceptualQuantizerInverse::X<0>

#line 499
                            pow r3.w, r2.w, c131.w  // ::XX<0>
                            add r2.w, -r3.w, c70.z
                            mad r3.w, r3.w, c110.x, c110.y
                            rcp r3.w, r3.w
                            mul r2.w, r2.w, r3.w
                            pow r3.w, r2.w, c110.z

#line 1531
                            mad r1.yz, r0.w, r1.y, -r1.xzww
                            mad r1.yz, r8.y, -c130.xxyw, r1  // PerceptualQuantizerInverse::X<0,0>

#line 499
                            pow r0.w, r1.y, c131.w  // ::XX<0>
                            add r1.y, -r0.w, c70.z
                            mad r0.w, r0.w, c110.x, c110.y
                            rcp r0.w, r0.w
                            mul r0.w, r0.w, r1.y
                            pow r1.y, r0.w, c110.z
                            pow r0.w, r1.z, c131.w  // ::XX<0>
                            add r1.z, -r0.w, c70.z
                            mad r0.w, r0.w, c110.x, c110.y
                            rcp r0.w, r0.w
                            mul r0.w, r0.w, r1.z
                            pow r1.z, r0.w, c110.z

#line 1535
                            mul r4.xyw, r1.y, c133.xyzz
                            mad r1.yw, r3.w, c130.xzzw, -r4.xxzw
                            mad r0.w, r3.w, c110.w, r4.y
                            mad r0.w, r1.z, -c133.w, r0.w  // ::Y<0>
                            mad r1.yz, r1.z, c132.xxyw, r1.xyww  // ::X<0>, ::Z<0>
                            mul r0.w, r0.w, c94.w  // ::xyz<1>
                            mul r1.yz, r1, c94.w  // ::xyz<0,2>

#line 478
                            mul r4.xyw, r0.w, c24.xyzz
                            mad r4.xyw, r1.y, c23.xyzz, r4
                            mad r5.xyz, r1.z, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2541
                            mov r0.y, -c149.y
                          else
                            add r0.w, r1.x, c35.z
                            cmp r0.y, -r0_abs.w, c149_abs.y, c149_abs.x

#line 516
                            abs r1.x, c13.x

#line 520
                            rcp r1.y, c13.x
                            mul r9.x, r1.y, c12.x  // ::xyY_XYZ<0>
                            mov r4.x, c13.x  // ::WhiteY<0>
                            add r1.z, -r4.x, -c12.x
                            add r1.z, r1.z, -c149.y
                            mul r9.z, r1.y, r1.z  // ::xyY_XYZ<2>
                            mov r9.y, -c149.y
                            cmp r1.xyz, -r1.x, c115.w, r9  // ::xyY_XYZ<0,1,2>

#line 478
                            mul r4.xyw, r7.y, c27.xyzz
                            mad r4.xyw, r2.z, c26.xyzz, r4
                            mad r4.xyw, r8.y, c28.xyzz, r4  // ::x<0>, ::y<0>, ::z<0>

#line 508
                            mul r9.xyz, r4.xyww, r4.xyww
                            mul r4.xyw, r4, r9.xyzz  // ::Pow3<0,0,0>

#line 478
                            mul r9.xyz, r4.y, c33
                            mad r9.xyz, r4.x, c32, r9
                            mad r4.xyw, r4.w, c34.xyzz, r9.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 1584
                            mul r1.xyz, r1, r4.xyww  // ::xyz<0,1,2>

#line 478
                            mul r4.xyw, r1.y, c24.xyzz
                            mad r1.xyw, r1.x, c23.xyzz, r4
                            mad r1.xyz, r1.z, c25, r1.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 2542
                            cmp r5.xyz, -r0_abs.w, r1.xzyw, r5  // ::TLrgb<0,2,1>
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r0.y, -r0.y

#line 2573
          else

#line 2544
            mov r1.x, c0.x  // ::Model<0>
            if_eq r1.x, -c35.w

#line 858
              mul r0.y, r7.y, c106.w  // ::_s<0>
              mul r9.y, r8.y, c106.w  // ::_b<0>

#line 861
              add r0.w, -r2.z, c87.w

#line 873
              mul r1.y, r2.z, c124.x
              cmp r0.w, r0.w, r1.y, c124.y  // ::SectorPosition<0>
              frc r1.y, r0.w
              add r1.y, r0.w, -r1.y  // ::SectorNumber<0>

#line 877
              add r0.w, r0.w, -r1.y  // ::FractionalSector<0>

#line 880
              mad r1.z, r7.y, -c163.y, c163.z
              mul r9.z, r1.z, r9.y  // ::p<0>
              mad r1.z, r0.y, -r0.w, -c149.y
              mul r9.w, r1.z, r9.y  // ::q<0>
              add r0.w, -r0.w, -c149.y
              mad r0.w, r0.y, -r0.w, -c149.y
              mul r9.x, r0.w, r9.y  // ::t<0>

#line 909
              add r10, r1.y, c162

#line 915
              add r0.w, r1.y, c103.x

#line 920
              cmp r4.xyw, -r0_abs.w, r9.yzzw, c104.z  // ::r<0>, ::g<0>, ::b<0>
              cmp r4.xyw, -r10_abs.w, r9.xzzy, r4  // ::r<0>, ::g<0>, ::b<0>
              cmp r4.xyw, -r10_abs.z, r9.zwzy, r4  // ::r<0>, ::g<0>, ::b<0>
              cmp r4.xyw, -r10_abs.y, r9.zyzx, r4  // ::r<0>, ::g<0>, ::b<0>
              cmp r4.xyw, -r10_abs.x, r9.wyzz, r4  // ::r<0>, ::g<0>, ::b<0>
              cmp r1.yzw, -r1_abs.y, r9.xyxz, r4.xxyw  // ::r<0>, ::g<0>, ::b<0>
              cmp r5.xyz, -r0_abs.y, r9.y, r1.ywzw  // ::r<0>, ::b<0>, ::g<0>

#line 2544
              mov r0.y, -c149.y
            else
              if_eq r1.x, -c36.x

#line 967
                mul r5.xyz, r8.y, c106.w  // ::l<0,0,0>

#line 974
                if_lt -r7.y, c104.z

#line 967
                  mul r0.w, r7.y, c106.w  // ::s<0>
                  min r1.y, r2.z, c87.w  // ::h<0>
                  mul r1.z, r1.y, c124.x  // ::h<0>

#line 976
                  mad r1.w, r8.y, c124.z, c124.w
                  add r1.w, -r1_abs.w, -c149.y
                  mul r9.x, r0.w, r1.w  // ::chroma<0>
                  cmp r4.xy, r1.y, c155, c155.zwzw
                  mul r0.w, r1.z, r4.y
                  frc r0.w, r0.w
                  mad r0.w, r4.x, r0.w, c149.y
                  add r0.w, -r0_abs.w, -c149.y
                  mul r9.y, r0.w, r9.x  // ::v<0>

#line 997
                  add r10, -r1.y, c116

#line 1003
                  add r11, r1.y, -c116.wzyx

#line 1009
                  add r0.w, r1.y, c117.x
                  add r1.zw, -r1.y, c117.xyyz

#line 1014
                  cmp r1.zw, r1, -c149_abs.y, -c149_abs.x
                  cmp r0.w, r0.w, r1.z, c104.z
                  mov r9.z, c104.z
                  cmp r4.xyw, r0.w, c104.z, r9.xzzy  // ::result<0,1,2>
                  cmp r0.w, r11.w, r1.w, c104.z
                  cmp r4.xyw, r0.w, r4, r9.yzzx  // ::result<0,1,2>
                  cmp r10, r10, -c149_abs.y, -c149_abs.x
                  cmp r10.xyz, r11.zyxw, r10, c104.z
                  cmp r4.xyw, r10.x, r4, r9.zyzx  // ::result<0,1,2>
                  cmp r4.xyw, r10.y, r4, r9.zxzy  // ::result<0,1,2>
                  cmp r4.xyw, r10.z, r4, r9.yxzz  // ::result<0,1,2>
                  cmp r0.w, r1.y, r10.w, c104.z
                  cmp r1.yzw, r0.w, r4.xxyw, r9.xxyz  // ::result<0,1,2>
                  mad r0.w, r9.x, c127.z, r5.y  // ::w<0>

#line 1019
                  add r5.xyz, r0.w, r1.ywzw  // ::result<0,2,1>

#line 1024
                endif

#line 2545
                mov r0.y, -c149.y
              else
                if_eq r1.x, -c36.y

#line 1323
                  mul r0.w, r7.y, c106.w  // ::white<0>
                  mul r1.y, r8.y, c106.w  // ::black<0>
                  mad r1.y, r7.y, c106.w, r1.y

#line 1332
                  if_ge r1.y, -c149.y

#line 1328
                    rcp r1.y, r1.y
                    mul r5.xyz, r0.w, r1.y  // ::gray<0,0,0>

#line 1343
                  else

#line 861
                    add r1.y, -r2.z, c87.w

#line 873
                    mul r1.z, r2.z, c124.x
                    cmp r1.y, r1.y, r1.z, c124.y  // ::SectorPosition<0>
                    frc r1.z, r1.y
                    add r1.z, -r1.z, r1.y  // ::SectorNumber<0>

#line 877
                    add r1.y, -r1.z, r1.y  // ::FractionalSector<0>

#line 881
                    add r9.x, -r1.y, -c149.y  // ::q<0>

#line 909
                    add r10, r1.z, c162

#line 915
                    add r1.y, r1.z, c103.x
                    cmp r11.x, -r1_abs.y, c149_abs.y, c149_abs.x  // ::r<0>

#line 920
                    mov r9.y, c104.z
                    cmp r11.yz, -r1_abs.y, r9.xyxw, c104.z  // ::g<0>, ::b<0>
                    mad r9.zw, r9.x, c56.xyyz, c56.x
                    cmp r4.xyw, -r10_abs.w, r9.zyzw, r11.xyzz  // ::r<0>, ::g<0>, ::b<0>
                    cmp r4.xyw, -r10_abs.z, r9.yxzw, r4  // ::r<0>, ::g<0>, ::b<0>
                    mad r11.xyz, r9.wxyw, c56.xyxw, c56.zxzw
                    cmp r4.xyw, -r10_abs.y, r11.zxzy, r4  // ::r<0>, ::g<0>, ::b<0>
                    cmp r4.xyw, -r10_abs.x, r9.xwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                    cmp r1.yzw, -r1_abs.z, r11.xxyz, r4.xxyw  // ::r<0>, ::g<0>, ::b<0>

#line 1335
                    mad r2.w, r7.y, -c163.y, c163.z
                    mad r2.w, r8.y, -c106.w, r2.w

#line 1342
                    mad r5.xyz, r1.ywzw, r2.w, r0.w  // ::rgb<0,2,1>
                  endif

#line 2546
                  mov r0.y, -c149.y
                else
                  if_eq r1.x, -c36.z

#line 597
                    mad r0.w, r8.y, c164.x, c164.y
                    frc r0.w, r0.w
                    mad r0.w, r0.w, c164.z, c164.w
                    sincos r9.xy, r0.w
                    mul r1.yz, r7.y, r9.xxyw  // ::a<0>, ::b<0>

#line 1424
                    add r0.w, r2.z, c60.w
                    mul r1.w, r0.w, c85.w  // ::fy<0>
                    mul r1.z, r1.z, c95.y
                    mad r1.y, r1.y, c95.x, r1.w  // ::fx<0>
                    mad r0.w, r0.w, c85.w, -r1.z  // ::fz<0>
                    mul r1.z, r1.y, r1.y
                    mul r2.w, r1.z, r1.y  // ::fx3<0>
                    mul r3.w, r0.w, r0.w
                    mul r4.x, r0.w, r3.w  // ::fz3<0>
                    mad r1.z, r1.y, -r1.z, c71.y
                    mad r1.y, r1.y, c95.z, c95.w
                    mul r1.y, r1.y, c86.x
                    cmp r1.y, r1.z, r1.y, r2.w  // ::xr<0>
                    add r1.z, -r2.z, c85.z
                    mul r2.w, r1.w, r1.w
                    mul r1.w, r1.w, r2.w
                    mul r2.w, r2.z, c86.x
                    cmp r1.z, r1.z, r2.w, r1.w  // ::yr<0>
                    mad r1.w, r0.w, -r3.w, c71.y
                    mad r0.w, r0.w, c95.z, c95.w
                    mul r0.w, r0.w, c86.x
                    cmp r0.w, r1.w, r0.w, r4.x  // ::zr<0>

#line 516
                    abs r1.w, c13.x

#line 520
                    rcp r2.w, c13.x
                    mul r9.x, r2.w, c12.x  // ::xyY_XYZ<0>
                    mov r4.x, c13.x  // ::WhiteY<0>
                    add r3.w, -r4.x, -c12.x
                    add r3.w, r3.w, -c149.y
                    mul r9.z, r2.w, r3.w  // ::xyY_XYZ<2>
                    mov r9.y, -c149.y
                    cmp r4.xyw, -r1.w, c115.w, r9.xyzz  // ::xyY_XYZ<0,1,2>

#line 1436
                    mul r5.xz, r1.yyzw, r4.xyyw  // ::Lab_Lrgb<0,1>
                    mul r5.y, r0.w, r4.w  // ::Lab_Lrgb<2>

#line 2547
                    mov r0.y, -c149.y
                  else
                    if_eq r1.x, -c36.w

#line 597
                      mad r0.w, r8.y, c164.x, c164.y
                      frc r0.w, r0.w
                      mad r0.w, r0.w, c164.z, c164.w
                      sincos r9.xy, r0.w
                      mul r1.yz, r7.y, r9.xxyw  // ::a<0>, ::b<0>

#line 516
                      abs r0.w, c13.x

#line 520
                      rcp r1.w, c13.x
                      mul r9.x, r1.w, c12.x  // ::xyY_XYZ<0>
                      mov r4.x, c13.x  // ::WhiteY<0>
                      add r2.w, -r4.x, -c12.x
                      add r2.w, r2.w, -c149.y
                      mul r9.z, r1.w, r2.w  // ::xyY_XYZ<2>
                      mov r9.y, -c149.y
                      cmp r4.xyw, -r0.w, c115.w, r9.xyzz  // ::xyY_XYZ<0,1,2>

#line 560
                      add r6.zw, r4.xyxw, c92.xyxy

#line 563
                      cmp r1.w, -r6_abs.w, -c149_abs.y, -c149_abs.x
                      cmp r1.w, -r0.w, c104.z, r1.w
                      cmp r1.w, -r6_abs.z, r1.w, c104.z

#line 573
                      add r6.zw, r4.xyyw, r4.xyxy
                      mul r6.zw, r6, c92  // ::Ka<0,0>

#line 1480
                      mul r2.w, r2.z, c106.w
                      mul r2.w, r2.w, r2.w
                      mul r2.w, r4.y, r2.w  // ::Y<0>
                      rcp r3.w, r6.z
                      cmp r3.w, r1.w, r3.w, c93.x
                      mul r1.y, r1.y, r3.w
                      cmp r0.w, -r0.w, c114.z, c114.w
                      mul r0.w, r0.w, r2.w
                      rsq r3.w, r0.w
                      rcp r3.w, r3.w
                      mad r1.y, r1.y, r3.w, r0.w
                      mul r1.y, r4.x, r1.y  // ::X<0>
                      rcp r4.x, r6.w
                      cmp r1.w, r1.w, r4.x, c93.y
                      mul r1.z, r1.w, r1.z
                      mad r0.w, r1.z, r3.w, -r0.w
                      mul r0.w, -r4.w, r0.w  // ::Z<0>

#line 478
                      mul r4.xyw, r2.w, c24.xyzz
                      mad r1.yzw, r1.y, c23.xxyz, r4.xxyw
                      mad r5.xyz, r0.w, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2548
                      mov r0.y, -c149.y
                    else
                      if_eq r1.x, -c37.x

#line 597
                        mad r0.w, r8.y, c164.x, c164.y
                        frc r0.w, r0.w
                        mad r0.w, r0.w, c164.z, c164.w
                        sincos r9.xy, r0.w
                        mul r9, r7.y, r9.xyxy  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1526
                        add r0.w, r2.z, -c71.x  // ::Jz<0>
                        mad r1.y, r0.w, c93.z, c93.w
                        rcp r1.y, r1.y

#line 1531
                        mul r1.zw, r9.xyxz, c131.xyxy
                        mad r2.w, r0.w, r1.y, r1.z
                        mad r2.w, r9.y, c131.z, r2.w  // PerceptualQuantizerInverse::X<0>

#line 499
                        pow r3.w, r2.w, c131.w  // ::XX<0>
                        add r2.w, -r3.w, c70.z
                        mad r3.w, r3.w, c110.x, c110.y
                        rcp r3.w, r3.w
                        mul r2.w, r2.w, r3.w
                        pow r3.w, r2.w, c110.z

#line 1531
                        mad r1.yz, r0.w, r1.y, -r1.xzww
                        mad r1.yz, r9.xyww, -c130.xxyw, r1  // PerceptualQuantizerInverse::X<0,0>

#line 499
                        pow r0.w, r1.y, c131.w  // ::XX<0>
                        add r1.y, -r0.w, c70.z
                        mad r0.w, r0.w, c110.x, c110.y
                        rcp r0.w, r0.w
                        mul r0.w, r0.w, r1.y
                        pow r1.y, r0.w, c110.z
                        pow r0.w, r1.z, c131.w  // ::XX<0>
                        add r1.z, -r0.w, c70.z
                        mad r0.w, r0.w, c110.x, c110.y
                        rcp r0.w, r0.w
                        mul r0.w, r0.w, r1.z
                        pow r1.z, r0.w, c110.z

#line 1535
                        mul r4.xyw, r1.y, c133.xyzz
                        mad r1.yw, r3.w, c130.xzzw, -r4.xxzw
                        mad r0.w, r3.w, c110.w, r4.y
                        mad r0.w, r1.z, -c133.w, r0.w  // ::Y<0>
                        mad r1.yz, r1.z, c132.xxyw, r1.xyww  // ::X<0>, ::Z<0>
                        mul r0.w, r0.w, c94.w  // ::xyz<1>
                        mul r1.yz, r1, c94.w  // ::xyz<0,2>

#line 478
                        mul r4.xyw, r0.w, c24.xyzz
                        mad r4.xyw, r1.y, c23.xyzz, r4
                        mad r5.xyz, r1.z, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2549
                        mov r0.y, -c149.y
                      else
                        if_eq r1.x, -c37.y

#line 597
                          mad r0.w, r8.y, c164.x, c164.y
                          frc r0.w, r0.w
                          mad r0.w, r0.w, c164.z, c164.w
                          sincos r9.xy, r0.w
                          mul r2.xy, r7.y, r9  // ::a<0>, ::b<0>

#line 1876
                          add r1.yzw, r2.xxyz, c83.xxxy
                          mul r4.xyw, r1.yzzw, c132.zzzw  // ::result<0,1,2>

#line 520
                          mul r0.w, r4.w, r4.x
                          rcp r1.y, r4.y
                          mul r9.x, r0.w, r1.y  // ::xyY_XYZ<0>
                          mad r0.w, r1.z, -c95.y, -r4.x
                          add r0.w, r0.w, -c149.y
                          mul r0.w, r4.w, r0.w
                          mul r9.z, r1.y, r0.w  // ::xyY_XYZ<2>
                          mov r9.y, r4.w
                          cmp r5.xyz, -r4_abs.y, c115.w, r9.xzyw  // ::xyY_XYZ<0,2,1>

#line 2550
                          mov r0.y, -c149.y
                        else
                          if_eq r1.x, -c37.z

#line 597
                            mad r0.w, r8.y, c164.x, c164.y
                            frc r0.w, r0.w
                            mad r0.w, r0.w, c164.z, c164.w
                            sincos r9.xy, r0.w
                            mul r1.yz, r7.y, r9.xxyw  // ::a<0>, ::b<0>

#line 516
                            abs r0.w, c13.x

#line 520
                            rcp r1.w, c13.x
                            mul r9.x, r1.w, c12.x  // ::xyY_XYZ<0>
                            mov r4.x, c13.x  // ::WhiteY<0>
                            add r2.w, -r4.x, -c12.x
                            add r2.w, r2.w, -c149.y
                            mul r9.z, r1.w, r2.w  // ::xyY_XYZ<2>
                            mov r9.y, -c149.y
                            cmp r4.xyw, -r0.w, c115.w, r9.xyzz  // ::xyY_XYZ<0,1,2>

#line 579
                            cmp r0.w, -r0.w, c128.y, c128.w
                            add r0.w, r0.w, r4.x
                            mul r1.w, r4.x, -c101.z
                            mad r0.w, r4.w, -c101.x, r0.w
                            rcp r0.w, r0.w
                            mul r1.w, r0.w, r1.w  // ::ComputeKu<0>

#line 584
                            mul r0.w, r4.y, r0.w
                            mul r0.w, r0.w, -c45.x  // ::ComputeKv<0>

#line 1630
                            add r2.w, -r2.z, c85.z
                            add r3.w, r2.z, c60.w
                            mul r3.w, r3.w, c85.w
                            mul r4.x, r3.w, r3.w
                            mul r3.w, r3.w, r4.x

#line 1635
                            mul r9, r2.z, c136

#line 1630
                            cmp r2.w, r2.w, r9.x, r3.w  // ::Y<0>
                            mad r1.y, r9.z, r1.w, r1.y
                            rcp r1.y, r1.y
                            mad r1.y, r9.y, r1.y, c149.y
                            mul r1.y, r1.y, c62.x  // ::a<0>
                            mul r1.w, r2.w, c103.x  // ::b<0>
                            mad r0.w, r9.z, r0.w, r1.z
                            rcp r0.w, r0.w
                            mad r0.w, r9.w, r0.w, c103.x
                            mad r0.w, r2.w, r0.w, -r1.w
                            rcp r1.z, r1.y
                            mul r0.w, r0.w, r1.z  // ::X<0>
                            mad r1.y, r0.w, r1.y, r1.w  // ::Z<0>

#line 1641
                            max r1.z, r0.w, c104.z  // ::X<0>

#line 1644
                            max r0.w, r2.w, c104.z  // ::Y<0>

#line 1647
                            max r2.w, r1.y, c104.z  // ::Z<0>

#line 478
                            mul r4.xyw, r0.w, c24.xyzz
                            mad r1.yzw, r1.z, c23.xxyz, r4.xxyw
                            mad r5.xyz, r2.w, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2551
                            mov r0.y, -c149.y
                          else
                            if_eq r1.x, -c37.w

#line 597
                              mad r0.w, r8.y, c164.x, c164.y
                              frc r0.w, r0.w
                              mad r0.w, r0.w, c164.z, c164.w
                              sincos r9.xy, r0.w
                              mul r2.xy, r7.y, r9  // ::a<0>, ::b<0>

#line 2024
                              add r1.yzw, r2.xxyz, c83.xxxy
                              mul r2.xyw, r1.yzzw, c132.zzzw  // ::result<0,1,2>

#line 520
                              mul r0.w, r2.w, r2.x
                              rcp r1.y, r2.y
                              mul r9.x, r0.w, r1.y  // ::xyY_XYZ<0>
                              mad r0.w, r1.z, -c95.y, -r2.x
                              add r0.w, r0.w, -c149.y
                              mul r0.w, r2.w, r0.w
                              mul r9.z, r1.y, r0.w  // ::xyY_XYZ<2>
                              mov r9.y, r2.w
                              cmp r1.yzw, -r2_abs.y, c115.w, r9.xxyz  // ::xyY_XYZ<0,1,2>

#line 478
                              mul r2.xyw, r1.z, c24.xyzz
                              mad r2.xyw, r1.y, c23.xyzz, r2
                              mad r5.xyz, r1.w, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2552
                              mov r0.y, -c149.y
                            else
                              add r0.w, r1.x, c47.x
                              cmp r0.y, -r0_abs.w, c149_abs.y, c149_abs.x

#line 478
                              mul r1.yzw, r7.y, c15.xxyz
                              mad r1.yzw, r2.z, c14.xxyz, r1
                              mad r1.yzw, r8.y, c16.xxyz, r1  // ::x<0>, ::y<0>, ::z<0>
                              mul r2.xyw, r1.z, c24.xyzz
                              mad r2.xyw, r1.y, c23.xyzz, r2
                              mad r1.yzw, r1.w, c25.xxyz, r2.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 2553
                              cmp r5.xyz, -r0_abs.w, r1.ywzw, r5  // ::TLrgb<0,2,1>
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r0.y, -r0.y

#line 2573
            else

#line 2555
              if_eq r1.x, -c47.y

#line 516
                abs r0.y, c13.x

#line 520
                rcp r0.w, c13.x
                mul r9.x, r0.w, c12.x  // ::xyY_XYZ<0>
                mov r2.x, c13.x  // ::WhiteY<0>
                add r1.y, -r2.x, -c12.x
                add r1.y, r1.y, -c149.y
                mul r9.z, r0.w, r1.y  // ::xyY_XYZ<2>
                mov r9.y, -c149.y
                cmp r1.yzw, -r0.y, c115.w, r9.xxyz  // ::xyY_XYZ<0,1,2>

#line 579
                cmp r0.y, -r0.y, c128.y, c128.w
                add r0.y, r0.y, r1.y
                mul r0.w, r1.y, -c101.z
                mad r0.y, r1.w, -c101.x, r0.y
                rcp r0.y, r0.y
                mul r0.w, r0.y, r0.w  // ::ComputeKu<0>

#line 584
                mul r0.y, r1.z, r0.y
                mul r0.y, r0.y, -c45.x  // ::ComputeKv<0>

#line 1630
                add r1.y, -r2.z, c85.z
                add r1.z, r2.z, c60.w
                mul r1.z, r1.z, c85.w
                mul r1.w, r1.z, r1.z
                mul r1.z, r1.w, r1.z

#line 1635
                mul r9, r2.z, c136

#line 1630
                cmp r1.y, r1.y, r9.x, r1.z  // ::Y<0>
                mad r0.w, r9.z, r0.w, r7.y
                rcp r0.w, r0.w
                mad r0.w, r9.y, r0.w, c149.y
                mul r0.w, r0.w, c62.x  // ::a<0>
                mul r1.z, r1.y, c103.x  // ::b<0>
                mad r0.y, r9.z, r0.y, r8.y
                rcp r0.y, r0.y
                mad r0.y, r9.w, r0.y, c103.x
                mad r0.y, r1.y, r0.y, -r1.z
                rcp r1.w, r0.w
                mul r0.y, r0.y, r1.w  // ::X<0>
                mad r0.w, r0.y, r0.w, r1.z  // ::Z<0>

#line 1641
                max r1.z, r0.y, c104.z  // ::X<0>

#line 1644
                max r0.y, r1.y, c104.z  // ::Y<0>

#line 1647
                max r1.y, r0.w, c104.z  // ::Z<0>

#line 478
                mul r2.xyw, r0.y, c24.xyzz
                mad r2.xyw, r1.z, c23.xyzz, r2
                mad r5.xyz, r1.y, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2555
                mov r0.y, -c149.y
              else
                if_eq r1.x, -c47.z

#line 520
                  mul r0.w, r2.z, r8.y
                  rcp r1.y, r7.y
                  mul r8.x, r0.w, r1.y  // ::xyY_XYZ<0>
                  add r0.w, -r2.z, -r7.y
                  add r0.w, r0.w, -c149.y
                  mul r0.w, r8.y, r0.w
                  mul r8.z, r1.y, r0.w  // ::xyY_XYZ<2>
                  cmp r5.xyz, -r7_abs.y, c115.w, r8.xzyw  // ::xyY_XYZ<0,2,1>

#line 2556
                  mov r0.y, -c149.y
                else
                  if_eq r1.x, -c47.w

#line 1368
                    mad r0.w, r2.z, c140.x, c140.z
                    frc r0.w, r0.w
                    mad r0.w, r0.w, c164.z, c164.w
                    sincos r9.xy, r0.w
                    rcp r0.w, r9.x
                    mul r0.w, r0.w, r9.y  // ::x<0>
                    mul r1.y, r0.w, r0.w  // ::x<0>
                    mul r1.z, r7.y, r7.y
                    mul r1.z, r1.z, -c103.x
                    rcp r1.y, r1.y
                    add r1.y, r1.y, -c149.y
                    mul r1.y, r1.y, -c45.x
                    rcp r1.y, r1.y
                    mul r1.y, r1.y, r1.z
                    rsq r1.y, r1.y
                    rcp r1.y, r1.y  // ::r<0>
                    mad r0.w, r0.w, r0.w, -c149.y
                    mul r0.w, r0.w, -c45.x
                    rcp r0.w, r0.w
                    mul r0.w, r0.w, r1.z
                    rsq r0.w, r0.w
                    rcp r0.w, r0.w  // ::g<0>
                    mul r1.z, r0.w, c111.x
                    mad r1.z, r1.y, c111.y, r1.z
                    add r1.z, r1.z, c69.w
                    rcp r1.z, r1.z
                    mul r1.z, r1.z, r8.y  // ::k<0>
                    add r1.w, -r1.y, -c149.y
                    add r1.w, -r0.w, r1.w
                    mul r5.z, r0.w, r1.z  // ::G<0>
                    mul r5.xy, r1.ywzw, r1.z  // ::R<0>, ::B<0>

#line 2557
                    mov r0.y, -c149.y
                  else
                    if_eq r1.x, -c65.x

#line 1949
                      mul r0.w, r2.z, c111.z  // XYZ_Lrgb::input<0>
                      mad r1.y, r7.y, c101.x, r0.w
                      mad r1.y, r8.y, -c60.y, r1.y  // XYZ_Lrgb::input<2>

#line 478
                      mul r2.xyw, r7.y, c24.xyzz
                      mad r2.xyw, r0.w, c23.xyzz, r2
                      mad r5.xyz, r1.y, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2558
                      mov r0.y, -c149.y
                    else
                      if_eq r1.x, -c65.y

#line 1969
                        if_eq r0.x, -r4.z

#line 1982
                          mov r5.xyz, c104.z  // ::UVW_Lrgb<0,2,1>
                        else

#line 516
                          abs r0.x, c13.x

#line 520
                          rcp r0.w, c13.x
                          mul r4.x, r0.w, c12.x  // ::xyY_XYZ<0>
                          mov r2.x, c13.x  // ::WhiteY<0>
                          add r1.y, -r2.x, -c12.x
                          add r1.y, r1.y, -c149.y
                          mul r4.z, r0.w, r1.y  // ::xyY_XYZ<2>
                          mov r4.y, -c149.y
                          cmp r1.yzw, -r0.x, c115.w, r4.xxyz  // ::xyY_XYZ<0,1,2>

#line 1970
                          cmp r0.x, -r0.x, c128.y, c128.w
                          add r0.x, r0.x, r1.y
                          mul r0.w, r1.y, -c101.z
                          mad r0.x, r1.w, -c101.x, r0.x
                          rcp r0.x, r0.x
                          mul r0.w, r0.x, r0.w  // ::uN<0>
                          mul r0.x, r1.z, r0.x
                          mul r0.x, r0.x, -c103.z  // ::vN<0>
                          add r1.y, r8.y, -c35.x
                          mul r1.y, r1.y, c111.w
                          mul r1.z, r1.y, r1.y
                          mul r1.y, r1.z, r1.y  // ::y<0>
                          mul r1.z, r8.y, -c46.y
                          rcp r1.w, r1.z
                          mad r0.w, r2.z, r1.w, r0.w
                          mad r0.x, r7.y, r1.w, r0.x
                          cmp r0.xw, -r1_abs.z, c104.z, r0  // ::_v<0>, ::_u<0>

#line 1978
                          mul r1.z, r0.w, r1.y
                          rcp r0.x, r0.x
                          mul r1.z, r0.x, r1.z  // ::x<0>
                          add r1.w, r0.x, r0.x
                          mul r0.x, r0.w, r0.x
                          mad r0.x, r0.x, c127.z, r1.w
                          add r0.x, r0.x, c103.x
                          mul r0.x, r0.x, r1.y  // ::z<0>
                          mul r0.w, r1.z, c106.w  // ::xyz<0>
                          mul r1.y, r1.y, c106.w  // ::xyz<1>
                          mul r0.x, r0.x, c106.w  // ::xyz<2>

#line 478
                          mul r1.yzw, r1.y, c24.xxyz
                          mad r1.yzw, r0.w, c23.xxyz, r1
                          mad r5.xyz, r0.x, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 1982
                        endif

#line 2559
                        mov r0.y, -c149.y
                      else
                        if_eq r1.x, -c65.z

#line 2200
                          add r0.x, r2.z, -c60.w
                          mul r0.w, r0.x, c96.x  // ::ypbpr<0>
                          add r1.y, r7.y, c104.w
                          add r1.z, r8.y, c104.w

#line 2175
                          mad r5.x, r1.z, c96.y, r0.w  // ::r<0>
                          mad r5.y, r1.y, c96.z, r0.w  // ::b<0>
                          mul r0.w, r5.x, c137.x
                          mad r0.x, r0.x, c96.x, -r0.w
                          mad r0.x, r5.y, -c137.z, r0.x
                          mul r5.z, r0.x, c96.w  // ::g<0>

#line 2560
                          mov r0.y, -c149.y
                        else
                          if_eq r1.x, -c65.w

#line 520
                            mul r0.x, r2.z, r8.y
                            rcp r0.w, r7.y
                            mul r8.x, r0.w, r0.x  // ::xyY_XYZ<0>
                            add r0.x, -r2.z, -r7.y
                            add r0.x, r0.x, -c149.y
                            mul r0.x, r8.y, r0.x
                            mul r8.z, r0.w, r0.x  // ::xyY_XYZ<2>
                            cmp r1.yzw, -r7_abs.y, c115.w, r8.xxyz  // ::xyY_XYZ<0,1,2>

#line 478
                            mul r2.xyw, r1.z, c24.xyzz
                            mad r2.xyw, r1.y, c23.xyzz, r2
                            mad r5.xyz, r1.w, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2561
                            mov r0.y, -c149.y
                          else
                            if_eq r1.x, -c40.x

#line 516
                              abs r0.x, c13.x

#line 520
                              rcp r0.w, c13.x
                              mul r4.x, r0.w, c12.x  // ::xyY_XYZ<0>
                              mov r2.x, c13.x  // ::WhiteY<0>
                              add r1.y, -r2.x, -c12.x
                              add r1.y, r1.y, -c149.y
                              mul r4.z, r0.w, r1.y  // ::xyY_XYZ<2>

#line 2041
                              mov r4.y, -c149.y
                              mul r1.yzw, r4.xxyz, c151.y
                              cmp r1.yzw, -r0.x, c129.x, r1  // ::white<0,1,2>

#line 2045
                              add r0.x, r1.z, r1.y
                              add r0.x, r1.w, r0.x
                              rcp r0.w, r0.x
                              mul r0.w, r0.w, r1.z  // ::x0<0>
                              mul r0.x, r0.x, c106.w  // ::ew<0>

#line 2050
                              mul r1.y, r8.y, r8.y
                              mul r4.y, r1.y, c106.w  // ::Y<0>

#line 2054
                              mul r1.zw, c38.xyyx, c38.xyxz
                              mul r2.x, r0.w, r1.y
                              mul r1.zw, r7.y, r1
                              mul r2.yw, r1.xzzw, c151.y
                              mad r1.z, r2.x, r0.x, r2.y
                              mul r0.w, r0.w, r2.w
                              mad r0.w, r0.w, -r0.x, r1.z
                              mul r1.z, r7.y, c151.y
                              mul r2.xy, r1.z, c38.xzzw
                              mul r3.w, r0.x, r2.w
                              mad r1.z, r1.z, c38.x, -r3.w
                              mad r1.z, r1.y, r0.x, r1.z
                              rcp r1.z, r1.z
                              mul r0.w, r0.w, r1.z  // ::x<0>
                              mad r1.y, r2.y, c38.x, r1.y
                              mad r1.y, r1.w, -c151.y, r1.y
                              mul r1.z, r0.x, r4.y
                              mad r1.z, r1.z, c151.y, r2.x
                              mad r0.x, r2.w, -r0.x, r1.z
                              rcp r0.x, r0.x
                              mul r1.z, r0.x, r1.y  // ::y<0>

#line 520
                              mul r1.w, r4.y, r0.w
                              rcp r2.x, r1.z
                              mul r4.x, r1.w, r2.x  // ::xyY_XYZ<0>
                              mad r0.x, r1.y, -r0.x, -r0.w
                              add r0.x, r0.x, -c149.y
                              mul r0.x, r4.y, r0.x
                              mul r4.z, r2.x, r0.x  // ::xyY_XYZ<2>
                              cmp r1.yzw, -r1_abs.z, c115.w, r4.xxyz  // ::xyY_XYZ<0,1,2>

#line 478
                              mul r2.xyw, r1.z, c24.xyzz
                              mad r2.xyw, r1.y, c23.xyzz, r2
                              mad r5.xyz, r1.w, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2562
                              mov r0.y, -c149.y
                            else
                              add r0.xw, r1.x, c40.yyzz

#line 478
                              mul r1.yzw, r7.y, c24.xxyz
                              mad r1.yzw, r2.z, c23.xxyz, r1
                              mad r1.yzw, r8.y, c25.xxyz, r1  // ::x<0>, ::y<0>, ::z<0>

#line 2564
                              cmp r2.x, -r0_abs.w, c149_abs.y, c149_abs.x

#line 2220
                              add r2.y, r2.z, -c60.w
                              mul r2.w, r2.y, c96.x  // ::ypbpr<0>
                              add r3.w, r7.y, c104.w
                              add r4.x, r8.y, c104.w

#line 2175
                              mad r4.x, r4.x, c96.y, r2.w  // ::r<0>
                              mad r4.z, r3.w, c96.z, r2.w  // ::b<0>
                              mul r2.w, r4.x, c137.x
                              mad r2.y, r2.y, c96.x, -r2.w
                              mad r2.y, r4.z, -c137.z, r2.y
                              mul r4.y, r2.y, c96.w  // ::g<0>

#line 2564
                              cmp r4.xyz, -r0_abs.w, r4, r5.xzyw  // ::TLrgb<0,1,2>
                              cmp r5.xyz, -r0_abs.x, r1.ywzw, r4.xzyw  // ::TLrgb<0,2,1>
                              cmp r0.y, -r0_abs.x, -c149.y, r2.x
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r0.y, -r0.y

#line 2573
              else

#line 2566
                if_eq r1.x, -c40.w

#line 2076
                  add r0.x, r2.z, -r7.y  // ::c<0>
                  add r4.x, r8.y, r0.x  // ::YCoCg_Lrgb<0>
                  add r4.y, r2.z, r7.y  // ::YCoCg_Lrgb<1>
                  add r4.z, -r8.y, r0.x  // ::YCoCg_Lrgb<2>

#line 2566
                  mov r0.x, -c149.y
                else
                  if_eq c0.x, -r6.x

#line 2092
                    mad r0.yw, r7.y, c129.xyzz, r2.z
                    mad r1.y, r7.y, -c129.w, r2.z
                    mad r4.y, r8.y, c125.x, r1.y  // ::g<0>
                    mad r4.xz, r8.y, -c125.yyzw, r0.yyww  // ::r<0>, ::b<0>

#line 2567
                    mov r0.x, -c149.y
                  else
                    if_eq r1.x, -c48.x

#line 2121
                      mad r1.yzw, r7.y, c97.xxyz, r2.z
                      mad r4.xyz, r8.y, c98.xxyw, r1.yzww  // ::r<0>, ::g<0>, ::b<0>

#line 2568
                      mov r0.x, -c149.y
                    else

#line 2571
                      add r1.xyz, r1.x, c48.yzww

#line 2176
                      mad r9, r7.y, c99.xywz, r2.z  // ::b<0>

#line 2145
                      mad r2.xyw, r8.y, c100.xyzz, r9  // ::r<0>, ::g<0>, ::b<0>

#line 2149
                      mov_sat r6.xzw, r2.xyyw
                      cmp r2.xyw, r2, r6.xzzw, c104.z  // ::r<0>, ::g<0>, ::b<0>

#line 2175
                      mad r9.x, r8.y, c125.w, r2.z  // ::r<0>
                      mad r0.y, r9.x, -c137.x, r2.z
                      mad r0.y, r9.z, -c137.z, r0.y
                      mul r9.y, r0.y, c96.w  // ::g<0>

#line 2571
                      cmp r0.y, -r1_abs.z, c149_abs.y, c149_abs.x

#line 2264
                      mad r0.w, r8.y, c97.w, r2.z  // ::r<0>

#line 2270
                      mad r6.xz, r7.y, c98.zyww, r2.z  // ::b<0>

#line 2267
                      mad r1.w, r8.y, c100.w, r6.x  // ::g<0>

#line 2274
                      mov_sat r3.w, r0.w
                      cmp r10.x, r0.w, r3.w, c104.z  // ::r<0>
                      mov_sat r0.w, r1.w
                      cmp r10.y, r1.w, r0.w, c104.z  // ::g<0>
                      mov_sat r0.w, r6.z
                      cmp r10.z, r6.z, r0.w, c104.z  // ::b<0>

#line 2571
                      cmp r6.xzw, -r1_abs.z, r10.xyyz, r5.xyzy  // ::TLrgb<0,1,2>
                      cmp r6.xzw, -r1_abs.y, r9.xyyz, r6  // ::TLrgb<0,1,2>
                      cmp r0.y, -r1_abs.y, -c149.y, r0.y
                      cmp r4.xyz, -r1_abs.x, r2.xyww, r6.xzww  // ::TLrgb<0,1,2>
                      cmp r0.x, -r1_abs.x, -c149.y, r0.y
                    endif
                  endif
                endif
                mov r7.x, r2.z
                mov r7.z, r8.y
                cmp r5.xyz, -r0.x, r7.xzyw, r4.xzyw  // ::TLrgb<0,2,1>
              endif
            endif
          endif
        endif

#line 2389
        rcp r0.x, c11.x
        log r0.y, r5.x
        mul r0.w, r0.y, r0.x
        exp r3.x, r0.w  // ::V<0>

#line 2394
        if_eq c10.x, r0.z

#line 2454
        else

#line 2394
          mov r1.y, c149.y
          add r0.w, r1.y, c10.x

#line 2402
          add r1.x, -r5.x, -c149.y
          rsq r1.z, r5.x
          rcp r1.z, r1.z
          mul r1.z, r1.z, -c127.z  // ::Transfer<0>
          cmp r1.x, r1.x, -c149_abs.y, -c149_abs.x
          cmp r1.x, r5.x, r1.x, c104.z
          add r1.w, r5.x, c55.y
          log r1.w, r1.w
          mad r1.w, r1.w, c55.z, c55.w  // ::Transfer<0>
          cmp r1.x, r1.x, r1.w, r1.z  // ::Transfer<0>
          cmp r3.x, -r0_abs.w, r1.x, r3.x  // ::Transfer<0>

#line 2409
          if_eq c10.x, -r1.y

#line 2454
          else

#line 2409
            add r0.w, r6.y, c10.x

#line 2412
            add r1.x, -r5.x, c71.y
            mul r1.y, r5.x, c102.x
            cmp r1.x, r1.x, r1.y, -c149.y  // ::V<0>
            cmp r3.x, -r0_abs.w, r1.x, r3.x  // ::Transfer<0>

#line 2417
            if_eq c10.x, -r6.y

#line 2454
            else

#line 2417
              mov r1.x, c10.x  // ::Companding<0>
              add r0.w, r1.x, c101.x

#line 2432
              if_eq r1.x, -c101.x

#line 2426
                mul r1.y, r0.y, c102.y
                exp r1.y, r1.y
                add r1.z, r1.y, -c70.z
                max r2.x, r1.z, c104.z  // ::a<0>
                mad r1.y, r1.y, -c70.y, c70.x  // ::b<0>
                rcp r1.y, r1.y
                mul r1.y, r1.y, r2.x
                pow r2.x, r1.y, c110.z
                mul r1.y, r2.x, c102.z  // ::Transfer<0>
                cmp r3.x, -r0_abs.w, r1.y, r3.x  // ::Transfer<0>

#line 2454
              else

#line 2448
                add r1.xyz, r1.x, c148.yzww

#line 2443
                add r2.xy, r5.x, c118

#line 2451
                mul r2.zw, r5.x, c118
                mul r0.yw, r0.y, c112.xxzy

#line 2435
                exp r0.y, r0.y

#line 2443
                mad r4.xy, r0.y, c113, c113.zwzw
                cmp r2.xy, r2, r4, r2.z  // ::V<0,0>

#line 2451
                add r0.y, -r5.x, c102.w
                exp r0.w, r0.w
                mad r0.w, r0.w, c112.z, c112.w
                cmp r0.y, r0.y, r2.w, r0.w  // ::V<0>

#line 2454
                cmp r0.y, -r1_abs.z, r0.y, r5.x  // ::Transfer<0>
                cmp r0.y, -r1_abs.y, r2.y, r0.y  // ::Transfer<0>
                cmp r3.x, -r1_abs.x, r2.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2389
        log r0.y, r5.z
        mul r0.w, r0.y, r0.x
        exp r3.y, r0.w  // ::V<0>

#line 2394
        if_eq c10.x, r0.z

#line 2454
        else

#line 2394
          mov r1.y, c149.y
          add r0.w, r1.y, c10.x

#line 2402
          add r1.x, -r5.z, -c149.y
          rsq r1.z, r5.z
          rcp r1.z, r1.z
          mul r1.z, r1.z, -c127.z  // ::Transfer<0>
          cmp r1.x, r1.x, -c149_abs.y, -c149_abs.x
          cmp r1.x, r5.z, r1.x, c104.z
          add r1.w, r5.z, c55.y
          log r1.w, r1.w
          mad r1.w, r1.w, c55.z, c55.w  // ::Transfer<0>
          cmp r1.x, r1.x, r1.w, r1.z  // ::Transfer<0>
          cmp r3.y, -r0_abs.w, r1.x, r3.y  // ::Transfer<0>

#line 2409
          if_eq c10.x, -r1.y

#line 2454
          else

#line 2409
            add r0.w, r6.y, c10.x

#line 2412
            add r1.x, -r5.z, c71.y
            mul r1.y, r5.z, c102.x
            cmp r1.x, r1.x, r1.y, -c149.y  // ::V<0>
            cmp r3.y, -r0_abs.w, r1.x, r3.y  // ::Transfer<0>

#line 2417
            if_eq c10.x, -r6.y

#line 2454
            else

#line 2417
              mov r1.x, c10.x  // ::Companding<0>
              add r0.w, r1.x, c101.x

#line 2432
              if_eq r1.x, -c101.x

#line 2426
                mul r1.y, r0.y, c102.y
                exp r1.y, r1.y
                add r1.z, r1.y, -c70.z
                max r2.x, r1.z, c104.z  // ::a<0>
                mad r1.y, r1.y, -c70.y, c70.x  // ::b<0>
                rcp r1.y, r1.y
                mul r1.y, r1.y, r2.x
                pow r2.x, r1.y, c110.z
                mul r1.y, r2.x, c102.z  // ::Transfer<0>
                cmp r3.y, -r0_abs.w, r1.y, r3.y  // ::Transfer<0>

#line 2454
              else

#line 2448
                add r1.xyz, r1.x, c148.yzww

#line 2443
                add r2.xy, r5.z, c118

#line 2451
                mul r2.zw, r5.z, c118
                mul r0.yw, r0.y, c112.xxzy

#line 2435
                exp r0.y, r0.y

#line 2443
                mad r4.xy, r0.y, c113, c113.zwzw
                cmp r2.xy, r2, r4, r2.z  // ::V<0,0>

#line 2451
                add r0.y, -r5.z, c102.w
                exp r0.w, r0.w
                mad r0.w, r0.w, c112.z, c112.w
                cmp r0.y, r0.y, r2.w, r0.w  // ::V<0>

#line 2454
                cmp r0.y, -r1_abs.z, r0.y, r5.z  // ::Transfer<0>
                cmp r0.y, -r1_abs.y, r2.y, r0.y  // ::Transfer<0>
                cmp r3.y, -r1_abs.x, r2.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2389
        log r0.y, r5.y
        mul r0.x, r0.y, r0.x
        exp r3.z, r0.x  // ::V<0>

#line 2394
        if_eq c10.x, r0.z

#line 2454
        else

#line 2394
          mov r1.y, c149.y
          add r0.x, r1.y, c10.x

#line 2402
          add r0.z, -r5.y, -c149.y
          rsq r0.w, r5.y
          rcp r0.w, r0.w
          mul r0.w, r0.w, -c127.z  // ::Transfer<0>
          cmp r0.z, r0.z, -c149_abs.y, -c149_abs.x
          cmp r0.z, r5.y, r0.z, c104.z
          add r1.x, r5.y, c55.y
          log r1.x, r1.x
          mad r1.x, r1.x, c55.z, c55.w  // ::Transfer<0>
          cmp r0.z, r0.z, r1.x, r0.w  // ::Transfer<0>
          cmp r3.z, -r0_abs.x, r0.z, r3.z  // ::Transfer<0>

#line 2409
          if_eq c10.x, -r1.y

#line 2454
          else

#line 2409
            add r0.x, r6.y, c10.x

#line 2412
            add r0.z, -r5.y, c71.y
            mul r0.w, r5.y, c102.x
            cmp r0.z, r0.z, r0.w, -c149.y  // ::V<0>
            cmp r3.z, -r0_abs.x, r0.z, r3.z  // ::Transfer<0>

#line 2417
            if_eq c10.x, -r6.y

#line 2454
            else

#line 2417
              mov r0.x, c10.x  // ::Companding<0>
              add r0.z, r0.x, c101.x

#line 2432
              if_eq r0.x, -c101.x

#line 2426
                mul r0.w, r0.y, c102.y
                exp r0.w, r0.w
                add r1.x, r0.w, -c70.z
                max r2.x, r1.x, c104.z  // ::a<0>
                mad r0.w, r0.w, -c70.y, c70.x  // ::b<0>
                rcp r0.w, r0.w
                mul r0.w, r0.w, r2.x
                pow r1.x, r0.w, c110.z
                mul r0.w, r1.x, c102.z  // ::Transfer<0>
                cmp r3.z, -r0_abs.z, r0.w, r3.z  // ::Transfer<0>

#line 2454
              else

#line 2448
                add r0.xzw, r0.x, c148.yyzw

#line 2443
                add r1.xy, r5.y, c118

#line 2451
                mul r1.zw, r5.y, c118
                mul r2.xy, r0.y, c112

#line 2435
                exp r0.y, r2.x

#line 2443
                mad r2.xz, r0.y, c113.xyyw, c113.zyww
                cmp r1.xy, r1, r2.xzzw, r1.z  // ::V<0,0>

#line 2451
                add r0.y, -r5.y, c102.w
                exp r1.z, r2.y
                mad r1.z, r1.z, c112.z, c112.w
                cmp r0.y, r0.y, r1.w, r1.z  // ::V<0>

#line 2454
                cmp r0.y, -r0_abs.w, r0.y, r5.y  // ::Transfer<0>
                cmp r0.y, -r0_abs.z, r1.y, r0.y  // ::Transfer<0>
                cmp r3.z, -r0_abs.x, r1.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2786
      endif

#line 2789
      mov oC0.xyz, r3  // ::main<0,1,2>
      mov oC0.w, -c149.y  // ::main<3>

#line 2773
    endif

// approximately 5641 instruction slots used (1 texture, 5640 arithmetic)
