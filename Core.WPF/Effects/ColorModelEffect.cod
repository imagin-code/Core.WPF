//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float Companding;
//   float Depth;
//   float Gamma;
//   float HighlightAmount;
//   float3 LABk_LMSk_x;
//   float3 LABk_LMSk_y;
//   float3 LABk_LMSk_z;
//   float3 LMS_XYZ_x;
//   float3 LMS_XYZ_y;
//   float3 LMS_XYZ_z;
//   float3 LMSk_LABk_x;
//   float3 LMSk_LABk_y;
//   float3 LMSk_LABk_z;
//   float3 LMSk_XYZk_x;
//   float3 LMSk_XYZk_y;
//   float3 LMSk_XYZk_z;
//   float MidtoneAmount;
//   float MidtoneRange;
//   float Mode;
//   float Model;
//   float3 RGB_XYZ_x;
//   float3 RGB_XYZ_y;
//   float3 RGB_XYZ_z;
//   float ShadowAmount;
//   float ShadowRange;
//   float Shape;
//   float W;
//   float WhiteX;
//   float WhiteY;
//   float X;
//   float XComponent;
//   float3 XYZ_LMS_x;
//   float3 XYZ_LMS_y;
//   float3 XYZ_LMS_z;
//   float3 XYZ_RGB_x;
//   float3 XYZ_RGB_y;
//   float3 XYZ_RGB_z;
//   float Y;
//   float YComponent;
//   float Z;
//   sampler2D input;
//   float3 xyYC_exy;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   Model           c0       1
//   XComponent      c1       1
//   YComponent      c2       1
//   Mode            c3       1
//   Shape           c4       1
//   Depth           c5       1
//   X               c6       1
//   Y               c7       1
//   Z               c8       1
//   W               c9       1
//   Companding      c10      1
//   Gamma           c11      1
//   WhiteX          c12      1
//   WhiteY          c13      1
//   LMS_XYZ_x       c14      1
//   LMS_XYZ_y       c15      1
//   LMS_XYZ_z       c16      1
//   RGB_XYZ_x       c17      1
//   RGB_XYZ_y       c18      1
//   RGB_XYZ_z       c19      1
//   XYZ_LMS_x       c20      1
//   XYZ_LMS_y       c21      1
//   XYZ_LMS_z       c22      1
//   XYZ_RGB_x       c23      1
//   XYZ_RGB_y       c24      1
//   XYZ_RGB_z       c25      1
//   LABk_LMSk_x     c26      1
//   LABk_LMSk_y     c27      1
//   LABk_LMSk_z     c28      1
//   LMSk_LABk_x     c29      1
//   LMSk_LABk_y     c30      1
//   LMSk_LABk_z     c31      1
//   LMSk_XYZk_x     c32      1
//   LMSk_XYZk_y     c33      1
//   LMSk_XYZk_z     c34      1
//   xyYC_exy        c38      1
//   HighlightAmount c39      1
//   MidtoneAmount   c41      1
//   MidtoneRange    c42      1
//   ShadowAmount    c43      1
//   ShadowRange     c44      1
//   input           s0       1
//

    ps_3_0
    def c35, -31, -32, -33, -34
    def c36, -35, -36, -37, -38
    def c37, -7, -39, -8, -40
    def c40, -13, -14, -15, -16
    def c45, -17, -18, -19, -20
    def c46, -19, -20, -21, -22
    def c47, -23, -24, -25, -26
    def c48, -27, -28, -29, -30
    def c49, 1.41421354, 1, 2, 3
    def c50, 0.0208350997, -0.0851330012, 0.999866009, 6.28318548
    def c51, -2, 1.57079637, -0, -3.14159274
    def c52, -0.212114394, 1.57072878, -2, 3.14159274
    def c53, 7.85398197, 1.57079673, 0.159154937, 0.0799999982
    def c54, 0.159999996, 0.862069011, 0.159301758, 78.84375
    def c55, -0.0810000002, 0.0989999995, -0.0812428594, 0.0992968082
    def c56, 0.0404499993, 0.0549999997, 0.947867334, 2.4000001
    def c57, 18.8515625, 18.6875, 0.8359375, 1
    def c58, 0.222222224, 0.0773993805, 0.909918129, 0.909672439
    def c59, 2, 4, -0.0187292993, 0.0742610022
    def c60, -11, -12, -43, -44
    def c61, -3, -35, -4, -36
    def c62, 6, 4, 2, 0.142857149
    def c63, 0.156173766, 0.142857149, 7, 1
    def c64, 0.298999995, 0.587000012, 0.666666687, 0.331263989
    def c65, 6.99999952, 0.857142866, -6, 0.114
    def c66, -0.980705976, -1.18224943, 88.3659897, 32.0938988
    def c67, -1.62954997e-011, 0.00885645207, 903.296326, 300
    def c68, 100, 224, 122, -0.330299497
    def c69, 8, 12, 6, 0.180141002
    def c70, 0.063000001, -0.5, 0.538909256, 0.635001242
    def c71, -41, -42, -43, -44
    def c72, 0.298999995, 0.596000016, 0.211999997, 0.212599993
    def c73, 0.587000012, -0.275000006, -0.527999997, 0.715200007
    def c74, 0.114, -0.32100001, 0.31099999, 0.0722000003
    def c75, -0.288859993, -0.514989972, -0.147129998, 0.61500001
    def c76, 0.43599999, -0.10001, 0.00999999978, 0.00392156886
    def c77, 0.159154937, 0.25, 0.75, 600
    def c78, 360, 0.00277777785, -360, -0.00277777785
    def c79, 0.159154937, 0.5, 0.0174532942, -2.09439516
    def c80, 6.28318548, -3.14159274, 0.0174532942, 1.04719758
    def c81, 6.40657674e-007, 13824.001, 769859.875, 3.40282347e+038
    def c82, 1394988.5, -120846.469, 126452, 8.00000095
    def c83, 0.00862068962, 0, 1, 100
    def c84, 0.00110705639, 769860, 52, 13
    def c85, 0.333333343, 57.2957764, 60, 50
    def c86, -9, -41, -10, -42
    def c87, 0.00277777785, -0.666666687, 0.0097833341, 0.298999995
    def c88, 0.999778986, 1.07094002, 0.324891001, 0.00828392897
    def c89, 1.00014997, -0.377743989, 0.220439002, 0.714139998
    def c90, 0.999768972, 0.0629495978, -0.809638023, 0.00456620986
    def c91, 0.00200000009, 116, -16, 0.00571428565
    def c92, 0.00456620986, 0.00703035761, 1.39821029, 0.00499999989
    def c93, 0.0142857144, 0.560000002, 0.439999998, 0.058047317
    def c94, -39, -40, -0, -32
    def c95, 1.43099999, -0.569000006, 0.430999994, 1.57480001
    def c96, 0.525912642, 7.92025457e-005, 0.126000002, -1.87399995
    def c97, 0.95599997, -0.272000015, -1.10800004, 1.8556
    def c98, 0.620999992, -0.647000015, 1.70500004, -0.580600023
    def c99, 1.13982999, -0.394650012, 2.02310991, 9.0329628
    def c100, 0.00313080009, 1.05499995, -0.0549999997, 0
    def c101, 1.09899998, 1.09929681, -0.0989999995, -0.0992968082
    def c102, -1, -33, -2, -34
    def c103, -45, 45, 0, -128
    def c104, -46, -47, -48, 0
    def c105, 12, -0.284668922, 0.123957433, 0.559910715
    def c106, 0.0174532942, -4.18879032, -9.99999994e-009, 9.99999994e-009
    def c107, -10, -6, 0, -1
    def c108, 180, 0.00277777785, -0.333333343, 0.666666687
    def c109, 18.6875, -18.8515625, 0.058047317, 0.811891913
    def c110, 6742.07861, 3827.99316, 475.70459, 9.99999975e-005
    def c111, 0.0399999991, 0.00703035761, 0.00828392897, 9.99999996e-012
    def c112, 175, 70, 9.99999983e+012, 1
    def c113, 0.5, 128, 0.0813120008, 9.99999982e-014
    def c114, 239.999985, 179.999985, 119.999992, 59.9999962
    def c115, 359.999969, 299.999969, -986593.562, 694074.125
    def c116, 0.0126833133, 10000, -0.0179999992, -0.0180539694
    def c117, 0.0166666675, 0.0199999996, -1, -299.999969
    def c118, -180, -240, -300, 0.344139993
    def c119, 1, -1, 0, 0.110705636
    def c120, 0.0640312433, 0.000442097051, 0.5, 0.189999998
    def c121, 3.52200007, 0.684000015, 0.114, 0.298999995
    def c122, 1.79399991, 0.587000012, 0.684000015, 0.114
    def c123, 0.684000015, -0.5, 0.25, 0.252999991
    def c124, 0.000980392215, 0.00294117676, 0.00277777785, 120
    def c125, 0.249999985, 0.5, 0.185000002, 1.5
    def c126, 6, 0.166666672, -6, -0.166666672
    def c127, 9.99999983e+012, 1.49999999e-012, 1, 15
    def c128, 4.5, 12.9200001, 0.449999988, 0.416666657
    def c129, 16613.7305, -909.828125, 2182.53833, 0.47299999
    def c130, 9145.23047, 15718.4707, 3127.28296, -3250.75854
    def c131, 2313.62085, 15227.666, 0.00499999989, 0.00999999978
    def c132, 0.138605043, 0.0960192457, 0.00746077253, 6.27739477
    def c133, 1.40199995, 1.77199996, -16, -128
    def c134, 0.00999999978, 0.229999989, 0.00277777785, 0.333333343
    def c135, 1394988.5, -120846.469, -315176.688, -210946.25
    def c136, 0.00110705639, 52, 13, 39
    def c137, 9.23037151e-005, 0.66467905, 0.129132897, 0.267899334
    def c138, 0.212599993, 0.715200007, 0.0722000003, 0.418687999
    def c139, -5, -37, -6, -38
    def c140, -38, -39, -40, 0.216999993
    def c141, -1.33299994, 1.11600006, 0.666666687, 1
    def c142, 0, -0.5, -1.33299994, 255
    def c143, 0.715200007, 0.5, 0.587000012, 0.883000016
    def c144, 100, 1500, 400, -0.449999988
    def c145, 0.212599993, 0.25, -0.25, 0.0722000003
    def c146, 0.298999995, 0.587000012, 0.114, 104
    def c147, 1.29587495, 0.219999999, 0.280000001, 1
    def c148, 4.06670809, 1.09679902, 0.54270798, 0.199075997
    def c149, 1492.84155, 833.27301, 6709.7002, 3.52399993
    def c150, 134.034378, 7396.2832, 709.410828, 1747.68005
    def c151, 120.715675, 142.24028, 128, 0.168735996
    def c152, 360, 0.5, 219, 16
    def c153, -4, -5, -6, 2.22222233
    def c154, 0, -134, -140, 16
    def c155, 0, -0.595700026, -0.522599995, 100
    def c156, 360, 100, 255, 128
    def c157, 1, 1.33299994, 0.595700026, 0.522599995
    def c158, 1, 360, 76, 100
    def c159, 235, 240, 1, 0.5
    def c160, -21, -22, -23, -24
    def c161, -28, -29, -30, -31
    def c162, -25, -26, -27, 2
    def c163, -0, -32, -1, -33
    def c164, -2, -34, -3, -35
    def c165, -1, -2, -3, -4
    def c166, 0.00999999978, 1, 0.00277777785, 0.5
    def c167, 2, 0.5, -2, -0.5
    def c168, -120846.469, -210946.25, 126452, 694074.125
    def c169, 0.00277777785, -0.333333343, -0.666666687, 1
    def c170, -37, -38, -39, -40
    dcl_texcoord v0.xy  // uv<0,1>
    dcl_2d s0

#line 2571 "C:\Users\james\GitHub\Core.WPF\Core.WPF\Effects\ColorModelEffect.fx"
    mov r0.xyz, c103
    add r0.x, r0.x, c0.x
    if_ge c0.x, r0.y

#line 2579
      mov r1.xy, c103.z  // ::input3<0,1>
      mov r2.x, c103.z  // ::input3<2>
      mov r1.w, c6.x  // ::input4<0>
      mov r2.y, c7.x  // ::input4<1>
      mov r2.z, c8.x  // ::input4<2>
      mov r3.w, c9.x  // ::input4<3>
      mov r4.xyz, c103.z
      mov r5.xyz, c103.z
    else

#line 2582
      frc r0.w, c0.x
      add r0.w, -r0.w, c0.x
      add r6, r0.w, c46
      add r7, r0.w, c47
      add r8, r0.w, c48
      add r9, r0.w, c35
      add r10, r0.w, c36
      add r11, r0.w, c71
      add r12, r0.w, c94
      cmp r13.xyz, -r6_abs.x, c103.zwww, c103.z
      cmp r13.xyz, -r6_abs.y, c107.xyxw, r13
      cmp r6.xyz, -r6_abs.z, c107.zwww, r13
      cmp r6.xyz, -r6_abs.w, c103.z, r6
      cmp r6.xyz, -r7_abs.x, c103.z, r6
      cmp r6.xyz, -r7_abs.y, c103.z, r6
      cmp r6.xyz, -r7_abs.z, c103.z, r6
      cmp r6.xyz, -r7_abs.w, c103.z, r6
      cmp r6.xyz, -r8_abs.x, c103.z, r6
      cmp r6.xyz, -r8_abs.y, c103.z, r6
      cmp r6.xyz, -r8_abs.z, c154, r6
      cmp r6.xyz, -r8_abs.w, c103.z, r6
      cmp r6.xyz, -r9_abs.x, c103.z, r6
      cmp r6.xyz, -r9_abs.y, c103.z, r6
      cmp r6.xyz, -r9_abs.z, c154.yzxw, r6
      cmp r6.xyz, -r9_abs.w, c103.z, r6
      cmp r6.xyz, -r10_abs.x, c103.z, r6
      cmp r6.xyz, -r10_abs.y, c107_abs.xzzw, r6
      cmp r6.xyz, -r10_abs.z, c103.z, r6
      cmp r6.xyz, -r10_abs.w, c154.w, r6
      cmp r6.xyz, -r12_abs.x, c142.xyyw, r6
      cmp r6.xyz, -r12_abs.y, c142.xzzw, r6
      cmp r6.xyz, -r11_abs.x, c103.z, r6
      cmp r6.xyz, -r11_abs.y, c155, r6
      cmp r6.xyz, -r11_abs.z, c142.xyyw, r6
      cmp r4.xyz, -r11_abs.w, c142.xyyw, r6  // ::min3<0,1,2>
      add r6, r0.w, c37
      add r7, r0.w, c86
      add r8, r0.w, c60
      add r9, r0.w, c40
      add r10, r0.w, c45
      add r11, r0.w, c160
      add r13, r0.w, c161
      add r14.xyz, r0.w, c162
      add r15, r0.w, c102
      add r16, r0.w, c61
      add r17, r0.w, c139
      cmp r12.xyz, -r12_abs.z, c142.w, c142.x
      cmp r12.xyz, -r15_abs.x, -c107.w, r12
      cmp r12.xyz, -r15_abs.z, c142.w, r12
      cmp r12.xyz, -r16_abs.x, c142.w, r12
      cmp r12.xyz, -r16_abs.z, -c107.w, r12
      cmp r12.xyz, -r17_abs.x, c156.xyyw, r12
      cmp r12.xyz, -r17_abs.z, c156, r12
      cmp r12.xyz, -r6_abs.x, c156.xyyw, r12
      cmp r12.xyz, -r6_abs.z, c156.xyyw, r12
      cmp r12.xyz, -r7_abs.x, c156.xyyw, r12
      cmp r12.xyz, -r7_abs.z, c156.xyyw, r12
      cmp r12.xyz, -r8_abs.x, c156.xyyw, r12
      cmp r12.xyz, -r8_abs.y, c156.xyyw, r12
      cmp r12.xyz, -r9_abs.x, c156, r12
      cmp r12.xyz, -r9_abs.y, c156, r12
      cmp r9.xyz, -r9_abs.z, c156.xyyw, r12
      cmp r9.xyz, -r9_abs.w, -c107.w, r9
      cmp r9.xyz, -r10_abs.x, c142.w, r9
      cmp r9.xyz, -r10_abs.y, c155.w, r9
      cmp r9.xyz, -r10_abs.z, c156.ywww, r9
      cmp r9.xyz, -r10_abs.w, c69, r9
      cmp r9.xyz, -r11_abs.x, -c107.w, r9
      cmp r9.xyz, -r11_abs.y, -c107.w, r9
      cmp r9.xyz, -r11_abs.z, c156.yyxw, r9
      cmp r9.xyz, -r11_abs.w, c156.yyxw, r9
      cmp r9.xyz, -r14_abs.x, c158.xxyw, r9
      cmp r9.xyz, -r14_abs.y, c156.yyxw, r9
      cmp r9.xyz, -r14_abs.z, c156.yyxw, r9
      cmp r9.xyz, -r13_abs.x, -c107.w, r9
      cmp r9.xyz, -r13_abs.y, c68, r9
      cmp r9.xyz, -r13_abs.z, -c107.w, r9
      cmp r9.xyz, -r13_abs.w, -c107.w, r9
      cmp r9.xyz, -r12_abs.w, -c107.w, r9
      cmp r9.xyz, -r15_abs.y, c68.yzxw, r9
      cmp r9.xyz, -r15_abs.w, c142.w, r9
      cmp r9.xyz, -r16_abs.y, -c107.w, r9
      cmp r9.xyz, -r16_abs.w, c158.zwww, r9
      cmp r9.xyz, -r17_abs.y, -c107.w, r9
      cmp r9.xyz, -r17_abs.w, c159.xyyw, r9
      cmp r6.xyz, -r6_abs.y, c159.zwww, r9
      cmp r6.xyz, -r6_abs.w, c157.xyyw, r6
      cmp r6.xyz, -r7_abs.y, -c107.w, r6
      cmp r6.xyz, -r7_abs.w, c157.xzww, r6
      cmp r6.xyz, -r8_abs.z, c159.zwww, r6
      cmp r5.xyz, -r8_abs.w, c159.zwww, r6  // ::max3<0,1,2>

#line 2586
      mov r1.x, c6.x  // ::input3<0>
      mov r1.y, c7.x  // ::input3<1>
      mov r2.x, c8.x  // ::input3<2>
      mov r1.w, c103.z  // ::input4<0>
      mov r2.yz, c103.z  // ::input4<1,2>
      mov r3.w, c103.z  // ::input4<3>
    endif

#line 2592
    mov r0.w, c162.w
    if_eq c3.x, r0.w

#line 2598
      mov r4.w, c107.w
      add r4.w, r4.w, c4.x

#line 452
      add r6.xyz, c159.wzww, -v0.xyyw  // ::N<0>
      mul r6.xz, r6_abs, r6_abs
      add r5.w, r6.z, r6.x
      rsq r5.w, r5.w
      rcp r5.w, r5.w  // ::GetDistance<0>

#line 2600
      mad r5.w, r5.w, -c49.x, c49.y  // ::N<0>
      cmp r1.z, -r4_abs.w, r5.w, r6.y  // ::N<0>
      abs r4.w, c1.x
      cmp r6.xy, r0.x, r1.xzzw, r1.zwzw  // ::input3<0>, ::input4<0>

#line 2615
      mov r7.yzw, c49
      add r7.xyz, -r7.yzww, c1.x

#line 2609
      mov r2.w, r1.z
      cmp r8.xy, r0.x, r1.yzzw, r2.wyzw  // ::input3<1>, ::input4<1>

#line 2613
      cmp r3.xy, r0.x, r2.xwzw, r2.wzzw  // ::input3<2>, ::input4<2>

#line 2617
      cmp r5.w, r0.x, r2.w, r3.w  // ::input4<3>
      cmp r9.x, -r7_abs.z, r5.w, r3.w  // ::input4<3>
      mov r9.yz, r2.xxzw
      cmp r10.xyz, -r7_abs.y, r3.ywxw, r9.zxyw  // ::input4<2,3>, ::input3<2>
      mov r8.z, r9.z
      mov r8.w, r3.w
      mov r10.w, r2.y
      cmp r11.yzw, -r7_abs.x, r8, r10.xwxy  // ::input4<1,2,3>
      mov r9.w, r8.x
      mov r10.y, r1.y
      cmp r1.yz, -r7_abs.x, r9.xwyw, r10  // ::input3<1,2>
      mov r8.x, r6.y
      mov r8.yz, r2
      mov r11.x, r1.w
      cmp r3, -r4.w, r8, r11  // ::input4<0,1,2,3>
      mov r6.z, r10.y
      mov r6.w, r9.y
      cmp r2.xyw, -r4.w, r6.wxzz, r1.zxzy  // ::input3<2,0,1>
      mov oC0, c103.z  // ::main<0,1,2,3>
      mov r4.w, c103.z
    else
      mov r6.xyw, c107  // ::Minimum3<61>
      if_eq c3.x, -r6.w

#line 2627
        add r5.w, r6.w, c4.x

#line 2630
        add r7.xyz, c159.zwww, -v0.yxyw  // ::N<0>

#line 452
        add r6.z, -r7.x, -c142.y
        mul r6.z, r6_abs.z, r6_abs.z
        mad r6.z, r7_abs.y, r7_abs.y, r6.z
        rsq r6.z, r6.z
        rcp r6.z, r6.z  // ::GetDistance<0>

#line 2629
        mad r7.x, r6.z, -c49.x, c49.y  // ::xN<0>
        add r6.z, c142.y, v0.x
        min r8.x, r6_abs.z, r7_abs.z
        max r8.y, r7_abs.z, r6_abs.z
        rcp r7.w, r8.y
        mul r7.w, r7.w, r8.x
        mul r8.x, r7.w, r7.w
        mad r8.y, r8.x, c50.x, c50.y
        mad r8.y, r8.x, r8.y, c69.w
        mad r8.y, r8.x, r8.y, c68.w
        mad r8.x, r8.x, r8.y, c50.z
        mul r7.w, r7.w, r8.x
        add r8.x, -r7_abs.z, r6_abs.z
        cmp r8.x, r8.x, c107_abs.z, c107_abs.w
        mad r8.y, r7.w, c51.x, c51.y
        mad r7.w, r8.y, r8.x, r7.w
        cmp r8.x, r6.z, c51.z, c51.w
        add r7.w, r7.w, r8.x
        min r8.x, r6.z, r7.z
        max r8.y, r7.z, r6.z
        cmp r6.z, r8.y, c107_abs.w, c107_abs.z
        cmp r6.z, r8.x, c103.z, r6.z
        add r7.z, r7.w, r7.w
        mad r6.z, r6.z, -r7.z, r7.w
        add r7.zw, r6.z, c53.xyxy  // ::yN<0>
        add r6.z, -r7.z, c50.w
        cmp r6.z, r6.z, r7.z, r7.w  // ::yN<0>
        mul r7.y, r6.z, c53.z  // ::yN<0>

#line 2637
        mad r7.zw, v0.xyxy, c119.xyxy, c119.xyzx
        cmp r7.yw, -r5_abs.w, r7.xxzy, r7.xzzw  // ::M<0>, ::N<0>
        abs r5.w, c1.x
        mov r7.xz, r1.xyww
        cmp r8.xz, r0.x, r7.xyyw, r7.yyzw  // ::input3<0>, ::input4<0>

#line 2651
        mov r9.yzw, c49
        add r10.xyz, -r9.yzww, c1.x

#line 2645
        mov r1.x, r7.y

#line 2649
        mov r1.zw, r2.xyyx

#line 2645
        cmp r11.xy, r0.x, r1.yxzw, r1.xzzw  // ::input3<1>, ::input4<1>

#line 2654
        mov r12.xy, r1.xzzw

#line 2649
        mov r12.z, r2.z
        cmp r3.xz, r0.x, r1.wyxw, r12  // ::input3<2>, ::input4<2>

#line 2653
        cmp r6.z, r0.x, r7.y, r3.w  // ::input4<3>
        cmp r2.w, -r10_abs.z, r6.z, r3.w  // ::input4<3>
        cmp r12.xzw, -r10_abs.y, r3, r2  // ::input3<2>, ::input4<2,3>
        mov r3.xz, r2
        mov r3.y, r11.y
        cmp r13, -r10_abs.x, r3, r12  // ::input3<2>, ::input4<1,2,3>
        cmp r7.y, -r10_abs.x, r11.x, r1.y  // ::input3<1>
        mov r12.xzw, r3
        cmp r10, -r5.w, r12, r13  // ::input3<2>, ::input4<1,2,3>
        mov r8.y, r1.y
        cmp r7.xyz, -r5.w, r8.yxzw, r7.yxzw  // ::input3<1,0>, ::input4<0>
        abs r1.z, c2.x
        cmp r8.xy, r0.x, r7.ywzw, r7.wzzw  // ::input3<0>, ::input4<0>

#line 2668
        add r9.xyz, -r9.yzww, c2.x

#line 2662
        mov r11.z, r7.w

#line 2666
        mov r11.xyw, r10.xzzy

#line 2662
        cmp r12.xy, r0.x, r7.xwzw, r11.zwzw  // ::input3<1>, ::input4<1>

#line 2666
        cmp r13.xy, r0.x, r11.xzzw, r11.zyzw  // ::input3<2>, ::input4<2>

#line 2670
        cmp r5.w, r0.x, r7.w, r10.w  // ::input4<3>
        cmp r14.x, -r9_abs.z, r5.w, r10.w  // ::input4<3>
        mov r13.z, r10.w
        mov r14.yz, r11.xxyw
        cmp r11.xyz, -r9_abs.y, r13.yzxw, r14.zxyw  // ::input4<2,3>, ::input3<2>
        mov r12.zw, r10
        cmp r13.yzw, -r9_abs.x, r12, r11.xwxy  // ::input4<1,2,3>
        mov r14.w, r12.x
        mov r11.y, r7.x
        cmp r9.yz, -r9_abs.x, r14.xwyw, r11  // ::input3<1,2>
        mov r10.x, r8.y
        mov r13.x, r7.z
        cmp r3, -r1.z, r10, r13  // ::input4<0,1,2,3>
        mov r8.z, r11.y
        mov r8.w, r14.y
        mov r9.x, r7.y
        cmp r2.xyw, -r1.z, r8.wxzz, r9.zxzy  // ::input3<2,0,1>
        mov oC0, c103.z  // ::main<0,1,2,3>
        mov r4.w, c103.z
      else
        abs r1.z, c3.x
        cmp r4.w, -r1.z, c107_abs.w, c107_abs.z
        if_eq c3.x, r0.z

#line 2562
          texld r7, v0, s0  // ::color<0,1,2,3>

#line 2254
          log r1.z, r7.x
          mul r5.w, r1.z, c11.x
          exp r8.x, r5.w  // ::v<0>

#line 2259
          if_eq c10.x, r0.z

#line 2317
          else

#line 2259
            add r5.w, r6.w, c10.x

#line 2268
            mul r6.z, r7.x, -c61.x
            rsq r6.z, r6.z
            rcp r6.z, r6.z  // ::TransferInverse<0>
            cmp r8.w, -r7.x, -c107_abs.w, -c107_abs.z
            cmp r8.w, r7.x, r8.w, c103.z
            mad r9.x, r7.x, c105.x, c105.y
            log r9.x, r9.x
            mad r9.x, r9.x, c105.z, c105.w  // ::TransferInverse<0>
            cmp r6.z, r8.w, r9.x, r6.z  // ::TransferInverse<0>
            cmp r8.x, -r5_abs.w, r6.z, r8.x  // ::TransferInverse<0>

#line 2272
            if_eq c10.x, -r6.w

#line 2317
            else

#line 2272
              add r5.w, -r0.w, c10.x

#line 2275
              add r6.z, -r7.x, c53.w
              mul r8.w, r7.x, c119.w
              add r9.x, r7.x, c54.x
              mul r9.x, r9.x, c54.y
              mul r9.y, r9.x, r9.x
              mul r9.x, r9.y, r9.x
              cmp r6.z, r6.z, r8.w, r9.x  // ::v<0>
              cmp r8.x, -r5_abs.w, r6.z, r8.x  // ::TransferInverse<0>

#line 2280
              if_eq c10.x, r0.w

#line 2317
              else

#line 2280
                mov r9.x, c10.x  // ::Companding<0>
                add r5.w, r9.x, c61.x

#line 2295
                if_eq r9.x, -c61.x

#line 2289
                  mul r1.z, r1.z, c54.z
                  exp r1.z, r1.z
                  mad r9.yz, r1.z, c57.xxyw, c57.xzww  // ::a<0>, ::b<0>
                  rcp r1.z, r9.z
                  mul r1.z, r1.z, r9.y
                  pow r6.z, r1.z, c54.w  // ::TransferInverse<0>
                  cmp r8.x, -r5_abs.w, r6.z, r8.x  // ::TransferInverse<0>

#line 2317
                else

#line 2311
                  add r9.xyz, r9.x, c153

#line 2314
                  mul r10.xy, r7.x, c58

#line 2306
                  add r11, r7.x, c55
                  mul r10.zw, r11.xyyw, c58

#line 2298
                  pow r1.z, r10.z, c153.w
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2306
                  pow r5.w, r10.w, c153.w
                  cmp r5.w, r11.z, r5.w, r10.x  // ::L<0>

#line 2314
                  add r6.z, -r7.x, c56.x
                  add r8.w, r7.x, c56.y
                  mul r8.w, r8.w, c56.z
                  pow r9.w, r8.w, c56.w
                  cmp r6.z, r6.z, r10.y, r9.w  // ::v<0>

#line 2317
                  cmp r6.z, -r9_abs.z, r6.z, r7.x  // ::TransferInverse<0>
                  cmp r5.w, -r9_abs.y, r5.w, r6.z  // ::TransferInverse<0>
                  cmp r8.x, -r9_abs.x, r1.z, r5.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2254
          log r1.z, r7.y
          mul r5.w, r1.z, c11.x
          exp r8.y, r5.w  // ::v<0>

#line 2259
          if_eq c10.x, r0.z

#line 2317
          else

#line 2259
            add r5.w, r6.w, c10.x

#line 2268
            mul r6.z, r7.y, -c61.x
            rsq r6.z, r6.z
            rcp r6.z, r6.z  // ::TransferInverse<0>
            cmp r8.w, -r7.y, -c107_abs.w, -c107_abs.z
            cmp r8.w, r7.y, r8.w, c103.z
            mad r9.x, r7.y, c105.x, c105.y
            log r9.x, r9.x
            mad r9.x, r9.x, c105.z, c105.w  // ::TransferInverse<0>
            cmp r6.z, r8.w, r9.x, r6.z  // ::TransferInverse<0>
            cmp r8.y, -r5_abs.w, r6.z, r8.y  // ::TransferInverse<0>

#line 2272
            if_eq c10.x, -r6.w

#line 2317
            else

#line 2272
              add r5.w, -r0.w, c10.x

#line 2275
              add r6.z, -r7.y, c53.w
              mul r8.w, r7.y, c119.w
              add r9.x, r7.y, c54.x
              mul r9.x, r9.x, c54.y
              mul r9.y, r9.x, r9.x
              mul r9.x, r9.y, r9.x
              cmp r6.z, r6.z, r8.w, r9.x  // ::v<0>
              cmp r8.y, -r5_abs.w, r6.z, r8.y  // ::TransferInverse<0>

#line 2280
              if_eq c10.x, r0.w

#line 2317
              else

#line 2280
                mov r9.x, c10.x  // ::Companding<0>
                add r5.w, r9.x, c61.x

#line 2295
                if_eq r9.x, -c61.x

#line 2289
                  mul r1.z, r1.z, c54.z
                  exp r1.z, r1.z
                  mad r9.yz, r1.z, c57.xxyw, c57.xzww  // ::a<0>, ::b<0>
                  rcp r1.z, r9.z
                  mul r1.z, r1.z, r9.y
                  pow r6.z, r1.z, c54.w  // ::TransferInverse<0>
                  cmp r8.y, -r5_abs.w, r6.z, r8.y  // ::TransferInverse<0>

#line 2317
                else

#line 2311
                  add r9.xyz, r9.x, c153

#line 2314
                  mul r10.xy, r7.y, c58

#line 2306
                  add r11, r7.y, c55
                  mul r10.zw, r11.xyyw, c58

#line 2298
                  pow r1.z, r10.z, c153.w
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2306
                  pow r5.w, r10.w, c153.w
                  cmp r5.w, r11.z, r5.w, r10.x  // ::L<0>

#line 2314
                  add r6.z, -r7.y, c56.x
                  add r8.w, r7.y, c56.y
                  mul r8.w, r8.w, c56.z
                  pow r9.w, r8.w, c56.w
                  cmp r6.z, r6.z, r10.y, r9.w  // ::v<0>

#line 2317
                  cmp r6.z, -r9_abs.z, r6.z, r7.y  // ::TransferInverse<0>
                  cmp r5.w, -r9_abs.y, r5.w, r6.z  // ::TransferInverse<0>
                  cmp r8.y, -r9_abs.x, r1.z, r5.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2254
          log r1.z, r7.z
          mul r5.w, r1.z, c11.x
          exp r8.z, r5.w  // ::v<0>

#line 2259
          if_eq c10.x, r0.z

#line 2317
          else

#line 2259
            add r5.w, r6.w, c10.x

#line 2268
            mul r6.z, r7.z, -c61.x
            rsq r6.z, r6.z
            rcp r6.z, r6.z  // ::TransferInverse<0>
            cmp r8.w, -r7.z, -c107_abs.w, -c107_abs.z
            cmp r8.w, r7.z, r8.w, c103.z
            mad r9.x, r7.z, c105.x, c105.y
            log r9.x, r9.x
            mad r9.x, r9.x, c105.z, c105.w  // ::TransferInverse<0>
            cmp r6.z, r8.w, r9.x, r6.z  // ::TransferInverse<0>
            cmp r8.z, -r5_abs.w, r6.z, r8.z  // ::TransferInverse<0>

#line 2272
            if_eq c10.x, -r6.w

#line 2317
            else

#line 2272
              add r5.w, -r0.w, c10.x

#line 2275
              add r6.z, -r7.z, c53.w
              mul r8.w, r7.z, c119.w
              add r9.x, r7.z, c54.x
              mul r9.x, r9.x, c54.y
              mul r9.y, r9.x, r9.x
              mul r9.x, r9.y, r9.x
              cmp r6.z, r6.z, r8.w, r9.x  // ::v<0>
              cmp r8.z, -r5_abs.w, r6.z, r8.z  // ::TransferInverse<0>

#line 2280
              if_eq c10.x, r0.w

#line 2317
              else

#line 2280
                mov r9.x, c10.x  // ::Companding<0>
                add r5.w, r9.x, c61.x

#line 2295
                if_eq r9.x, -c61.x

#line 2289
                  mul r1.z, r1.z, c54.z
                  exp r1.z, r1.z
                  mad r9.yz, r1.z, c57.xxyw, c57.xzww  // ::a<0>, ::b<0>
                  rcp r1.z, r9.z
                  mul r1.z, r1.z, r9.y
                  pow r6.z, r1.z, c54.w  // ::TransferInverse<0>
                  cmp r8.z, -r5_abs.w, r6.z, r8.z  // ::TransferInverse<0>

#line 2317
                else

#line 2311
                  add r9.xyz, r9.x, c153

#line 2314
                  mul r10.xy, r7.z, c58

#line 2306
                  add r11, r7.z, c55
                  mul r10.zw, r11.xyyw, c58

#line 2298
                  pow r1.z, r10.z, c153.w
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2306
                  pow r5.w, r10.w, c153.w
                  cmp r5.w, r11.z, r5.w, r10.x  // ::L<0>

#line 2314
                  add r6.z, -r7.z, c56.x
                  add r8.w, r7.z, c56.y
                  mul r8.w, r8.w, c56.z
                  pow r9.w, r8.w, c56.w
                  cmp r6.z, r6.z, r10.y, r9.w  // ::v<0>

#line 2317
                  cmp r6.z, -r9_abs.z, r6.z, r7.z  // ::TransferInverse<0>
                  cmp r5.w, -r9_abs.y, r5.w, r6.z  // ::TransferInverse<0>
                  cmp r8.z, -r9_abs.x, r1.z, r5.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2410
          if_eq c0.x, r0.z
            mov r9.xyz, r8  // ::FLrgb<0,1,2>
            mov r1.z, -c107.w
          else
            if_eq c0.x, r0.w
              mov r9.xyz, r8  // ::FLrgb<0,1,2>
              mov r1.z, -c107.w
            else
              mov r10.x, c0.x  // ::Model<0>
              if_eq r10.x, -c61.x
                mov r9.xyz, r8  // ::FLrgb<0,1,2>
                mov r1.z, -c107.w
              else
                if_eq r10.x, -c61.z

#line 659
                  add r9.xyz, -r8, -c107.w  // ::Lrgb_CMY<0,1,2>

#line 2413
                  mov r1.z, -c107.w
                else
                  if_eq r10.x, -c139.x

#line 785
                    add r10.yzw, -r8.xzxy, r8.xyzx

#line 458
                    cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                    min r5.w, r11.x, r8.x  // ::GetMinimum<0>
                    max r6.z, r8.x, r11.y  // ::GetMaximum<0>

#line 767
                    add r8.w, -r5.w, r6.z  // ::c<0>
                    add r11.x, r8.w, c107.w
                    add r11.y, -r8.w, -c107.w
                    rcp r11.y, r11.y
                    mul r5.w, r5.w, r11.y  // ::v<0>

#line 779
                    add r11.yz, -r8.xxyw, r6.z
                    rcp r6.z, r8.w

#line 785
                    mul r10.y, r6.z, r10.y

#line 777
                    cmp r12.xy, r10.y, c126, c126.zwzw
                    mul r10.y, r10.y, r12.y
                    frc r10.y, r10.y
                    mul r10.y, r10.y, r12.x  // ::h<0>

#line 785
                    mad r10.zw, r10, r6.z, c59.xyxy  // ::h<0,0>
                    cmp r6.z, -r11_abs.z, r10.z, r10.w  // ::h<0>
                    cmp r6.z, -r11_abs.y, r10.y, r6.z  // ::h<0>
                    mul r10.y, r6.z, c126.y  // ::h<0>
                    cmp r6.z, r6.z, c119.x, c119.y
                    mul r10.y, r6.z, r10.y
                    frc r10.y, r10.y
                    mul r6.z, r6.z, r10.y  // ::h<0>
                    mul r6.z, r6.z, c156.x
                    cmp r9.x, -r8.w, c103.z, r6.z  // ::Lrgb_HCV<0>
                    mul r9.y, r8.w, c155.w  // ::Lrgb_HCV<1>
                    mul r5.w, r5.w, c155.w
                    cmp r9.z, r11.x, c103.z, r5.w  // ::Lrgb_HCV<2>

#line 2414
                    mov r1.z, -c107.w
                  else
                    if_eq c0.x, -r6.y

#line 464
                      add r5.w, r8.y, r8.x
                      add r5.w, r8.z, r5.w  // ::GetSum<0>

#line 830
                      rcp r6.z, r5.w
                      mul r10.yzw, r6.z, r8.xxyz  // ::r<0>, ::g<0>, ::b<0>
                      mad r11.xyz, r8.xxyw, r6.z, -r10.zwww
                      add r6.z, r11.y, r11.x
                      mul r6.z, r6.z, -c142.y
                      mul r11.xy, r11.xzzw, r11
                      add r8.w, r11.y, r11.x
                      rsq r8.w, r8.w
                      mul r6.z, r6.z, r8.w
                      add r8.w, -r6_abs.z, -c107.w
                      rsq r8.w, r8.w
                      rcp r8.w, r8.w
                      mad r11.x, r6_abs.z, c59.z, c59.w
                      mad r11.x, r11.x, r6_abs.z, c52.x
                      mad r11.x, r11.x, r6_abs.z, c52.y
                      mul r8.w, r8.w, r11.x
                      mad r11.x, r8.w, c52.z, c52.w
                      cmp r6.z, r6.z, c107_abs.z, c107_abs.w
                      mad r6.z, r11.x, r6.z, r8.w  // ::h<0>

#line 835
                      add r8.w, -r6.z, c50.w  // ::h<0>
                      cmp r6.z, r11.z, r6.z, r8.w  // ::h<0>

#line 460
                      min r8.w, r10.w, r10.z
                      min r11.x, r8.w, r10.y  // ::GetMinimum<0>

#line 839
                      mad r8.w, r11.x, -c49.w, c49.y  // ::s<0>
                      mul r9.z, r5.w, c85.x  // ::i<0>
                      mul r9.x, r6.z, c85.y  // ::Lrgb_HCY<0>
                      mul r9.y, r8.w, c155.w  // ::Lrgb_HCY<1>

#line 2415
                      mov r1.z, -c107.w
                    else
                      if_eq r10.x, -c37.x

#line 1039
                        add r10.yzw, -r8.xzyx, r8.xyxz

#line 458
                        cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                        min r5.w, r11.x, r8.x  // ::GetMinimum<0>
                        max r6.z, r8.x, r11.y  // ::GetMaximum<0>

#line 1018
                        add r8.w, -r5.w, r6.z  // ::chroma<0>
                        add r5.w, r5.w, r6.z

#line 1023
                        add r11.x, r5.w, c107.w
                        rcp r11.y, r5.w
                        add r11.z, -r5.w, c162.w
                        rcp r11.z, r11.z
                        mul r11.yz, r8.w, r11
                        cmp r11.y, r11.x, r11.z, r11.y  // ::s<0>

#line 1037
                        add r12.xyz, -r6.z, r8.xzyw

#line 1029
                        rcp r6.z, r8.w

#line 1039
                        mul r11.z, r6.z, r10.y  // ::h<0>
                        mad r13.xyz, r10.yzww, r6.z, c62  // ::h<0,0>

#line 1030
                        cmp r6.z, r10.y, r11.z, r13.x  // ::h<0>

#line 1040
                        cmp r10.y, -r12_abs.z, r13.z, c103.z  // ::h<0>
                        cmp r10.y, -r12_abs.y, r13.y, r10.y  // ::h<0>
                        cmp r6.z, -r12_abs.x, r6.z, r10.y  // ::h<0>
                        mul r11.x, r6.z, c85.z  // ::h<0>
                        cmp r9.xw, -r8_abs.w, c103.z, r11.xyzy  // ::h<0>, ::s<0>
                        mul r9.z, r5.w, c85.w  // ::Lrgb_HSL<2>

#line 2416
                        mul r9.y, r9.w, c155.w
                        mov r1.z, -c107.w
                      else
                        if_eq r10.x, -c37.z

#line 944
                          add r10.yzw, -r8.xzxy, r8.xyzx

#line 458
                          cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                          min r5.w, r11.x, r8.x  // ::GetMinimum<0>
                          max r6.z, r8.x, r11.y  // ::GetMaximum<0>

#line 923
                          add r5.w, -r5.w, r6.z  // ::chroma<0>

#line 932
                          rcp r8.w, r6.z
                          mul r11.y, r5.w, r8.w  // ::_s<0>

#line 943
                          add r12.xyz, -r6.z, r8

#line 936
                          rcp r8.w, r5.w

#line 944
                          mul r11.z, r8.w, r10.y  // ::_h<0>
                          mad r13.xyz, r10.yzww, r8.w, c62.xzyw  // ::_h<0,0>

#line 937
                          cmp r8.w, r10.y, r11.z, r13.x  // ::_h<0>

#line 944
                          cmp r10.y, -r12_abs.z, r13.z, c103.z  // ::_h<0>
                          cmp r10.y, -r12_abs.y, r13.y, r10.y  // ::_h<0>
                          cmp r8.w, -r12_abs.x, r8.w, r10.y  // ::_h<0>
                          mul r11.x, r8.w, c85.z  // ::_h<0>
                          cmp r9.xw, -r5_abs.w, c103.z, r11.xyzy  // ::_h<0>, ::_s<0>
                          mul r9.z, r6.z, c155.w  // ::Lrgb_HSB<2>

#line 2417
                          mul r9.y, r9.w, c155.w
                          mov r1.z, -c107.w
                        else
                          if_eq r10.x, -c86.x

#line 944
                            add r10.xyz, -r8.zxyw, r8.yzxw

#line 458
                            cmp r11.xy, r10.x, r8.zyzw, r8.yzzw
                            min r5.w, r11.x, r8.x  // ::GetMinimum<0>
                            max r6.z, r8.x, r11.y  // ::GetMaximum<0>

#line 923
                            add r5.w, -r5.w, r6.z  // ::chroma<0>

#line 932
                            rcp r8.w, r6.z
                            mul r11.y, r5.w, r8.w  // ::_s<0>

#line 943
                            add r12.xyz, -r6.z, r8

#line 936
                            rcp r8.w, r5.w

#line 944
                            mul r10.w, r8.w, r10.x  // ::_h<0>
                            mad r13.xyz, r10, r8.w, c62.xzyw  // ::_h<0,0>

#line 937
                            cmp r8.w, r10.x, r10.w, r13.x  // ::_h<0>

#line 944
                            cmp r10.x, -r12_abs.z, r13.z, c103.z  // ::_h<0>
                            cmp r10.x, -r12_abs.y, r13.y, r10.x  // ::_h<0>
                            cmp r8.w, -r12_abs.x, r8.w, r10.x  // ::_h<0>
                            mul r11.x, r8.w, c85.z  // ::_h<0>
                            cmp r9.xw, -r5_abs.w, c103.z, r11.xyzy  // ::_h<0>, ::_s<0>
                            mul r9.z, r6.z, c155.w  // ::Lrgb_HSB<2>

#line 2418
                            mul r9.y, r9.w, c155.w
                            mov r1.z, -c107.w
                          else
                            add r5.w, r6.x, c0.x
                            cmp r1.z, -r5_abs.w, c107_abs.w, c107_abs.z

#line 1039
                            add r10.xyz, -r8.zyxw, r8.yxzw

#line 458
                            cmp r11.xy, r10.x, r8.zyzw, r8.yzzw
                            min r5.w, r11.x, r8.x  // ::GetMinimum<0>
                            max r6.z, r8.x, r11.y  // ::GetMaximum<0>

#line 1018
                            add r8.w, -r5.w, r6.z  // ::chroma<0>
                            add r5.w, r5.w, r6.z

#line 1023
                            add r10.w, r5.w, c107.w
                            rcp r11.x, r5.w
                            add r11.y, -r5.w, c162.w
                            rcp r11.y, r11.y
                            mul r11.xy, r8.w, r11
                            cmp r11.y, r10.w, r11.y, r11.x  // ::s<0>

#line 1037
                            add r12.xyz, -r6.z, r8.xzyw

#line 1029
                            rcp r6.z, r8.w

#line 1039
                            mul r10.w, r6.z, r10.x  // ::h<0>
                            mad r13.xyz, r10, r6.z, c62  // ::h<0,0>

#line 1030
                            cmp r6.z, r10.x, r10.w, r13.x  // ::h<0>

#line 1040
                            cmp r10.x, -r12_abs.z, r13.z, c103.z  // ::h<0>
                            cmp r10.x, -r12_abs.y, r13.y, r10.x  // ::h<0>
                            cmp r6.z, -r12_abs.x, r6.z, r10.x  // ::h<0>
                            mul r11.x, r6.z, c85.z  // ::h<0>
                            cmp r9.xw, -r8_abs.w, c103.z, r11.xyzy  // ::h<0>, ::s<0>
                            mul r9.z, r5.w, c85.w  // ::Lrgb_HSL<2>

#line 2419
                            mul r9.y, r9.w, c155.w
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r1.z, -r1.z

#line 2459
          else

#line 2421
            mov r10.x, c0.x  // ::Model<0>
            if_eq r10.x, -c60.x

#line 1039
              add r10.yzw, -r8.xzyx, r8.xyxz

#line 458
              cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
              min r1.z, r11.x, r8.x  // ::GetMinimum<0>
              max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1018
              add r6.z, -r1.z, r5.w  // ::chroma<0>
              add r1.z, r1.z, r5.w

#line 1023
              add r8.w, r1.z, c107.w
              rcp r11.x, r1.z
              add r11.y, -r1.z, c162.w
              rcp r11.y, r11.y
              mul r11.xy, r6.z, r11
              cmp r11.y, r8.w, r11.y, r11.x  // ::s<0>

#line 1037
              add r12.xyz, -r5.w, r8.xzyw

#line 1029
              rcp r5.w, r6.z

#line 1039
              mul r8.w, r5.w, r10.y  // ::h<0>
              mad r13.xyz, r10.yzww, r5.w, c62  // ::h<0,0>

#line 1030
              cmp r5.w, r10.y, r8.w, r13.x  // ::h<0>

#line 1040
              cmp r8.w, -r12_abs.z, r13.z, c103.z  // ::h<0>
              cmp r8.w, -r12_abs.y, r13.y, r8.w  // ::h<0>
              cmp r5.w, -r12_abs.x, r5.w, r8.w  // ::h<0>
              mul r11.x, r5.w, c85.z  // ::h<0>
              cmp r9.xw, -r6_abs.z, c103.z, r11.xyzy  // ::h<0>, ::s<0>
              mul r9.z, r1.z, c85.w  // ::Lrgb_HSL<2>

#line 2421
              mul r9.y, r9.w, c155.w
              mov r1.z, -c107.w
            else
              if_eq r10.x, -c60.y

#line 1039
                add r10.yzw, -r8.xzyx, r8.xyxz

#line 458
                cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                min r5.w, r11.x, r8.x  // ::GetMinimum<0>
                max r6.z, r8.x, r11.y  // ::GetMaximum<0>

#line 1018
                add r8.w, -r5.w, r6.z  // ::chroma<0>
                add r5.w, r5.w, r6.z

#line 1023
                add r11.x, r5.w, c107.w
                rcp r11.y, r5.w
                add r11.z, -r5.w, c162.w
                rcp r11.z, r11.z
                mul r11.yz, r8.w, r11
                cmp r11.y, r11.x, r11.z, r11.y  // ::s<0>

#line 1037
                add r12.xyz, -r6.z, r8.xzyw

#line 1029
                rcp r6.z, r8.w

#line 1039
                mul r11.z, r6.z, r10.y  // ::h<0>
                mad r13.xyz, r10.yzww, r6.z, c62  // ::h<0,0>

#line 1030
                cmp r6.z, r10.y, r11.z, r13.x  // ::h<0>

#line 1040
                cmp r10.y, -r12_abs.z, r13.z, c103.z  // ::h<0>
                cmp r10.y, -r12_abs.y, r13.y, r10.y  // ::h<0>
                cmp r6.z, -r12_abs.x, r6.z, r10.y  // ::h<0>
                mul r11.x, r6.z, c85.z  // ::h<0>
                cmp r9.xw, -r8_abs.w, c103.z, r11.xyzy  // ::h<0>, ::s<0>
                mul r9.z, r5.w, c85.w  // ::Lrgb_HSL<2>

#line 2422
                mul r9.y, r9.w, c155.w
                mov r1.z, -c107.w
              else
                if_eq r10.x, -c40.x

#line 1060
                  frc r5.w, c0.x
                  add r5.w, -r5.w, c0.x
                  add r11, r5.w, c37
                  add r12, r5.w, c86
                  add r13, r5.w, c60
                  add r14, r5.w, c40
                  add r15, r5.w, c45
                  add r16, r5.w, c160
                  add r17, r5.w, c161
                  add r10.yzw, r5.w, c162.xxyz
                  add r18, r5.w, c163
                  add r19, r5.w, c164
                  add r20.xy, r5.w, c61.zwzw
                  add r21, r5.w, c139
                  cmp r22.xyz, -r18_abs.x, c142.w, c142.x
                  cmp r22.xyz, -r18_abs.z, -c107.w, r22
                  cmp r22.xyz, -r19_abs.x, c142.w, r22
                  cmp r22.xyz, -r19_abs.z, c142.w, r22
                  cmp r20.xzw, -r20_abs.x, -c107.w, r22.xyyz
                  cmp r20.xzw, -r21_abs.x, c156.xyyy, r20
                  cmp r20.xzw, -r21_abs.z, c156.xyyz, r20
                  cmp r20.xzw, -r11_abs.x, c156.xyyy, r20
                  cmp r20.xzw, -r11_abs.z, c156.xyyy, r20
                  cmp r20.xzw, -r12_abs.x, c156.xyyy, r20
                  cmp r20.xzw, -r12_abs.z, c156.xyyy, r20
                  cmp r20.xzw, -r13_abs.x, c156.xyyy, r20
                  cmp r20.xzw, -r13_abs.y, c156.xyyy, r20
                  cmp r20.xzw, -r14_abs.x, c156.xyyz, r20
                  cmp r20.xzw, -r14_abs.y, c156.xyyz, r20
                  cmp r14.xyz, -r14_abs.z, c156.xyyw, r20.xzww
                  cmp r14.xyz, -r14_abs.w, -c107.w, r14
                  cmp r14.xyz, -r15_abs.x, c142.w, r14
                  cmp r14.xyz, -r15_abs.y, c155.w, r14
                  cmp r14.xyz, -r15_abs.z, c156.ywww, r14
                  cmp r14.xyz, -r15_abs.w, c69, r14
                  cmp r14.xyz, -r16_abs.x, -c107.w, r14
                  cmp r14.xyz, -r16_abs.y, -c107.w, r14
                  cmp r14.xyz, -r16_abs.z, c156.yyxw, r14
                  cmp r14.xyz, -r16_abs.w, c156.yyxw, r14
                  cmp r14.xyz, -r10_abs.y, c158.xxyw, r14
                  cmp r14.xyz, -r10_abs.z, c156.yyxw, r14
                  cmp r10.yzw, -r10_abs.w, c156.xyyx, r14.xxyz
                  cmp r10.yzw, -r17_abs.x, -c107.w, r10
                  cmp r10.yzw, -r17_abs.y, c68.xxyz, r10
                  cmp r10.yzw, -r17_abs.z, -c107.w, r10
                  cmp r10.yzw, -r17_abs.w, -c107.w, r10
                  cmp r10.yzw, -r18_abs.y, -c107.w, r10
                  cmp r10.yzw, -r18_abs.w, c68.xyzx, r10
                  cmp r10.yzw, -r19_abs.y, c142.w, r10
                  cmp r10.yzw, -r19_abs.w, -c107.w, r10
                  cmp r10.yzw, -r20_abs.y, c158.xzww, r10
                  cmp r10.yzw, -r21_abs.y, -c107.w, r10
                  cmp r10.yzw, -r21_abs.w, c159.xxyy, r10
                  cmp r10.yzw, -r11_abs.y, c159.xzww, r10
                  cmp r10.yzw, -r11_abs.w, c157.xxyy, r10
                  cmp r10.yzw, -r12_abs.y, -c107.w, r10
                  cmp r10.yzw, -r12_abs.w, c157.xxzw, r10
                  cmp r10.yzw, -r13_abs.z, c159.xzww, r10
                  cmp r10.yzw, -r13_abs.w, c159.xzww, r10  // ::max<0,1,2>
                  add r5.w, r8.y, r8.y
                  mad r5.w, r8.x, -c61.z, r5.w
                  add r5.w, r8.z, r5.w

#line 1099
                  mul r6.z, r5.w, c62.w  // ::m<0>

#line 1066
                  mad r11.xyz, r5.w, -c62.w, r8
                  mul r8.w, r11.y, -c61.z
                  mad r8.w, r11.x, -c61.x, -r8.w
                  mad r8.w, r11.z, c61.z, r8.w
                  mul r8.w, r8.w, c63.x  // ::j<0>
                  mul r11.xy, r11, r11
                  add r9.w, r11.y, r11.x
                  mad r9.w, r11.z, r11.z, r9.w
                  rsq r9.w, r9.w
                  mul r8.w, r8.w, r9.w
                  add r11.x, -r8_abs.w, -c107.w
                  rsq r11.x, r11.x
                  rcp r11.x, r11.x
                  mad r11.y, r8_abs.w, c59.z, c59.w
                  mad r11.y, r11.y, r8_abs.w, c52.x
                  mad r11.y, r11.y, r8_abs.w, c52.y
                  mul r11.x, r11.x, r11.y
                  mad r11.y, r11.x, c52.z, c52.w
                  cmp r8.w, r8.w, c107_abs.z, c107_abs.w
                  mad r8.w, r11.y, r8.w, r11.x  // ::t<0>
                  add r11.x, -r8.z, r8.y
                  add r11.y, -r8.w, c50.w
                  cmp r8.w, r11.x, r8.w, r11.y  // ::w<0>

#line 1099
                  mad r11.xy, r5.w, -c63.y, c63.zwzw  // Pow2::input<0,0>

#line 498
                  mul r11.x, r11.x, r11.x  // ::Pow2<0>

#line 1079
                  dp2add r11.x, r6.z, r6.z, r11.x  // ::v<0>

#line 321
                  add r11.z, -r5.w, c65.x

#line 1099
                  mad r11.w, r5.w, c65.y, c65.z  // Pow2::input<0>

#line 498
                  mul r11.w, r11.w, r11.w  // ::Pow2<0>

#line 1099
                  dp2add r11.y, r11.y, r11.y, r11.w  // ::v<0>
                  cmp r11.z, r11.z, -c107_abs.w, -c107_abs.z
                  cmp r11.z, -r5.w, c103.z, r11.z
                  cmp r11.y, r11.z, c103.z, r11.y  // ::v<0>
                  cmp r11.z, -r5.w, -c107_abs.w, -c107_abs.z
                  cmp r5.w, r5.w, r11.z, c103.z
                  cmp r5.w, r5.w, r11.y, r11.x  // ::v<0>
                  mul r8.w, r10.y, r8.w
                  rcp r9.w, r9.w
                  rsq r5.w, r5.w
                  mul r5.w, r5.w, r9.w  // ::s<0>
                  mul r9.x, r8.w, c53.z  // ::Lrgb_HSM<0>
                  mul r9.y, r10.z, r5.w  // ::Lrgb_HSM<1>
                  mul r9.z, r10.w, r6.z  // ::Lrgb_HSM<2>

#line 2423
                  mov r1.z, -c107.w
                else
                  if_eq r10.x, -c40.y

#line 1239
                    mul r10.yzw, r8.xxyz, c142.w  // ::_input<0,1,2>

#line 1243
                    mul r11.xyz, r10.yzww, r10.yzww
                    mul r11.xy, r11, c64
                    add r5.w, r11.y, r11.x
                    mad r5.w, r11.z, c65.w, r5.w
                    rsq r5.w, r5.w
                    rcp r5.w, r5.w  // ::p<0>
                    mad r11.xy, r8.x, c142.w, -r10.wzzw
                    cmp r6.z, -r11_abs.x, c107_abs.w, c107_abs.z
                    cmp r6.z, -r11_abs.y, r6.z, c103.z
                    if_ne r6.z, -r6.z

#line 1248
                      mov r11.zw, c103.z  // ::h<0>, ::s<0>
                    else

#line 1261
                      mad r12.xy, r8.yzzw, c142.w, -r10.wzzw
                      mul r12.zw, r12.xyyx, c126.y

#line 1256
                      rcp r6.z, r11.y
                      mad r13.y, r12.z, -r6.z, -c107.w  // ::h<0>
                      rcp r6.z, r10.y

#line 1261
                      rcp r8.w, r11.x
                      mul r13.x, r8.w, r12.w  // ::h<0>
                      mad r13.zw, r10, -r6.z, -c107.w  // ::s<0,0>
                      cmp r12.zw, r12.y, r13.xyyz, r13.xyxw  // ::h<0>, ::s<0>
                      cmp r6.z, r11.x, -c107_abs.w, -c107_abs.z
                      cmp r6.z, r11.y, r6.z, c103.z
                      cmp r12.zw, r6.z, c103.z, r12  // ::h<0>, ::s<0>

#line 1291
                      mul r13.xy, r11, c126.y

#line 1271
                      rcp r6.z, r12.x
                      mad r14.y, r13.x, -r6.z, c85.x  // ::h<0>
                      rcp r6.z, r10.z

#line 1276
                      mad r13.xz, r8.yyzw, c142.w, -r10.y

#line 1286
                      mul r15.xy, r13.zxzw, c126.y

#line 1276
                      rcp r8.w, r13.x
                      mad r14.x, r15.x, r8.w, c85.x  // ::h<0>
                      mad r14.zw, r10.xywy, -r6.z, -c107.w  // ::s<0,0>
                      cmp r11.xy, r11.x, r14.yzzw, r14.xwzw  // ::h<0>, ::s<0>

#line 1294
                      cmp r14.xy, r12, -c107_abs.w, -c107_abs.z
                      cmp r14.xy, r13.xzzw, r14, c103.z

#line 1279
                      cmp r11.xy, r14.x, r12.zwzw, r11  // ::h<0>, ::s<0>

#line 1286
                      rcp r6.z, r13.z
                      mad r15.y, r15.y, -r6.z, c64.z  // ::h<0>
                      rcp r6.z, r10.w

#line 1291
                      rcp r8.w, r12.y
                      mad r15.x, r13.y, r8.w, c64.z  // ::h<0>
                      mad r15.zw, r10.xyyz, -r6.z, -c107.w  // ::s<0,0>
                      cmp r10.yz, r13.x, r15, r15.xxww  // ::h<0>, ::s<0>
                      cmp r11.zw, r14.y, r11.xyxy, r10.xyyz  // ::h<0>, ::s<0>
                    endif
                    mul r9.y, r11.w, c155.w  // ::Lrgb_HSP<1>
                    mad r6.z, r11.z, c152.x, c152.y
                    frc r8.w, r6.z
                    add r9.x, r6.z, -r8.w  // ::Lrgb_HSP<0>
                    add r5.w, r5.w, -c142.y
                    frc r6.z, r5.w
                    add r9.z, r5.w, -r6.z  // ::Lrgb_HSP<2>

#line 2424
                    mov r1.z, -c107.w
                  else
                    if_eq r10.x, -c40.z

#line 944
                      add r10.yzw, -r8.xzxy, r8.xyzx

#line 458
                      cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                      min r5.w, r11.x, r8.x  // ::GetMinimum<0>
                      max r6.z, r8.x, r11.y  // ::GetMaximum<0>

#line 923
                      add r8.w, -r5.w, r6.z  // ::chroma<0>

#line 943
                      add r11.xyz, -r6.z, r8

#line 936
                      rcp r9.w, r8.w

#line 944
                      mul r11.w, r9.w, r10.y  // ::_h<0>
                      mad r12.xyz, r10.yzww, r9.w, c62.xzyw  // ::_h<0,0>

#line 937
                      cmp r9.w, r10.y, r11.w, r12.x  // ::_h<0>

#line 944
                      cmp r10.y, -r11_abs.z, r12.z, c103.z  // ::_h<0>
                      cmp r10.y, -r11_abs.y, r12.y, r10.y  // ::_h<0>
                      cmp r9.w, -r11_abs.x, r9.w, r10.y  // ::_h<0>
                      mul r9.w, r9.w, c85.z  // ::_h<0>
                      cmp r9.x, -r8_abs.w, c103.z, r9.w  // ::_h<0>

#line 1328
                      add r6.z, -r6.z, -c107.w  // ::black<0>
                      mul r9.y, r5.w, c155.w  // ::Lrgb_HWB<1>
                      mul r9.z, r6.z, c155.w  // ::Lrgb_HWB<2>

#line 2425
                      mov r1.z, -c107.w
                    else
                      if_eq r10.x, c154.w
                        mov r9.xyz, r8  // ::FLrgb<0,1,2>
                        mov r1.z, -c107.w
                      else
                        if_eq r10.x, -c45.x

#line 2132
                          dp3 r5.w, r8, c138  // ::y<0>
                          add r10.yz, -r5.w, r8.xzxw

#line 2176
                          mad r5.w, r5.w, c152.z, c152.w  // ::Lrgb_YCbCr<0>
                          mad r10.yz, r10, c151.xxyw, c151.z  // ::Lrgb_YCbCr<1,2>

#line 2196
                          mul r6.z, r10.y, c64.y
                          mad r6.z, r5.w, c64.x, r6.z
                          mad r9.x, r10.z, c65.w, r6.z  // ::Lrgb_JPEG<0>
                          mad r6.z, r5.w, -c151.w, c151.z
                          mad r6.z, r10.y, -c64.w, r6.z
                          mad r9.y, r10.z, -c142.y, r6.z  // ::Lrgb_JPEG<1>
                          mad r5.w, r5.w, c113.x, c113.y
                          mad r5.w, r10.y, -c138.w, r5.w
                          mad r9.z, r10.z, -c113.z, r5.w  // ::Lrgb_JPEG<2>

#line 2427
                          mov r1.z, -c107.w
                        else
                          if_eq r10.x, -c45.y
                            mov r9.xyz, c103.z  // ::FLrgb<0,1,2>
                            mov r1.z, -c107.w
                          else
                            if_eq r10.x, -c46.x

#line 508
                              abs r5.w, c13.x

#line 512
                              rcp r6.z, c13.x
                              mul r11.x, r6.z, c12.x  // ::xyY_XYZ<0>
                              mov r12.x, c13.x  // ::WhiteY<0>
                              add r8.w, -r12.x, -c12.x
                              add r8.w, r8.w, -c107.w
                              mul r11.z, r6.z, r8.w  // ::xyY_XYZ<2>
                              mov r11.y, -c107.w
                              cmp r10.yzw, -r5.w, c113.w, r11.xxyz  // ::xyY_XYZ<0,1,2>

#line 470
                              mul r11.xyz, r8.y, c18
                              mad r11.xyz, r8.x, c17, r11
                              mad r11.xyz, r8.z, c19, r11  // ::x<0>, ::y<0>, ::z<0>

#line 552
                              add r12.xy, r10.ywzw, c66

#line 555
                              cmp r6.z, -r12_abs.y, -c107_abs.w, -c107_abs.z
                              cmp r6.z, -r5.w, c103.z, r6.z
                              cmp r6.z, -r12_abs.x, r6.z, c103.z

#line 565
                              add r12.xy, r10.zwzw, r10.yzzw
                              mul r12.xy, r12, c66.zwzw  // ::Ka<0,0>
                              cmp r12.xy, r6.z, r12, c112  // ::ComputeKa<0>, ::ComputeKb<0>

#line 1465
                              cmp r5.w, -r5.w, c112.z, c112.w
                              mul r5.w, r5.w, r11.y
                              rsq r6.z, r5.w
                              rcp r8.w, r6.z
                              mul r9.x, r8.w, c155.w  // ::L<0>
                              rcp r8.w, r10.y
                              mad r8.w, r11.x, r8.w, -r5.w
                              mul r8.w, r6.z, r8.w
                              mul r9.y, r8.w, r12.x  // ::a<0>
                              rcp r8.w, r10.w
                              mad r5.w, r11.z, -r8.w, r5.w
                              mul r5.w, r6.z, r5.w
                              mul r9.z, r5.w, r12.y  // ::b<0>

#line 2429
                              mov r1.z, -c107.w
                            else
                              add r5.w, r10.x, c46.y
                              cmp r1.z, -r5_abs.w, c107_abs.w, c107_abs.z
                              cmp r9.xyz, -r5_abs.w, r8, r9  // ::FLrgb<0,1,2>
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r1.z, -r1.z

#line 2459
            else

#line 2432
              if_eq r10.x, -c46.z

#line 470
                mul r11, r8.y, c18.yzxy
                mad r11, r8.x, c17.yzxy, r11
                mad r11, r8.z, c19.yzxy, r11  // ::y<0>, ::z<0>, ::x<0>, ::y<0>

#line 1514
                mul r10.yz, r11.xzww, c110.xxyw
                add r1.z, r10.z, r10.y
                mad r1.z, r11.y, -c110.z, r1.z  // PerceptualQuantizer::x<0>

#line 484
                mul r1.z, r1.z, c110.w
                pow r5.w, r1.z, c54.z  // ::xx<0>
                mad r10.yz, r5.w, c57.xxyw, c57.xzww
                rcp r1.z, r10.z
                mul r1.z, r1.z, r10.y
                pow r5.w, r1.z, c150.x  // ::result<0>

#line 1515
                mul r10.yzw, r11.xxzw, c150
                mad r1.z, r11.z, c149.x, r10.y
                mad r1.z, r11.y, c149.y, r1.z  // PerceptualQuantizer::x<0>

#line 484
                mul r1.z, r1.z, c110.w
                pow r6.z, r1.z, c54.z  // ::xx<0>
                mad r11.xz, r6.z, c57.xyyw, c57.zyww
                rcp r1.z, r11.z
                mul r1.z, r1.z, r11.x
                pow r6.z, r1.z, c150.x  // ::result<0>

#line 1515
                add r1.z, r10.w, r10.z
                mad r1.z, r11.y, c149.z, r1.z  // PerceptualQuantizer::x<0>

#line 484
                mul r1.z, r1.z, c110.w
                pow r8.w, r1.z, c54.z  // ::xx<0>
                mad r10.yz, r8.w, c57.xxyw, c57.xzww
                rcp r1.z, r10.z
                mul r1.z, r1.z, r10.y
                pow r8.w, r1.z, c150.x  // ::result<0>

#line 1517
                add r1.z, r5.w, r6.z

#line 1520
                mul r10.yz, r6.z, c148.xxyw
                mad r6.z, r5.w, c149.w, -r10.y
                mad r9.y, r8.w, c148.z, r6.z  // ::az<0>
                mad r5.w, r5.w, c148.w, r10.z
                mad r9.z, r8.w, -c147.x, r5.w  // ::bz<0>
                mul r5.w, r1.z, c147.y
                mad r1.z, r1.z, -c147.z, c147.w
                rcp r1.z, r1.z
                mad r9.x, r5.w, r1.z, c67.x  // ::Jz<0>

#line 2432
                mov r1.z, -c107.w
              else
                if_eq r10.x, -c46.w

#line 470
                  mov r11.xyz, c29  // ::LMSk_LABk_x<0,1,2>
                  add r10.yzw, r11.xxyz, c30.xxyz
                  add r9.xyz, r10.yzww, c31  // ::x<0>, ::y<0>, ::z<0>

#line 2433
                  mov r1.z, -c107.w
                else
                  if_eq r10.x, -c47.x
                    mov r9.xyz, c103.z  // ::FLrgb<0,1,2>
                    mov r1.z, -c107.w
                  else
                    if_eq r10.x, -c47.y
                      mov r9.xyz, c103.z  // ::FLrgb<0,1,2>
                      mov r1.z, -c107.w
                    else
                      if_eq r10.x, -c47.z
                        mov r9.xyz, c103.z  // ::FLrgb<0,1,2>
                        mov r1.z, -c107.w
                      else
                        if_eq r10.x, -c47.w
                          mov r9.xyz, c103.z  // ::FLrgb<0,1,2>
                          mov r1.z, -c107.w
                        else
                          if_eq r10.x, -c48.x
                            mov r9.xyz, c103.z  // ::FLrgb<0,1,2>
                            mov r1.z, -c107.w
                          else
                            if_eq r10.x, -c48.y

#line 470
                              mul r10.yzw, r8.y, c18.xxyz
                              mad r10.yzw, r8.x, c17.xxyz, r10
                              mad r10.yzw, r8.z, c19.xxyz, r10  // ::x<0>, ::y<0>, ::z<0>
                              mul r11.xyz, r10.z, c21
                              mad r11.xyz, r10.y, c20, r11
                              mad r9.xyz, r10.w, c22, r11  // ::x<0>, ::y<0>, ::z<0>

#line 2439
                              mov r1.z, -c107.w
                            else
                              if_eq r10.x, -c48.z

#line 508
                                abs r5.w, c13.x

#line 512
                                rcp r6.z, c13.x
                                mul r11.x, r6.z, c12.x  // ::xyY_XYZ<0>
                                mov r12.x, c13.x  // ::WhiteY<0>
                                add r8.w, -r12.x, -c12.x
                                add r8.w, r8.w, -c107.w
                                mul r11.z, r6.z, r8.w  // ::xyY_XYZ<2>
                                mov r11.y, -c107.w
                                cmp r10.yzw, -r5.w, c113.w, r11.xxyz  // ::xyY_XYZ<0,1,2>

#line 571
                                cmp r11.xy, -r5.w, c127, c127.zwzw

#line 1632
                                mul r5.w, r8.y, r11.x  // ::yr<0>

#line 571
                                mul r6.z, r8.x, -c61.z
                                mad r8.w, r8.y, -c40.z, r8.x
                                mad r8.w, r8.z, -c61.x, r8.w
                                rcp r8.w, r8.w

#line 576
                                mul r9.w, r8.y, r8.w

#line 571
                                add r11.y, r10.y, r11.y
                                mul r10.y, r10.y, -c61.z
                                mad r10.w, r10.w, -c61.x, r11.y
                                rcp r10.w, r10.w
                                mul r10.yz, r10.xwzw, r10.xyww  // ::ComputeKu<0>

#line 576
                                mul r10.z, r10.z, -c86.x  // ::ComputeKv<0>

#line 1639
                                mad r10.w, r8.y, -r11.x, c67.y
                                mul r5.w, r5.w, c67.z
                                cmp r5.w, r10.w, r5.w, c155.w  // ::L<0>

#line 1642
                                max r9.x, r5.w, c103.z  // ::L<0>

#line 1645
                                mul r5.w, r9.x, -c40.x
                                mad r6.z, r6.z, r8.w, -r10.y
                                mul r9.y, r5.w, r6.z  // ::u<0>

#line 1648
                                mad r6.z, r9.w, -c86.x, -r10.z
                                mul r9.z, r5.w, r6.z  // ::v<0>

#line 2440
                                mov r1.z, -c107.w
                              else
                                add r5.w, r10.x, c48.w
                                cmp r1.z, -r5_abs.w, c107_abs.w, c107_abs.z

#line 519
                                add r6.z, r8.y, r8.x
                                add r6.z, r8.z, r6.z  // ::sum<0>

#line 524
                                rcp r8.w, r6.z
                                mul r10.yz, r8.w, r8.xxyw  // ::XYZ_xyY<0,1>
                                cmp r11.xy, -r6_abs.z, c103.z, r10.yzzw  // ::XYZ_xyY<0,1>

#line 2441
                                mov r11.z, r8.y
                                cmp r9.xyz, -r5_abs.w, r11, r9  // ::FLrgb<0,1,2>
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r1.z, -r1.z

#line 2459
              else

#line 2443
                if_eq r10.x, -c35.x

#line 1363
                  add r1.z, r8.y, r8.x
                  add r1.z, r8.z, r1.z  // ::sum<0>
                  rcp r5.w, r1.z
                  mul r10.yz, r5.w, r8.xxyw
                  cmp r10.yz, -r1_abs.z, c103.z, r10  // ::x<0>, ::y<0>

#line 1368
                  rcp r1.z, r10.z
                  mul r1.z, r1.z, r10.y
                  mov_sat r5.w, r1_abs.z
                  add r6.z, r1_abs.z, c107.w
                  rcp r8.w, r1_abs.z
                  cmp r6.z, r6.z, r8.w, -c107.w
                  mul r5.w, r5.w, r6.z
                  mul r6.z, r5.w, r5.w
                  mad r8.w, r6.z, c50.x, c50.y
                  mad r8.w, r6.z, r8.w, c69.w
                  mad r8.w, r6.z, r8.w, c68.w
                  mad r6.z, r6.z, r8.w, c50.z
                  mul r5.w, r5.w, r6.z
                  add r6.z, -r1_abs.z, -c107.w
                  cmp r6.z, r6.z, c107_abs.z, c107_abs.w
                  mad r8.w, r5.w, c51.x, c51.y
                  mad r5.w, r8.w, r6.z, r5.w
                  min r6.z, r1.z, -c107.w
                  cmp r1.z, r6.z, c107_abs.z, c107_abs.w
                  add r6.z, r5.w, r5.w
                  mad r1.z, r1.z, -r6.z, r5.w
                  mad r11.xy, r1.z, c77.x, c77.yzzw
                  cmp r1.z, r10.z, c103.z, r11.y
                  cmp r9.x, -r10.z, r1.z, r11.x  // ::tsl<0>
                  mul r10.yz, r10, r10
                  add r1.z, r10.z, r10.y
                  rsq r1.z, r1.z
                  rcp r9.y, r1.z  // ::tsl<1>
                  dp3 r9.z, r8, c146  // ::tsl<2>

#line 2443
                  mov r1.z, -c107.w
                else
                  if_eq r10.x, -c35.y

#line 470
                    mul r10.yzw, r8.y, c18.xxyz
                    mad r10.yzw, r8.x, c17.xxyz, r10
                    mad r10.yzw, r8.z, c19.xxyz, r10  // ::x<0>, ::y<0>, ::z<0>

#line 1899
                    mad r5.w, r10.z, -c61.x, -r10.y
                    add r5.w, r10.w, r5.w
                    mul r9.z, r5.w, -c142.y  // ::Lrgb_UCS<2>

#line 2444
                    mul r9.xy, r10.yzzw, c141.zwzw
                    mov r1.z, -c107.w
                  else
                    if_eq r10.x, -c35.z

#line 508
                      abs r5.w, c13.x

#line 512
                      rcp r6.z, c13.x
                      mul r11.x, r6.z, c12.x  // ::xyY_XYZ<0>
                      mov r12.x, c13.x  // ::WhiteY<0>
                      add r8.w, -r12.x, -c12.x
                      add r8.w, r8.w, -c107.w
                      mul r11.z, r6.z, r8.w  // ::xyY_XYZ<2>
                      mov r11.y, -c107.w
                      cmp r10.yzw, -r5.w, c113.w, r11.xxyz  // ::xyY_XYZ<0,1,2>

#line 470
                      mul r11, r8.y, c18.xyzx
                      mad r11, r8.x, c17.xyzx, r11
                      mad r11, r8.z, c19.xyzx, r11  // ::x<0>, ::y<0>, ::z<0>, ::x<0>

#line 1937
                      cmp r5.w, -r5.w, c127.y, c127.w
                      add r5.w, r5.w, r10.y
                      mul r6.z, r10.y, -c61.z
                      mad r5.w, r10.w, -c61.x, r5.w
                      rcp r5.w, r5.w
                      mul r8.w, r10.z, r5.w

#line 1941
                      mul r10.yzw, r11.xxyw, c144.xxyz  // ::x<0>
                      add r9.w, r10.z, r10.y
                      mad r9.w, r11.z, c67.w, r9.w  // ::uv<0>
                      rcp r10.y, r9.w
                      mul r10.z, r10.y, r10.w
                      cmp r10.z, -r9_abs.w, c103.z, r10.z  // ::_u<0>
                      mul r10.y, r11.y, r10.y
                      mul r10.y, r10.y, c77.w
                      cmp r9.w, -r9_abs.w, c103.z, r10.y  // ::_v<0>

#line 1945
                      mad r5.w, r6.z, -r5.w, r10.z
                      mul r9.x, r5.w, c146.w  // ::u<0>
                      mad r5.w, r8.w, c107.y, r9.w
                      mul r9.y, r5.w, c146.w  // ::v<0>

#line 2445
                      mov r9.z, -c37.z
                      mov r1.z, -c107.w
                    else
                      if_eq r10.x, -c35.w

#line 2132
                        dp3 r5.w, r8, c138  // ::y<0>
                        add r10.yz, -r5.w, r8.xzxw

#line 2156
                        mad r9.x, r5.w, c152.z, c152.w  // ::Lrgb_xvYCC<0>
                        mad r9.yz, r10, c151.xxyw, c151.z  // ::Lrgb_xvYCC<1,2>

#line 2446
                        mov r1.z, -c107.w
                      else
                        if_eq r10.x, -c36.x

#line 470
                          mul r10.yzw, r8.y, c18.xxyz
                          mad r10.yzw, r8.x, c17.xxyz, r10
                          mad r9.xyz, r8.z, c19.xzyw, r10.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 519
                          add r5.w, r9.z, r9.x
                          add r5.w, r9.y, r5.w  // ::sum<0>

#line 524
                          rcp r6.z, r5.w
                          mul r10.yz, r6.z, r9.xxzw  // ::XYZ_xyY<0,1>
                          cmp r9.xy, -r5_abs.w, c103.z, r10.yzzw  // ::XYZ_xyY<0,1>

#line 2447
                          mov r1.z, -c107.w
                        else
                          if_eq r10.x, -c36.y

#line 470
                            mul r10.yzw, r8.y, c18.xxyz
                            mad r10.yzw, r8.x, c17.xxyz, r10
                            mad r9.xyz, r8.z, c19.xzyw, r10.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 519
                            add r5.w, r9.z, r9.x
                            add r5.w, r9.y, r5.w  // ::sum<0>

#line 524
                            rcp r6.z, r5.w
                            mul r10.yz, r6.z, r9.xxzw  // ::XYZ_xyY<0,1>
                            cmp r9.xy, -r5_abs.w, c103.z, r10.yzzw  // ::XYZ_xyY<0,1>

#line 2448
                            mov r1.z, -c107.w
                          else
                            if_eq r10.x, -c36.z

#line 470
                              mul r10.yzw, r8.y, c18.xxyz
                              mad r10.yzw, r8.x, c17.xxyz, r10
                              mad r9.xyz, r8.z, c19, r10.yzww  // ::x<0>, ::y<0>, ::z<0>

#line 2449
                              mov r1.z, -c107.w
                            else

#line 2452
                              add r10.yzw, r10.x, c140.xxyz

#line 2045
                              mul r11, r8.y, c143

#line 2026
                              mad r12.xyz, r8.x, c145, r11.xyyw

#line 2044
                              mul r5.w, r8.z, -c142.y

#line 2026
                              mad r13.xy, r8.z, c145.wyzw, r12  // ::y<0>, ::Lrgb_YCoCg<0>

#line 2134
                              add r11.xy, r8.zxzw, -r13.x

#line 2176
                              mad r14.x, r13.x, c152.z, c152.w  // ::Lrgb_YCbCr<0>
                              mad r14.yz, r11.xxyw, c151.xxyw, c151.z  // ::Lrgb_YCbCr<1,2>

#line 2026
                              mad r13.z, r8.z, -c77.y, r12.z  // ::Lrgb_YCoCg<1>
                              mad r13.w, r8.x, -c142.y, -r5.w  // ::Lrgb_YCoCg<2>

#line 2452
                              cmp r5.w, -r10_abs.w, c107_abs.w, c107_abs.z

#line 2046
                              mul r11.xy, r8, c141
                              mad r6.z, r8.x, c64.x, r11.z
                              mad r12.x, r8.z, c65.w, r6.z  // ::Lrgb_YDbDr<0>
                              mad r6.z, r8.x, c144.w, -r11.w
                              mad r12.y, r8.z, -c142.z, r6.z  // ::Lrgb_YDbDr<1>
                              add r6.z, r11.y, r11.x
                              mad r12.z, r8.z, c140.w, r6.z  // ::Lrgb_YDbDr<2>

#line 2452
                              cmp r11.xyz, -r10_abs.w, r12, r9  // ::FLrgb<0,1,2>
                              cmp r11.xyz, -r10_abs.z, r13.yzww, r11  // ::FLrgb<0,1,2>
                              cmp r5.w, -r10_abs.z, -c107.w, r5.w
                              cmp r9.xyz, -r10_abs.y, r14, r11  // ::FLrgb<0,1,2>
                              cmp r1.z, -r10_abs.y, -c107.w, r5.w
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
                if_ne r1.z, -r1.z

#line 2459
                else

#line 2454
                  if_eq r10.x, -c71.x

#line 2080
                    mul r10.yzw, r8.y, c123.xxyz
                    mad r10.yzw, r8.x, c123_abs.xwyz, r10  // ::Lrgb_YES<1>
                    mad r10.yw, r8.z, c70.xxzy, r10  // ::Lrgb_YES<0,2>

#line 2454
                    mov r1.z, -c107.w
                  else

#line 2457
                    add r11.xyz, r10.x, c71.yzww

#line 2132
                    mul r12, r8.y, c73
                    mad r12, r8.x, c72, r12

#line 2103
                    add r13.xy, -r8.yzzw, r8
                    cmp r13.xy, -r13_abs, c107_abs.z, c107_abs.w
                    add r5.w, r13.y, r13.x

#line 2132
                    mad r12, r8.z, c74, r12  // ::y<0>, ::i<0>, ::q<0>, ::y<0>

#line 2107
                    cmp r13.yz, -r5.w, c103.z, r12  // ::i<0>, ::q<0>

#line 2134
                    add r14.xy, r8.zxzw, -r12.w
                    mul r14.yz, r14.xxyw, c70.xzww  // ::pb<0>, ::pr<0>

#line 2457
                    cmp r5.w, -r11_abs.z, c107_abs.w, c107_abs.z

#line 2238
                    mul r15.xy, r8.y, c75
                    mad r15.xy, r8.x, c75.zwzw, r15
                    mad r12.yz, r8.z, c76.xxyw, r15.xxyw  // ::u<0>, ::v<0>

#line 2457
                    cmp r15.xyz, -r11_abs.z, r12, r9  // ::FLrgb<0,1,2>
                    mov r14.x, r12.w
                    cmp r12.yzw, -r11_abs.y, r14.xxyz, r15.xxyz  // ::FLrgb<0,1,2>
                    cmp r5.w, -r11_abs.y, -c107.w, r5.w
                    mov r13.x, r12.x
                    cmp r10.yzw, -r11_abs.x, r13.xxyz, r12  // ::FLrgb<0,1,2>
                    cmp r1.z, -r11_abs.x, -c107.w, r5.w
                  endif
                  cmp r9.xyz, -r1.z, r8, r10.yzww  // ::FLrgb<0,1,2>
                endif
              endif
            endif
          endif

#line 458
          max r1.z, r7.y, r7.z
          max r5.w, r7.x, r1.z  // ::GetMaximum<0>

#line 2685
          add r1.z, -r5.w, c44.x
          mov r8.x, c6.x  // ::X<0>
          mul r6.z, r8.x, c43.x
          mul r10.x, r6.z, c76.z  // ::tx<0>
          mov r11.x, c7.x  // ::Y<0>
          mul r6.z, r11.x, c43.x
          mul r10.y, r6.z, c76.z  // ::ty<0>
          mov r12.x, c8.x  // ::Z<0>
          mul r6.z, r12.x, c43.x
          mul r10.z, r6.z, c76.z  // ::tz<0>

#line 2692
          add r5.w, -r5.w, c42.x
          mul r6.z, r8.x, c41.x
          mul r13.x, r6.z, c76.z  // ::tx<0>
          mul r6.z, r11.x, c41.x
          mul r13.y, r6.z, c76.z  // ::ty<0>
          mul r6.z, r12.x, c41.x
          mul r13.z, r6.z, c76.z  // ::tz<0>

#line 2701
          mul r6.z, r8.x, c39.x
          mul r8.x, r6.z, c76.z  // ::tx<0>
          mul r6.z, r11.x, c39.x
          mul r8.y, r6.z, c76.z  // ::ty<0>
          mul r6.z, r12.x, c39.x
          mul r8.z, r6.z, c76.z  // ::tz<0>
          cmp r8.xyz, r5.w, r13, r8  // ::tx<0>, ::ty<0>, ::tz<0>
          cmp r8.xyz, r1.z, r10, r8  // ::tx<0>, ::ty<0>, ::tz<0>

#line 351
          add r1.z, r4.x, r5.x
          add r5.w, r5.x, r9.x
          add r1.z, r1.z, -r5.w
          mad r10.z, r1.z, r8.x, r9.x  // ::FLerp<0>
          add r1.z, r4.y, r5.y
          add r5.w, r5.y, r9.y
          add r1.z, r1.z, -r5.w
          mad r11.x, r1.z, r8.y, r9.y  // ::FLerp<1>
          add r1.z, r4.z, r5.z
          add r5.w, r5.z, r9.z
          add r1.z, r1.z, -r5.w
          mul r5.w, r8.z, r1.z
          mad r11.y, r1.z, r8.z, r9.z  // ::FLerp<2>

#line 2466
          if_eq c0.x, r0.z

#line 1776
            mul r8, r11.xxyy, c124.xyxy
            add r12.z, r8.z, r8.y  // ::RCA_Lrgb<1>
            mad r12.xy, r10.z, c124.yxzw, r8.xwzw  // ::RCA_Lrgb<0,2>

#line 2466
            mov r1.z, -c107.w
          else
            if_eq c0.x, r0.w

#line 1826
              mul r8, r11.yyxx, c124.xyyx
              mad r12.xz, r10.z, c124.yyxw, r8  // ::RGV_Lrgb<0,1>
              add r12.y, r8.w, r8.y  // ::RGV_Lrgb<2>

#line 2467
              mov r1.z, -c107.w
            else
              mov r8.x, c0.x  // ::Model<0>
              if_eq r8.x, -c61.x

#line 1848
                min r6.z, r11.y, r11.x
                min r8.y, r6.z, r10.z  // ::white<0>
                add r6.z, -r8.y, r10.z  // ::r<0>
                add r8.zw, -r8.y, r11.xyxy  // ::y<0>, ::b<0>
                add r9.x, -r8.w, r8.z
                cmp r13.xw, r9.x, r8.zyzw, r8.wyzz  // ::g<0>
                max r9.x, r6.z, r13.x  // ::mY<0>

#line 1858
                add r8.z, r8.z, -r13.w  // ::y<0>
                add r13.z, r8.w, -r13.w  // ::b<0>

#line 1865
                cmp r8.w, -r13.w, -c107_abs.z, -c107_abs.w
                cmp r8.w, -r13.z, c103.z, r8.w
                mul r9.yw, r13.xzzw, c162.w
                cmp r13.yz, r8.w, r13.xzww, r9.xyww  // ::b<0>, ::g<0>
                add r13.x, r6.z, r8.z  // ::r<0>
                add r13.w, r8.z, r13.z  // ::g<0>
                max r6.z, r13.w, r13.y
                max r8.z, r13.x, r6.z  // ::mG<0>

#line 1874
                rcp r6.z, r8.z
                mul r6.z, r6.z, r9.x  // ::mN<0>

#line 1878
                mul r9.xyw, r6.z, r13.xwzy  // ::r<0>, ::g<0>, ::b<0>
                cmp r9.xyw, -r8.z, r13.xwzy, r9  // ::r<0>, ::g<0>, ::b<0>

#line 1883
                add r8.yzw, r8.y, r9.xxyw  // ::r<0>, ::g<0>, ::b<0>
                frc r9.xyw, r8.yzzw
                add r8.yzw, r8, -r9.xxyw
                mul r12.xyz, r8.ywzw, c76.w  // ::RYB_Lrgb<0,2,1>

#line 2468
                mov r1.z, -c107.w
              else
                if_eq r8.x, -c61.z

#line 655
                  add r12.x, -r10.z, -c107.w  // ::CMY_Lrgb<0>
                  add r12.yz, -r11.xyxw, -c107.w  // ::CMY_Lrgb<2,1>

#line 2469
                  mov r1.z, -c107.w
                else
                  if_eq r8.x, -c139.x

#line 705
                    mul r13, r11.xyyy, c76.z  // ::c<0>, ::g<0,0,0>

#line 713
                    if_eq r13.x, c103.z

#line 762
                      mov r12.xyz, r13.ywzw  // ::HCV_Lrgb<0,2,1>
                    else

#line 705
                      mul r6.z, r10.z, c124.z  // ::h<0>

#line 713
                      cmp r8.y, r10.z, c119.x, c119.y
                      mul r6.z, r6.z, r8.y
                      frc r6.z, r6.z
                      mul r6.z, r6.z, r8.y
                      mul r8.y, r6.z, -c107.y  // ::hi<0>
                      cmp r6.z, r6.z, c119.x, c119.y
                      mul r8.z, r6.z, r8.y

#line 718
                      frc r8.zw, r8.xyzy

#line 714
                      mul r14.x, r6.z, r8.z  // ::v<0>

#line 718
                      add r8.y, -r8.w, r8.y  // ::fhi<0>

#line 744
                      add r15, r8.y, c165

#line 755
                      mov r14.yz, c107_abs.xzww
                      mad r14.w, r6.z, -r8.z, -c107.w
                      cmp r9.xyw, -r15_abs.w, r14.xyzz, r14.zyzw  // ::pure<0,1,2>
                      mad r16.xyz, r14.xzyw, c119.yxxw, c119.xzzw
                      cmp r9.xyw, -r15_abs.z, r16.zxzy, r9  // ::pure<0,1,2>
                      cmp r9.xyw, -r15_abs.y, r14.yzzx, r9  // ::pure<0,1,2>
                      cmp r9.xyw, -r15_abs.x, r16.xyzz, r9  // ::pure<0,1,2>
                      cmp r8.yzw, -r8_abs.y, r14.xzxy, r9.xxyw  // ::pure<0,1,2>

#line 761
                      lrp r12.xyz, r13.x, r8.ywzw, r13.w  // ::result<0,2,1>
                    endif

#line 2470
                    mov r1.z, -c107.w
                  else
                    if_eq c0.x, -r6.y

#line 797
                      cmp r6.yz, r10.z, c78.xxyw, c78.xzww
                      mul r6.z, r6.z, r10.z
                      frc r6.z, r6.z
                      mad r6.y, r6.y, r6.z, c156.x
                      mul r6.z, r6.z, c156.x
                      cmp r6.y, r10.z, r6.z, r6.y
                      mul r8.yz, r11.xxyw, c76.xzww  // ::s<0>, ::i<0>

#line 804
                      if_lt r6.y, c124.w
                        mad r6.z, r11.x, -c166.x, c166.y
                        mul r12.y, r6.z, r8.z  // ::b<0>
                        mad r6.z, r6.y, c166.z, c166.w
                        frc r6.z, r6.z
                        mad r6.z, r6.z, c80.x, c80.y
                        sincos r13.x, r6.z
                        mul r6.z, r8.y, r13.x
                        mad r8.w, r6.y, -c80.z, c80.w
                        mad r8.w, r8.w, c79.x, c79.y
                        frc r8.w, r8.w
                        mad r8.w, r8.w, c80.x, c80.y
                        sincos r14.x, r8.w
                        rcp r8.w, r14.x
                        mad r6.z, r6.z, r8.w, -c107.w
                        mul r12.x, r6.z, r8.z  // ::r<0>
                        mad r6.z, r13.x, -r8.w, -c107.w
                        mad r6.z, r8.y, r6.z, -c107.w
                        mul r12.z, r6.z, r8.z  // ::g<0>
                      else
                        if_lt r6.y, c159.y
                          mad r6.z, r6.y, c79.z, c79.w  // ::h<0>
                          mad r8.w, r11.x, -c166.x, c166.y
                          mul r12.x, r8.w, r8.z  // ::r<0>
                          mad r8.w, r6.z, c79.x, c79.y
                          frc r8.w, r8.w
                          mad r8.w, r8.w, c80.x, c80.y
                          sincos r13.x, r8.w
                          mul r8.w, r8.y, r13.x
                          add r6.z, -r6.z, c80.w
                          mad r6.z, r6.z, c79.x, c79.y
                          frc r6.z, r6.z
                          mad r6.z, r6.z, c80.x, c80.y
                          sincos r14.x, r6.z
                          rcp r6.z, r14.x
                          mad r8.w, r8.w, r6.z, -c107.w
                          mul r12.z, r8.w, r8.z  // ::g<0>

#line 815
                          mad r6.z, r13.x, -r6.z, -c107.w
                          mad r6.z, r8.y, r6.z, -c107.w
                          mul r12.y, r6.z, r8.z  // ::b<0>
                        else

#line 819
                          mad r6.y, r6.y, c106.x, c106.y  // ::h<0>
                          mad r6.z, r11.x, -c166.x, c166.y
                          mul r12.z, r6.z, r8.z  // ::g<0>
                          mad r6.z, r6.y, c79.x, c79.y
                          frc r6.z, r6.z
                          mad r6.z, r6.z, c80.x, c80.y
                          sincos r13.x, r6.z
                          mul r6.z, r8.y, r13.x
                          add r6.y, -r6.y, c80.w
                          mad r6.y, r6.y, c79.x, c79.y
                          frc r6.y, r6.y
                          mad r6.y, r6.y, c80.x, c80.y
                          sincos r14.x, r6.y
                          rcp r6.y, r14.x
                          mad r6.z, r6.z, r6.y, -c107.w
                          mad r6.y, r13.x, -r6.y, -c107.w
                          mad r6.y, r8.y, r6.y, -c107.w
                          mul r12.xy, r6.yzzw, r8.z  // ::r<0>, ::b<0>
                        endif
                      endif

#line 2471
                      mov r1.z, -c107.w
                    else
                      if_eq r8.x, -c37.x

#line 1674
                        if_lt c155.w, r11.y

#line 1682
                          mad r12.xyz, r10.z, c83.yzyw, c83.wyyw
                        else

#line 1674
                          add r6.y, r11.y, c106.z

#line 1677
                          if_lt r11.y, c106.w
                            cmp r10.xy, r6.y, c155.wxzw, c155.x  // ::HPLuv_Lrgb<0,1>

#line 1682
                            mov r12.xyz, r10.xzyw  // ::HPLuv_Lrgb<0,2,1>
                          else

#line 386
                            add r6.y, r11.y, c154.w
                            mul r6.z, r6.y, r6.y
                            mul r8.y, r6.z, r6.y
                            mul r8.y, r8.y, c81.x  // ::s1<0>
                            mad r6.z, r6.y, -r6.z, c81.y

#line 1607
                            mul r13, r11.y, c84

#line 387
                            cmp r6.z, r6.z, r13.x, r8.y  // ::s2<0>

#line 372
                            mul r8.y, r11.y, r6.z
                            mul r8.z, r8.y, c81.z  // ::y<0>
                            mul r9.xy, r6.z, c82  // ::x<0>, ::z<0>
                            rcp r8.w, r9.y
                            mul r9.y, r8.w, r9.x  // ::GetBounds2<0>
                            mul r8.z, r8.w, r8.z  // ::GetBounds2<1>

#line 403
                            rcp r9.w, r9.y

#line 366
                            mad r8.w, r9.x, -r8.w, -r9.w
                            rcp r8.w, r8.w
                            mul r8.w, r8.w, r8.z  // ::GetIntersection<0>

#line 404
                            mad r8.z, r8.w, r9.y, r8.z  // GetDistance::input<1>

#line 361
                            mul r8.z, r8.z, r8.z
                            mad r8.z, r8.w, r8.w, r8.z
                            rsq r8.z, r8.z
                            rcp r8.z, r8.z  // ::GetDistance<0>

#line 406
                            min r9.y, r8.z, c81.w  // ::GetChroma1a<0>

#line 372
                            mad r8.y, r8.y, c81.z, -r13.y  // ::y<0>
                            mad r6.z, r6.z, c82.y, c82.z  // ::z<0>
                            rcp r6.z, r6.z
                            mul r8.z, r6.z, r9.x  // ::GetBounds2<0>
                            mul r8.y, r6.z, r8.y  // ::GetBounds2<1>

#line 403
                            rcp r8.w, r8.z

#line 366
                            mad r6.z, r9.x, -r6.z, -r8.w
                            rcp r6.z, r6.z
                            mul r6.z, r6.z, r8.y  // ::GetIntersection<0>

#line 404
                            mad r8.y, r6.z, r8.z, r8.y  // GetDistance::input<1>

#line 361
                            mul r8.y, r8.y, r8.y
                            mad r6.z, r6.z, r6.z, r8.y
                            rsq r6.z, r6.z
                            rcp r6.z, r6.z  // ::GetDistance<0>

#line 406
                            min r8.y, r6.z, r9.y  // ::GetChroma1a<0>

#line 1678
                            mul r6.z, r11.x, r8.y
                            mul r6.z, r6.z, c76.z  // ::C<0>

#line 589
                            mad r8.y, r10.z, c166.z, c166.w
                            frc r8.y, r8.y
                            mad r8.y, r8.y, c80.x, c80.y
                            sincos r14.xy, r8.y
                            mul r8.yz, r6.z, r14.xxyw  // ::a<0>, ::b<0>

#line 508
                            abs r6.z, c13.x

#line 512
                            rcp r8.w, c13.x
                            mul r14.x, r8.w, c12.x  // ::xyY_XYZ<0>
                            mov r9.x, c13.x  // ::WhiteY<0>
                            add r9.x, -r9.x, -c12.x
                            add r9.x, r9.x, -c107.w
                            mul r14.z, r8.w, r9.x  // ::xyY_XYZ<2>
                            mov r14.y, -c107.w
                            cmp r9.xyw, -r6.z, c113.w, r14.xyzz  // ::xyY_XYZ<0,1,2>

#line 571
                            cmp r6.z, -r6.z, c127.y, c127.w
                            add r6.z, r6.z, r9.x
                            mul r8.w, r9.x, -c61.z
                            mad r6.z, r9.w, -c61.x, r6.z
                            rcp r6.z, r6.z
                            mul r8.w, r6.z, r8.w  // ::ComputeKu<0>

#line 576
                            mul r6.z, r9.y, r6.z
                            mul r6.z, r6.z, -c86.x  // ::ComputeKv<0>

#line 1605
                            add r9.x, -r11.y, c82.w
                            mul r6.y, r6.y, c83.x
                            mul r9.y, r6.y, r6.y
                            mul r6.y, r6.y, r9.y
                            cmp r6.y, r9.x, r13.x, r6.y  // ::Y<0>
                            mad r8.y, r13.w, r8.w, r8.y
                            rcp r8.y, r8.y
                            mad r8.y, r13.z, r8.y, c107.w
                            mul r8.y, r8.y, c85.x  // ::a<0>
                            mul r8.w, r6.y, c139.x  // ::b<0>
                            mul r9.x, r11.y, -c94.x
                            mad r6.z, r13.w, r6.z, r8.z
                            rcp r6.z, r6.z
                            mad r6.z, r9.x, r6.z, c139.x
                            mad r6.z, r6.y, r6.z, -r8.w
                            rcp r8.z, r8.y
                            mul r6.z, r6.z, r8.z  // ::X<0>
                            mad r8.y, r6.z, r8.y, r8.w  // ::Z<0>

#line 1616
                            max r8.z, r6.z, c103.z  // ::X<0>

#line 1619
                            max r8.w, r6.y, c103.z  // ::Y<0>

#line 1622
                            max r6.y, r8.y, c103.z  // ::Z<0>

#line 470
                            mul r9.xyw, r8.w, c24.xyzz
                            mad r8.yzw, r8.z, c23.xxyz, r9.xxyw
                            mad r12.xyz, r6.y, c25.xzyw, r8.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 1682
                          endif
                        endif

#line 2472
                        mov r1.z, -c107.w
                      else
                        if_eq r8.x, -c37.z

#line 850
                          mul r6.y, r11.x, c76.z  // ::_s<0>
                          mul r13.y, r11.y, c76.z  // ::_b<0>

#line 862
                          mul r6.z, r10.z, c117.x  // ::SectorPosition<0>
                          frc r8.y, r6.z
                          add r6.z, r6.z, -r8.y  // ::SectorNumber<0>

#line 866
                          mad r8.y, r10.z, c117.x, -r6.z  // ::FractionalSector<0>

#line 869
                          mad r8.z, r11.x, -c166.x, c166.y
                          mul r13.z, r8.z, r13.y  // ::p<0>
                          mad r8.z, r6.y, -r8.y, -c107.w
                          add r8.y, -r8.y, -c107.w
                          mad r8.y, r6.y, -r8.y, -c107.w
                          mul r13.xw, r8.yyzz, r13.y  // ::t<0>, ::q<0>

#line 898
                          add r14, r6.z, c165

#line 904
                          add r8.y, r6.z, c139.x

#line 909
                          cmp r8.yzw, -r8_abs.y, r13, c103.z  // ::r<0>, ::g<0>, ::b<0>
                          cmp r8.yzw, -r14_abs.w, r13.xxzy, r8  // ::r<0>, ::g<0>, ::b<0>
                          cmp r8.yzw, -r14_abs.z, r13.xzwy, r8  // ::r<0>, ::g<0>, ::b<0>
                          cmp r8.yzw, -r14_abs.y, r13.xzyx, r8  // ::r<0>, ::g<0>, ::b<0>
                          cmp r8.yzw, -r14_abs.x, r13.xwyz, r8  // ::r<0>, ::g<0>, ::b<0>
                          cmp r8.yzw, -r6_abs.z, r13.xyxz, r8  // ::r<0>, ::g<0>, ::b<0>
                          cmp r12.xyz, -r6_abs.y, r13.y, r8.ywzw  // ::r<0>, ::b<0>, ::g<0>

#line 2473
                          mov r1.z, -c107.w
                        else
                          if_eq r8.x, -c86.x

#line 850
                            mul r6.y, r11.x, c76.z  // ::_s<0>
                            mul r8.y, r11.y, c76.z  // ::_b<0>

#line 862
                            mul r6.z, r10.z, c117.x  // ::SectorPosition<0>
                            frc r9.x, r6.z
                            add r6.z, r6.z, -r9.x  // ::SectorNumber<0>

#line 866
                            mad r9.x, r10.z, c117.x, -r6.z  // ::FractionalSector<0>

#line 869
                            mad r9.y, r11.x, -c166.x, c166.y
                            mul r8.z, r8.y, r9.y  // ::p<0>
                            mad r9.y, r6.y, -r9.x, -c107.w
                            add r9.x, -r9.x, -c107.w
                            mad r9.x, r6.y, -r9.x, -c107.w
                            mul r8.xw, r8.y, r9.xyzy  // ::t<0>, ::q<0>

#line 898
                            add r13, r6.z, c165

#line 904
                            add r9.x, r6.z, c139.x

#line 909
                            cmp r9.xyw, -r9_abs.x, r8.yzzw, c103.z  // ::r<0>, ::g<0>, ::b<0>
                            cmp r9.xyw, -r13_abs.w, r8.xzzy, r9  // ::r<0>, ::g<0>, ::b<0>
                            cmp r9.xyw, -r13_abs.z, r8.zwzy, r9  // ::r<0>, ::g<0>, ::b<0>
                            cmp r9.xyw, -r13_abs.y, r8.zyzx, r9  // ::r<0>, ::g<0>, ::b<0>
                            cmp r9.xyw, -r13_abs.x, r8.wyzz, r9  // ::r<0>, ::g<0>, ::b<0>
                            cmp r8.xzw, -r6_abs.z, r8.yyxz, r9.xyyw  // ::r<0>, ::g<0>, ::b<0>
                            cmp r12.xyz, -r6_abs.y, r8.y, r8.xwzw  // ::r<0>, ::b<0>, ::g<0>

#line 2474
                            mov r1.z, -c107.w
                          else
                            add r6.y, r6.x, c0.x
                            cmp r1.z, -r6_abs.y, c107_abs.w, c107_abs.z
                            if_eq c0.x, -r6.x

#line 955
                              mul r12.xyz, r11.y, c76.z  // ::l<0,0,0>

#line 960
                              if_lt -r11.x, c103.z

#line 956
                                mul r6.x, r10.z, c117.x  // ::h<0>

#line 962
                                mul r6.y, r11.x, c76.z  // ::s<0>
                                mad r6.z, r11.y, c117.y, c117.z
                                add r6.z, -r6_abs.z, -c107.w
                                mul r8.x, r6.y, r6.z  // ::chroma<0>
                                cmp r6.yz, r10.z, c167.xxyw, c167.xzww
                                mul r6.x, r6.z, r6.x
                                frc r6.x, r6.x
                                mad r6.x, r6.y, r6.x, c107.w
                                add r6.x, -r6_abs.x, -c107.w
                                mul r8.y, r6.x, r8.x  // ::v<0>

#line 983
                                add r13, -r10.z, c114

#line 989
                                add r14, r10.z, -c114.wzyx

#line 995
                                add r6.x, r10.z, c117.w
                                add r6.yz, -r10.z, c115.xxyw

#line 1000
                                cmp r6.yz, r6, -c107_abs.w, -c107_abs.z
                                cmp r6.x, r6.x, r6.y, c103.z
                                mov r8.z, c103.z
                                cmp r9.xyw, r6.x, c103.z, r8.xzzy  // ::result<0,1,2>
                                cmp r6.x, r14.w, r6.z, c103.z
                                cmp r6.xyz, r6.x, r9.xyww, r8.yzxw  // ::result<0,1,2>
                                cmp r13, r13, -c107_abs.w, -c107_abs.z
                                cmp r9.xyw, r14.zyzx, r13.xyzz, c103.z
                                cmp r6.xyz, r9.x, r6, r8.zyxw  // ::result<0,1,2>
                                cmp r6.xyz, r9.y, r6, r8.zxyw  // ::result<0,1,2>
                                cmp r6.xyz, r9.w, r6, r8.yxzw  // ::result<0,1,2>
                                cmp r8.w, r10.z, r13.w, c103.z
                                cmp r6.xyz, r8.w, r6, r8  // ::result<0,1,2>
                                mad r8.x, r8.x, c142.y, r12.y  // ::w<0>

#line 1005
                                add r12.xyz, r6.xzyw, r8.x  // ::result<0,2,1>

#line 1010
                              endif

#line 2475
                            else
                              mov r12.xyz, c103.z
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r1.z, -r1.z

#line 2515
          else

#line 2477
            mov r6.x, c0.x  // ::Model<0>
            if_eq r6.x, -c60.x

#line 955
              mul r12.xyz, r11.y, c76.z  // ::l<0,0,0>

#line 960
              if_lt -r11.x, c103.z

#line 956
                mul r1.z, r10.z, c117.x  // ::h<0>

#line 962
                mul r6.y, r11.x, c76.z  // ::s<0>
                mad r6.z, r11.y, c117.y, c117.z
                add r6.z, -r6_abs.z, -c107.w
                mul r8.x, r6.y, r6.z  // ::chroma<0>
                cmp r6.yz, r10.z, c167.xxyw, c167.xzww
                mul r1.z, r1.z, r6.z
                frc r1.z, r1.z
                mad r1.z, r6.y, r1.z, c107.w
                add r1.z, -r1_abs.z, -c107.w
                mul r8.y, r1.z, r8.x  // ::v<0>

#line 983
                add r13, -r10.z, c114

#line 989
                add r14, r10.z, -c114.wzyx

#line 995
                add r1.z, r10.z, c117.w
                add r6.yz, -r10.z, c115.xxyw

#line 1000
                cmp r6.yz, r6, -c107_abs.w, -c107_abs.z
                cmp r1.z, r1.z, r6.y, c103.z
                mov r8.z, c103.z
                cmp r9.xyw, r1.z, c103.z, r8.xzzy  // ::result<0,1,2>
                cmp r1.z, r14.w, r6.z, c103.z
                cmp r9.xyw, r1.z, r9, r8.yzzx  // ::result<0,1,2>
                cmp r13, r13, -c107_abs.w, -c107_abs.z
                cmp r13.xyz, r14.zyxw, r13, c103.z
                cmp r9.xyw, r13.x, r9, r8.zyzx  // ::result<0,1,2>
                cmp r9.xyw, r13.y, r9, r8.zxzy  // ::result<0,1,2>
                cmp r9.xyw, r13.z, r9, r8.yxzz  // ::result<0,1,2>
                cmp r1.z, r10.z, r13.w, c103.z
                cmp r8.yzw, r1.z, r9.xxyw, r8.xxyz  // ::result<0,1,2>
                mad r1.z, r8.x, c142.y, r12.y  // ::w<0>

#line 1005
                add r12.xyz, r1.z, r8.ywzw  // ::result<0,2,1>

#line 1010
              endif

#line 2477
              mov r1.z, -c107.w
            else
              if_eq r6.x, -c60.y

#line 1719
                if_lt c155.w, r11.y

#line 1727
                  mad r12.xyz, r10.z, c83.yzyw, c83.wyyw
                else

#line 1719
                  add r6.y, r11.y, c106.z

#line 1722
                  if_lt r11.y, c106.w
                    cmp r12.xz, r6.y, c155.wyxw, c155.x  // ::HSLuv_Lrgb<0,1>

#line 1727
                    mov r12.y, r10.z
                  else

#line 386
                    add r6.y, r11.y, c154.w
                    mul r6.z, r6.y, r6.y
                    mul r8.x, r6.z, r6.y
                    mul r8.x, r8.x, c81.x  // ::s1<0>
                    mad r6.z, r6.y, -r6.z, c81.y

#line 1607
                    mul r13, r11.y, c84

#line 387
                    cmp r6.z, r6.z, r13.x, r8.x  // ::s2<0>

#line 372
                    mul r8.x, r11.y, r6.z
                    mul r8.y, r8.x, c81.z  // ::y<0>
                    mul r14, r6.z, c135  // ::x<0>, ::z<0>, ::x<0>, ::z<0>
                    rcp r8.z, r14.y
                    mul r8.w, r8.z, r14.x  // ::GetBounds2<0>
                    mul r8.y, r8.z, r8.y  // ::GetBounds2<1>
                    mad r8.x, r8.x, c81.z, -r13.y  // ::y<0>
                    mad r9.xy, r6.z, c168, c168.z  // ::z<0,0>
                    rcp r8.z, r9.x
                    mul r9.x, r8.z, r14.x  // ::GetBounds2<0>
                    mul r8.x, r8.z, r8.x  // ::GetBounds2<1>
                    mul r8.z, r6.z, r13.y  // ::y<0>
                    rcp r9.w, r14.w
                    mul r10.w, r9.w, r14.z  // ::GetBounds2<0>
                    mul r9.w, r8.z, r9.w  // ::GetBounds2<1>
                    mad r12.w, r13.y, r6.z, -r13.y  // ::y<0>
                    rcp r9.y, r9.y
                    mul r13.y, r9.y, r14.z  // ::GetBounds2<0>
                    mul r9.y, r9.y, r12.w  // ::GetBounds2<1>
                    mul r14.xy, r6.z, c115.zwzw  // ::x<0>, ::z<0>
                    rcp r14.y, r14.y
                    mul r14.z, r14.y, r14.x  // ::GetBounds2<0>
                    mul r8.z, r8.z, r14.y  // ::GetBounds2<1>
                    mad r6.z, r6.z, c168.w, c168.z  // ::z<0>
                    rcp r6.z, r6.z
                    mul r14.x, r6.z, r14.x  // ::GetBounds2<0>
                    mul r6.z, r6.z, r12.w  // ::GetBounds2<1>

#line 420
                    mad r12.w, r10.z, c166.z, c166.w
                    frc r12.w, r12.w
                    mad r12.w, r12.w, c80.x, c80.y
                    sincos r15.xy, r12.w
                    mad r8.w, r8.w, -r15.x, r15.y
                    rcp r8.w, r8.w
                    mul r8.y, r8.w, r8.y  // ::length<0>
                    min r12.w, r8.y, c81.w  // GetChroma2a::result<0>
                    cmp r8.y, r8.y, r12.w, c81.w  // GetChroma2a::result<0>
                    mad r8.w, r9.x, -r15.x, r15.y
                    rcp r8.w, r8.w
                    mul r8.x, r8.w, r8.x  // ::length<0>
                    min r9.x, r8.x, r8.y  // GetChroma2a::result<0>
                    cmp r8.x, r8.x, r9.x, r8.y  // GetChroma2a::result<0>
                    mad r8.y, r10.w, -r15.x, r15.y
                    rcp r8.y, r8.y
                    mul r8.y, r8.y, r9.w  // ::length<0>
                    min r9.x, r8.y, r8.x  // GetChroma2a::result<0>
                    cmp r8.x, r8.y, r9.x, r8.x  // GetChroma2a::result<0>
                    mad r8.y, r13.y, -r15.x, r15.y
                    rcp r8.y, r8.y
                    mul r8.y, r8.y, r9.y  // ::length<0>
                    min r9.x, r8.y, r8.x  // GetChroma2a::result<0>
                    cmp r8.x, r8.y, r9.x, r8.x  // GetChroma2a::result<0>
                    mad r8.y, r14.z, -r15.x, r15.y
                    rcp r8.y, r8.y
                    mul r8.y, r8.y, r8.z  // ::length<0>
                    min r9.x, r8.y, r8.x  // GetChroma2a::result<0>
                    cmp r8.x, r8.y, r9.x, r8.x  // GetChroma2a::result<0>
                    mad r8.y, r14.x, -r15.x, r15.y
                    rcp r8.y, r8.y
                    mul r6.z, r6.z, r8.y  // ::length<0>
                    min r9.x, r6.z, r8.x  // GetChroma2a::result<0>
                    cmp r6.z, r6.z, r9.x, r8.x  // GetChroma2a::result<0>

#line 1723
                    mul r6.z, r11.x, r6.z
                    mul r6.z, r6.z, c76.z  // ::C<0>

#line 590
                    mul r8.xy, r15, r6.z  // ::a<0>, ::b<0>

#line 508
                    abs r6.z, c13.x

#line 512
                    rcp r8.z, c13.x
                    mul r14.x, r8.z, c12.x  // ::xyY_XYZ<0>
                    mov r9.x, c13.x  // ::WhiteY<0>
                    add r8.w, -r9.x, -c12.x
                    add r8.w, r8.w, -c107.w
                    mul r14.z, r8.z, r8.w  // ::xyY_XYZ<2>
                    mov r14.y, -c107.w
                    cmp r9.xyw, -r6.z, c113.w, r14.xyzz  // ::xyY_XYZ<0,1,2>

#line 571
                    cmp r6.z, -r6.z, c127.y, c127.w
                    add r6.z, r6.z, r9.x
                    mul r8.z, r9.x, -c61.z
                    mad r6.z, r9.w, -c61.x, r6.z
                    rcp r6.z, r6.z
                    mul r8.z, r6.z, r8.z  // ::ComputeKu<0>

#line 576
                    mul r6.z, r9.y, r6.z
                    mul r6.z, r6.z, -c86.x  // ::ComputeKv<0>

#line 1605
                    add r8.w, -r11.y, c82.w
                    mul r6.y, r6.y, c83.x
                    mul r9.x, r6.y, r6.y
                    mul r6.y, r6.y, r9.x
                    cmp r6.y, r8.w, r13.x, r6.y  // ::Y<0>
                    mad r8.x, r13.w, r8.z, r8.x
                    rcp r8.x, r8.x
                    mad r8.x, r13.z, r8.x, c107.w
                    mul r8.x, r8.x, c85.x  // ::a<0>
                    mul r8.z, r6.y, c139.x  // ::b<0>
                    mul r8.w, r11.y, -c94.x
                    mad r6.z, r13.w, r6.z, r8.y
                    rcp r6.z, r6.z
                    mad r6.z, r8.w, r6.z, c139.x
                    mad r6.z, r6.y, r6.z, -r8.z
                    rcp r8.y, r8.x
                    mul r6.z, r6.z, r8.y  // ::X<0>
                    mad r8.x, r6.z, r8.x, r8.z  // ::Z<0>

#line 1616
                    max r8.y, r6.z, c103.z  // ::X<0>

#line 1619
                    max r8.z, r6.y, c103.z  // ::Y<0>

#line 1622
                    max r6.y, r8.x, c103.z  // ::Z<0>

#line 470
                    mul r8.xzw, r8.z, c24.xyyz
                    mad r8.xyz, r8.y, c23, r8.xzww
                    mad r12.xyz, r6.y, c25.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 1727
                  endif
                endif

#line 2478
                mov r1.z, -c107.w
              else
                if_eq r6.x, -c40.x

#line 1054
                  mul r6.y, r11.x, c120.x
                  mad r6.z, r10.z, c120.y, c120.z
                  frc r6.z, r6.z
                  mad r6.z, r6.z, c80.x, c80.y
                  sincos r8.x, r6.z
                  mul r6.z, r6.y, r8.x
                  mul r12.xz, r11.y, c134.xyyw  // ::m<0>
                  mad r6.y, r6.y, r8.x, r12.z
                  mad r6.y, r11.y, -c120.w, r6.y
                  mul r12.z, r6.y, c77.y  // ::g<0>
                  mad r6.y, r11.y, c117.y, -r6.z
                  mul r12.y, r6.y, -c142.y  // ::b<0>

#line 2479
                  mov r1.z, -c107.w
                else
                  if_eq r6.x, -c40.y

#line 1120
                    mad r6.y, r11.x, -c166.x, c166.y  // ::minOverMax<0>
                    if_lt -r6.y, c103.z

#line 1125
                      if_lt r10.z, c85.z
                        mul r6.z, r10.z, c117.x  // ::h<0>
                        rcp r8.x, r6.y
                        lrp r9.x, r6.z, r8.x, -c107.w  // ::part<0>
                        mul r8.y, r8.x, r8.x
                        mul r8.z, r9.x, r9.x
                        mul r8.z, r8.z, c64.y
                        mad r8.y, r8.y, c64.x, r8.z
                        add r8.y, r8.y, c65.w
                        rsq r8.y, r8.y
                        mul r13.z, r8.y, r11.y  // ::b<0>
                        mul r13.x, r8.x, r13.z  // ::r<0>
                        mad r8.x, r13.z, r8.x, -r13.z
                        mad r13.y, r6.z, r8.x, r13.z  // ::g<0>
                      else
                        if_lt r10.z, c124.w

#line 1136
                          mad r6.z, r10.z, -c134.z, c134.w
                          mul r6.z, r6.z, -c107.y  // ::h<0>
                          rcp r8.x, r6.y
                          lrp r9.x, r6.z, r8.x, -c107.w  // ::part<0>
                          mul r8.y, r8.x, r8.x
                          mul r8.z, r9.x, r9.x
                          mul r8.z, r8.z, c64.x
                          mad r8.y, r8.y, c64.y, r8.z
                          add r8.y, r8.y, c65.w
                          rsq r8.y, r8.y
                          mul r13.z, r8.y, r11.y  // ::b<0>
                          mul r13.y, r8.x, r13.z  // ::g<0>
                          mad r8.x, r13.z, r8.x, -r13.z
                          mad r13.x, r6.z, r8.x, r13.z  // ::r<0>
                        else
                          if_lt r10.z, c108.x
                            mad r6.z, r10.z, c108.y, c108.z
                            mul r6.z, r6.z, -c107.y  // ::h<0>
                            rcp r8.x, r6.y
                            lrp r9.x, r6.z, r8.x, -c107.w  // ::part<0>

#line 1147
                            mul r8.y, r8.x, r8.x
                            mul r8.z, r9.x, r9.x
                            mul r8.z, r8.z, c65.w
                            mad r8.y, r8.y, c64.y, r8.z
                            add r8.y, r8.y, c64.x
                            rsq r8.y, r8.y
                            mul r13.x, r8.y, r11.y  // ::r<0>
                            mul r13.y, r8.x, r13.x  // ::g<0>
                            mad r8.x, r13.x, r8.x, -r13.x
                            mad r13.z, r6.z, r8.x, r13.x  // ::b<0>
                          else
                            if_lt r10.z, c159.y
                              mad r6.z, r10.z, -c108.y, c108.w
                              mul r6.z, r6.z, -c107.y  // ::h<0>
                              rcp r8.x, r6.y
                              lrp r9.x, r6.z, r8.x, -c107.w  // ::part<0>
                              mul r8.y, r8.x, r8.x
                              mul r8.z, r9.x, r9.x
                              mul r8.z, r8.z, c64.y
                              mad r8.y, r8.y, c65.w, r8.z
                              add r8.y, r8.y, c64.x
                              rsq r8.y, r8.y
                              mul r13.x, r8.y, r11.y  // ::r<0>
                              mul r13.z, r8.x, r13.x  // ::b<0>

#line 1158
                              mad r8.x, r13.x, r8.x, -r13.x
                              mad r13.y, r6.z, r8.x, r13.x  // ::g<0>
                            else
                              add r6.z, r10.z, -c67.w
                              mad r8.x, r10.z, c87.x, c87.y
                              mul r8.x, r8.x, -c107.y  // ::h<0>
                              rcp r6.y, r6.y
                              lrp r9.x, r8.x, r6.y, -c107.w  // ::part<0>
                              mul r8.y, r6.y, r6.y

#line 1174
                              mul r8.yz, r8.y, c146.xzxw

#line 1165
                              mul r8.w, r9.x, r9.x
                              mad r8.y, r8.w, c64.x, r8.y
                              add r8.y, r8.y, c64.y
                              rsq r8.y, r8.y
                              mul r14.y, r8.y, r11.y  // ::g<0>
                              mul r14.z, r6.y, r14.y  // ::b<0>
                              mad r8.y, r14.y, r6.y, -r14.y
                              mad r14.x, r8.x, r8.y, r14.y  // ::r<0>

#line 1172
                              mad r8.x, r10.z, -c166.z, c166.y
                              mul r8.x, r8.x, -c107.y  // ::h<0>
                              lrp r9.x, r8.x, r6.y, -c107.w  // ::part<0>
                              mul r8.y, r9.x, r9.x
                              mad r8.y, r8.y, c65.w, r8.z
                              add r8.y, r8.y, c64.y
                              rsq r8.y, r8.y
                              mul r15.y, r8.y, r11.y  // ::g<0>
                              mul r15.x, r6.y, r15.y  // ::r<0>
                              mad r6.y, r15.y, r6.y, -r15.y
                              mad r15.z, r8.x, r6.y, r15.y  // ::b<0>
                              cmp r13.xyz, r6.z, r15, r14  // ::r<0>, ::g<0>, ::b<0>
                            endif
                          endif
                        endif
                      endif
                    else

#line 1182
                      if_lt r10.z, c85.z
                        mul r6.y, r10.z, c117.x  // ::h<0>
                        mul r6.z, r11.y, r11.y
                        mul r8.x, r10.z, r6.y
                        mad r8.x, r8.x, c87.z, c87.w
                        rcp r8.x, r8.x
                        mul r6.z, r6.z, r8.x
                        rsq r6.z, r6.z
                        rcp r13.x, r6.z  // ::r<0>
                        mul r13.y, r6.y, r13.x  // ::g<0>
                        mov r13.z, c103.z
                      else
                        if_lt r10.z, c124.w
                          mad r6.y, r10.z, -c134.z, c134.w
                          mul r6.z, r6.y, -c107.y  // ::h<0>

#line 1193
                          mul r8.x, r11.y, r11.y
                          mul r6.y, r6.y, r6.z
                          mad r6.y, r6.y, c122.x, c122.y
                          rcp r6.y, r6.y
                          mul r6.y, r6.y, r8.x
                          rsq r6.y, r6.y
                          rcp r13.y, r6.y  // ::g<0>
                          mul r13.x, r6.z, r13.y  // ::r<0>
                          mov r13.z, c103.z
                        else

#line 1216
                          mad r6.yz, r10.z, c169.x, c169
                          mul r8.xy, r6.yzzw, -c107.y  // ::h<0,0>

#line 1201
                          mul r8.z, r11.y, r11.y

#line 1217
                          mul r6.yz, r6, r8.xxyw
                          mad r6.yz, r6, c122.xzxw, c122.xyww

#line 1201
                          rcp r6.y, r6.y
                          mul r6.y, r6.y, r8.z
                          rsq r6.y, r6.y
                          rcp r14.y, r6.y  // ::g<0>
                          mul r14.z, r8.x, r14.y  // ::b<0>

#line 1224
                          mad r8.xw, r10.z, -c169_abs.x, c169_abs.zyzw
                          mul r9.xy, r8.xwzw, -c107.y  // ::h<0,0>
                          mul r8.xw, r8, r9.xyzy
                          mad r8.xw, r8, c121.xyzy, c121.zyzw

#line 1209
                          rcp r6.y, r8.x
                          mul r6.y, r6.y, r8.z
                          rsq r6.y, r6.y
                          rcp r15.z, r6.y  // ::b<0>
                          mul r15.y, r9.x, r15.z  // ::g<0>

#line 1214
                          add r16.xyz, r10.z, c118

#line 1217
                          rcp r6.y, r6.z
                          mul r6.y, r6.y, r8.z
                          rsq r6.y, r6.y
                          rcp r17.z, r6.y  // ::b<0>
                          mul r17.x, r8.y, r17.z  // ::r<0>

#line 1225
                          rcp r6.y, r8.w
                          mul r6.y, r6.y, r8.z
                          rsq r6.y, r6.y
                          rcp r8.x, r6.y  // ::r<0>
                          mul r8.z, r9.y, r8.x  // ::b<0>
                          mov r8.y, c103.z
                          mov r17.y, c103.z
                          cmp r8.xyz, r16.z, r8, r17  // ::r<0>, ::g<0>, ::b<0>
                          mov r15.x, c103.z
                          cmp r8.xyz, r16.y, r8, r15  // ::r<0>, ::g<0>, ::b<0>
                          mov r14.x, c103.z
                          cmp r13.xyz, r16.x, r8, r14  // ::r<0>, ::g<0>, ::b<0>
                        endif
                      endif
                    endif

#line 1232
                    add r8.xyz, r13, -c142.y
                    frc r9.xyw, r8.xyzz
                    add r8.xyz, r8, -r9.xyww
                    mul_sat r12.xyz, r8.xzyw, c76.w  // ::result<0,2,1>

#line 2480
                    mov r1.z, -c107.w
                  else
                    if_eq r6.x, -c40.z

#line 1303
                      mul r6.yz, r11.xxyw, c76.z  // ::white<0>, ::black<0>
                      add r6.z, r6.z, r6.y
                      rcp r8.x, r6.z
                      mul r8.x, r6.y, r8.x  // ::gray<0>

#line 1311
                      add r6.z, r6.z, c107.w

#line 862
                      mul r8.y, r10.z, c117.x  // ::SectorPosition<0>
                      frc r8.z, r8.y
                      add r8.y, -r8.z, r8.y  // ::SectorNumber<0>

#line 866
                      mad r8.z, r10.z, c117.x, -r8.y  // ::FractionalSector<0>

#line 870
                      add r13.x, -r8.z, -c107.w  // ::q<0>

#line 898
                      add r14, r8.y, c165

#line 904
                      add r8.z, r8.y, c139.x
                      cmp r15.x, -r8_abs.z, c107_abs.w, c107_abs.z  // ::r<0>

#line 909
                      mov r13.y, c103.z
                      cmp r15.yz, -r8_abs.z, r13.xyxw, c103.z  // ::g<0>, ::b<0>
                      mad r13.zw, r13.x, c119.xyyz, c119.x
                      cmp r9.xyw, -r14_abs.w, r13.zyzw, r15.xyzz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r9.xyw, -r14_abs.z, r13.yxzw, r9  // ::r<0>, ::g<0>, ::b<0>
                      mad r15.xyz, r13.wxyw, c119.xyxw, c119.zxzw
                      cmp r9.xyw, -r14_abs.y, r15.zxzy, r9  // ::r<0>, ::g<0>, ::b<0>
                      cmp r9.xyw, -r14_abs.x, r13.xwzy, r9  // ::r<0>, ::g<0>, ::b<0>
                      cmp r8.yzw, -r8_abs.y, r15.xxyz, r9.xxyw  // ::r<0>, ::g<0>, ::b<0>

#line 1314
                      mad r9.x, r11.x, -c166.x, c166.y
                      mad r9.x, r11.y, -c76.z, r9.x

#line 1321
                      mad r8.yzw, r8, r9.x, r6.y  // ::rgb<0,1,2>
                      cmp r12.xyz, r6.z, r8.x, r8.ywzw  // ::HWB_Lrgb<0,2,1>

#line 2481
                      mov r1.z, -c107.w
                    else
                      if_eq r6.x, c154.w

#line 470
                        mul r8.xyz, r11.x, c89
                        mad r8.xyz, r10.z, c88, r8
                        mad r12.xyz, r11.y, c90.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2482
                        mov r1.z, -c107.w
                      else
                        if_eq r6.x, -c45.x

#line 2184
                          add r6.yz, r11.xyxw, c103.w
                          mad r8.x, r6.z, -c118.w, r10.z
                          mad r8.x, r6.y, -c89.w, r8.x  // ::ycbcr<1>
                          mad r6.yz, r6, c133.xxyw, r10.z  // ::ycbcr<0,2>

#line 2164
                          add r6.yz, r6, c133.xzww
                          add r8.x, r8.x, c103.w

#line 2119
                          mul r8.yz, r6, c92.xxyw  // ::ypbpr<0>
                          add r12.x, r8.z, r8.y  // ::r<0>
                          mad r12.y, r8.x, c88.w, r8.y  // ::b<0>
                          mul r6.z, r12.x, c138.x
                          mad r6.y, r6.y, c90.w, -r6.z
                          mad r6.y, r12.y, -c138.z, r6.y
                          mul r12.z, r6.y, c92.z  // ::g<0>

#line 2483
                          mov r1.z, -c107.w
                        else
                          if_eq r6.x, -c45.y

#line 1391
                            add r6.y, r10.z, c154.w
                            mul r6.z, r6.y, c83.x  // ::fy<0>
                            mul r8.x, r11.y, c92.w
                            mad r8.y, r11.x, c91.x, r6.z  // ::fx<0>
                            mad r6.y, r6.y, c83.x, -r8.x  // ::fz<0>
                            mul r8.x, r8.y, r8.y
                            mul r8.z, r8.x, r8.y  // ::fx3<0>
                            mul r8.w, r6.y, r6.y
                            mul r9.x, r6.y, r8.w  // ::fz3<0>
                            mad r8.x, r8.y, -r8.x, c67.y
                            mad r8.y, r8.y, c91.y, c91.z
                            mul r8.y, r8.y, c84.x
                            cmp r8.x, r8.x, r8.y, r8.z  // ::xr<0>
                            add r8.y, -r10.z, c82.w
                            mul r8.z, r6.z, r6.z
                            mul r6.z, r6.z, r8.z
                            mul r8.z, r10.z, c84.x
                            cmp r6.z, r8.y, r8.z, r6.z  // ::yr<0>
                            mad r8.y, r6.y, -r8.w, c67.y
                            mad r6.y, r6.y, c91.y, c91.z
                            mul r6.y, r6.y, c84.x
                            cmp r6.y, r8.y, r6.y, r9.x  // ::zr<0>

#line 508
                            abs r8.y, c13.x

#line 512
                            rcp r8.z, c13.x
                            mul r13.x, r8.z, c12.x  // ::xyY_XYZ<0>
                            mov r9.x, c13.x  // ::WhiteY<0>
                            add r8.w, -r9.x, -c12.x
                            add r8.w, r8.w, -c107.w
                            mul r13.z, r8.z, r8.w  // ::xyY_XYZ<2>
                            mov r13.y, -c107.w
                            cmp r8.yzw, -r8.y, c113.w, r13.xxyz  // ::xyY_XYZ<0,1,2>

#line 1403
                            mul r12.x, r8.y, r8.x  // ::Lab_Lrgb<0>
                            mul r12.yz, r6, r8.xwzw  // ::Lab_Lrgb<2,1>

#line 2484
                            mov r1.z, -c107.w
                          else
                            if_eq r6.x, -c46.x

#line 508
                              abs r6.y, c13.x

#line 512
                              rcp r6.z, c13.x
                              mul r8.x, r6.z, c12.x  // ::xyY_XYZ<0>
                              mov r9.x, c13.x  // ::WhiteY<0>
                              add r8.w, -r9.x, -c12.x
                              add r8.w, r8.w, -c107.w
                              mul r8.z, r6.z, r8.w  // ::xyY_XYZ<2>
                              mov r8.y, -c107.w
                              cmp r8.xyz, -r6.y, c113.w, r8  // ::xyY_XYZ<0,1,2>

#line 552
                              add r9.xy, r8.xzzw, c66

#line 555
                              cmp r6.z, -r9_abs.y, -c107_abs.w, -c107_abs.z
                              cmp r6.z, -r6.y, c103.z, r6.z
                              cmp r6.z, -r9_abs.x, r6.z, c103.z

#line 565
                              add r9.xy, r8.yzzw, r8
                              mul r9.xy, r9, c66.zwzw  // ::Ka<0,0>

#line 1447
                              mul r8.w, r10.z, c76.z
                              mul r8.w, r8.w, r8.w
                              mul r8.y, r8.y, r8.w  // ::Y<0>
                              rcp r8.w, r9.x
                              cmp r8.w, r6.z, r8.w, c91.w
                              mul r8.w, r8.w, r11.x
                              cmp r6.y, -r6.y, c112.z, c112.w
                              mul r6.y, r6.y, r8.y
                              rsq r9.x, r6.y
                              rcp r9.x, r9.x
                              mad r8.w, r8.w, r9.x, r6.y
                              mul r8.x, r8.x, r8.w  // ::X<0>
                              rcp r8.w, r9.y
                              cmp r6.z, r6.z, r8.w, c93.x
                              mul r6.z, r6.z, r11.y
                              mad r6.y, r6.z, r9.x, -r6.y
                              mul r6.y, -r8.z, r6.y  // ::Z<0>

#line 470
                              mul r8.yzw, r8.y, c24.xxyz
                              mad r8.xyz, r8.x, c23, r8.yzww
                              mad r12.xyz, r6.y, c25.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2485
                              mov r1.z, -c107.w
                            else
                              add r6.y, r6.x, c46.y
                              cmp r1.z, -r6_abs.y, c107_abs.w, c107_abs.z
                              mov r11.z, r10.z
                              cmp r12.xyz, -r6_abs.y, r11.zyxw, r12  // ::TLrgb<0,2,1>
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r1.z, -r1.z

#line 2515
            else

#line 2488
              if_eq r6.x, -c46.z

#line 1493
                add r1.z, r10.z, -c67.x  // ::Jz<0>
                mad r6.y, r1.z, c93.y, c93.z
                rcp r6.y, r6.y

#line 1498
                mul r8.xy, r11.x, c132
                mad r6.z, r1.z, r6.y, r8.x
                mad r6.z, r11.y, c93.w, r6.z  // PerceptualQuantizerInverse::X<0>

#line 491
                pow r8.z, r6.z, c132.z  // ::XX<0>
                add r6.z, -r8.z, c57.z
                mad r8.z, r8.z, c109.x, c109.y
                rcp r8.z, r8.z
                mul r6.z, r6.z, r8.z
                pow r8.z, r6.z, c132.w

#line 1498
                mad r6.yz, r1.z, r6.y, -r8.xxyw
                mad r6.yz, r11.y, -c109.xzww, r6  // PerceptualQuantizerInverse::X<0,0>

#line 491
                pow r1.z, r6.y, c132.z  // ::XX<0>
                add r6.y, -r1.z, c57.z
                mad r1.z, r1.z, c109.x, c109.y
                rcp r1.z, r1.z
                mul r1.z, r1.z, r6.y
                pow r6.y, r1.z, c132.w
                pow r1.z, r6.z, c132.z  // ::XX<0>
                add r6.z, -r1.z, c57.z
                mad r1.z, r1.z, c109.x, c109.y
                rcp r1.z, r1.z
                mul r1.z, r1.z, r6.z
                pow r6.z, r1.z, c132.w

#line 1502
                mul r8.xyw, r6.y, c130.xyzz
                mad r8.xw, r8.z, c129.xyzy, -r8
                mad r1.z, r8.z, c130.w, r8.y
                mad r1.z, r6.z, -c129.z, r1.z  // ::Y<0>
                mad r6.yz, r6.z, c131.xxyw, r8.xxww  // ::X<0>, ::Z<0>
                mul r1.z, r1.z, c110.w  // ::xyz<1>
                mul r6.yz, r6, c110.w  // ::xyz<0,2>

#line 470
                mul r8.xyz, r1.z, c24
                mad r8.xyz, r6.y, c23, r8
                mad r12.xyz, r6.z, c25.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2488
                mov r1.z, -c107.w
              else
                if_eq r6.x, -c46.w

#line 508
                  abs r6.y, c13.x

#line 512
                  rcp r6.z, c13.x
                  mul r8.x, r6.z, c12.x  // ::xyY_XYZ<0>
                  mov r9.x, c13.x  // ::WhiteY<0>
                  add r8.w, -r9.x, -c12.x
                  add r8.w, r8.w, -c107.w
                  mul r8.z, r6.z, r8.w  // ::xyY_XYZ<2>
                  mov r8.y, -c107.w
                  cmp r8.xyz, -r6.y, c113.w, r8  // ::xyY_XYZ<0,1,2>

#line 470
                  mul r9.xyw, r11.x, c27.xyzz
                  mad r9.xyw, r10.z, c26.xyzz, r9
                  mad r9.xyw, r11.y, c28.xyzz, r9  // ::x<0>, ::y<0>, ::z<0>

#line 500
                  mul r13.xyz, r9.xyww, r9.xyww
                  mul r9.xyw, r9, r13.xyzz  // ::Pow3<0,0,0>

#line 470
                  mul r13.xyz, r9.y, c33
                  mad r13.xyz, r9.x, c32, r13
                  mad r9.xyw, r9.w, c34.xyzz, r13.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 1551
                  mul r8.xyz, r8, r9.xyww  // ::xyz<0,1,2>

#line 470
                  mul r9.xyw, r8.y, c24.xyzz
                  mad r8.xyw, r8.x, c23.xyzz, r9
                  mad r12.xyz, r8.z, c25.xzyw, r8.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2489
                  mov r1.z, -c107.w
                else
                  if_eq r6.x, -c47.x

#line 589
                    mad r6.y, r11.y, c166.z, c166.w
                    frc r6.y, r6.y
                    mad r6.y, r6.y, c80.x, c80.y
                    sincos r8.xy, r6.y
                    mul r6.yz, r8.xxyw, r11.x  // ::a<0>, ::b<0>

#line 1391
                    add r8.x, r10.z, c154.w
                    mul r8.y, r8.x, c83.x  // ::fy<0>
                    mul r6.z, r6.z, c92.w
                    mad r6.y, r6.y, c91.x, r8.y  // ::fx<0>
                    mad r6.z, r8.x, c83.x, -r6.z  // ::fz<0>

#line 1396
                    mul r8.xw, r6.yyzz, r6.yyzz
                    mul r8.z, r6.y, r8.x  // ::fx3<0>
                    mul r9.x, r6.z, r8.w  // ::fz3<0>
                    mad r8.x, r6.y, -r8.x, c67.y
                    mad r6.y, r6.y, c91.y, c91.z
                    mul r6.y, r6.y, c84.x
                    cmp r6.y, r8.x, r6.y, r8.z  // ::xr<0>
                    add r8.x, -r10.z, c82.w
                    mul r8.z, r8.y, r8.y
                    mul r8.y, r8.z, r8.y
                    mul r8.z, r10.z, c84.x
                    cmp r8.x, r8.x, r8.z, r8.y  // ::yr<0>
                    mad r8.y, r6.z, -r8.w, c67.y
                    mad r6.z, r6.z, c91.y, c91.z
                    mul r6.z, r6.z, c84.x
                    cmp r6.z, r8.y, r6.z, r9.x  // ::zr<0>

#line 508
                    abs r8.y, c13.x

#line 512
                    rcp r8.z, c13.x
                    mul r13.x, r8.z, c12.x  // ::xyY_XYZ<0>
                    mov r9.x, c13.x  // ::WhiteY<0>
                    add r8.w, -r9.x, -c12.x
                    add r8.w, r8.w, -c107.w
                    mul r13.z, r8.z, r8.w  // ::xyY_XYZ<2>
                    mov r13.y, -c107.w
                    cmp r8.yzw, -r8.y, c113.w, r13.xxyz  // ::xyY_XYZ<0,1,2>

#line 1403
                    mul r12.z, r8.z, r8.x  // ::Lab_Lrgb<1>
                    mul r12.xy, r6.yzzw, r8.ywzw  // ::Lab_Lrgb<0,2>

#line 2490
                    mov r1.z, -c107.w
                  else
                    if_eq r6.x, -c47.y

#line 589
                      mad r6.y, r11.y, c166.z, c166.w
                      frc r6.y, r6.y
                      mad r6.y, r6.y, c80.x, c80.y
                      sincos r8.xy, r6.y
                      mul r6.yz, r8.xxyw, r11.x  // ::a<0>, ::b<0>

#line 508
                      abs r8.x, c13.x

#line 512
                      rcp r8.y, c13.x
                      mul r13.x, r8.y, c12.x  // ::xyY_XYZ<0>
                      mov r9.x, c13.x  // ::WhiteY<0>
                      add r8.z, -r9.x, -c12.x
                      add r8.z, r8.z, -c107.w
                      mul r13.z, r8.y, r8.z  // ::xyY_XYZ<2>
                      mov r13.y, -c107.w
                      cmp r8.yzw, -r8.x, c113.w, r13.xxyz  // ::xyY_XYZ<0,1,2>

#line 552
                      add r9.xy, r8.ywzw, c66

#line 555
                      cmp r9.y, -r9_abs.y, -c107_abs.w, -c107_abs.z
                      cmp r9.y, -r8.x, c103.z, r9.y
                      cmp r9.x, -r9_abs.x, r9.y, c103.z

#line 565
                      add r9.yw, r8.xzzw, r8.xyzz
                      mul r9.yw, r9, c66.xzzw  // ::Ka<0,0>

#line 1447
                      mul r10.w, r10.z, c76.z
                      mul r10.w, r10.w, r10.w
                      mul r8.z, r8.z, r10.w  // ::Y<0>
                      rcp r9.y, r9.y
                      cmp r9.y, r9.x, r9.y, c91.w
                      mul r6.y, r6.y, r9.y
                      cmp r8.x, -r8.x, c112.z, c112.w
                      mul r8.x, r8.x, r8.z
                      rsq r9.y, r8.x
                      rcp r9.y, r9.y
                      mad r6.y, r6.y, r9.y, r8.x
                      mul r6.y, r8.y, r6.y  // ::X<0>
                      rcp r8.y, r9.w
                      cmp r8.y, r9.x, r8.y, c93.x
                      mul r6.z, r6.z, r8.y
                      mad r6.z, r6.z, r9.y, -r8.x
                      mul r6.z, -r8.w, r6.z  // ::Z<0>

#line 470
                      mul r8.xyz, r8.z, c24
                      mad r8.xyz, r6.y, c23, r8
                      mad r12.xyz, r6.z, c25.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2491
                      mov r1.z, -c107.w
                    else
                      if_eq r6.x, -c47.z

#line 589
                        mad r6.y, r11.y, c166.z, c166.w
                        frc r6.y, r6.y
                        mad r6.y, r6.y, c80.x, c80.y
                        sincos r8.xy, r6.y
                        mul r8, r8.xyxy, r11.x  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1493
                        add r6.y, r10.z, -c67.x  // ::Jz<0>
                        mad r6.z, r6.y, c93.y, c93.z
                        rcp r6.z, r6.z

#line 1498
                        mul r8.xz, r8, c132.xyyw
                        mad r9.x, r6.y, r6.z, r8.x
                        mad r9.x, r8.y, c93.w, r9.x  // PerceptualQuantizerInverse::X<0>

#line 491
                        pow r10.w, r9.x, c132.z  // ::XX<0>
                        add r9.x, -r10.w, c57.z
                        mad r9.y, r10.w, c109.x, c109.y
                        rcp r9.y, r9.y
                        mul r9.x, r9.y, r9.x
                        pow r10.w, r9.x, c132.w

#line 1498
                        mad r6.yz, r6.y, r6.z, -r8.xxzw
                        mad r6.yz, r8.xyww, -c109.xzww, r6  // PerceptualQuantizerInverse::X<0,0>

#line 491
                        pow r8.x, r6.y, c132.z  // ::XX<0>
                        add r6.y, -r8.x, c57.z
                        mad r8.x, r8.x, c109.x, c109.y
                        rcp r8.x, r8.x
                        mul r6.y, r6.y, r8.x
                        pow r8.x, r6.y, c132.w
                        pow r8.y, r6.z, c132.z  // ::XX<0>
                        add r6.y, -r8.y, c57.z
                        mad r6.z, r8.y, c109.x, c109.y
                        rcp r6.z, r6.z
                        mul r6.y, r6.z, r6.y
                        pow r8.y, r6.y, c132.w

#line 1502
                        mul r8.xzw, r8.x, c130.xyyz
                        mad r6.yz, r10.w, c129.xxyw, -r8.xxww
                        mad r8.x, r10.w, c130.w, r8.z
                        mad r8.x, r8.y, -c129.z, r8.x  // ::Y<0>
                        mad r6.yz, r8.y, c131.xxyw, r6  // ::X<0>, ::Z<0>
                        mul r8.x, r8.x, c110.w  // ::xyz<1>
                        mul r6.yz, r6, c110.w  // ::xyz<0,2>

#line 470
                        mul r8.xyz, r8.x, c24
                        mad r8.xyz, r6.y, c23, r8
                        mad r12.xyz, r6.z, c25.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2492
                        mov r1.z, -c107.w
                      else
                        if_eq r6.x, -c47.w

#line 589
                          mad r6.y, r11.y, c166.z, c166.w
                          frc r6.y, r6.y
                          mad r6.y, r6.y, c80.x, c80.y
                          sincos r8.xy, r6.y
                          mul r6.yz, r8.xxyw, r11.x  // ::a<0>, ::b<0>

#line 508
                          abs r8.x, c13.x

#line 512
                          rcp r8.y, c13.x
                          mul r13.x, r8.y, c12.x  // ::xyY_XYZ<0>
                          mov r9.x, c13.x  // ::WhiteY<0>
                          add r8.z, -r9.x, -c12.x
                          add r8.z, r8.z, -c107.w
                          mul r13.z, r8.y, r8.z  // ::xyY_XYZ<2>
                          mov r13.y, -c107.w
                          cmp r8.yzw, -r8.x, c113.w, r13.xxyz  // ::xyY_XYZ<0,1,2>

#line 571
                          cmp r8.x, -r8.x, c127.y, c127.w
                          add r8.x, r8.x, r8.y
                          mul r8.y, r8.y, -c61.z
                          mad r8.x, r8.w, -c61.x, r8.x
                          rcp r8.x, r8.x
                          mul r8.y, r8.x, r8.y  // ::ComputeKu<0>

#line 576
                          mul r8.x, r8.z, r8.x
                          mul r8.x, r8.x, -c86.x  // ::ComputeKv<0>

#line 1605
                          add r8.z, -r10.z, c82.w
                          add r8.w, r10.z, c154.w
                          mul r8.w, r8.w, c83.x
                          mul r9.x, r8.w, r8.w
                          mul r8.w, r8.w, r9.x

#line 1610
                          mul r13, r10.z, c136

#line 1605
                          cmp r8.z, r8.z, r13.x, r8.w  // ::Y<0>
                          mad r6.y, r13.z, r8.y, r6.y
                          rcp r6.y, r6.y
                          mad r6.y, r13.y, r6.y, c107.w
                          mul r6.y, r6.y, c85.x  // ::a<0>
                          mul r8.y, r8.z, c139.x  // ::b<0>
                          mad r6.z, r13.z, r8.x, r6.z
                          rcp r6.z, r6.z
                          mad r6.z, r13.w, r6.z, c139.x
                          mad r6.z, r8.z, r6.z, -r8.y
                          rcp r8.x, r6.y
                          mul r6.z, r6.z, r8.x  // ::X<0>
                          mad r6.y, r6.z, r6.y, r8.y  // ::Z<0>

#line 1616
                          max r8.x, r6.z, c103.z  // ::X<0>

#line 1619
                          max r6.z, r8.z, c103.z  // ::Y<0>

#line 1622
                          max r8.y, r6.y, c103.z  // ::Z<0>

#line 470
                          mul r9.xyw, r6.z, c24.xyzz
                          mad r8.xzw, r8.x, c23.xyyz, r9.xyyw
                          mad r12.xyz, r8.y, c25.xzyw, r8.xwzw  // ::x<0>, ::z<0>, ::y<0>

#line 2493
                          mov r1.z, -c107.w
                        else
                          if_eq r6.x, -c48.x

#line 589
                            mad r6.y, r11.y, c166.z, c166.w
                            frc r6.y, r6.y
                            mad r6.y, r6.y, c80.x, c80.y
                            sincos r8.xy, r6.y
                            mul r10.xy, r8, r11.x  // ::a<0>, ::b<0>

#line 1968
                            add r8.xyz, r10, c155.wwxw
                            mul r8.xzw, r8.xyyz, c131.zyzw  // ::result<0,1,2>

#line 512
                            mul r6.y, r8.w, r8.x
                            rcp r6.z, r8.z
                            mul r13.x, r6.z, r6.y  // ::xyY_XYZ<0>
                            mad r6.y, r8.y, -c92.w, -r8.x
                            add r6.y, r6.y, -c107.w
                            mul r6.y, r8.w, r6.y
                            mul r13.z, r6.z, r6.y  // ::xyY_XYZ<2>
                            mov r13.y, r8.w
                            cmp r8.xyz, -r8_abs.z, c113.w, r13  // ::xyY_XYZ<0,1,2>

#line 470
                            mul r9.xyw, r8.y, c24.xyzz
                            mad r8.xyw, r8.x, c23.xyzz, r9
                            mad r12.xyz, r8.z, c25.xzyw, r8.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2494
                            mov r1.z, -c107.w
                          else
                            if_eq r6.x, -c48.y

#line 470
                              mul r8.xyz, r11.x, c15
                              mad r8.xyz, r10.z, c14, r8
                              mad r8.xyz, r11.y, c16, r8  // ::x<0>, ::y<0>, ::z<0>
                              mul r9.xyw, r8.y, c24.xyzz
                              mad r8.xyw, r8.x, c23.xyzz, r9
                              mad r12.xyz, r8.z, c25.xzyw, r8.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2495
                              mov r1.z, -c107.w
                            else
                              if_eq r6.x, -c48.z

#line 508
                                abs r6.y, c13.x

#line 512
                                rcp r6.z, c13.x
                                mul r8.x, r6.z, c12.x  // ::xyY_XYZ<0>
                                mov r9.x, c13.x  // ::WhiteY<0>
                                add r8.w, -r9.x, -c12.x
                                add r8.w, r8.w, -c107.w
                                mul r8.z, r6.z, r8.w  // ::xyY_XYZ<2>
                                mov r8.y, -c107.w
                                cmp r8.xyz, -r6.y, c113.w, r8  // ::xyY_XYZ<0,1,2>

#line 571
                                cmp r6.y, -r6.y, c127.y, c127.w
                                add r6.y, r6.y, r8.x
                                mul r6.z, r8.x, -c61.z
                                mad r6.y, r8.z, -c61.x, r6.y
                                rcp r6.y, r6.y
                                mul r6.z, r6.y, r6.z  // ::ComputeKu<0>

#line 576
                                mul r6.y, r8.y, r6.y
                                mul r6.y, r6.y, -c86.x  // ::ComputeKv<0>

#line 1605
                                add r8.x, -r10.z, c82.w
                                add r8.y, r10.z, c154.w
                                mul r8.y, r8.y, c83.x
                                mul r8.z, r8.y, r8.y
                                mul r8.y, r8.z, r8.y

#line 1610
                                mul r13, r10.z, c136

#line 1605
                                cmp r8.x, r8.x, r13.x, r8.y  // ::Y<0>
                                mad r6.z, r13.z, r6.z, r11.x
                                rcp r6.z, r6.z
                                mad r6.z, r13.y, r6.z, c107.w
                                mul r6.z, r6.z, c85.x  // ::a<0>
                                mul r8.y, r8.x, c139.x  // ::b<0>
                                mad r6.y, r13.z, r6.y, r11.y
                                rcp r6.y, r6.y
                                mad r6.y, r13.w, r6.y, c139.x
                                mad r6.y, r8.x, r6.y, -r8.y
                                rcp r8.z, r6.z
                                mul r6.y, r6.y, r8.z  // ::X<0>
                                mad r6.z, r6.y, r6.z, r8.y  // ::Z<0>

#line 1616
                                max r8.y, r6.y, c103.z  // ::X<0>

#line 1619
                                max r6.y, r8.x, c103.z  // ::Y<0>

#line 1622
                                max r8.x, r6.z, c103.z  // ::Z<0>

#line 470
                                mul r9.xyw, r6.y, c24.xyzz
                                mad r8.yzw, r8.y, c23.xxyz, r9.xxyw
                                mad r12.xyz, r8.x, c25.xzyw, r8.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2496
                                mov r1.z, -c107.w
                              else
                                add r6.y, r6.x, c48.w
                                cmp r1.z, -r6_abs.y, c107_abs.w, c107_abs.z

#line 512
                                mul r6.z, r10.z, r11.y
                                rcp r8.x, r11.x
                                mul r13.x, r6.z, r8.x  // ::xyY_XYZ<0>
                                add r6.z, -r10.z, -r11.x
                                add r6.z, r6.z, -c107.w
                                mul r6.z, r11.y, r6.z
                                mul r13.z, r8.x, r6.z  // ::xyY_XYZ<2>
                                mov r13.y, r11.y
                                cmp r8.xyz, -r11_abs.x, c113.w, r13  // ::xyY_XYZ<0,1,2>

#line 2497
                                cmp r12.xyz, -r6_abs.y, r8.xzyw, r12  // ::TLrgb<0,2,1>
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r1.z, -r1.z

#line 2515
              else

#line 2499
                if_eq r6.x, -c35.x

#line 1347
                  mad r1.z, r10.z, c125.x, c125.y
                  frc r1.z, r1.z
                  mad r1.z, r1.z, c80.x, c80.y
                  sincos r8.xy, r1.z
                  rcp r1.z, r8.x
                  mul r1.z, r1.z, r8.y  // ::x<0>
                  mul r6.y, r1.z, r1.z  // ::x<0>
                  mul r6.z, r11.x, r11.x
                  mul r6.z, r6.z, -c139.x
                  rcp r6.y, r6.y
                  add r6.y, r6.y, -c107.w
                  mul r6.y, r6.y, -c86.x
                  rcp r6.y, r6.y
                  mul r6.y, r6.y, r6.z
                  rsq r6.y, r6.y
                  rcp r6.y, r6.y  // ::r<0>
                  mad r1.z, r1.z, r1.z, -c107.w
                  mul r1.z, r1.z, -c86.x
                  rcp r1.z, r1.z
                  mul r1.z, r1.z, r6.z
                  rsq r1.z, r1.z
                  rcp r1.z, r1.z  // ::g<0>
                  mul r6.z, r1.z, c129.w
                  mad r6.z, r6.y, c125.z, r6.z
                  add r6.z, r6.z, c65.w
                  rcp r6.z, r6.z
                  mul r6.z, r6.z, r11.y  // ::k<0>
                  add r8.x, -r6.y, -c107.w
                  add r8.x, -r1.z, r8.x
                  mul r12.y, r6.z, r8.x  // ::B<0>
                  mul r12.z, r1.z, r6.z  // ::G<0>
                  mul r12.x, r6.y, r6.z  // ::R<0>

#line 2499
                  mov r1.z, -c107.w
                else
                  if_eq r6.x, -c35.y

#line 1893
                    mul r6.y, r10.z, c125.w  // XYZ_Lrgb::input<0>
                    mad r6.z, r11.x, c61.x, r6.y
                    mad r6.z, r11.y, c162.w, r6.z  // XYZ_Lrgb::input<2>

#line 470
                    mul r8.xyz, r11.x, c24
                    mad r8.xyz, r6.y, c23, r8
                    mad r12.xyz, r6.z, c25.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2500
                    mov r1.z, -c107.w
                  else
                    if_eq r6.x, -c35.z

#line 1913
                      if_eq r9.z, -r5.w

#line 1926
                        mov r12.xyz, c103.z  // ::UVW_Lrgb<0,2,1>
                      else

#line 508
                        abs r5.w, c13.x

#line 512
                        rcp r6.y, c13.x
                        mul r8.x, r6.y, c12.x  // ::xyY_XYZ<0>
                        mov r9.x, c13.x  // ::WhiteY<0>
                        add r6.z, -r9.x, -c12.x
                        add r6.z, r6.z, -c107.w
                        mul r8.z, r6.y, r6.z  // ::xyY_XYZ<2>
                        mov r8.y, -c107.w
                        cmp r8.xyz, -r5.w, c113.w, r8  // ::xyY_XYZ<0,1,2>

#line 1914
                        cmp r5.w, -r5.w, c127.y, c127.w
                        add r5.w, r5.w, r8.x
                        mul r6.y, r8.x, -c61.z
                        mad r5.w, r8.z, -c61.x, r5.w
                        rcp r5.w, r5.w
                        mul r6.y, r5.w, r6.y  // ::uN<0>
                        mul r5.w, r8.y, r5.w
                        mul r5.w, r5.w, -c107.y  // ::vN<0>
                        add r6.z, r11.y, -c45.x
                        mul r6.z, r6.z, c111.x
                        mul r8.x, r6.z, r6.z
                        mul r6.z, r6.z, r8.x  // ::y<0>
                        mul r8.x, r11.y, -c40.x
                        rcp r8.y, r8.x
                        mad r6.y, r10.z, r8.y, r6.y
                        cmp r6.y, -r8_abs.x, c103.z, r6.y  // ::_u<0>
                        mad r5.w, r11.x, r8.y, r5.w
                        cmp r5.w, -r8_abs.x, c103.z, r5.w  // ::_v<0>
                        mul r8.x, r6.y, r6.z
                        rcp r5.w, r5.w
                        mul r8.x, r5.w, r8.x  // ::x<0>
                        add r8.y, r5.w, r5.w
                        mul r5.w, r6.y, r5.w
                        mad r5.w, r5.w, c142.y, r8.y
                        add r5.w, r5.w, c139.x
                        mul r5.w, r5.w, r6.z  // ::z<0>

#line 1925
                        mul r6.y, r8.x, c76.z  // ::xyz<0>
                        mul r6.z, r6.z, c76.z  // ::xyz<1>
                        mul r5.w, r5.w, c76.z  // ::xyz<2>

#line 470
                        mul r8.xyz, r6.z, c24
                        mad r8.xyz, r6.y, c23, r8
                        mad r12.xyz, r5.w, c25.xzyw, r8.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 1926
                      endif

#line 2501
                      mov r1.z, -c107.w
                    else
                      if_eq r6.x, -c35.w

#line 2144
                        add r5.w, r10.z, -c154.w
                        mul r6.y, r5.w, c90.w  // ::ypbpr<0>
                        add r8.xy, r11, c103.w

#line 2120
                        mad r12.xy, r8.yxzw, c111.yzzw, r6.y  // ::r<0>, ::b<0>
                        mul r6.y, r12.x, c138.x
                        mad r5.w, r5.w, c90.w, -r6.y
                        mad r5.w, r12.y, -c138.z, r5.w
                        mul r12.z, r5.w, c92.z  // ::g<0>

#line 2502
                        mov r1.z, -c107.w
                      else
                        if_eq r6.x, -c36.x

#line 512
                          mul r5.w, r10.z, r11.y
                          rcp r6.y, r11.x
                          mul r8.x, r5.w, r6.y  // ::xyY_XYZ<0>
                          add r5.w, -r10.z, -r11.x
                          add r5.w, r5.w, -c107.w
                          mul r5.w, r11.y, r5.w
                          mul r8.z, r6.y, r5.w  // ::xyY_XYZ<2>
                          mov r8.y, r11.y
                          cmp r8.xyz, -r11_abs.x, c113.w, r8  // ::xyY_XYZ<0,1,2>

#line 470
                          mul r9.xyz, r8.y, c24
                          mad r8.xyw, r8.x, c23.xyzz, r9.xyzz
                          mad r12.xyz, r8.z, c25.xzyw, r8.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2503
                          mov r1.z, -c107.w
                        else
                          if_eq r6.x, -c36.y

#line 508
                            abs r5.w, c13.x

#line 512
                            rcp r6.y, c13.x
                            mul r8.x, r6.y, c12.x  // ::xyY_XYZ<0>
                            mov r9.x, c13.x  // ::WhiteY<0>
                            add r6.z, -r9.x, -c12.x
                            add r6.z, r6.z, -c107.w
                            mul r8.z, r6.y, r6.z  // ::xyY_XYZ<2>

#line 1985
                            mov r8.y, -c107.w
                            mul r8.xyz, r8, c155.w
                            cmp r8.xyz, -r5.w, c111.w, r8  // ::white<0,1,2>

#line 1989
                            add r5.w, r8.y, r8.x
                            add r5.w, r8.z, r5.w
                            rcp r6.y, r5.w
                            mul r6.y, r6.y, r8.y  // ::x0<0>
                            mul r5.w, r5.w, c76.z  // ::ew<0>

#line 1994
                            mul r6.z, r11.y, r11.y
                            mul r8.y, r6.z, c76.z  // ::Y<0>

#line 1998
                            mul r9.xy, c38.yxzw, c38.xzzw
                            mul r8.w, r6.y, r6.z
                            mul r9.xy, r11.x, r9
                            mul r9.xz, r9.xyyw, c155.w
                            mad r8.w, r8.w, r5.w, r9.x
                            mul r6.y, r6.y, r9.z
                            mad r6.y, r6.y, -r5.w, r8.w
                            mul r8.w, r11.x, c155.w
                            mul r9.xw, r8.w, c38.xyzz
                            mul r10.x, r5.w, r9.z
                            mad r8.w, r8.w, c38.x, -r10.x
                            mad r8.w, r6.z, r5.w, r8.w
                            rcp r8.w, r8.w
                            mul r6.y, r6.y, r8.w  // ::x<0>
                            mad r6.z, r9.w, c38.x, r6.z
                            mad r6.z, r9.y, -c155.w, r6.z
                            mul r8.w, r5.w, r8.y
                            mad r8.w, r8.w, c155.w, r9.x
                            mad r5.w, r9.z, -r5.w, r8.w
                            rcp r5.w, r5.w
                            mul r8.w, r5.w, r6.z  // ::y<0>

#line 512
                            mul r9.x, r8.y, r6.y
                            rcp r9.y, r8.w
                            mul r8.x, r9.y, r9.x  // ::xyY_XYZ<0>
                            mad r5.w, r6.z, -r5.w, -r6.y
                            add r5.w, r5.w, -c107.w
                            mul r5.w, r8.y, r5.w
                            mul r8.z, r9.y, r5.w  // ::xyY_XYZ<2>
                            cmp r8.xyz, -r8_abs.w, c113.w, r8  // ::xyY_XYZ<0,1,2>

#line 470
                            mul r9.xyz, r8.y, c24
                            mad r8.xyw, r8.x, c23.xyzz, r9.xyzz
                            mad r12.xyz, r8.z, c25.xzyw, r8.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2504
                            mov r1.z, -c107.w
                          else

#line 2508
                            add r8, r6.x, c170

#line 470
                            mul r9.xyz, r11.x, c24
                            mad r9.xyz, r10.z, c23, r9
                            mad r9.xyz, r11.y, c25, r9  // ::x<0>, ::y<0>, ::z<0>

#line 2164
                            add r5.w, r10.z, -c154.w
                            mul r6.y, r5.w, c90.w  // ::ypbpr<0>
                            add r10.xy, r11, c103.w

#line 2120
                            mad r13.xz, r10.yyxw, c111.yyzw, r6.y  // ::r<0>, ::b<0>
                            mul r6.y, r13.x, c138.x
                            mad r5.w, r5.w, c90.w, -r6.y
                            mad r5.w, r13.z, -c138.z, r5.w
                            mul r13.y, r5.w, c92.z  // ::g<0>

#line 2020
                            add r5.w, r10.z, -r11.x  // ::c<0>
                            add r14.x, r11.y, r5.w  // ::YCoCg_Lrgb<0>
                            add r14.y, r10.z, r11.x  // ::YCoCg_Lrgb<1>
                            add r14.z, -r11.y, r5.w  // ::YCoCg_Lrgb<2>

#line 2508
                            cmp r5.w, -r8_abs.w, c107_abs.w, c107_abs.z

#line 2036
                            mad r6.yz, r11.x, c137.xxyw, r10.z
                            mad r9.w, r11.x, -c137.z, r10.z
                            mad r15.y, r11.y, c137.w, r9.w  // ::g<0>
                            mad r15.xz, r11.y, -c96.xyyw, r6.yyzw  // ::r<0>, ::b<0>

#line 2508
                            cmp r10.xyw, -r8_abs.w, r15.xyzz, r12.xzzy  // ::TLrgb<0,1,2>
                            cmp r10.xyw, -r8_abs.z, r14.xyzz, r10  // ::TLrgb<0,1,2>
                            cmp r5.w, -r8_abs.z, -c107.w, r5.w
                            cmp r10.xyw, -r8_abs.y, r13.xyzz, r10  // ::TLrgb<0,1,2>
                            cmp r5.w, -r8_abs.y, -c107.w, r5.w
                            cmp r12.xyz, -r8_abs.x, r9.xzyw, r10.xwyw  // ::TLrgb<0,2,1>
                            cmp r1.z, -r8_abs.x, -c107.w, r5.w
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
                if_ne r1.z, -r1.z

#line 2515
                else

#line 2510
                  if_eq r6.x, -c71.x

#line 2065
                    mad r8.xyz, r11.x, c95, r10.z
                    mad r8.xyz, r11.y, c96.zzww, r8  // ::r<0>, ::g<0>, ::b<0>

#line 2510
                    mov r1.z, -c107.w
                  else

#line 2513
                    add r6.xyz, r6.x, c71.yzww

#line 2120
                    mad r9, r11.x, c97.xywz, r10.z  // ::b<0>

#line 2089
                    mad r10.xyw, r11.y, c98.xyzz, r9  // ::r<0>, ::g<0>, ::b<0>

#line 2093
                    mov_sat r13.xyz, r10.xyww
                    cmp r10.xyw, r10, r13.xyzz, c103.z  // ::r<0>, ::g<0>, ::b<0>

#line 2119
                    mad r9.x, r11.y, c95.w, r10.z  // ::r<0>
                    mad r5.w, r9.x, -c138.x, r10.z
                    mad r5.w, r9.z, -c138.z, r5.w
                    mul r9.y, r5.w, c92.z  // ::g<0>

#line 2513
                    cmp r5.w, -r6_abs.z, c107_abs.w, c107_abs.z

#line 2214
                    mad r13.xyz, r11.yxxw, c99, r10.z  // ::r<0>, ::b<0>

#line 2211
                    mad r8.w, r11.y, c98.w, r13.y  // ::g<0>

#line 2220
                    mov_sat r13.yw, r13.xxzz
                    mov_sat r9.w, r8.w
                    cmp r14.y, r8.w, r9.w, c103.z  // ::g<0>
                    cmp r14.xz, r13, r13.yyww, c103.z  // ::r<0>, ::b<0>

#line 2513
                    cmp r13.xyz, -r6_abs.z, r14, r12.xzyw  // ::TLrgb<0,1,2>
                    cmp r9.xyz, -r6_abs.y, r9, r13  // ::TLrgb<0,1,2>
                    cmp r5.w, -r6_abs.y, -c107.w, r5.w
                    cmp r8.xyz, -r6_abs.x, r10.xyww, r9  // ::TLrgb<0,1,2>
                    cmp r1.z, -r6_abs.x, -c107.w, r5.w
                  endif
                  mov r11.w, r10.z
                  cmp r12.xyz, -r1.z, r11.wyxw, r8.xzyw  // ::TLrgb<0,2,1>
                endif
              endif
            endif
          endif

#line 2333
          rcp r1.z, c11.x
          log r5.w, r12.x
          mul r6.x, r1.z, r5.w
          exp r7.x, r6.x  // ::V<0>

#line 2338
          if_eq c10.x, r0.z

#line 2398
          else

#line 2338
            add r6.x, r6.w, c10.x

#line 2346
            add r6.y, -r12.x, -c107.w
            rsq r6.z, r12.x
            rcp r6.z, r6.z
            mul r6.z, r6.z, -c142.y  // ::Transfer<0>
            cmp r6.y, r6.y, -c107_abs.w, -c107_abs.z
            cmp r6.y, r12.x, r6.y, c103.z
            add r8.x, r12.x, c105.y
            log r8.x, r8.x
            mad r8.x, r8.x, c105.z, c105.w  // ::Transfer<0>
            cmp r6.y, r6.y, r8.x, r6.z  // ::Transfer<0>
            cmp r7.x, -r6_abs.x, r6.y, r7.x  // ::Transfer<0>

#line 2353
            if_eq c10.x, -r6.w

#line 2398
            else

#line 2353
              add r6.x, -r0.w, c10.x

#line 2356
              add r6.y, -r12.x, c67.y
              mul r6.z, r12.x, c99.w
              cmp r6.y, r6.y, r6.z, -c107.w  // ::V<0>
              cmp r7.x, -r6_abs.x, r6.y, r7.x  // ::Transfer<0>

#line 2361
              if_eq c10.x, r0.w

#line 2398
              else

#line 2361
                mov r6.x, c10.x  // ::Companding<0>
                add r6.y, r6.x, c61.x

#line 2376
                if_eq r6.x, -c61.x

#line 2370
                  mul r6.z, r5.w, c116.x
                  exp r6.z, r6.z
                  add r8.x, r6.z, -c57.z
                  max r9.x, r8.x, c103.z  // ::a<0>
                  mad r6.z, r6.z, -c57.y, c57.x  // ::b<0>
                  rcp r6.z, r6.z
                  mul r6.z, r6.z, r9.x
                  pow r8.x, r6.z, c132.w
                  mul r6.z, r8.x, c116.y  // ::Transfer<0>
                  cmp r7.x, -r6_abs.y, r6.z, r7.x  // ::Transfer<0>

#line 2398
                else

#line 2392
                  add r6.xyz, r6.x, c153

#line 2387
                  add r8.xy, r12.x, c116.zwzw

#line 2395
                  mul r8.zw, r12.x, c128.xyxy
                  mul r9.xy, r5.w, c128.zwzw

#line 2379
                  exp r5.w, r9.x

#line 2387
                  mad r9.xz, r5.w, c101.xyyw, c101.zyww
                  cmp r8.xy, r8, r9.xzzw, r8.z  // ::V<0,0>

#line 2395
                  add r5.w, -r12.x, c100.x
                  exp r8.z, r9.y
                  mad r8.z, r8.z, c100.y, c100.z
                  cmp r5.w, r5.w, r8.w, r8.z  // ::V<0>

#line 2398
                  cmp r5.w, -r6_abs.z, r5.w, r12.x  // ::Transfer<0>
                  cmp r5.w, -r6_abs.y, r8.y, r5.w  // ::Transfer<0>
                  cmp r7.x, -r6_abs.x, r8.x, r5.w  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2333
          log r5.w, r12.z
          mul r6.x, r1.z, r5.w
          exp r7.y, r6.x  // ::V<0>

#line 2338
          if_eq c10.x, r0.z

#line 2398
          else

#line 2338
            add r6.x, r6.w, c10.x

#line 2346
            add r6.y, -r12.z, -c107.w
            rsq r6.z, r12.z
            rcp r6.z, r6.z
            mul r6.z, r6.z, -c142.y  // ::Transfer<0>
            cmp r6.y, r6.y, -c107_abs.w, -c107_abs.z
            cmp r6.y, r12.z, r6.y, c103.z
            add r8.x, r12.z, c105.y
            log r8.x, r8.x
            mad r8.x, r8.x, c105.z, c105.w  // ::Transfer<0>
            cmp r6.y, r6.y, r8.x, r6.z  // ::Transfer<0>
            cmp r7.y, -r6_abs.x, r6.y, r7.y  // ::Transfer<0>

#line 2353
            if_eq c10.x, -r6.w

#line 2398
            else

#line 2353
              add r6.x, -r0.w, c10.x

#line 2356
              add r6.y, -r12.z, c67.y
              mul r6.z, r12.z, c99.w
              cmp r6.y, r6.y, r6.z, -c107.w  // ::V<0>
              cmp r7.y, -r6_abs.x, r6.y, r7.y  // ::Transfer<0>

#line 2361
              if_eq c10.x, r0.w

#line 2398
              else

#line 2361
                mov r6.x, c10.x  // ::Companding<0>
                add r6.y, r6.x, c61.x

#line 2376
                if_eq r6.x, -c61.x

#line 2370
                  mul r6.z, r5.w, c116.x
                  exp r6.z, r6.z
                  add r8.x, r6.z, -c57.z
                  max r9.x, r8.x, c103.z  // ::a<0>
                  mad r6.z, r6.z, -c57.y, c57.x  // ::b<0>
                  rcp r6.z, r6.z
                  mul r6.z, r6.z, r9.x
                  pow r8.x, r6.z, c132.w
                  mul r6.z, r8.x, c116.y  // ::Transfer<0>
                  cmp r7.y, -r6_abs.y, r6.z, r7.y  // ::Transfer<0>

#line 2398
                else

#line 2392
                  add r6.xyz, r6.x, c153

#line 2387
                  add r8.xy, r12.z, c116.zwzw

#line 2395
                  mul r8.zw, r12.z, c128.xyxy
                  mul r9.xy, r5.w, c128.zwzw

#line 2379
                  exp r5.w, r9.x

#line 2387
                  mad r9.xz, r5.w, c101.xyyw, c101.zyww
                  cmp r8.xy, r8, r9.xzzw, r8.z  // ::V<0,0>

#line 2395
                  add r5.w, -r12.z, c100.x
                  exp r8.z, r9.y
                  mad r8.z, r8.z, c100.y, c100.z
                  cmp r5.w, r5.w, r8.w, r8.z  // ::V<0>

#line 2398
                  cmp r5.w, -r6_abs.z, r5.w, r12.z  // ::Transfer<0>
                  cmp r5.w, -r6_abs.y, r8.y, r5.w  // ::Transfer<0>
                  cmp r7.y, -r6_abs.x, r8.x, r5.w  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2333
          log r5.w, r12.y
          mul r1.z, r1.z, r5.w
          exp r7.z, r1.z  // ::V<0>

#line 2338
          if_eq c10.x, r0.z

#line 2398
          else

#line 2338
            add r1.z, r6.w, c10.x

#line 2346
            add r6.x, -r12.y, -c107.w
            rsq r6.y, r12.y
            rcp r6.y, r6.y
            mul r6.y, r6.y, -c142.y  // ::Transfer<0>
            cmp r6.x, r6.x, -c107_abs.w, -c107_abs.z
            cmp r6.x, r12.y, r6.x, c103.z
            add r6.z, r12.y, c105.y
            log r6.z, r6.z
            mad r6.z, r6.z, c105.z, c105.w  // ::Transfer<0>
            cmp r6.x, r6.x, r6.z, r6.y  // ::Transfer<0>
            cmp r7.z, -r1_abs.z, r6.x, r7.z  // ::Transfer<0>

#line 2353
            if_eq c10.x, -r6.w

#line 2398
            else

#line 2353
              add r1.z, -r0.w, c10.x

#line 2356
              add r6.x, -r12.y, c67.y
              mul r6.y, r12.y, c99.w
              cmp r6.x, r6.x, r6.y, -c107.w  // ::V<0>
              cmp r7.z, -r1_abs.z, r6.x, r7.z  // ::Transfer<0>

#line 2361
              if_eq c10.x, r0.w

#line 2398
              else

#line 2361
                mov r6.x, c10.x  // ::Companding<0>
                add r1.z, r6.x, c61.x

#line 2376
                if_eq r6.x, -c61.x

#line 2370
                  mul r6.y, r5.w, c116.x
                  exp r6.y, r6.y
                  add r6.z, r6.y, -c57.z
                  max r8.x, r6.z, c103.z  // ::a<0>
                  mad r6.y, r6.y, -c57.y, c57.x  // ::b<0>
                  rcp r6.y, r6.y
                  mul r6.y, r6.y, r8.x
                  pow r8.x, r6.y, c132.w
                  mul r6.y, r8.x, c116.y  // ::Transfer<0>
                  cmp r7.z, -r1_abs.z, r6.y, r7.z  // ::Transfer<0>

#line 2398
                else

#line 2392
                  add r6.xyz, r6.x, c153

#line 2387
                  add r8.xy, r12.y, c116.zwzw

#line 2395
                  mul r8.zw, r12.y, c128.xyxy
                  mul r9.xy, r5.w, c128.zwzw

#line 2379
                  exp r1.z, r9.x

#line 2387
                  mad r9.xz, r1.z, c101.xyyw, c101.zyww
                  cmp r8.xy, r8, r9.xzzw, r8.z  // ::V<0,0>

#line 2395
                  add r1.z, -r12.y, c100.x
                  exp r5.w, r9.y
                  mad r5.w, r5.w, c100.y, c100.z
                  cmp r1.z, r1.z, r8.w, r5.w  // ::V<0>

#line 2398
                  cmp r1.z, -r6_abs.z, r1.z, r12.y  // ::Transfer<0>
                  cmp r1.z, -r6_abs.y, r8.y, r1.z  // ::Transfer<0>
                  cmp r7.z, -r6_abs.x, r8.x, r1.z  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2713
          mov oC0, r7  // ::main<0,1,2,3>
        else
          mov oC0, c103.z  // ::main<0,1,2,3>
        endif
        mov r3.x, r1.w  // ::input4<0>
        mov r3.yz, r2  // ::input4<1,2>
        mov r2.yw, r1.xxzy  // ::input3<0,1>
      endif
    endif
    if_ne r4.w, -r4.w

#line 2731
    else

#line 2715
      if_ge c0.x, r0.y
        mov r0.y, c142.y  // ::Minimum3<119>
        mad r1, r3.xwyz, c5.x, -r0.y
        frc r6, r1
        add r1, r1, -r6
        rcp r0.y, c5.x
        mul r1, r0.y, r1
        cmp r1, -c5.x, r3.xwyz, r1  // ::input4<0,3,1,2>

#line 668
        add r3, -r1, -c107.w
        mul r6.xyz, r3.y, r3.xzww  // ::r<0>, ::g<0>, ::b<0>

#line 2523
        mov r7.x, c0.x  // ::Model<0>
        add r7.xyz, r7.x, c104

#line 691
        mad r3.xzw, r3, r3.y, r1.y  // ::c<0>, ::m<0>, ::y<0>

#line 1789
        mul r8.xyz, r1.xzww, r3.y  // ::r<0>, ::g<0>, ::b<0>

#line 1812
        lrp r9.xyz, r1.xzww, -c107.w, r1.y  // ::r<0>, ::g<0>, ::b<0>

#line 2523
        cmp r1.xyz, -r7_abs.y, r8, r9  // ::TLrgb<0,1,2>
        cmp r1.xyz, -r7_abs.x, r3.xzww, r1  // ::TLrgb<0,1,2>
        cmp r1.xyz, -r0_abs.x, r6, r1  // ::TLrgb<0,1,2>
        cmp r0.y, -r7_abs.z, -c107_abs.w, -c107_abs.z
        cmp r0.y, -r7_abs.y, c107.w, r0.y
        cmp r0.y, -r7_abs.x, c107.w, r0.y
        cmp r0.x, -r0_abs.x, c107.w, r0.y
        cmp r1.xyz, r0.x, c103.z, r1  // ::TLrgb<0,1,2>

#line 2333
        rcp r0.x, c11.x
        log r0.y, r1.x
        mul r1.w, r0.y, r0.x
        exp r3.x, r1.w  // ::V<0>

#line 2338
        if_eq c10.x, r0.z

#line 2398
        else

#line 2338
          mov r1.w, c107.w
          add r2.z, r1.w, c10.x

#line 2346
          add r3.w, -r1.x, -c107.w
          rsq r4.w, r1.x
          rcp r4.w, r4.w
          mul r4.w, r4.w, -c142.y  // ::Transfer<0>
          cmp r3.w, r3.w, -c107_abs.w, -c107_abs.z
          cmp r3.w, r1.x, r3.w, c103.z
          add r5.w, r1.x, c105.y
          log r5.w, r5.w
          mad r5.w, r5.w, c105.z, c105.w  // ::Transfer<0>
          cmp r3.w, r3.w, r5.w, r4.w  // ::Transfer<0>
          cmp r3.x, -r2_abs.z, r3.w, r3.x  // ::Transfer<0>

#line 2353
          if_eq c10.x, -r1.w

#line 2398
          else

#line 2353
            add r1.w, -r0.w, c10.x

#line 2356
            add r2.z, -r1.x, c67.y
            mul r3.w, r1.x, c99.w
            cmp r2.z, r2.z, r3.w, -c107.w  // ::V<0>
            cmp r3.x, -r1_abs.w, r2.z, r3.x  // ::Transfer<0>

#line 2361
            if_eq c10.x, r0.w

#line 2398
            else

#line 2361
              mov r6.x, c10.x  // ::Companding<0>
              add r1.w, r6.x, c61.x

#line 2376
              if_eq r6.x, -c61.x

#line 2370
                mul r2.z, r0.y, c116.x
                exp r2.z, r2.z
                add r3.w, r2.z, -c57.z
                max r4.w, r3.w, c103.z  // ::a<0>
                mad r2.z, r2.z, -c57.y, c57.x  // ::b<0>
                rcp r2.z, r2.z
                mul r2.z, r2.z, r4.w
                pow r3.w, r2.z, c132.w
                mul r2.z, r3.w, c116.y  // ::Transfer<0>
                cmp r3.x, -r1_abs.w, r2.z, r3.x  // ::Transfer<0>

#line 2398
              else

#line 2392
                add r6.xyz, r6.x, c153

#line 2387
                add r7.xy, r1.x, c116.zwzw

#line 2395
                mul r7.zw, r1.x, c128.xyxy
                mul r8.xy, r0.y, c128.zwzw

#line 2379
                exp r0.y, r8.x

#line 2387
                mad r8.xz, r0.y, c101.xyyw, c101.zyww
                cmp r7.xy, r7, r8.xzzw, r7.z  // ::V<0,0>

#line 2395
                add r0.y, -r1.x, c100.x
                exp r1.w, r8.y
                mad r1.w, r1.w, c100.y, c100.z
                cmp r0.y, r0.y, r7.w, r1.w  // ::V<0>

#line 2398
                cmp r0.y, -r6_abs.z, r0.y, r1.x  // ::Transfer<0>
                cmp r0.y, -r6_abs.y, r7.y, r0.y  // ::Transfer<0>
                cmp r3.x, -r6_abs.x, r7.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2333
        log r0.y, r1.y
        mul r1.x, r0.y, r0.x
        exp r3.y, r1.x  // ::V<0>

#line 2338
        if_eq c10.x, r0.z

#line 2398
        else

#line 2338
          mov r1.w, c107.w
          add r1.x, r1.w, c10.x

#line 2346
          add r2.z, -r1.y, -c107.w
          rsq r3.w, r1.y
          rcp r3.w, r3.w
          mul r3.w, r3.w, -c142.y  // ::Transfer<0>
          cmp r2.z, r2.z, -c107_abs.w, -c107_abs.z
          cmp r2.z, r1.y, r2.z, c103.z
          add r4.w, r1.y, c105.y
          log r4.w, r4.w
          mad r4.w, r4.w, c105.z, c105.w  // ::Transfer<0>
          cmp r2.z, r2.z, r4.w, r3.w  // ::Transfer<0>
          cmp r3.y, -r1_abs.x, r2.z, r3.y  // ::Transfer<0>

#line 2353
          if_eq c10.x, -r1.w

#line 2398
          else

#line 2353
            add r1.x, -r0.w, c10.x

#line 2356
            add r1.w, -r1.y, c67.y
            mul r2.z, r1.y, c99.w
            cmp r1.w, r1.w, r2.z, -c107.w  // ::V<0>
            cmp r3.y, -r1_abs.x, r1.w, r3.y  // ::Transfer<0>

#line 2361
            if_eq c10.x, r0.w

#line 2398
            else

#line 2361
              mov r1.x, c10.x  // ::Companding<0>
              add r1.w, r1.x, c61.x

#line 2376
              if_eq r1.x, -c61.x

#line 2370
                mul r2.z, r0.y, c116.x
                exp r2.z, r2.z
                add r3.w, r2.z, -c57.z
                max r4.w, r3.w, c103.z  // ::a<0>
                mad r2.z, r2.z, -c57.y, c57.x  // ::b<0>
                rcp r2.z, r2.z
                mul r2.z, r2.z, r4.w
                pow r3.w, r2.z, c132.w
                mul r2.z, r3.w, c116.y  // ::Transfer<0>
                cmp r3.y, -r1_abs.w, r2.z, r3.y  // ::Transfer<0>

#line 2398
              else

#line 2392
                add r6.xyz, r1.x, c153

#line 2387
                add r1.xw, r1.y, c116.zyzw

#line 2395
                mul r7.xy, r1.y, c128
                mul r7.zw, r0.y, c128

#line 2379
                exp r0.y, r7.z

#line 2387
                mad r8.xy, r0.y, c101, c101.zwzw
                cmp r1.xw, r1, r8.xyzy, r7.x  // ::V<0,0>

#line 2395
                add r0.y, -r1.y, c100.x
                exp r2.z, r7.w
                mad r2.z, r2.z, c100.y, c100.z
                cmp r0.y, r0.y, r7.y, r2.z  // ::V<0>

#line 2398
                cmp r0.y, -r6_abs.z, r0.y, r1.y  // ::Transfer<0>
                cmp r0.y, -r6_abs.y, r1.w, r0.y  // ::Transfer<0>
                cmp r3.y, -r6_abs.x, r1.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2333
        log r0.y, r1.z
        mul r0.x, r0.y, r0.x
        exp r3.z, r0.x  // ::V<0>

#line 2338
        if_eq c10.x, r0.z

#line 2398
        else

#line 2338
          mov r1.w, c107.w
          add r0.x, r1.w, c10.x

#line 2346
          add r1.x, -r1.z, -c107.w
          rsq r1.y, r1.z
          rcp r1.y, r1.y
          mul r1.y, r1.y, -c142.y  // ::Transfer<0>
          cmp r1.x, r1.x, -c107_abs.w, -c107_abs.z
          cmp r1.x, r1.z, r1.x, c103.z
          add r2.z, r1.z, c105.y
          log r2.z, r2.z
          mad r2.z, r2.z, c105.z, c105.w  // ::Transfer<0>
          cmp r1.x, r1.x, r2.z, r1.y  // ::Transfer<0>
          cmp r3.z, -r0_abs.x, r1.x, r3.z  // ::Transfer<0>

#line 2353
          if_eq c10.x, -r1.w

#line 2398
          else

#line 2353
            add r0.x, -r0.w, c10.x

#line 2356
            add r1.x, -r1.z, c67.y
            mul r1.y, r1.z, c99.w
            cmp r1.x, r1.x, r1.y, -c107.w  // ::V<0>
            cmp r3.z, -r0_abs.x, r1.x, r3.z  // ::Transfer<0>

#line 2361
            if_eq c10.x, r0.w

#line 2398
            else

#line 2361
              mov r0.x, c10.x  // ::Companding<0>
              add r1.x, r0.x, c61.x

#line 2376
              if_eq r0.x, -c61.x

#line 2370
                mul r1.y, r0.y, c116.x
                exp r1.y, r1.y
                add r1.w, r1.y, -c57.z
                max r2.z, r1.w, c103.z  // ::a<0>
                mad r1.y, r1.y, -c57.y, c57.x  // ::b<0>
                rcp r1.y, r1.y
                mul r1.y, r1.y, r2.z
                pow r2.z, r1.y, c132.w
                mul r1.y, r2.z, c116.y  // ::Transfer<0>
                cmp r3.z, -r1_abs.x, r1.y, r3.z  // ::Transfer<0>

#line 2398
              else

#line 2392
                add r1.xyw, r0.x, c153.xyzz

#line 2387
                add r6.xy, r1.z, c116.zwzw

#line 2395
                mul r6.zw, r1.z, c128.xyxy
                mul r0.xy, r0.y, c128.zwzw

#line 2379
                exp r0.x, r0.x

#line 2387
                mad r7.xy, r0.x, c101, c101.zwzw
                cmp r6.xy, r6, r7, r6.z  // ::V<0,0>

#line 2395
                add r0.x, -r1.z, c100.x
                exp r0.y, r0.y
                mad r0.y, r0.y, c100.y, c100.z
                cmp r0.x, r0.x, r6.w, r0.y  // ::V<0>

#line 2398
                cmp r0.x, -r1_abs.w, r0.x, r1.z  // ::Transfer<0>
                cmp r0.x, -r1_abs.y, r6.y, r0.x  // ::Transfer<0>
                cmp r3.z, -r1_abs.x, r6.x, r0.x  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2721
      else

#line 2724
        mov r0.y, c142.y  // ::Minimum3<119>
        mad r1.xyz, r2.ywxw, c5.x, -r0.y
        frc r6.xyz, r1
        add r1.xyz, r1, -r6
        rcp r0.x, c5.x
        mul r1.xyz, r0.x, r1
        cmp r1.xyz, -c5.x, r2.ywxw, r1  // ::input3<0,1,2>

#line 328
        lrp r2.z, r1.x, r5.x, r4.x  // ::ConvertRange<0>
        lrp r6.x, r1.y, r5.y, r4.y  // ::ConvertRange<0>
        add r0.x, -r4.z, r5.z
        mul r0.x, r0.x, r1.z
        lrp r6.y, r1.z, r5.z, r4.z  // ::ConvertRange<0>

#line 2466
        if_eq c0.x, r0.z

#line 1776
          mul r1, r6.xxyy, c124.xyxy
          add r5.z, r1.z, r1.y  // ::RCA_Lrgb<1>
          mad r5.xy, r2.z, c124.yxzw, r1.xwzw  // ::RCA_Lrgb<0,2>

#line 2466
          mov r0.y, -c107.w
        else
          if_eq c0.x, r0.w

#line 1826
            mul r1, r6.yyxx, c124.xyyx
            mad r5.xz, r2.z, c124.yyxw, r1  // ::RGV_Lrgb<0,1>
            add r5.y, r1.w, r1.y  // ::RGV_Lrgb<2>

#line 2467
            mov r0.y, -c107.w
          else
            mov r1.x, c0.x  // ::Model<0>
            if_eq r1.x, -c61.x

#line 1848
              min r1.y, r6.y, r6.x
              min r3.w, r1.y, r2.z  // ::white<0>
              add r1.y, r2.z, -r3.w  // ::r<0>
              add r1.zw, -r3.w, r6.xyxy  // ::y<0>, ::b<0>
              add r2.w, -r1.w, r1.z
              cmp r7.xw, r2.w, r1.zyzw, r1.wyzz  // ::g<0>
              max r2.w, r1.y, r7.x  // ::mY<0>

#line 1858
              add r1.z, r1.z, -r7.w  // ::y<0>
              add r7.z, r1.w, -r7.w  // ::b<0>

#line 1865
              cmp r1.w, -r7.w, -c107_abs.z, -c107_abs.w
              cmp r1.w, -r7.z, c103.z, r1.w
              mul r4.xy, r7.zwzw, c162.w
              cmp r7.yz, r1.w, r7.xzww, r4.xxyw  // ::b<0>, ::g<0>
              add r7.x, r1.z, r1.y  // ::r<0>
              add r7.w, r1.z, r7.z  // ::g<0>
              max r1.y, r7.w, r7.y
              max r4.x, r7.x, r1.y  // ::mG<0>

#line 1874
              rcp r1.y, r4.x
              mul r1.y, r1.y, r2.w  // ::mN<0>

#line 1878
              mul r1.yzw, r1.y, r7.xxwy  // ::r<0>, ::g<0>, ::b<0>
              cmp r1.yzw, -r4.x, r7.xxwy, r1  // ::r<0>, ::g<0>, ::b<0>

#line 1883
              add r1.yzw, r3.w, r1  // ::r<0>, ::g<0>, ::b<0>
              frc r4.xyw, r1.yzzw
              add r1.yzw, r1, -r4.xxyw
              mul r5.xyz, r1.ywzw, c76.w  // ::RYB_Lrgb<0,2,1>

#line 2468
              mov r0.y, -c107.w
            else
              if_eq r1.x, -c61.z

#line 655
                add r5.x, -r2.z, -c107.w  // ::CMY_Lrgb<0>
                add r5.yz, -r6.xyxw, -c107.w  // ::CMY_Lrgb<2,1>

#line 2469
                mov r0.y, -c107.w
              else
                if_eq r1.x, -c139.x

#line 705
                  mul r7, r6.xyyy, c76.z  // ::c<0>, ::g<0,0,0>

#line 713
                  if_eq r7.x, c103.z

#line 762
                    mov r5.xyz, r7.ywzw  // ::HCV_Lrgb<0,2,1>
                  else

#line 705
                    mul r1.y, r2.z, c124.z  // ::h<0>

#line 713
                    cmp r1.z, r2.z, c119.x, c119.y
                    mul r1.y, r1.z, r1.y
                    frc r1.y, r1.y
                    mul r1.y, r1.y, r1.z
                    mul r1.z, r1.y, -c107.y  // ::hi<0>
                    cmp r1.y, r1.y, c119.x, c119.y
                    mul r1.w, r1.y, r1.z
                    frc r1.w, r1.w
                    mul r8.x, r1.w, r1.y  // ::v<0>

#line 718
                    frc r2.w, r1.z
                    add r1.z, r1.z, -r2.w  // ::fhi<0>

#line 744
                    add r9, r1.z, c165

#line 755
                    mov r8.yz, c107_abs.xzww
                    mad r8.w, r1.y, -r1.w, -c107.w
                    cmp r4.xyw, -r9_abs.w, r8.xyzz, r8.zyzw  // ::pure<0,1,2>
                    mad r10.xyz, r8.xzyw, c119.yxxw, c119.xzzw
                    cmp r4.xyw, -r9_abs.z, r10.zxzy, r4  // ::pure<0,1,2>
                    cmp r4.xyw, -r9_abs.y, r8.yzzx, r4  // ::pure<0,1,2>
                    cmp r4.xyw, -r9_abs.x, r10.xyzz, r4  // ::pure<0,1,2>
                    cmp r1.yzw, -r1_abs.z, r8.xzxy, r4.xxyw  // ::pure<0,1,2>

#line 761
                    lrp r5.xyz, r7.x, r1.ywzw, r7.w  // ::result<0,2,1>
                  endif

#line 2470
                  mov r0.y, -c107.w
                else
                  if_eq r1.x, -c107.y

#line 797
                    cmp r1.yz, r2.z, c78.xxyw, c78.xzww
                    mul r1.z, r1.z, r2.z
                    frc r1.z, r1.z
                    mad r1.y, r1.y, r1.z, c156.x
                    mul r1.z, r1.z, c156.x
                    cmp r1.y, r2.z, r1.z, r1.y
                    mul r1.zw, r6.xyxy, c76  // ::s<0>, ::i<0>

#line 804
                    if_lt r1.y, c124.w
                      mad r2.w, r6.x, -c166.x, c166.y
                      mul r5.y, r1.w, r2.w  // ::b<0>
                      mad r2.w, r1.y, c166.z, c166.w
                      frc r2.w, r2.w
                      mad r2.w, r2.w, c80.x, c80.y
                      sincos r7.x, r2.w
                      mul r2.w, r1.z, r7.x
                      mad r3.w, r1.y, -c80.z, c80.w
                      mad r3.w, r3.w, c79.x, c79.y
                      frc r3.w, r3.w
                      mad r3.w, r3.w, c80.x, c80.y
                      sincos r8.x, r3.w
                      rcp r3.w, r8.x
                      mad r2.w, r2.w, r3.w, -c107.w
                      mul r5.x, r1.w, r2.w  // ::r<0>
                      mad r2.w, r7.x, -r3.w, -c107.w
                      mad r2.w, r1.z, r2.w, -c107.w
                      mul r5.z, r1.w, r2.w  // ::g<0>
                    else
                      if_lt r1.y, c159.y
                        mad r2.w, r1.y, c79.z, c79.w  // ::h<0>
                        mad r3.w, r6.x, -c166.x, c166.y
                        mul r5.x, r1.w, r3.w  // ::r<0>
                        mad r3.w, r2.w, c79.x, c79.y
                        frc r3.w, r3.w
                        mad r3.w, r3.w, c80.x, c80.y
                        sincos r7.x, r3.w
                        mul r3.w, r1.z, r7.x
                        add r2.w, -r2.w, c80.w
                        mad r2.w, r2.w, c79.x, c79.y
                        frc r2.w, r2.w
                        mad r2.w, r2.w, c80.x, c80.y
                        sincos r8.x, r2.w
                        rcp r2.w, r8.x
                        mad r3.w, r3.w, r2.w, -c107.w
                        mul r5.z, r1.w, r3.w  // ::g<0>

#line 815
                        mad r2.w, r7.x, -r2.w, -c107.w
                        mad r2.w, r1.z, r2.w, -c107.w
                        mul r5.y, r1.w, r2.w  // ::b<0>
                      else

#line 819
                        mad r1.y, r1.y, c106.x, c106.y  // ::h<0>
                        mad r2.w, r6.x, -c166.x, c166.y
                        mul r5.z, r1.w, r2.w  // ::g<0>
                        mad r2.w, r1.y, c79.x, c79.y
                        frc r2.w, r2.w
                        mad r2.w, r2.w, c80.x, c80.y
                        sincos r7.x, r2.w
                        mul r2.w, r1.z, r7.x
                        add r1.y, -r1.y, c80.w
                        mad r1.y, r1.y, c79.x, c79.y
                        frc r1.y, r1.y
                        mad r1.y, r1.y, c80.x, c80.y
                        sincos r8.x, r1.y
                        rcp r1.y, r8.x
                        mad r2.w, r2.w, r1.y, -c107.w
                        mul r5.y, r1.w, r2.w  // ::b<0>
                        mad r1.y, r7.x, -r1.y, -c107.w
                        mad r1.y, r1.z, r1.y, -c107.w
                        mul r5.x, r1.y, r1.w  // ::r<0>
                      endif
                    endif

#line 2471
                    mov r0.y, -c107.w
                  else
                    if_eq r1.x, -c37.x

#line 1674
                      if_lt c155.w, r6.y

#line 1682
                        mad r5.xyz, r2.z, c83.yzyw, c83.wyyw
                      else

#line 1674
                        add r1.y, r6.y, c106.z

#line 1677
                        if_lt r6.y, c106.w
                          cmp r2.xy, r1.y, c155.wxzw, c155.x  // ::HPLuv_Lrgb<0,1>

#line 1682
                          mov r5.xyz, r2.xzyw  // ::HPLuv_Lrgb<0,2,1>
                        else

#line 386
                          add r1.y, r6.y, c154.w
                          mul r1.z, r1.y, r1.y
                          mul r1.w, r1.z, r1.y
                          mul r1.w, r1.w, c81.x  // ::s1<0>
                          mad r1.z, r1.y, -r1.z, c81.y

#line 1607
                          mul r7, r6.y, c84

#line 387
                          cmp r1.z, r1.z, r7.x, r1.w  // ::s2<0>

#line 372
                          mul r1.w, r6.y, r1.z
                          mul r2.w, r1.w, c81.z  // ::y<0>
                          mul r4.xy, r1.z, c82  // ::x<0>, ::z<0>
                          rcp r3.w, r4.y
                          mul r4.y, r3.w, r4.x  // ::GetBounds2<0>
                          mul r2.w, r2.w, r3.w  // ::GetBounds2<1>

#line 403
                          rcp r4.w, r4.y

#line 366
                          mad r3.w, r4.x, -r3.w, -r4.w
                          rcp r3.w, r3.w
                          mul r3.w, r2.w, r3.w  // ::GetIntersection<0>

#line 404
                          mad r2.w, r3.w, r4.y, r2.w  // GetDistance::input<1>

#line 361
                          mul r2.w, r2.w, r2.w
                          mad r2.w, r3.w, r3.w, r2.w
                          rsq r2.w, r2.w
                          rcp r2.w, r2.w  // ::GetDistance<0>

#line 406
                          min r3.w, r2.w, c81.w  // ::GetChroma1a<0>

#line 372
                          mad r1.w, r1.w, c81.z, -r7.y  // ::y<0>
                          mad r1.z, r1.z, c82.y, c82.z  // ::z<0>
                          rcp r1.z, r1.z
                          mul r2.w, r1.z, r4.x  // ::GetBounds2<0>
                          mul r1.w, r1.z, r1.w  // ::GetBounds2<1>

#line 403
                          rcp r4.y, r2.w

#line 366
                          mad r1.z, r4.x, -r1.z, -r4.y
                          rcp r1.z, r1.z
                          mul r1.z, r1.z, r1.w  // ::GetIntersection<0>

#line 404
                          mad r1.w, r1.z, r2.w, r1.w  // GetDistance::input<1>

#line 361
                          mul r1.w, r1.w, r1.w
                          mad r1.z, r1.z, r1.z, r1.w
                          rsq r1.z, r1.z
                          rcp r1.z, r1.z  // ::GetDistance<0>

#line 406
                          min r2.w, r1.z, r3.w  // ::GetChroma1a<0>

#line 1678
                          mul r1.z, r6.x, r2.w
                          mul r1.z, r1.z, c76.z  // ::C<0>

#line 589
                          mad r1.w, r2.z, c166.z, c166.w
                          frc r1.w, r1.w
                          mad r1.w, r1.w, c80.x, c80.y
                          sincos r8.xy, r1.w
                          mul r1.zw, r1.z, r8.xyxy  // ::a<0>, ::b<0>

#line 508
                          abs r2.w, c13.x

#line 512
                          rcp r3.w, c13.x
                          mul r8.x, r3.w, c12.x  // ::xyY_XYZ<0>
                          mov r4.x, c13.x  // ::WhiteY<0>
                          add r4.x, -r4.x, -c12.x
                          add r4.x, r4.x, -c107.w
                          mul r8.z, r3.w, r4.x  // ::xyY_XYZ<2>
                          mov r8.y, -c107.w
                          cmp r4.xyw, -r2.w, c113.w, r8.xyzz  // ::xyY_XYZ<0,1,2>

#line 571
                          cmp r2.w, -r2.w, c127.y, c127.w
                          add r2.w, r2.w, r4.x
                          mul r3.w, r4.x, -c61.z
                          mad r2.w, r4.w, -c61.x, r2.w
                          rcp r2.w, r2.w
                          mul r3.w, r2.w, r3.w  // ::ComputeKu<0>

#line 576
                          mul r2.w, r4.y, r2.w
                          mul r2.w, r2.w, -c86.x  // ::ComputeKv<0>

#line 1605
                          add r4.x, -r6.y, c82.w
                          mul r1.y, r1.y, c83.x
                          mul r4.y, r1.y, r1.y
                          mul r1.y, r1.y, r4.y
                          cmp r1.y, r4.x, r7.x, r1.y  // ::Y<0>
                          mad r1.z, r7.w, r3.w, r1.z
                          rcp r1.z, r1.z
                          mad r1.z, r7.z, r1.z, c107.w
                          mul r1.z, r1.z, c85.x  // ::a<0>
                          mul r3.w, r1.y, c139.x  // ::b<0>
                          mul r4.x, r6.y, -c94.x
                          mad r1.w, r7.w, r2.w, r1.w
                          rcp r1.w, r1.w
                          mad r1.w, r4.x, r1.w, c139.x
                          mad r1.w, r1.y, r1.w, -r3.w
                          rcp r2.w, r1.z
                          mul r1.w, r1.w, r2.w  // ::X<0>
                          mad r1.z, r1.w, r1.z, r3.w  // ::Z<0>

#line 1616
                          max r2.w, r1.w, c103.z  // ::X<0>

#line 1619
                          max r3.w, r1.y, c103.z  // ::Y<0>

#line 1622
                          max r4.x, r1.z, c103.z  // ::Z<0>

#line 470
                          mul r1.yzw, r3.w, c24.xxyz
                          mad r1.yzw, r2.w, c23.xxyz, r1
                          mad r5.xyz, r4.x, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 1682
                        endif
                      endif

#line 2472
                      mov r0.y, -c107.w
                    else
                      if_eq r1.x, -c37.z

#line 850
                        mul r1.y, r6.x, c76.z  // ::_s<0>
                        mul r7.y, r6.y, c76.z  // ::_b<0>

#line 862
                        mul r1.z, r2.z, c117.x  // ::SectorPosition<0>
                        frc r1.w, r1.z
                        add r1.z, -r1.w, r1.z  // ::SectorNumber<0>

#line 866
                        mad r1.w, r2.z, c117.x, -r1.z  // ::FractionalSector<0>

#line 869
                        mad r2.w, r6.x, -c166.x, c166.y
                        mul r7.z, r2.w, r7.y  // ::p<0>
                        mad r2.w, r1.y, -r1.w, -c107.w
                        mul r7.w, r2.w, r7.y  // ::q<0>
                        add r1.w, -r1.w, -c107.w
                        mad r1.w, r1.y, -r1.w, -c107.w
                        mul r7.x, r1.w, r7.y  // ::t<0>

#line 898
                        add r8, r1.z, c165

#line 904
                        add r1.w, r1.z, c139.x

#line 909
                        cmp r4.xyw, -r1_abs.w, r7.yzzw, c103.z  // ::r<0>, ::g<0>, ::b<0>
                        cmp r4.xyw, -r8_abs.w, r7.xzzy, r4  // ::r<0>, ::g<0>, ::b<0>
                        cmp r4.xyw, -r8_abs.z, r7.zwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                        cmp r4.xyw, -r8_abs.y, r7.zyzx, r4  // ::r<0>, ::g<0>, ::b<0>
                        cmp r4.xyw, -r8_abs.x, r7.wyzz, r4  // ::r<0>, ::g<0>, ::b<0>
                        cmp r4.xyw, -r1_abs.z, r7.yxzz, r4  // ::r<0>, ::g<0>, ::b<0>
                        cmp r5.xyz, -r1_abs.y, r7.y, r4.xwyw  // ::r<0>, ::b<0>, ::g<0>

#line 2473
                        mov r0.y, -c107.w
                      else
                        if_eq r1.x, -c86.x

#line 850
                          mul r1.y, r6.x, c76.z  // ::_s<0>
                          mul r7.y, r6.y, c76.z  // ::_b<0>

#line 862
                          mul r1.z, r2.z, c117.x  // ::SectorPosition<0>
                          frc r1.w, r1.z
                          add r1.z, -r1.w, r1.z  // ::SectorNumber<0>

#line 866
                          mad r1.w, r2.z, c117.x, -r1.z  // ::FractionalSector<0>

#line 869
                          mad r2.w, r6.x, -c166.x, c166.y
                          mul r7.z, r2.w, r7.y  // ::p<0>
                          mad r2.w, r1.y, -r1.w, -c107.w
                          mul r7.w, r2.w, r7.y  // ::q<0>
                          add r1.w, -r1.w, -c107.w
                          mad r1.w, r1.y, -r1.w, -c107.w
                          mul r7.x, r1.w, r7.y  // ::t<0>

#line 898
                          add r8, r1.z, c165

#line 904
                          add r1.w, r1.z, c139.x

#line 909
                          cmp r4.xyw, -r1_abs.w, r7.yzzw, c103.z  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r8_abs.w, r7.xzzy, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r8_abs.z, r7.zwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r8_abs.y, r7.zyzx, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r8_abs.x, r7.wyzz, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r1_abs.z, r7.yxzz, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r5.xyz, -r1_abs.y, r7.y, r4.xwyw  // ::r<0>, ::b<0>, ::g<0>

#line 2474
                          mov r0.y, -c107.w
                        else
                          add r1.y, r1.x, c107.x
                          cmp r0.y, -r1_abs.y, c107_abs.w, c107_abs.z
                          if_eq r1.x, -c107.x

#line 955
                            mul r5.xyz, r6.y, c76.z  // ::l<0,0,0>

#line 960
                            if_lt -r6.x, c103.z

#line 956
                              mul r1.x, r2.z, c117.x  // ::h<0>

#line 962
                              mul r1.y, r6.x, c76.z  // ::s<0>
                              mad r1.z, r6.y, c117.y, c117.z
                              add r1.z, -r1_abs.z, -c107.w
                              mul r7.x, r1.y, r1.z  // ::chroma<0>
                              cmp r1.yz, r2.z, c167.xxyw, c167.xzww
                              mul r1.x, r1.z, r1.x
                              frc r1.x, r1.x
                              mad r1.x, r1.y, r1.x, c107.w
                              add r1.x, -r1_abs.x, -c107.w
                              mul r7.y, r1.x, r7.x  // ::v<0>

#line 983
                              add r1, -r2.z, c114

#line 989
                              add r8, r2.z, -c114.wzyx

#line 995
                              add r2.w, r2.z, c117.w
                              add r4.xy, -r2.z, c115

#line 1000
                              cmp r4.xy, r4, -c107_abs.w, -c107_abs.z
                              cmp r2.w, r2.w, r4.x, c103.z
                              mov r7.z, c103.z
                              cmp r9.xyz, r2.w, c103.z, r7.xzyw  // ::result<0,1,2>
                              cmp r2.w, r8.w, r4.y, c103.z
                              cmp r4.xyw, r2.w, r9.xyzz, r7.yzzx  // ::result<0,1,2>
                              cmp r1, r1, -c107_abs.w, -c107_abs.z
                              cmp r1.xyz, r8.zyxw, r1, c103.z
                              cmp r4.xyw, r1.x, r4, r7.zyzx  // ::result<0,1,2>
                              cmp r4.xyw, r1.y, r4, r7.zxzy  // ::result<0,1,2>
                              cmp r1.xyz, r1.z, r4.xyww, r7.yxzw  // ::result<0,1,2>
                              cmp r1.w, r2.z, r1.w, c103.z
                              cmp r1.xyz, r1.w, r1, r7  // ::result<0,1,2>
                              mad r1.w, r7.x, c142.y, r5.y  // ::w<0>

#line 1005
                              add r5.xyz, r1.w, r1.xzyw  // ::result<0,2,1>

#line 1010
                            endif

#line 2475
                          else
                            mov r5.xyz, c103.z
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
        if_ne r0.y, -r0.y

#line 2515
        else

#line 2477
          mov r1.x, c0.x  // ::Model<0>
          if_eq r1.x, -c60.x

#line 955
            mul r5.xyz, r6.y, c76.z  // ::l<0,0,0>

#line 960
            if_lt -r6.x, c103.z

#line 956
              mul r0.y, r2.z, c117.x  // ::h<0>

#line 962
              mul r1.y, r6.x, c76.z  // ::s<0>
              mad r1.z, r6.y, c117.y, c117.z
              add r1.z, -r1_abs.z, -c107.w
              mul r7.x, r1.y, r1.z  // ::chroma<0>
              cmp r1.yz, r2.z, c167.xxyw, c167.xzww
              mul r0.y, r0.y, r1.z
              frc r0.y, r0.y
              mad r0.y, r1.y, r0.y, c107.w
              add r0.y, -r0_abs.y, -c107.w
              mul r7.y, r0.y, r7.x  // ::v<0>

#line 983
              add r8, -r2.z, c114

#line 989
              add r9, r2.z, -c114.wzyx

#line 995
              add r0.y, r2.z, c117.w
              add r1.yz, -r2.z, c115.xxyw

#line 1000
              cmp r1.yz, r1, -c107_abs.w, -c107_abs.z
              cmp r0.y, r0.y, r1.y, c103.z
              mov r7.z, c103.z
              cmp r4.xyw, r0.y, c103.z, r7.xzzy  // ::result<0,1,2>
              cmp r0.y, r9.w, r1.z, c103.z
              cmp r1.yzw, r0.y, r4.xxyw, r7.xyzx  // ::result<0,1,2>
              cmp r8, r8, -c107_abs.w, -c107_abs.z
              cmp r4.xyw, r9.zyzx, r8.xyzz, c103.z
              cmp r1.yzw, r4.x, r1, r7.xzyx  // ::result<0,1,2>
              cmp r1.yzw, r4.y, r1, r7.xzxy  // ::result<0,1,2>
              cmp r1.yzw, r4.w, r1, r7.xyxz  // ::result<0,1,2>
              cmp r0.y, r2.z, r8.w, c103.z
              cmp r1.yzw, r0.y, r1, r7.xxyz  // ::result<0,1,2>
              mad r0.y, r7.x, c142.y, r5.y  // ::w<0>

#line 1005
              add r5.xyz, r0.y, r1.ywzw  // ::result<0,2,1>

#line 1010
            endif

#line 2477
            mov r0.y, -c107.w
          else
            if_eq r1.x, -c60.y

#line 1719
              if_lt c155.w, r6.y

#line 1727
                mad r5.xyz, r2.z, c83.yzyw, c83.wyyw
              else

#line 1719
                add r1.y, r6.y, c106.z

#line 1722
                if_lt r6.y, c106.w
                  cmp r5.xz, r1.y, c155.wyxw, c155.x  // ::HSLuv_Lrgb<0,1>

#line 1727
                  mov r5.y, r2.z
                else

#line 386
                  add r1.y, r6.y, c154.w
                  mul r1.z, r1.y, r1.y
                  mul r1.w, r1.z, r1.y
                  mul r1.w, r1.w, c81.x  // ::s1<0>
                  mad r1.z, r1.y, -r1.z, c81.y

#line 1607
                  mul r7, r6.y, c84

#line 387
                  cmp r1.z, r1.z, r7.x, r1.w  // ::s2<0>

#line 372
                  mul r1.w, r6.y, r1.z
                  mul r2.w, r1.w, c81.z  // ::y<0>
                  mul r8, r1.z, c135  // ::x<0>, ::z<0>, ::x<0>, ::z<0>
                  rcp r3.w, r8.y
                  mul r4.x, r3.w, r8.x  // ::GetBounds2<0>
                  mul r2.w, r2.w, r3.w  // ::GetBounds2<1>
                  mad r1.w, r1.w, c81.z, -r7.y  // ::y<0>
                  mad r4.yw, r1.z, c168.xxzy, c168.z  // ::z<0,0>
                  rcp r3.w, r4.y
                  mul r4.y, r3.w, r8.x  // ::GetBounds2<0>
                  mul r1.w, r1.w, r3.w  // ::GetBounds2<1>
                  mul r3.w, r1.z, r7.y  // ::y<0>
                  rcp r5.w, r8.w
                  mul r8.x, r5.w, r8.z  // ::GetBounds2<0>
                  mul r5.w, r3.w, r5.w  // ::GetBounds2<1>
                  mad r7.y, r7.y, r1.z, -r7.y  // ::y<0>
                  rcp r4.w, r4.w
                  mul r8.y, r4.w, r8.z  // ::GetBounds2<0>
                  mul r4.w, r4.w, r7.y  // ::GetBounds2<1>
                  mul r8.zw, r1.z, c115  // ::x<0>, ::z<0>
                  rcp r8.w, r8.w
                  mul r9.x, r8.w, r8.z  // ::GetBounds2<0>
                  mul r3.w, r3.w, r8.w  // ::GetBounds2<1>
                  mad r1.z, r1.z, c168.w, c168.z  // ::z<0>
                  rcp r1.z, r1.z
                  mul r8.z, r1.z, r8.z  // ::GetBounds2<0>
                  mul r1.z, r1.z, r7.y  // ::GetBounds2<1>

#line 420
                  mad r7.y, r2.z, c166.z, c166.w
                  frc r7.y, r7.y
                  mad r7.y, r7.y, c80.x, c80.y
                  sincos r10.xy, r7.y
                  mad r4.x, r4.x, -r10.x, r10.y
                  rcp r4.x, r4.x
                  mul r2.w, r2.w, r4.x  // ::length<0>
                  min r4.x, r2.w, c81.w  // GetChroma2a::result<0>
                  cmp r2.w, r2.w, r4.x, c81.w  // GetChroma2a::result<0>
                  mad r4.x, r4.y, -r10.x, r10.y
                  rcp r4.x, r4.x
                  mul r1.w, r1.w, r4.x  // ::length<0>
                  min r4.x, r1.w, r2.w  // GetChroma2a::result<0>
                  cmp r1.w, r1.w, r4.x, r2.w  // GetChroma2a::result<0>
                  mad r2.w, r8.x, -r10.x, r10.y
                  rcp r2.w, r2.w
                  mul r2.w, r2.w, r5.w  // ::length<0>
                  min r4.x, r2.w, r1.w  // GetChroma2a::result<0>
                  cmp r1.w, r2.w, r4.x, r1.w  // GetChroma2a::result<0>
                  mad r2.w, r8.y, -r10.x, r10.y
                  rcp r2.w, r2.w
                  mul r2.w, r2.w, r4.w  // ::length<0>
                  min r4.x, r2.w, r1.w  // GetChroma2a::result<0>
                  cmp r1.w, r2.w, r4.x, r1.w  // GetChroma2a::result<0>
                  mad r2.w, r9.x, -r10.x, r10.y
                  rcp r2.w, r2.w
                  mul r2.w, r2.w, r3.w  // ::length<0>
                  min r3.w, r2.w, r1.w  // GetChroma2a::result<0>
                  cmp r1.w, r2.w, r3.w, r1.w  // GetChroma2a::result<0>
                  mad r2.w, r8.z, -r10.x, r10.y
                  rcp r2.w, r2.w
                  mul r1.z, r1.z, r2.w  // ::length<0>
                  min r2.w, r1.z, r1.w  // GetChroma2a::result<0>
                  cmp r1.z, r1.z, r2.w, r1.w  // GetChroma2a::result<0>

#line 1723
                  mul r1.z, r6.x, r1.z
                  mul r1.z, r1.z, c76.z  // ::C<0>

#line 590
                  mul r1.zw, r10.xyxy, r1.z  // ::a<0>, ::b<0>

#line 508
                  abs r2.w, c13.x

#line 512
                  rcp r3.w, c13.x
                  mul r8.x, r3.w, c12.x  // ::xyY_XYZ<0>
                  mov r4.x, c13.x  // ::WhiteY<0>
                  add r4.x, -r4.x, -c12.x
                  add r4.x, r4.x, -c107.w
                  mul r8.z, r3.w, r4.x  // ::xyY_XYZ<2>
                  mov r8.y, -c107.w
                  cmp r4.xyw, -r2.w, c113.w, r8.xyzz  // ::xyY_XYZ<0,1,2>

#line 571
                  cmp r2.w, -r2.w, c127.y, c127.w
                  add r2.w, r2.w, r4.x
                  mul r3.w, r4.x, -c61.z
                  mad r2.w, r4.w, -c61.x, r2.w
                  rcp r2.w, r2.w
                  mul r3.w, r2.w, r3.w  // ::ComputeKu<0>

#line 576
                  mul r2.w, r4.y, r2.w
                  mul r2.w, r2.w, -c86.x  // ::ComputeKv<0>

#line 1605
                  add r4.x, -r6.y, c82.w
                  mul r1.y, r1.y, c83.x
                  mul r4.y, r1.y, r1.y
                  mul r1.y, r1.y, r4.y
                  cmp r1.y, r4.x, r7.x, r1.y  // ::Y<0>
                  mad r1.z, r7.w, r3.w, r1.z
                  rcp r1.z, r1.z
                  mad r1.z, r7.z, r1.z, c107.w
                  mul r1.z, r1.z, c85.x  // ::a<0>
                  mul r3.w, r1.y, c139.x  // ::b<0>
                  mul r4.x, r6.y, -c94.x
                  mad r1.w, r7.w, r2.w, r1.w
                  rcp r1.w, r1.w
                  mad r1.w, r4.x, r1.w, c139.x
                  mad r1.w, r1.y, r1.w, -r3.w
                  rcp r2.w, r1.z
                  mul r1.w, r1.w, r2.w  // ::X<0>
                  mad r1.z, r1.w, r1.z, r3.w  // ::Z<0>

#line 1616
                  max r2.w, r1.w, c103.z  // ::X<0>

#line 1619
                  max r3.w, r1.y, c103.z  // ::Y<0>

#line 1622
                  max r4.x, r1.z, c103.z  // ::Z<0>

#line 470
                  mul r1.yzw, r3.w, c24.xxyz
                  mad r1.yzw, r2.w, c23.xxyz, r1
                  mad r5.xyz, r4.x, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 1727
                endif
              endif

#line 2478
              mov r0.y, -c107.w
            else
              if_eq r1.x, -c40.x

#line 1054
                mul r1.y, r6.x, c120.x
                mad r1.z, r2.z, c120.y, c120.z
                frc r1.z, r1.z
                mad r1.z, r1.z, c80.x, c80.y
                sincos r7.x, r1.z
                mul r1.z, r1.y, r7.x
                mul r5.xz, r6.y, c134.xyyw  // ::m<0>
                mad r1.y, r1.y, r7.x, r5.z
                mad r1.y, r6.y, -c120.w, r1.y
                mul r5.z, r1.y, c77.y  // ::g<0>
                mad r1.y, r6.y, c117.y, -r1.z
                mul r5.y, r1.y, -c142.y  // ::b<0>

#line 2479
                mov r0.y, -c107.w
              else
                if_eq r1.x, -c40.y

#line 1120
                  mad r1.y, r6.x, -c166.x, c166.y  // ::minOverMax<0>
                  if_lt -r1.y, c103.z

#line 1125
                    if_lt r2.z, c85.z
                      mul r1.z, r2.z, c117.x  // ::h<0>
                      rcp r1.w, r1.y
                      lrp r2.w, r1.z, r1.w, -c107.w  // ::part<0>
                      mul r3.w, r1.w, r1.w
                      mul r2.w, r2.w, r2.w
                      mul r2.w, r2.w, c64.y
                      mad r2.w, r3.w, c64.x, r2.w
                      add r2.w, r2.w, c65.w
                      rsq r2.w, r2.w
                      mul r7.z, r2.w, r6.y  // ::b<0>
                      mul r7.x, r1.w, r7.z  // ::r<0>
                      mad r1.w, r7.z, r1.w, -r7.z
                      mad r7.y, r1.z, r1.w, r7.z  // ::g<0>
                    else
                      if_lt r2.z, c124.w

#line 1136
                        mad r1.z, r2.z, -c134.z, c134.w
                        mul r1.z, r1.z, -c107.y  // ::h<0>
                        rcp r1.w, r1.y
                        lrp r2.w, r1.z, r1.w, -c107.w  // ::part<0>
                        mul r3.w, r1.w, r1.w
                        mul r2.w, r2.w, r2.w
                        mul r2.w, r2.w, c64.x
                        mad r2.w, r3.w, c64.y, r2.w
                        add r2.w, r2.w, c65.w
                        rsq r2.w, r2.w
                        mul r7.z, r2.w, r6.y  // ::b<0>
                        mul r7.y, r1.w, r7.z  // ::g<0>
                        mad r1.w, r7.z, r1.w, -r7.z
                        mad r7.x, r1.z, r1.w, r7.z  // ::r<0>
                      else
                        if_lt r2.z, c108.x
                          mad r1.z, r2.z, c108.y, c108.z
                          mul r1.z, r1.z, -c107.y  // ::h<0>
                          rcp r1.w, r1.y
                          lrp r2.w, r1.z, r1.w, -c107.w  // ::part<0>

#line 1147
                          mul r3.w, r1.w, r1.w
                          mul r2.w, r2.w, r2.w
                          mul r2.w, r2.w, c65.w
                          mad r2.w, r3.w, c64.y, r2.w
                          add r2.w, r2.w, c64.x
                          rsq r2.w, r2.w
                          mul r7.x, r2.w, r6.y  // ::r<0>
                          mul r7.y, r1.w, r7.x  // ::g<0>
                          mad r1.w, r7.x, r1.w, -r7.x
                          mad r7.z, r1.z, r1.w, r7.x  // ::b<0>
                        else
                          if_lt r2.z, c159.y
                            mad r1.z, r2.z, -c108.y, c108.w
                            mul r1.z, r1.z, -c107.y  // ::h<0>
                            rcp r1.w, r1.y
                            lrp r2.w, r1.z, r1.w, -c107.w  // ::part<0>
                            mul r3.w, r1.w, r1.w
                            mul r2.w, r2.w, r2.w
                            mul r2.w, r2.w, c64.y
                            mad r2.w, r3.w, c65.w, r2.w
                            add r2.w, r2.w, c64.x
                            rsq r2.w, r2.w
                            mul r7.x, r2.w, r6.y  // ::r<0>
                            mul r7.z, r1.w, r7.x  // ::b<0>

#line 1158
                            mad r1.w, r7.x, r1.w, -r7.x
                            mad r7.y, r1.z, r1.w, r7.x  // ::g<0>
                          else
                            add r1.z, r2.z, -c67.w
                            mad r1.w, r2.z, c87.x, c87.y
                            mul r1.w, r1.w, -c107.y  // ::h<0>
                            rcp r1.y, r1.y
                            lrp r2.w, r1.w, r1.y, -c107.w  // ::part<0>
                            mul r3.w, r1.y, r1.y

#line 1174
                            mul r4.xy, r3.w, c146.zxzw

#line 1165
                            mul r2.w, r2.w, r2.w
                            mad r2.w, r2.w, c64.x, r4.x
                            add r2.w, r2.w, c64.y
                            rsq r2.w, r2.w
                            mul r8.y, r2.w, r6.y  // ::g<0>
                            mul r8.z, r1.y, r8.y  // ::b<0>
                            mad r2.w, r8.y, r1.y, -r8.y
                            mad r8.x, r1.w, r2.w, r8.y  // ::r<0>

#line 1172
                            mad r1.w, r2.z, -c166.z, c166.y
                            mul r1.w, r1.w, -c107.y  // ::h<0>
                            lrp r2.w, r1.w, r1.y, -c107.w  // ::part<0>
                            mul r2.w, r2.w, r2.w
                            mad r2.w, r2.w, c65.w, r4.y
                            add r2.w, r2.w, c64.y
                            rsq r2.w, r2.w
                            mul r9.y, r2.w, r6.y  // ::g<0>
                            mul r9.x, r1.y, r9.y  // ::r<0>
                            mad r1.y, r9.y, r1.y, -r9.y
                            mad r9.z, r1.w, r1.y, r9.y  // ::b<0>
                            cmp r7.xyz, r1.z, r9, r8  // ::r<0>, ::g<0>, ::b<0>
                          endif
                        endif
                      endif
                    endif
                  else

#line 1182
                    if_lt r2.z, c85.z
                      mul r1.y, r2.z, c117.x  // ::h<0>
                      mul r1.z, r6.y, r6.y
                      mul r1.w, r2.z, r1.y
                      mad r1.w, r1.w, c87.z, c87.w
                      rcp r1.w, r1.w
                      mul r1.z, r1.w, r1.z
                      rsq r1.z, r1.z
                      rcp r7.x, r1.z  // ::r<0>
                      mul r7.y, r1.y, r7.x  // ::g<0>
                      mov r7.z, c103.z
                    else
                      if_lt r2.z, c124.w
                        mad r1.y, r2.z, -c134.z, c134.w
                        mul r1.z, r1.y, -c107.y  // ::h<0>

#line 1193
                        mul r1.w, r6.y, r6.y
                        mul r1.y, r1.y, r1.z
                        mad r1.y, r1.y, c122.x, c122.y
                        rcp r1.y, r1.y
                        mul r1.y, r1.y, r1.w
                        rsq r1.y, r1.y
                        rcp r7.y, r1.y  // ::g<0>
                        mul r7.x, r1.z, r7.y  // ::r<0>
                        mov r7.z, c103.z
                      else

#line 1216
                        mad r1.yz, r2.z, c169.x, c169
                        mul r4.xy, r1.yzzw, -c107.y  // ::h<0,0>

#line 1201
                        mul r1.w, r6.y, r6.y

#line 1217
                        mul r1.yz, r1, r4.xxyw
                        mad r1.yz, r1, c122.xzxw, c122.xyww

#line 1201
                        rcp r1.y, r1.y
                        mul r1.y, r1.y, r1.w
                        rsq r1.y, r1.y
                        rcp r8.y, r1.y  // ::g<0>
                        mul r8.z, r4.x, r8.y  // ::b<0>

#line 1224
                        mad r4.xw, r2.z, -c169_abs.x, c169_abs.zyzw
                        mul r9.xy, r4.xwzw, -c107.y  // ::h<0,0>
                        mul r4.xw, r4, r9.xyzy
                        mad r4.xw, r4, c121.xyzy, c121.zyzw

#line 1209
                        rcp r1.y, r4.x
                        mul r1.y, r1.y, r1.w
                        rsq r1.y, r1.y
                        rcp r10.z, r1.y  // ::b<0>
                        mul r10.y, r9.x, r10.z  // ::g<0>

#line 1214
                        add r9.xzw, r2.z, c118.xyyz

#line 1217
                        rcp r1.y, r1.z
                        mul r1.y, r1.y, r1.w
                        rsq r1.y, r1.y
                        rcp r11.z, r1.y  // ::b<0>
                        mul r11.x, r4.y, r11.z  // ::r<0>

#line 1225
                        rcp r1.y, r4.w
                        mul r1.y, r1.y, r1.w
                        rsq r1.y, r1.y
                        rcp r12.x, r1.y  // ::r<0>
                        mul r12.z, r9.y, r12.x  // ::b<0>
                        mov r12.y, c103.z
                        mov r11.y, c103.z
                        cmp r1.yzw, r9.w, r12.xxyz, r11.xxyz  // ::r<0>, ::g<0>, ::b<0>
                        mov r10.x, c103.z
                        cmp r1.yzw, r9.z, r1, r10.xxyz  // ::r<0>, ::g<0>, ::b<0>
                        mov r8.x, c103.z
                        cmp r7.xyz, r9.x, r1.yzww, r8  // ::r<0>, ::g<0>, ::b<0>
                      endif
                    endif
                  endif

#line 1232
                  add r1.yzw, r7.xxyz, -c142.y
                  frc r4.xyw, r1.yzzw
                  add r1.yzw, r1, -r4.xxyw
                  mul_sat r5.xyz, r1.ywzw, c76.w  // ::result<0,2,1>

#line 2480
                  mov r0.y, -c107.w
                else
                  if_eq r1.x, -c40.z

#line 1303
                    mul r1.yz, r6.xxyw, c76.z  // ::white<0>, ::black<0>
                    add r1.z, r1.z, r1.y
                    rcp r1.w, r1.z
                    mul r1.w, r1.w, r1.y  // ::gray<0>

#line 1311
                    add r1.z, r1.z, c107.w

#line 862
                    mul r2.w, r2.z, c117.x  // ::SectorPosition<0>
                    frc r3.w, r2.w
                    add r2.w, r2.w, -r3.w  // ::SectorNumber<0>

#line 866
                    mad r3.w, r2.z, c117.x, -r2.w  // ::FractionalSector<0>

#line 870
                    add r7.x, -r3.w, -c107.w  // ::q<0>

#line 898
                    add r8, r2.w, c165

#line 904
                    add r3.w, r2.w, c139.x
                    cmp r9.x, -r3_abs.w, c107_abs.w, c107_abs.z  // ::r<0>

#line 909
                    mov r7.y, c103.z
                    cmp r9.yz, -r3_abs.w, r7.xyxw, c103.z  // ::g<0>, ::b<0>
                    mad r7.zw, r7.x, c119.xyyz, c119.x
                    cmp r4.xyw, -r8_abs.w, r7.zyzw, r9.xyzz  // ::r<0>, ::g<0>, ::b<0>
                    cmp r4.xyw, -r8_abs.z, r7.yxzw, r4  // ::r<0>, ::g<0>, ::b<0>
                    mad r9.xyz, r7.wxyw, c119.xyxw, c119.zxzw
                    cmp r4.xyw, -r8_abs.y, r9.zxzy, r4  // ::r<0>, ::g<0>, ::b<0>
                    cmp r4.xyw, -r8_abs.x, r7.xwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                    cmp r4.xyw, -r2_abs.w, r9.xyzz, r4  // ::r<0>, ::g<0>, ::b<0>

#line 1314
                    mad r2.w, r6.x, -c166.x, c166.y
                    mad r2.w, r6.y, -c76.z, r2.w

#line 1321
                    mad r4.xyw, r4, r2.w, r1.y  // ::rgb<0,1,2>
                    cmp r5.xyz, r1.z, r1.w, r4.xwyw  // ::HWB_Lrgb<0,2,1>

#line 2481
                    mov r0.y, -c107.w
                  else
                    if_eq r1.x, c154.w

#line 470
                      mul r1.yzw, r6.x, c89.xxyz
                      mad r1.yzw, r2.z, c88.xxyz, r1
                      mad r5.xyz, r6.y, c90.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2482
                      mov r0.y, -c107.w
                    else
                      if_eq r1.x, -c45.x

#line 2184
                        add r1.yz, r6.xyxw, c103.w
                        mad r1.w, r1.z, -c118.w, r2.z
                        mad r1.w, r1.y, -c89.w, r1.w  // ::ycbcr<1>
                        mad r1.yz, r1, c133.xxyw, r2.z  // ::ycbcr<0,2>

#line 2164
                        add r1.yz, r1, c133.xzww
                        add r1.w, r1.w, c103.w

#line 2119
                        mul r4.xy, r1.yzzw, c92  // ::ypbpr<0>
                        add r5.x, r4.y, r4.x  // ::r<0>
                        mad r5.y, r1.w, c88.w, r4.x  // ::b<0>
                        mul r1.z, r5.x, c138.x
                        mad r1.y, r1.y, c90.w, -r1.z
                        mad r1.y, r5.y, -c138.z, r1.y
                        mul r5.z, r1.y, c92.z  // ::g<0>

#line 2483
                        mov r0.y, -c107.w
                      else
                        if_eq r1.x, -c45.y

#line 1391
                          add r1.y, r2.z, c154.w
                          mul r1.z, r1.y, c83.x  // ::fy<0>
                          mul r1.w, r6.y, c92.w
                          mad r2.w, r6.x, c91.x, r1.z  // ::fx<0>
                          mad r1.y, r1.y, c83.x, -r1.w  // ::fz<0>
                          mul r1.w, r2.w, r2.w
                          mul r3.w, r1.w, r2.w  // ::fx3<0>
                          mul r4.x, r1.y, r1.y
                          mul r4.y, r1.y, r4.x  // ::fz3<0>
                          mad r1.w, r2.w, -r1.w, c67.y
                          mad r2.w, r2.w, c91.y, c91.z
                          mul r2.w, r2.w, c84.x
                          cmp r1.w, r1.w, r2.w, r3.w  // ::xr<0>
                          add r2.w, -r2.z, c82.w
                          mul r3.w, r1.z, r1.z
                          mul r1.z, r1.z, r3.w
                          mul r3.w, r2.z, c84.x
                          cmp r1.z, r2.w, r3.w, r1.z  // ::yr<0>
                          mad r2.w, r1.y, -r4.x, c67.y
                          mad r1.y, r1.y, c91.y, c91.z
                          mul r1.y, r1.y, c84.x
                          cmp r1.y, r2.w, r1.y, r4.y  // ::zr<0>

#line 508
                          abs r2.w, c13.x

#line 512
                          rcp r3.w, c13.x
                          mul r7.x, r3.w, c12.x  // ::xyY_XYZ<0>
                          mov r4.x, c13.x  // ::WhiteY<0>
                          add r4.x, -r4.x, -c12.x
                          add r4.x, r4.x, -c107.w
                          mul r7.z, r3.w, r4.x  // ::xyY_XYZ<2>
                          mov r7.y, -c107.w
                          cmp r4.xyw, -r2.w, c113.w, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 1403
                          mul r5.xyz, r1.wyzw, r4.xwyw  // ::Lab_Lrgb<0,2,1>

#line 2484
                          mov r0.y, -c107.w
                        else
                          if_eq r1.x, -c46.x

#line 508
                            abs r1.y, c13.x

#line 512
                            rcp r1.z, c13.x
                            mul r7.x, r1.z, c12.x  // ::xyY_XYZ<0>
                            mov r4.x, c13.x  // ::WhiteY<0>
                            add r1.w, -r4.x, -c12.x
                            add r1.w, r1.w, -c107.w
                            mul r7.z, r1.z, r1.w  // ::xyY_XYZ<2>
                            mov r7.y, -c107.w
                            cmp r4.xyw, -r1.y, c113.w, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 552
                            add r1.zw, r4.xyxw, c66.xyxy

#line 555
                            cmp r1.w, -r1_abs.w, -c107_abs.w, -c107_abs.z
                            cmp r1.w, -r1.y, c103.z, r1.w
                            cmp r1.z, -r1_abs.z, r1.w, c103.z

#line 565
                            add r7.xy, r4.ywzw, r4
                            mul r7.xy, r7, c66.zwzw  // ::Ka<0,0>

#line 1447
                            mul r1.w, r2.z, c76.z
                            mul r1.w, r1.w, r1.w
                            mul r1.w, r4.y, r1.w  // ::Y<0>
                            rcp r2.w, r7.x
                            cmp r2.w, r1.z, r2.w, c91.w
                            mul r2.w, r2.w, r6.x
                            cmp r1.y, -r1.y, c112.z, c112.w
                            mul r1.y, r1.y, r1.w
                            rsq r3.w, r1.y
                            rcp r3.w, r3.w
                            mad r2.w, r2.w, r3.w, r1.y
                            mul r2.w, r4.x, r2.w  // ::X<0>
                            rcp r4.x, r7.y
                            cmp r1.z, r1.z, r4.x, c93.x
                            mul r1.z, r1.z, r6.y
                            mad r1.y, r1.z, r3.w, -r1.y
                            mul r1.y, -r4.w, r1.y  // ::Z<0>

#line 470
                            mul r4.xyw, r1.w, c24.xyzz
                            mad r4.xyw, r2.w, c23.xyzz, r4
                            mad r5.xyz, r1.y, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2485
                            mov r0.y, -c107.w
                          else
                            add r1.y, r1.x, c46.y
                            cmp r0.y, -r1_abs.y, c107_abs.w, c107_abs.z
                            mov r6.z, r2.z
                            cmp r5.xyz, -r1_abs.y, r6.zyxw, r5  // ::TLrgb<0,2,1>
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r0.y, -r0.y

#line 2515
          else

#line 2488
            if_eq r1.x, -c46.z

#line 1493
              add r0.y, r2.z, -c67.x  // ::Jz<0>
              mad r1.y, r0.y, c93.y, c93.z
              rcp r1.y, r1.y

#line 1498
              mul r1.zw, r6.x, c132.xyxy
              mad r2.w, r0.y, r1.y, r1.z
              mad r2.w, r6.y, c93.w, r2.w  // PerceptualQuantizerInverse::X<0>

#line 491
              pow r3.w, r2.w, c132.z  // ::XX<0>
              add r2.w, -r3.w, c57.z
              mad r3.w, r3.w, c109.x, c109.y
              rcp r3.w, r3.w
              mul r2.w, r2.w, r3.w
              pow r3.w, r2.w, c132.w

#line 1498
              mad r1.yz, r0.y, r1.y, -r1.xzww
              mad r1.yz, r6.y, -c109.xzww, r1  // PerceptualQuantizerInverse::X<0,0>

#line 491
              pow r0.y, r1.y, c132.z  // ::XX<0>
              add r1.y, -r0.y, c57.z
              mad r0.y, r0.y, c109.x, c109.y
              rcp r0.y, r0.y
              mul r0.y, r0.y, r1.y
              pow r1.y, r0.y, c132.w
              pow r0.y, r1.z, c132.z  // ::XX<0>
              add r1.z, -r0.y, c57.z
              mad r0.y, r0.y, c109.x, c109.y
              rcp r0.y, r0.y
              mul r0.y, r0.y, r1.z
              pow r1.z, r0.y, c132.w

#line 1502
              mul r4.xyw, r1.y, c130.xyzz
              mad r1.yw, r3.w, c129.xxzy, -r4.xxzw
              mad r0.y, r3.w, c130.w, r4.y
              mad r0.y, r1.z, -c129.z, r0.y  // ::Y<0>
              mad r1.yz, r1.z, c131.xxyw, r1.xyww  // ::X<0>, ::Z<0>
              mul r0.y, r0.y, c110.w  // ::xyz<1>
              mul r1.yz, r1, c110.w  // ::xyz<0,2>

#line 470
              mul r4.xyw, r0.y, c24.xyzz
              mad r4.xyw, r1.y, c23.xyzz, r4
              mad r5.xyz, r1.z, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2488
              mov r0.y, -c107.w
            else
              if_eq r1.x, -c46.w

#line 508
                abs r1.y, c13.x

#line 512
                rcp r1.z, c13.x
                mul r7.x, r1.z, c12.x  // ::xyY_XYZ<0>
                mov r4.x, c13.x  // ::WhiteY<0>
                add r1.w, -r4.x, -c12.x
                add r1.w, r1.w, -c107.w
                mul r7.z, r1.z, r1.w  // ::xyY_XYZ<2>
                mov r7.y, -c107.w
                cmp r1.yzw, -r1.y, c113.w, r7.xxyz  // ::xyY_XYZ<0,1,2>

#line 470
                mul r4.xyw, r6.x, c27.xyzz
                mad r4.xyw, r2.z, c26.xyzz, r4
                mad r4.xyw, r6.y, c28.xyzz, r4  // ::x<0>, ::y<0>, ::z<0>

#line 500
                mul r7.xyz, r4.xyww, r4.xyww
                mul r4.xyw, r4, r7.xyzz  // ::Pow3<0,0,0>

#line 470
                mul r7.xyz, r4.y, c33
                mad r7.xyz, r4.x, c32, r7
                mad r4.xyw, r4.w, c34.xyzz, r7.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 1551
                mul r1.yzw, r1, r4.xxyw  // ::xyz<0,1,2>

#line 470
                mul r4.xyw, r1.z, c24.xyzz
                mad r4.xyw, r1.y, c23.xyzz, r4
                mad r5.xyz, r1.w, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2489
                mov r0.y, -c107.w
              else
                if_eq r1.x, -c47.x

#line 589
                  mad r1.y, r6.y, c166.z, c166.w
                  frc r1.y, r1.y
                  mad r1.y, r1.y, c80.x, c80.y
                  sincos r7.xy, r1.y
                  mul r1.yz, r6.x, r7.xxyw  // ::a<0>, ::b<0>

#line 1391
                  add r1.w, r2.z, c154.w
                  mul r2.w, r1.w, c83.x  // ::fy<0>
                  mul r1.z, r1.z, c92.w
                  mad r1.y, r1.y, c91.x, r2.w  // ::fx<0>
                  mad r1.z, r1.w, c83.x, -r1.z  // ::fz<0>
                  mul r1.w, r1.y, r1.y
                  mul r3.w, r1.w, r1.y  // ::fx3<0>
                  mul r4.x, r1.z, r1.z
                  mul r4.y, r1.z, r4.x  // ::fz3<0>
                  mad r1.w, r1.y, -r1.w, c67.y
                  mad r1.y, r1.y, c91.y, c91.z
                  mul r1.y, r1.y, c84.x
                  cmp r1.y, r1.w, r1.y, r3.w  // ::xr<0>
                  add r1.w, -r2.z, c82.w
                  mul r3.w, r2.w, r2.w
                  mul r2.w, r2.w, r3.w
                  mul r3.w, r2.z, c84.x
                  cmp r1.w, r1.w, r3.w, r2.w  // ::yr<0>
                  mad r2.w, r1.z, -r4.x, c67.y
                  mad r1.z, r1.z, c91.y, c91.z
                  mul r1.z, r1.z, c84.x
                  cmp r1.z, r2.w, r1.z, r4.y  // ::zr<0>

#line 508
                  abs r2.w, c13.x

#line 512
                  rcp r3.w, c13.x
                  mul r7.x, r3.w, c12.x  // ::xyY_XYZ<0>
                  mov r4.x, c13.x  // ::WhiteY<0>
                  add r4.x, -r4.x, -c12.x
                  add r4.x, r4.x, -c107.w
                  mul r7.z, r3.w, r4.x  // ::xyY_XYZ<2>
                  mov r7.y, -c107.w
                  cmp r4.xyw, -r2.w, c113.w, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 1403
                  mul r5.xyz, r1.yzww, r4.xwyw  // ::Lab_Lrgb<0,2,1>

#line 2490
                  mov r0.y, -c107.w
                else
                  if_eq r1.x, -c47.y

#line 589
                    mad r1.y, r6.y, c166.z, c166.w
                    frc r1.y, r1.y
                    mad r1.y, r1.y, c80.x, c80.y
                    sincos r7.xy, r1.y
                    mul r1.yz, r6.x, r7.xxyw  // ::a<0>, ::b<0>

#line 508
                    abs r1.w, c13.x

#line 512
                    rcp r2.w, c13.x
                    mul r7.x, r2.w, c12.x  // ::xyY_XYZ<0>
                    mov r4.x, c13.x  // ::WhiteY<0>
                    add r3.w, -r4.x, -c12.x
                    add r3.w, r3.w, -c107.w
                    mul r7.z, r2.w, r3.w  // ::xyY_XYZ<2>
                    mov r7.y, -c107.w
                    cmp r4.xyw, -r1.w, c113.w, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 552
                    add r7.xy, r4.xwzw, c66

#line 555
                    cmp r2.w, -r7_abs.y, -c107_abs.w, -c107_abs.z
                    cmp r2.w, -r1.w, c103.z, r2.w
                    cmp r2.w, -r7_abs.x, r2.w, c103.z

#line 565
                    add r7.xy, r4.ywzw, r4
                    mul r7.xy, r7, c66.zwzw  // ::Ka<0,0>

#line 1447
                    mul r3.w, r2.z, c76.z
                    mul r3.w, r3.w, r3.w
                    mul r3.w, r4.y, r3.w  // ::Y<0>
                    rcp r4.y, r7.x
                    cmp r4.y, r2.w, r4.y, c91.w
                    mul r1.y, r1.y, r4.y
                    cmp r1.w, -r1.w, c112.z, c112.w
                    mul r1.w, r1.w, r3.w
                    rsq r4.y, r1.w
                    rcp r4.y, r4.y
                    mad r1.y, r1.y, r4.y, r1.w
                    mul r1.y, r4.x, r1.y  // ::X<0>
                    rcp r4.x, r7.y
                    cmp r2.w, r2.w, r4.x, c93.x
                    mul r1.z, r1.z, r2.w
                    mad r1.z, r1.z, r4.y, -r1.w
                    mul r1.z, -r4.w, r1.z  // ::Z<0>

#line 470
                    mul r4.xyw, r3.w, c24.xyzz
                    mad r4.xyw, r1.y, c23.xyzz, r4
                    mad r5.xyz, r1.z, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2491
                    mov r0.y, -c107.w
                  else
                    if_eq r1.x, -c47.z

#line 589
                      mad r1.y, r6.y, c166.z, c166.w
                      frc r1.y, r1.y
                      mad r1.y, r1.y, c80.x, c80.y
                      sincos r7.xy, r1.y
                      mul r7, r6.x, r7.xyxy  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1493
                      add r1.y, r2.z, -c67.x  // ::Jz<0>
                      mad r1.z, r1.y, c93.y, c93.z
                      rcp r1.z, r1.z

#line 1498
                      mul r4.xy, r7.xzzw, c132
                      mad r1.w, r1.y, r1.z, r4.x
                      mad r1.w, r7.y, c93.w, r1.w  // PerceptualQuantizerInverse::X<0>

#line 491
                      pow r2.w, r1.w, c132.z  // ::XX<0>
                      add r1.w, -r2.w, c57.z
                      mad r2.w, r2.w, c109.x, c109.y
                      rcp r2.w, r2.w
                      mul r1.w, r1.w, r2.w
                      pow r2.w, r1.w, c132.w

#line 1498
                      mad r1.yz, r1.y, r1.z, -r4.xxyw
                      mad r1.yz, r7.xyww, -c109.xzww, r1  // PerceptualQuantizerInverse::X<0,0>

#line 491
                      pow r3.w, r1.y, c132.z  // ::XX<0>
                      add r1.y, -r3.w, c57.z
                      mad r1.w, r3.w, c109.x, c109.y
                      rcp r1.w, r1.w
                      mul r1.y, r1.w, r1.y
                      pow r3.w, r1.y, c132.w
                      pow r4.x, r1.z, c132.z  // ::XX<0>
                      add r1.y, -r4.x, c57.z
                      mad r1.z, r4.x, c109.x, c109.y
                      rcp r1.z, r1.z
                      mul r1.y, r1.z, r1.y
                      pow r4.x, r1.y, c132.w

#line 1502
                      mul r1.yzw, r3.w, c130.xxyz
                      mad r1.yw, r2.w, c129.xxzy, -r1
                      mad r1.z, r2.w, c130.w, r1.z
                      mad r1.z, r4.x, -c129.z, r1.z  // ::Y<0>
                      mad r1.yw, r4.x, c131.xxzy, r1  // ::X<0>, ::Z<0>
                      mul r1.yzw, r1, c110.w  // ::xyz<0,1,2>

#line 470
                      mul r4.xyw, r1.z, c24.xyzz
                      mad r4.xyw, r1.y, c23.xyzz, r4
                      mad r5.xyz, r1.w, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2492
                      mov r0.y, -c107.w
                    else
                      if_eq r1.x, -c47.w

#line 589
                        mad r1.y, r6.y, c166.z, c166.w
                        frc r1.y, r1.y
                        mad r1.y, r1.y, c80.x, c80.y
                        sincos r7.xy, r1.y
                        mul r1.yz, r6.x, r7.xxyw  // ::a<0>, ::b<0>

#line 508
                        abs r1.w, c13.x

#line 512
                        rcp r2.w, c13.x
                        mul r7.x, r2.w, c12.x  // ::xyY_XYZ<0>
                        mov r4.x, c13.x  // ::WhiteY<0>
                        add r3.w, -r4.x, -c12.x
                        add r3.w, r3.w, -c107.w
                        mul r7.z, r2.w, r3.w  // ::xyY_XYZ<2>
                        mov r7.y, -c107.w
                        cmp r4.xyw, -r1.w, c113.w, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 571
                        cmp r1.w, -r1.w, c127.y, c127.w
                        add r1.w, r1.w, r4.x
                        mul r2.w, r4.x, -c61.z
                        mad r1.w, r4.w, -c61.x, r1.w
                        rcp r1.w, r1.w
                        mul r2.w, r1.w, r2.w  // ::ComputeKu<0>

#line 576
                        mul r1.w, r4.y, r1.w
                        mul r1.w, r1.w, -c86.x  // ::ComputeKv<0>

#line 1605
                        add r3.w, -r2.z, c82.w
                        add r4.x, r2.z, c154.w
                        mul r4.x, r4.x, c83.x
                        mul r4.y, r4.x, r4.x
                        mul r4.x, r4.y, r4.x

#line 1610
                        mul r7, r2.z, c136

#line 1605
                        cmp r3.w, r3.w, r7.x, r4.x  // ::Y<0>
                        mad r1.y, r7.z, r2.w, r1.y
                        rcp r1.y, r1.y
                        mad r1.y, r7.y, r1.y, c107.w
                        mul r1.y, r1.y, c85.x  // ::a<0>
                        mul r2.w, r3.w, c139.x  // ::b<0>
                        mad r1.z, r7.z, r1.w, r1.z
                        rcp r1.z, r1.z
                        mad r1.z, r7.w, r1.z, c139.x
                        mad r1.z, r3.w, r1.z, -r2.w
                        rcp r1.w, r1.y
                        mul r1.z, r1.w, r1.z  // ::X<0>
                        mad r1.y, r1.z, r1.y, r2.w  // ::Z<0>

#line 1616
                        max r2.w, r1.z, c103.z  // ::X<0>

#line 1619
                        max r1.z, r3.w, c103.z  // ::Y<0>

#line 1622
                        max r3.w, r1.y, c103.z  // ::Z<0>

#line 470
                        mul r1.yzw, r1.z, c24.xxyz
                        mad r1.yzw, r2.w, c23.xxyz, r1
                        mad r5.xyz, r3.w, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2493
                        mov r0.y, -c107.w
                      else
                        if_eq r1.x, -c48.x

#line 589
                          mad r1.y, r6.y, c166.z, c166.w
                          frc r1.y, r1.y
                          mad r1.y, r1.y, c80.x, c80.y
                          sincos r7.xy, r1.y
                          mul r2.xy, r6.x, r7  // ::a<0>, ::b<0>

#line 1968
                          add r1.yzw, r2.xxyz, c155.xwwx
                          mul r2.xyw, r1.yzzw, c131.zzzw  // ::result<0,1,2>

#line 512
                          mul r1.y, r2.w, r2.x
                          rcp r1.w, r2.y
                          mul r7.x, r1.w, r1.y  // ::xyY_XYZ<0>
                          mad r1.y, r1.z, -c92.w, -r2.x
                          add r1.y, r1.y, -c107.w
                          mul r1.y, r2.w, r1.y
                          mul r7.z, r1.w, r1.y  // ::xyY_XYZ<2>
                          mov r7.y, r2.w
                          cmp r1.yzw, -r2_abs.y, c113.w, r7.xxyz  // ::xyY_XYZ<0,1,2>

#line 470
                          mul r2.xyw, r1.z, c24.xyzz
                          mad r2.xyw, r1.y, c23.xyzz, r2
                          mad r5.xyz, r1.w, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2494
                          mov r0.y, -c107.w
                        else
                          if_eq r1.x, -c48.y

#line 470
                            mul r1.yzw, r6.x, c15.xxyz
                            mad r1.yzw, r2.z, c14.xxyz, r1
                            mad r1.yzw, r6.y, c16.xxyz, r1  // ::x<0>, ::y<0>, ::z<0>
                            mul r2.xyw, r1.z, c24.xyzz
                            mad r2.xyw, r1.y, c23.xyzz, r2
                            mad r5.xyz, r1.w, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2495
                            mov r0.y, -c107.w
                          else
                            if_eq r1.x, -c48.z

#line 508
                              abs r1.y, c13.x

#line 512
                              rcp r1.z, c13.x
                              mul r7.x, r1.z, c12.x  // ::xyY_XYZ<0>
                              mov r2.x, c13.x  // ::WhiteY<0>
                              add r1.w, -r2.x, -c12.x
                              add r1.w, r1.w, -c107.w
                              mul r7.z, r1.z, r1.w  // ::xyY_XYZ<2>
                              mov r7.y, -c107.w
                              cmp r2.xyw, -r1.y, c113.w, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 571
                              cmp r1.y, -r1.y, c127.y, c127.w
                              add r1.y, r1.y, r2.x
                              mul r1.z, r2.x, -c61.z
                              mad r1.y, r2.w, -c61.x, r1.y
                              rcp r1.y, r1.y
                              mul r1.z, r1.y, r1.z  // ::ComputeKu<0>

#line 576
                              mul r1.y, r2.y, r1.y
                              mul r1.y, r1.y, -c86.x  // ::ComputeKv<0>

#line 1605
                              add r1.w, -r2.z, c82.w
                              add r2.x, r2.z, c154.w
                              mul r2.x, r2.x, c83.x
                              mul r2.y, r2.x, r2.x
                              mul r2.x, r2.y, r2.x

#line 1610
                              mul r7, r2.z, c136

#line 1605
                              cmp r1.w, r1.w, r7.x, r2.x  // ::Y<0>
                              mad r1.z, r7.z, r1.z, r6.x
                              rcp r1.z, r1.z
                              mad r1.z, r7.y, r1.z, c107.w
                              mul r1.z, r1.z, c85.x  // ::a<0>
                              mul r2.x, r1.w, c139.x  // ::b<0>
                              mad r1.y, r7.z, r1.y, r6.y
                              rcp r1.y, r1.y
                              mad r1.y, r7.w, r1.y, c139.x
                              mad r1.y, r1.w, r1.y, -r2.x
                              rcp r2.y, r1.z
                              mul r1.y, r1.y, r2.y  // ::X<0>
                              mad r1.z, r1.y, r1.z, r2.x  // ::Z<0>

#line 1616
                              max r2.x, r1.y, c103.z  // ::X<0>

#line 1619
                              max r2.y, r1.w, c103.z  // ::Y<0>

#line 1622
                              max r2.w, r1.z, c103.z  // ::Z<0>

#line 470
                              mul r1.yzw, r2.y, c24.xxyz
                              mad r1.yzw, r2.x, c23.xxyz, r1
                              mad r5.xyz, r2.w, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2496
                              mov r0.y, -c107.w
                            else
                              add r1.y, r1.x, c48.w
                              cmp r0.y, -r1_abs.y, c107_abs.w, c107_abs.z

#line 512
                              mul r1.z, r2.z, r6.y
                              rcp r1.w, r6.x
                              mul r7.x, r1.w, r1.z  // ::xyY_XYZ<0>
                              add r1.z, -r2.z, -r6.x
                              add r1.z, r1.z, -c107.w
                              mul r1.z, r6.y, r1.z
                              mul r7.z, r1.w, r1.z  // ::xyY_XYZ<2>
                              mov r7.y, r6.y
                              cmp r2.xyw, -r6_abs.x, c113.w, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 2497
                              cmp r5.xyz, -r1_abs.y, r2.xwyw, r5  // ::TLrgb<0,2,1>
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r0.y, -r0.y

#line 2515
            else

#line 2499
              if_eq r1.x, -c35.x

#line 1347
                mad r0.y, r2.z, c125.x, c125.y
                frc r0.y, r0.y
                mad r0.y, r0.y, c80.x, c80.y
                sincos r7.xy, r0.y
                rcp r0.y, r7.x
                mul r0.y, r0.y, r7.y  // ::x<0>
                mul r1.y, r0.y, r0.y  // ::x<0>
                mul r1.z, r6.x, r6.x
                mul r1.z, r1.z, -c139.x
                rcp r1.y, r1.y
                add r1.y, r1.y, -c107.w
                mul r1.y, r1.y, -c86.x
                rcp r1.y, r1.y
                mul r1.y, r1.y, r1.z
                rsq r1.y, r1.y
                rcp r1.y, r1.y  // ::r<0>
                mad r0.y, r0.y, r0.y, -c107.w
                mul r0.y, r0.y, -c86.x
                rcp r0.y, r0.y
                mul r0.y, r0.y, r1.z
                rsq r0.y, r0.y
                rcp r0.y, r0.y  // ::g<0>
                mul r1.z, r0.y, c129.w
                mad r1.z, r1.y, c125.z, r1.z
                add r1.z, r1.z, c65.w
                rcp r1.z, r1.z
                mul r1.z, r1.z, r6.y  // ::k<0>
                add r1.w, -r1.y, -c107.w
                add r1.w, -r0.y, r1.w
                mul r5.z, r0.y, r1.z  // ::G<0>
                mul r5.xy, r1.ywzw, r1.z  // ::R<0>, ::B<0>

#line 2499
                mov r0.y, -c107.w
              else
                if_eq r1.x, -c35.y

#line 1893
                  mul r1.y, r2.z, c125.w  // XYZ_Lrgb::input<0>
                  mad r1.z, r6.x, c61.x, r1.y
                  mad r1.z, r6.y, c162.w, r1.z  // XYZ_Lrgb::input<2>

#line 470
                  mul r2.xyw, r6.x, c24.xyzz
                  mad r2.xyw, r1.y, c23.xyzz, r2
                  mad r5.xyz, r1.z, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2500
                  mov r0.y, -c107.w
                else
                  if_eq r1.x, -c35.z

#line 1913
                    if_eq r0.x, -r4.z

#line 1926
                      mov r5.xyz, c103.z  // ::UVW_Lrgb<0,2,1>
                    else

#line 508
                      abs r0.x, c13.x

#line 512
                      rcp r1.y, c13.x
                      mul r4.x, r1.y, c12.x  // ::xyY_XYZ<0>
                      mov r2.x, c13.x  // ::WhiteY<0>
                      add r1.z, -r2.x, -c12.x
                      add r1.z, r1.z, -c107.w
                      mul r4.z, r1.y, r1.z  // ::xyY_XYZ<2>
                      mov r4.y, -c107.w
                      cmp r1.yzw, -r0.x, c113.w, r4.xxyz  // ::xyY_XYZ<0,1,2>

#line 1914
                      cmp r0.x, -r0.x, c127.y, c127.w
                      add r0.x, r0.x, r1.y
                      mul r1.y, r1.y, -c61.z
                      mad r0.x, r1.w, -c61.x, r0.x
                      rcp r0.x, r0.x
                      mul r1.y, r0.x, r1.y  // ::uN<0>
                      mul r0.x, r1.z, r0.x
                      mul r0.x, r0.x, -c107.y  // ::vN<0>
                      add r1.z, r6.y, -c45.x
                      mul r1.z, r1.z, c111.x
                      mul r1.w, r1.z, r1.z
                      mul r1.z, r1.w, r1.z  // ::y<0>
                      mul r1.w, r6.y, -c40.x
                      rcp r2.x, r1.w
                      mad r1.y, r2.z, r2.x, r1.y
                      cmp r1.y, -r1_abs.w, c103.z, r1.y  // ::_u<0>
                      mad r0.x, r6.x, r2.x, r0.x
                      cmp r0.x, -r1_abs.w, c103.z, r0.x  // ::_v<0>
                      mul r1.w, r1.y, r1.z
                      rcp r0.x, r0.x
                      mul r1.w, r0.x, r1.w  // ::x<0>
                      add r2.x, r0.x, r0.x
                      mul r0.x, r1.y, r0.x
                      mad r0.x, r0.x, c142.y, r2.x
                      add r0.x, r0.x, c139.x
                      mul r0.x, r0.x, r1.z  // ::z<0>

#line 1925
                      mul r1.yz, r1.xwzw, c76.z  // ::xyz<0,1>
                      mul r0.x, r0.x, c76.z  // ::xyz<2>

#line 470
                      mul r2.xyw, r1.z, c24.xyzz
                      mad r1.yzw, r1.y, c23.xxyz, r2.xxyw
                      mad r5.xyz, r0.x, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 1926
                    endif

#line 2501
                    mov r0.y, -c107.w
                  else
                    if_eq r1.x, -c35.w

#line 2144
                      add r0.x, r2.z, -c154.w
                      mul r1.y, r0.x, c90.w  // ::ypbpr<0>
                      add r1.zw, r6.xyxy, c103.w

#line 2120
                      mad r5.xy, r1.wzzw, c111.yzzw, r1.y  // ::r<0>, ::b<0>
                      mul r1.y, r5.x, c138.x
                      mad r0.x, r0.x, c90.w, -r1.y
                      mad r0.x, r5.y, -c138.z, r0.x
                      mul r5.z, r0.x, c92.z  // ::g<0>

#line 2502
                      mov r0.y, -c107.w
                    else
                      if_eq r1.x, -c36.x

#line 512
                        mul r0.x, r2.z, r6.y
                        rcp r1.y, r6.x
                        mul r4.x, r0.x, r1.y  // ::xyY_XYZ<0>
                        add r0.x, -r2.z, -r6.x
                        add r0.x, r0.x, -c107.w
                        mul r0.x, r6.y, r0.x
                        mul r4.z, r1.y, r0.x  // ::xyY_XYZ<2>
                        mov r4.y, r6.y
                        cmp r1.yzw, -r6_abs.x, c113.w, r4.xxyz  // ::xyY_XYZ<0,1,2>

#line 470
                        mul r2.xyw, r1.z, c24.xyzz
                        mad r2.xyw, r1.y, c23.xyzz, r2
                        mad r5.xyz, r1.w, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2503
                        mov r0.y, -c107.w
                      else
                        if_eq r1.x, -c36.y

#line 508
                          abs r0.x, c13.x

#line 512
                          rcp r1.y, c13.x
                          mul r4.x, r1.y, c12.x  // ::xyY_XYZ<0>
                          mov r2.x, c13.x  // ::WhiteY<0>
                          add r1.z, -r2.x, -c12.x
                          add r1.z, r1.z, -c107.w
                          mul r4.z, r1.y, r1.z  // ::xyY_XYZ<2>

#line 1985
                          mov r4.y, -c107.w
                          mul r1.yzw, r4.xxyz, c155.w
                          cmp r1.yzw, -r0.x, c111.w, r1  // ::white<0,1,2>

#line 1989
                          add r0.x, r1.z, r1.y
                          add r0.x, r1.w, r0.x
                          rcp r1.y, r0.x
                          mul r1.y, r1.y, r1.z  // ::x0<0>
                          mul r0.x, r0.x, c76.z  // ::ew<0>

#line 1994
                          mul r1.z, r6.y, r6.y
                          mul r4.y, r1.z, c76.z  // ::Y<0>

#line 1998
                          mul r2.xy, c38.yxzw, c38.xzzw
                          mul r1.w, r1.y, r1.z
                          mul r2.xy, r6.x, r2
                          mul r2.xw, r2.xyzy, c155.w
                          mad r1.w, r1.w, r0.x, r2.x
                          mul r1.y, r1.y, r2.w
                          mad r1.y, r1.y, -r0.x, r1.w
                          mul r1.w, r6.x, c155.w
                          mul r7.xy, r1.w, c38.xzzw
                          mul r2.x, r0.x, r2.w
                          mad r1.w, r1.w, c38.x, -r2.x
                          mad r1.w, r1.z, r0.x, r1.w
                          rcp r1.w, r1.w
                          mul r1.y, r1.w, r1.y  // ::x<0>
                          mad r1.z, r7.y, c38.x, r1.z
                          mad r1.z, r2.y, -c155.w, r1.z
                          mul r1.w, r0.x, r4.y
                          mad r1.w, r1.w, c155.w, r7.x
                          mad r0.x, r2.w, -r0.x, r1.w
                          rcp r0.x, r0.x
                          mul r1.w, r0.x, r1.z  // ::y<0>

#line 512
                          mul r2.x, r4.y, r1.y
                          rcp r2.y, r1.w
                          mul r4.x, r2.y, r2.x  // ::xyY_XYZ<0>
                          mad r0.x, r1.z, -r0.x, -r1.y
                          add r0.x, r0.x, -c107.w
                          mul r0.x, r4.y, r0.x
                          mul r4.z, r2.y, r0.x  // ::xyY_XYZ<2>
                          cmp r1.yzw, -r1_abs.w, c113.w, r4.xxyz  // ::xyY_XYZ<0,1,2>

#line 470
                          mul r2.xyw, r1.z, c24.xyzz
                          mad r2.xyw, r1.y, c23.xyzz, r2
                          mad r5.xyz, r1.w, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2504
                          mov r0.y, -c107.w
                        else

#line 2508
                          add r4, r1.x, c170

#line 470
                          mul r1.yzw, r6.x, c24.xxyz
                          mad r1.yzw, r2.z, c23.xxyz, r1
                          mad r1.yzw, r6.y, c25.xxyz, r1  // ::x<0>, ::y<0>, ::z<0>

#line 2164
                          add r0.x, r2.z, -c154.w
                          mul r2.x, r0.x, c90.w  // ::ypbpr<0>
                          add r2.yw, r6.xxzy, c103.w

#line 2120
                          mad r7.xz, r2.wyyw, c111.yyzw, r2.x  // ::r<0>, ::b<0>
                          mul r2.x, r7.x, c138.x
                          mad r0.x, r0.x, c90.w, -r2.x
                          mad r0.x, r7.z, -c138.z, r0.x
                          mul r7.y, r0.x, c92.z  // ::g<0>

#line 2020
                          add r0.x, r2.z, -r6.x  // ::c<0>
                          add r8.x, r6.y, r0.x  // ::YCoCg_Lrgb<0>
                          add r8.y, r2.z, r6.x  // ::YCoCg_Lrgb<1>
                          add r8.z, -r6.y, r0.x  // ::YCoCg_Lrgb<2>

#line 2508
                          cmp r0.x, -r4_abs.w, c107_abs.w, c107_abs.z

#line 2036
                          mad r2.xy, r6.x, c137, r2.z
                          mad r2.w, r6.x, -c137.z, r2.z
                          mad r9.y, r6.y, c137.w, r2.w  // ::g<0>
                          mad r9.xz, r6.y, -c96.xyyw, r2.xyyw  // ::r<0>, ::b<0>

#line 2508
                          cmp r2.xyw, -r4_abs.w, r9.xyzz, r5.xzzy  // ::TLrgb<0,1,2>
                          cmp r2.xyw, -r4_abs.z, r8.xyzz, r2  // ::TLrgb<0,1,2>
                          cmp r0.x, -r4_abs.z, -c107.w, r0.x
                          cmp r2.xyw, -r4_abs.y, r7.xyzz, r2  // ::TLrgb<0,1,2>
                          cmp r0.x, -r4_abs.y, -c107.w, r0.x
                          cmp r5.xyz, -r4_abs.x, r1.ywzw, r2.xwyw  // ::TLrgb<0,2,1>
                          cmp r0.y, -r4_abs.x, -c107.w, r0.x
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r0.y, -r0.y

#line 2515
              else

#line 2510
                if_eq r1.x, -c71.x

#line 2065
                  mad r1.yzw, r6.x, c95.xxyz, r2.z
                  mad r1.yzw, r6.y, c96.xzzw, r1  // ::r<0>, ::g<0>, ::b<0>

#line 2510
                  mov r0.x, -c107.w
                else

#line 2513
                  add r2.xyw, r1.x, c71.yzzw

#line 2120
                  mad r4, r6.x, c97.xywz, r2.z  // ::b<0>

#line 2089
                  mad r7.xyz, r6.y, c98, r4.xyww  // ::r<0>, ::g<0>, ::b<0>

#line 2093
                  mov_sat r8.xyz, r7
                  cmp r7.xyz, r7, r8, c103.z  // ::r<0>, ::g<0>, ::b<0>

#line 2119
                  mad r4.x, r6.y, c95.w, r2.z  // ::r<0>
                  mad r0.y, r4.x, -c138.x, r2.z
                  mad r0.y, r4.z, -c138.z, r0.y
                  mul r4.y, r0.y, c92.z  // ::g<0>

#line 2513
                  cmp r0.y, -r2_abs.w, c107_abs.w, c107_abs.z

#line 2214
                  mad r8.xyz, r6.yxxw, c99, r2.z  // ::r<0>, ::b<0>

#line 2211
                  mad r1.x, r6.y, c98.w, r8.y  // ::g<0>

#line 2220
                  mov_sat r8.yw, r8.xxzz
                  mov_sat r3.w, r1.x
                  cmp r9.y, r1.x, r3.w, c103.z  // ::g<0>
                  cmp r9.xz, r8, r8.yyww, c103.z  // ::r<0>, ::b<0>

#line 2513
                  cmp r8.xyz, -r2_abs.w, r9, r5.xzyw  // ::TLrgb<0,1,2>
                  cmp r4.xyz, -r2_abs.y, r4, r8  // ::TLrgb<0,1,2>
                  cmp r0.y, -r2_abs.y, -c107.w, r0.y
                  cmp r1.yzw, -r2_abs.x, r7.xxyz, r4.xxyz  // ::TLrgb<0,1,2>
                  cmp r0.x, -r2_abs.x, -c107.w, r0.y
                endif
                mov r6.w, r2.z
                cmp r5.xyz, -r0.x, r6.wyxw, r1.ywzw  // ::TLrgb<0,2,1>
              endif
            endif
          endif
        endif

#line 2333
        rcp r0.x, c11.x
        log r0.y, r5.x
        mul r1.x, r0.y, r0.x
        exp r3.x, r1.x  // ::V<0>

#line 2338
        if_eq c10.x, r0.z

#line 2398
        else

#line 2338
          mov r1.w, c107.w
          add r1.x, r1.w, c10.x

#line 2346
          add r1.y, -r5.x, -c107.w
          rsq r1.z, r5.x
          rcp r1.z, r1.z
          mul r1.z, r1.z, -c142.y  // ::Transfer<0>
          cmp r1.y, r1.y, -c107_abs.w, -c107_abs.z
          cmp r1.y, r5.x, r1.y, c103.z
          add r2.x, r5.x, c105.y
          log r2.x, r2.x
          mad r2.x, r2.x, c105.z, c105.w  // ::Transfer<0>
          cmp r1.y, r1.y, r2.x, r1.z  // ::Transfer<0>
          cmp r3.x, -r1_abs.x, r1.y, r3.x  // ::Transfer<0>

#line 2353
          if_eq c10.x, -r1.w

#line 2398
          else

#line 2353
            add r1.x, -r0.w, c10.x

#line 2356
            add r1.y, -r5.x, c67.y
            mul r1.z, r5.x, c99.w
            cmp r1.y, r1.y, r1.z, -c107.w  // ::V<0>
            cmp r3.x, -r1_abs.x, r1.y, r3.x  // ::Transfer<0>

#line 2361
            if_eq c10.x, r0.w

#line 2398
            else

#line 2361
              mov r1.x, c10.x  // ::Companding<0>
              add r1.y, r1.x, c61.x

#line 2376
              if_eq r1.x, -c61.x

#line 2370
                mul r1.z, r0.y, c116.x
                exp r1.z, r1.z
                add r1.w, r1.z, -c57.z
                max r2.x, r1.w, c103.z  // ::a<0>
                mad r1.z, r1.z, -c57.y, c57.x  // ::b<0>
                rcp r1.z, r1.z
                mul r1.z, r1.z, r2.x
                pow r2.x, r1.z, c132.w
                mul r1.z, r2.x, c116.y  // ::Transfer<0>
                cmp r3.x, -r1_abs.y, r1.z, r3.x  // ::Transfer<0>

#line 2398
              else

#line 2392
                add r1.xyz, r1.x, c153

#line 2387
                add r2.xy, r5.x, c116.zwzw

#line 2395
                mul r2.zw, r5.x, c128.xyxy
                mul r4.xy, r0.y, c128.zwzw

#line 2379
                exp r0.y, r4.x

#line 2387
                mad r4.xz, r0.y, c101.xyyw, c101.zyww
                cmp r2.xy, r2, r4.xzzw, r2.z  // ::V<0,0>

#line 2395
                add r0.y, -r5.x, c100.x
                exp r1.w, r4.y
                mad r1.w, r1.w, c100.y, c100.z
                cmp r0.y, r0.y, r2.w, r1.w  // ::V<0>

#line 2398
                cmp r0.y, -r1_abs.z, r0.y, r5.x  // ::Transfer<0>
                cmp r0.y, -r1_abs.y, r2.y, r0.y  // ::Transfer<0>
                cmp r3.x, -r1_abs.x, r2.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2333
        log r0.y, r5.z
        mul r1.x, r0.y, r0.x
        exp r3.y, r1.x  // ::V<0>

#line 2338
        if_eq c10.x, r0.z

#line 2398
        else

#line 2338
          mov r1.w, c107.w
          add r1.x, r1.w, c10.x

#line 2346
          add r1.y, -r5.z, -c107.w
          rsq r1.z, r5.z
          rcp r1.z, r1.z
          mul r1.z, r1.z, -c142.y  // ::Transfer<0>
          cmp r1.y, r1.y, -c107_abs.w, -c107_abs.z
          cmp r1.y, r5.z, r1.y, c103.z
          add r2.x, r5.z, c105.y
          log r2.x, r2.x
          mad r2.x, r2.x, c105.z, c105.w  // ::Transfer<0>
          cmp r1.y, r1.y, r2.x, r1.z  // ::Transfer<0>
          cmp r3.y, -r1_abs.x, r1.y, r3.y  // ::Transfer<0>

#line 2353
          if_eq c10.x, -r1.w

#line 2398
          else

#line 2353
            add r1.x, -r0.w, c10.x

#line 2356
            add r1.y, -r5.z, c67.y
            mul r1.z, r5.z, c99.w
            cmp r1.y, r1.y, r1.z, -c107.w  // ::V<0>
            cmp r3.y, -r1_abs.x, r1.y, r3.y  // ::Transfer<0>

#line 2361
            if_eq c10.x, r0.w

#line 2398
            else

#line 2361
              mov r1.x, c10.x  // ::Companding<0>
              add r1.y, r1.x, c61.x

#line 2376
              if_eq r1.x, -c61.x

#line 2370
                mul r1.z, r0.y, c116.x
                exp r1.z, r1.z
                add r1.w, r1.z, -c57.z
                max r2.x, r1.w, c103.z  // ::a<0>
                mad r1.z, r1.z, -c57.y, c57.x  // ::b<0>
                rcp r1.z, r1.z
                mul r1.z, r1.z, r2.x
                pow r2.x, r1.z, c132.w
                mul r1.z, r2.x, c116.y  // ::Transfer<0>
                cmp r3.y, -r1_abs.y, r1.z, r3.y  // ::Transfer<0>

#line 2398
              else

#line 2392
                add r1.xyz, r1.x, c153

#line 2387
                add r2.xy, r5.z, c116.zwzw

#line 2395
                mul r2.zw, r5.z, c128.xyxy
                mul r4.xy, r0.y, c128.zwzw

#line 2379
                exp r0.y, r4.x

#line 2387
                mad r4.xz, r0.y, c101.xyyw, c101.zyww
                cmp r2.xy, r2, r4.xzzw, r2.z  // ::V<0,0>

#line 2395
                add r0.y, -r5.z, c100.x
                exp r1.w, r4.y
                mad r1.w, r1.w, c100.y, c100.z
                cmp r0.y, r0.y, r2.w, r1.w  // ::V<0>

#line 2398
                cmp r0.y, -r1_abs.z, r0.y, r5.z  // ::Transfer<0>
                cmp r0.y, -r1_abs.y, r2.y, r0.y  // ::Transfer<0>
                cmp r3.y, -r1_abs.x, r2.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2333
        log r0.y, r5.y
        mul r0.x, r0.y, r0.x
        exp r3.z, r0.x  // ::V<0>

#line 2338
        if_eq c10.x, r0.z

#line 2398
        else

#line 2338
          mov r1.w, c107.w
          add r0.x, r1.w, c10.x

#line 2346
          add r0.z, -r5.y, -c107.w
          rsq r1.x, r5.y
          rcp r1.x, r1.x
          mul r1.x, r1.x, -c142.y  // ::Transfer<0>
          cmp r0.z, r0.z, -c107_abs.w, -c107_abs.z
          cmp r0.z, r5.y, r0.z, c103.z
          add r1.y, r5.y, c105.y
          log r1.y, r1.y
          mad r1.y, r1.y, c105.z, c105.w  // ::Transfer<0>
          cmp r0.z, r0.z, r1.y, r1.x  // ::Transfer<0>
          cmp r3.z, -r0_abs.x, r0.z, r3.z  // ::Transfer<0>

#line 2353
          if_eq c10.x, -r1.w

#line 2398
          else

#line 2353
            add r0.x, -r0.w, c10.x

#line 2356
            add r0.z, -r5.y, c67.y
            mul r1.x, r5.y, c99.w
            cmp r0.z, r0.z, r1.x, -c107.w  // ::V<0>
            cmp r3.z, -r0_abs.x, r0.z, r3.z  // ::Transfer<0>

#line 2361
            if_eq c10.x, r0.w

#line 2398
            else

#line 2361
              mov r0.x, c10.x  // ::Companding<0>
              add r0.z, r0.x, c61.x

#line 2376
              if_eq r0.x, -c61.x

#line 2370
                mul r0.w, r0.y, c116.x
                exp r0.w, r0.w
                add r1.x, r0.w, -c57.z
                max r2.x, r1.x, c103.z  // ::a<0>
                mad r0.w, r0.w, -c57.y, c57.x  // ::b<0>
                rcp r0.w, r0.w
                mul r0.w, r0.w, r2.x
                pow r1.x, r0.w, c132.w
                mul r0.w, r1.x, c116.y  // ::Transfer<0>
                cmp r3.z, -r0_abs.z, r0.w, r3.z  // ::Transfer<0>

#line 2398
              else

#line 2392
                add r0.xzw, r0.x, c153.xyyz

#line 2387
                add r1.xy, r5.y, c116.zwzw

#line 2395
                mul r1.zw, r5.y, c128.xyxy
                mul r2.xy, r0.y, c128.zwzw

#line 2379
                exp r0.y, r2.x

#line 2387
                mad r2.xz, r0.y, c101.xyyw, c101.zyww
                cmp r1.xy, r1, r2.xzzw, r1.z  // ::V<0,0>

#line 2395
                add r0.y, -r5.y, c100.x
                exp r1.z, r2.y
                mad r1.z, r1.z, c100.y, c100.z
                cmp r0.y, r0.y, r1.w, r1.z  // ::V<0>

#line 2398
                cmp r0.y, -r0_abs.w, r0.y, r5.y  // ::Transfer<0>
                cmp r0.y, -r0_abs.z, r1.y, r0.y  // ::Transfer<0>
                cmp r3.z, -r0_abs.x, r1.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2728
      endif

#line 2731
      mov oC0.xyz, r3  // ::main<0,1,2>
      mov oC0.w, -c107.w  // ::main<3>

#line 2715
    endif

// approximately 5400 instruction slots used (1 texture, 5399 arithmetic)
