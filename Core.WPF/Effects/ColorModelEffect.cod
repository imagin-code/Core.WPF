//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float Companding;
//   float Depth;
//   float Gamma;
//   float HighlightAmount;
//   float3 LABk_LMSk_x;
//   float3 LABk_LMSk_y;
//   float3 LABk_LMSk_z;
//   float3 LMS_XYZ_x;
//   float3 LMS_XYZ_y;
//   float3 LMS_XYZ_z;
//   float3 LMSk_LABk_x;
//   float3 LMSk_LABk_y;
//   float3 LMSk_LABk_z;
//   float3 LMSk_XYZk_x;
//   float3 LMSk_XYZk_y;
//   float3 LMSk_XYZk_z;
//   float MidtoneAmount;
//   float MidtoneRange;
//   float Mode;
//   float Model;
//   float3 RGB_XYZ_x;
//   float3 RGB_XYZ_y;
//   float3 RGB_XYZ_z;
//   float ShadowAmount;
//   float ShadowRange;
//   float Shape;
//   float W;
//   float WhiteX;
//   float WhiteY;
//   float X;
//   float XComponent;
//   float3 XYZ_LMS_x;
//   float3 XYZ_LMS_y;
//   float3 XYZ_LMS_z;
//   float3 XYZ_RGB_x;
//   float3 XYZ_RGB_y;
//   float3 XYZ_RGB_z;
//   float Y;
//   float YComponent;
//   float Z;
//   sampler2D input;
//   float3 xyYC_exy;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   Model           c0       1
//   XComponent      c1       1
//   YComponent      c2       1
//   Mode            c3       1
//   Shape           c4       1
//   Depth           c5       1
//   X               c6       1
//   Y               c7       1
//   Z               c8       1
//   W               c9       1
//   Companding      c10      1
//   Gamma           c11      1
//   WhiteX          c12      1
//   WhiteY          c13      1
//   LMS_XYZ_x       c14      1
//   LMS_XYZ_y       c15      1
//   LMS_XYZ_z       c16      1
//   RGB_XYZ_x       c17      1
//   RGB_XYZ_y       c18      1
//   RGB_XYZ_z       c19      1
//   XYZ_LMS_x       c20      1
//   XYZ_LMS_y       c21      1
//   XYZ_LMS_z       c22      1
//   XYZ_RGB_x       c23      1
//   XYZ_RGB_y       c24      1
//   XYZ_RGB_z       c25      1
//   LABk_LMSk_x     c26      1
//   LABk_LMSk_y     c27      1
//   LABk_LMSk_z     c28      1
//   LMSk_LABk_x     c29      1
//   LMSk_LABk_y     c30      1
//   LMSk_LABk_z     c31      1
//   LMSk_XYZk_x     c32      1
//   LMSk_XYZk_y     c33      1
//   LMSk_XYZk_z     c34      1
//   xyYC_exy        c38      1
//   HighlightAmount c39      1
//   MidtoneAmount   c41      1
//   MidtoneRange    c42      1
//   ShadowAmount    c43      1
//   ShadowRange     c44      1
//   input           s0       1
//

    ps_3_0
    def c35, -20, -21, -22, -23
    def c36, -24, -25, -26, -27
    def c37, -36, -37, -38, -39
    def c40, -40, -41, -42, -43
    def c45, -2, -34, -9, -41
    def c46, -18, -19, -50, -51
    def c47, -28, -29, -30, -31
    def c48, -48, -49, -50, -51
    def c49, 1.41421354, 1, 2, 3
    def c50, 0.0208350997, -0.0851330012, 0.180141002, -0.330299497
    def c51, 0.999866009, -2, 1.57079637, 6.28318548
    def c52, 0.0799999982, 0.110705636, 0.159999996, 0.862069011
    def c53, -0.0810000002, 0.0989999995, -0.0812428594, 0.0992968082
    def c54, 0.909918129, 0.909672439, 0.0404499993, 0.0549999997
    def c55, 18.8515625, 18.6875, 0.8359375, 1
    def c56, 0.159301758, 78.84375, 0.222222224, 0.0773993805
    def c57, 0.947867334, 2.4000001, 0.166666672, -0.212114394
    def c58, -3, -35, -10, -42
    def c59, -1, -33, -8, -40
    def c60, -4, -36, -11, -43
    def c61, -16, -48, -17, -49
    def c62, 1, 50, 0.142857149, 0.156173766
    def c63, -0.0187292993, 0.0742610022, 1.57072878, 0.333333343
    def c64, 0.142857149, 7, 1, 6.99999952
    def c65, 0.114, 0.666666687, 360, 0.5
    def c66, 100, 128, 1, 360
    def c67, -14, -46, -15, -47
    def c68, -0.980705976, -1.18224943, -0.99999994, -0
    def c69, 0.199075997, 1.29587495, 0.219999999, -1.62954997e-011
    def c70, 0.5, 0.25, 0.596000016, 0.211999997
    def c71, -0.5, 0.25, -0.275000006, -0.527999997
    def c72, -0.5, -0.32100001, 0.31099999, 120
    def c73, 0.252999991, -1.33299994, 0.298999995, 0.00392156886
    def c74, 0.063000001, 0.216999993, 0.114, 0.00277777785
    def c75, 0.212599993, 0.298999995, -0.147129998, 0.61500001
    def c76, 0.715200007, 0.587000012, -0.288859993, -0.514989972
    def c77, 0.0722000003, 0.114, 0.43599999, -0.10001
    def c78, 0.159154937, 0.25, 0.75, 300
    def c79, 360, 0.00277777785, -360, -0.00277777785
    def c80, -2, 3.14159274, 57.2957764, 60
    def c81, 6.28318548, -3.14159274, 0.0174532942, 1.04719758
    def c82, 6.40657674e-007, 13824.001, 769859.875, 3.40282347e+038
    def c83, 1394988.5, -120846.469, 126452, 8.00000095
    def c84, 0.159154937, 1, -1, 0
    def c85, 0.00277777808, 0.5, 0.00862068962, 359
    def c86, 0.00110705639, 769860, 52, 13
    def c87, 0.999778986, 1.07094002, 0.324891001, 1.77199996
    def c88, 0.999768972, 0.0629495978, -0.809638023, 0.00456620986
    def c89, 0.0142857144, 0.560000002, 0.439999998, 0.058047317
    def c90, 18.6875, -18.8515625, 0.058047317, 0.811891913
    def c91, 9.99999975e-005, 134.034378, 1492.84155, 833.27301
    def c92, -44, -45, -46, -47
    def c93, -0.569000006, 0.430999994, 0.95599997, -0.272000015
    def c94, -1.87399995, 0.620999992, -0.647000015, -1.10800004
    def c95, 1.70500004, 1.57480001, 1.13982999, -0.580600023
    def c96, 0.267899334, 0.525912642, 7.92025457e-005, 0.126000002
    def c97, 1.8556, -0.394650012, 2.02310991, 9.0329628
    def c98, 0.00703035761, 0.00828392897, 1.39821029, 0.00200000009
    def c99, 0.00313080009, 1.05499995, -0.0549999997, 1.24492633
    def c100, -5, -37, -12, -44
    def c101, 12, -0.284668922, 0.123957433, 0.559910715
    def c102, 0.280000001, 1, 0.00885645207, 903.296326
    def c103, 100, 1500, 400, 0.00999999978
    def c104, 1.09899998, 1.09929681, -0.0989999995, -0.0992968082
    def c105, -6, -38, -13, -45
    def c106, -32, -33, -34, -35
    def c107, -35, -36, 1.11111116, 3.79999995
    def c108, 961.538452, 0.00999999978, 0.305000007, 0.478260845
    def c109, 0.205270007, -4.49037981, -0.100000001, 27.1299992
    def c110, 0.00300000003, 0.0136000002, -0.162400007, 0.00609999988
    def c111, 4.69565201, -4.69565201, 0.327870011, -0.635070026
    def c112, 0.327870011, 0.321449995, -0.156810001, -0.18603
    def c113, 0.732800007, -0.703599989, 0.4296, 1.69749999
    def c114, 191.019699, -111.212395, 20.1908016, 0.983399987
    def c115, 0.839776218, -53, -54, -55
    def c116, 0.159154937, 0.5, 0.0174532942, -2.09439516
    def c117, 0.0174532942, -4.18879032, -9.99999994e-009, 9.99999994e-009
    def c118, -0, -32, -7, -39
    def c119, 0.857142806, -6, 0.298999995, 0.587000012
    def c120, 0.00277777785, 0.666666687, -0.666666687, -0.333333343
    def c121, 0.00277777785, 0.333333343, 180, -0.333333343
    def c122, 1.00014997, -0.377743989, 0.220439002, 0.714139998
    def c123, 0.00499999989, 116, -16, 0.00571428565
    def c124, 0.185000002, 1.5, 0.0399999991, 9.99999996e-012
    def c125, -52, 52, 0, -128
    def c126, 9.23037151e-005, 0.66467905, 1.43099999, 0.129132897
    def c127, 88.3659897, 32.0938988, 175, 70
    def c128, 0.418687999, 0.0813120008, 9.99999982e-014, 475.70459
    def c129, 239.999985, 179.999985, 119.999992, 59.9999962
    def c130, 359.999969, 299.999969, -986593.562, 694074.125
    def c131, 0.0126833133, 10000, -0.0179999992, -0.0180539694
    def c132, -180, -240, -300, 0.344139993
    def c133, 5.98333359, 0.0199999996, -1, -299.999969
    def c134, -0, -3.14159274, 7.85398197, 1.57079673
    def c135, 0.298999995, 0.587000012, 0.114, 600
    def c136, 0.538909256, 0.635001242, 0.000980392215, 0.00294117676
    def c137, 0.00277777785, 0.00277777808, 0.5, 0.0640312433
    def c138, 3.52200007, 0.684000015, 0.114, 0.298999995
    def c139, 0.0097833341, 0.298999995, 1.79399991, 0.587000012
    def c140, 0.587000012, 0.883000016, 1.11600006, 0.684000015
    def c141, 0.0352952108, 0.972667754, -0.00897958595, 1.01369214
    def c142, -0.00796331931, -0.00471281586, 0.00588439172, 0.154340193
    def c143, 2.38095236, 37.0950012, 62.9053993, -0.00079999998
    def c144, 6, 0.166666672, -6, -0.166666672
    def c145, 9.99999983e+012, 1, 6742.07861, 3827.99316
    def c146, 9.99999983e+012, 1.49999999e-012, 1, 15
    def c147, 16613.7305, -909.828125, 2182.53833, 0.47299999
    def c148, 0.138605043, 0.0960192457, 0.00746077253, 6.27739477
    def c149, 2313.62085, 15227.666, 0.00499999989, 0.00999999978
    def c150, 9145.23047, 15718.4707, 3127.28296, -3250.75854
    def c151, 0.212599993, 0.715200007, 0.0722000003, 0.331263989
    def c152, 0.00277777785, 0.666666687, 1, 1.40199995
    def c153, 0, 1, 100, 0.0166666675
    def c154, 0.00392156886, 0.0901960805, 0.0745098069, 0.00784313772
    def c155, 0.00110705639, 52, 13, 39
    def c156, 0.25, -0.25, 0.5, 0.000980392215
    def c157, -47, -48, -49, 0.00294117676
    def c158, 4.5, 12.9200001, 0.449999988, 0.416666657
    def c159, 1394988.5, -120846.469, -315176.688, -210946.25
    def c160, 0, -1.33299994, -0.595700026, -0.522599995
    def c161, 0.666666687, 1, 104, -0.449999988
    def c162, 4.06670809, 1.09679902, 3.52399993, 0.54270798
    def c163, 7396.2832, 709.410828, 1747.68005, 6709.7002
    def c164, 219, 16, 0.168735996, 128
    def c165, 120.715675, 142.24028, 128, 0.5
    def c166, -4, -5, -6, 2.22222233
    def c167, 0, -1, -134, -140
    def c168, 10, 0, 16, -0.5
    def c169, 255, 0, 360, 100
    def c170, 100, 224, 122, 76
    def c171, 235, 240, 1, 0.5
    def c172, 1, 1.33299994, 0.595700026, 0.522599995
    def c173, 2, 0.5, -2, -0.5
    def c174, -14, -15, -16, -17
    def c175, -1, -2, -3, -4
    def c176, 0.00999999978, 1, 0.00277777785, 0.5
    def c177, -120846.469, -210946.25, 126452, 694074.125
    def c178, 0.684000015, 1.79399991, 0.587000012, 0.114
    def c179, -46, -47, -48, -49
    def c180, -15, -16, -17, -34
    def c181, 0.0174532942, 0.00277777785, 2, 0.5
    dcl_texcoord v0.xy  // uv<0,1>
    dcl_2d s0

#line 2844 "C:\Users\james\GitHub\Core.WPF\Core.WPF\Effects\ColorModelEffect.fx"
    mov r0.xyz, c125
    add r0.x, r0.x, c0.x
    if_ge c0.x, r0.y

#line 2852
      mov r1.xy, c125.z  // ::input3<0,1>
      mov r2.x, c125.z  // ::input3<2>
      mov r1.w, c6.x  // ::input4<0>
      mov r2.y, c7.x  // ::input4<1>
      mov r2.z, c8.x  // ::input4<2>
      mov r3.w, c9.x  // ::input4<3>
      mov r4.xyz, c125.z
      mov r5.xyz, c125.z
    else

#line 2855
      frc r0.w, c0.x
      add r0.w, -r0.w, c0.x
      add r6, r0.w, c35
      add r7, r0.w, c36
      add r8, r0.w, c47
      add r9, r0.w, c106
      add r10, r0.w, c37
      add r11, r0.w, c40
      add r12, r0.w, c92
      add r13, r0.w, c48
      cmp r14.xyz, -r6_abs.x, c125.zwww, c125.z
      cmp r14.xyz, -r6_abs.y, c167.xyyw, r14
      cmp r14.xyz, -r6_abs.z, c125.z, r14
      cmp r14.xyz, -r6_abs.w, c125.z, r14
      cmp r14.xyz, -r7_abs.x, c125.z, r14
      cmp r14.xyz, -r7_abs.y, c125.z, r14
      cmp r14.xyz, -r7_abs.z, c125.z, r14
      cmp r14.xyz, -r7_abs.w, c125.z, r14
      cmp r14.xyz, -r8_abs.x, c125.z, r14
      cmp r14.xyz, -r8_abs.y, c125.z, r14
      cmp r14.xyz, -r8_abs.z, c125.z, r14
      cmp r14.xyz, -r8_abs.w, c125.z, r14
      cmp r14.xyz, -r9_abs.x, c125.z, r14
      cmp r14.xyz, -r9_abs.y, c167.xzww, r14
      cmp r9.xyz, -r9_abs.z, c125.z, r14
      cmp r9.xyz, -r9_abs.w, c125.z, r9
      cmp r9.xyz, -r10_abs.x, c125.z, r9
      cmp r9.xyz, -r10_abs.y, c125.z, r9
      cmp r9.xyz, -r10_abs.z, c125.z, r9
      cmp r9.xyz, -r10_abs.w, c125.z, r9
      cmp r9.xyz, -r11_abs.x, c167.zwxw, r9
      cmp r9.xyz, -r11_abs.y, c125.z, r9
      cmp r9.xyz, -r11_abs.z, c125.z, r9
      cmp r9.xyz, -r11_abs.w, c168.xyyw, r9
      cmp r9.xyz, -r12_abs.x, c125.z, r9
      cmp r9.xyz, -r12_abs.y, c168.z, r9
      cmp r9.xyz, -r12_abs.z, c168.ywww, r9
      cmp r9.xyz, -r12_abs.w, c160.xyyw, r9
      cmp r9.xyz, -r13_abs.x, c125.z, r9
      cmp r9.xyz, -r13_abs.y, c160.xzww, r9
      cmp r9.xyz, -r13_abs.z, c168.ywww, r9
      cmp r4.xyz, -r13_abs.w, c168.ywww, r9  // ::min3<0,1,2>
      add r9, r0.w, c118
      add r10, r0.w, c59
      add r11, r0.w, c45
      add r12, r0.w, c58
      add r13, r0.w, c60
      add r14, r0.w, c100
      add r15, r0.w, c105
      add r16, r0.w, c67
      add r17, r0.w, c61
      add r18, r0.w, c46
      cmp r19.xyz, -r9_abs.x, c169.x, c169.y
      cmp r19.xyz, -r10_abs.x, -c167.y, r19
      cmp r19.xyz, -r11_abs.x, c169.x, r19
      cmp r19.xyz, -r12_abs.x, c169.x, r19
      cmp r19.xyz, -r13_abs.x, -c167.y, r19
      cmp r19.xyz, -r14_abs.x, c169.zwww, r19
      cmp r19.xyz, -r15_abs.x, c169.zwxw, r19
      cmp r19.xyz, -r9_abs.z, c169.zwww, r19
      cmp r19.xyz, -r10_abs.z, c169.zwww, r19
      cmp r19.xyz, -r11_abs.z, c169.zwww, r19
      cmp r19.xyz, -r12_abs.z, c169.zwww, r19
      cmp r19.xyz, -r13_abs.z, c169.zwxw, r19
      cmp r19.xyz, -r14_abs.z, c169.zwxw, r19
      cmp r19.xyz, -r15_abs.z, c169.zwww, r19
      cmp r19.xyz, -r16_abs.x, -c167.y, r19
      cmp r19.xyz, -r16_abs.z, c169.wwzw, r19
      cmp r19.xyz, -r17_abs.x, c169.wwzw, r19
      cmp r19.xyz, -r17_abs.z, c169.wwzw, r19
      cmp r19.xyz, -r18_abs.x, c169.x, r19
      cmp r19.xyz, -r18_abs.y, c169.w, r19
      cmp r19.xyz, -r6_abs.x, c66.xyyw, r19
      cmp r19.xyz, -r6_abs.y, -c167.y, r19
      cmp r6.xyz, -r6_abs.z, -c167.y, r19
      cmp r6.xyz, -r6_abs.w, c169.zwww, r6
      cmp r6.xyz, -r7_abs.x, c169.zwww, r6
      cmp r6.xyz, -r7_abs.y, c169.zwww, r6
      cmp r6.xyz, -r7_abs.z, c169.wwzw, r6
      cmp r6.xyz, -r7_abs.w, c169.wwzw, r6
      cmp r6.xyz, -r8_abs.x, c66.zzww, r6
      cmp r6.xyz, -r8_abs.y, c169.wwzw, r6
      cmp r6.xyz, -r8_abs.z, c169.wwzw, r6
      cmp r6.xyz, -r8_abs.w, c169.wwzw, r6
      cmp r6.xyz, -r9_abs.y, -c167.y, r6
      cmp r6.xyz, -r10_abs.y, c170, r6
      cmp r6.xyz, -r11_abs.y, c169.wwzw, r6
      cmp r6.xyz, -r12_abs.y, c169.wwzw, r6
      cmp r6.xyz, -r13_abs.y, c169.wwzw, r6
      cmp r6.xyz, -r14_abs.y, -c167.y, r6
      cmp r6.xyz, -r15_abs.y, -c167.y, r6
      cmp r6.xyz, -r9_abs.w, -c167.y, r6
      cmp r6.xyz, -r10_abs.w, c170.yzxw, r6
      cmp r6.xyz, -r11_abs.w, c169.x, r6
      cmp r6.xyz, -r12_abs.w, -c167.y, r6
      cmp r6.xyz, -r13_abs.w, c170.wxxw, r6
      cmp r6.xyz, -r14_abs.w, -c167.y, r6
      cmp r6.xyz, -r15_abs.w, c171.xyyw, r6
      cmp r6.xyz, -r16_abs.y, c171.zwww, r6
      cmp r6.xyz, -r16_abs.w, c172.xyyw, r6
      cmp r6.xyz, -r17_abs.y, -c167.y, r6
      cmp r6.xyz, -r17_abs.w, c172.xzww, r6
      cmp r6.xyz, -r18_abs.z, c171.zwww, r6
      cmp r5.xyz, -r18_abs.w, c171.zwww, r6  // ::max3<0,1,2>

#line 2859
      mov r1.x, c6.x  // ::input3<0>
      mov r1.y, c7.x  // ::input3<1>
      mov r2.x, c8.x  // ::input3<2>
      mov r1.w, c125.z  // ::input4<0>
      mov r2.yz, c125.z  // ::input4<1,2>
      mov r3.w, c125.z  // ::input4<3>
    endif

#line 2865
    mov r6.xz, c45
    if_eq c3.x, -r6.x

#line 2871
      mov r6.y, c167.y
      add r0.w, r6.y, c4.x

#line 530
      add r7.xyz, c171.wzww, -v0.xyyw  // ::N<0>
      mul r6.yw, r7_abs.xxzz, r7_abs.xxzz
      add r4.w, r6.w, r6.y
      rsq r4.w, r4.w
      rcp r4.w, r4.w  // ::GetDistance<0>

#line 2873
      mad r4.w, r4.w, -c49.x, c49.y  // ::N<0>
      cmp r1.z, -r0_abs.w, r4.w, r7.y  // ::N<0>
      abs r0.w, c1.x
      cmp r7.xy, r0.x, r1.xzzw, r1.zwzw  // ::input3<0>, ::input4<0>

#line 2888
      mov r8.yzw, c49
      add r8.xyz, -r8.yzww, c1.x

#line 2882
      mov r2.w, r1.z
      cmp r9.xy, r0.x, r1.yzzw, r2.wyzw  // ::input3<1>, ::input4<1>

#line 2886
      cmp r3.xy, r0.x, r2.xwzw, r2.wzzw  // ::input3<2>, ::input4<2>

#line 2890
      cmp r4.w, r0.x, r2.w, r3.w  // ::input4<3>
      cmp r10.x, -r8_abs.z, r4.w, r3.w  // ::input4<3>
      mov r10.yz, r2.xxzw
      cmp r11.xyz, -r8_abs.y, r3.ywxw, r10.zxyw  // ::input4<2,3>, ::input3<2>
      mov r9.z, r10.z
      mov r9.w, r3.w
      mov r11.w, r2.y
      cmp r12.yzw, -r8_abs.x, r9, r11.xwxy  // ::input4<1,2,3>
      mov r10.w, r9.x
      mov r11.y, r1.y
      cmp r1.yz, -r8_abs.x, r10.xwyw, r11  // ::input3<1,2>
      mov r9.x, r7.y
      mov r9.yz, r2
      mov r12.x, r1.w
      cmp r3, -r0.w, r9, r12  // ::input4<0,1,2,3>
      mov r7.z, r11.y
      mov r7.w, r10.y
      cmp r2.xyw, -r0.w, r7.wxzz, r1.zxzy  // ::input3<2,0,1>
      mov oC0, c125.z  // ::main<0,1,2,3>
      mov r0.w, c125.z
    else
      mov r6.y, c167.y
      if_eq c3.x, -r6.y

#line 2900
        add r4.w, r6.y, c4.x

#line 2903
        add r7.xyz, c171.zwww, -v0.yxyw  // ::N<0>

#line 530
        add r5.w, -r7.x, -c168.w
        mul r5.w, r5_abs.w, r5_abs.w
        mad r5.w, r7_abs.y, r7_abs.y, r5.w
        rsq r5.w, r5.w
        rcp r5.w, r5.w  // ::GetDistance<0>

#line 2902
        mad r7.x, r5.w, -c49.x, c49.y  // ::xN<0>
        add r5.w, c168.w, v0.x
        min r6.w, r5_abs.w, r7_abs.z
        max r8.x, r7_abs.z, r5_abs.w
        rcp r7.w, r8.x
        mul r6.w, r6.w, r7.w
        mul r7.w, r6.w, r6.w
        mad r8.x, r7.w, c50.x, c50.y
        mad r8.x, r7.w, r8.x, c50.z
        mad r8.x, r7.w, r8.x, c50.w
        mad r7.w, r7.w, r8.x, c51.x
        mul r6.w, r6.w, r7.w
        add r7.w, -r7_abs.z, r5_abs.w
        cmp r7.w, r7.w, c167_abs.x, c167_abs.y
        mad r8.x, r6.w, c51.y, c51.z
        mad r6.w, r8.x, r7.w, r6.w
        cmp r7.w, r5.w, c134.x, c134.y
        add r6.w, r6.w, r7.w
        min r8.x, r5.w, r7.z
        max r8.y, r7.z, r5.w
        cmp r5.w, r8.y, c167_abs.y, c167_abs.x
        cmp r5.w, r8.x, c125.z, r5.w
        add r7.z, r6.w, r6.w
        mad r5.w, r5.w, -r7.z, r6.w
        add r7.zw, r5.w, c134  // ::yN<0>
        add r5.w, -r7.z, c51.w
        cmp r5.w, r5.w, r7.z, r7.w  // ::yN<0>
        mul r7.y, r5.w, c84.x  // ::yN<0>

#line 2910
        mad r7.zw, v0.xyxy, c84.xyyz, c84.xywy
        cmp r7.yw, -r4_abs.w, r7.xxzy, r7.xzzw  // ::M<0>, ::N<0>
        abs r4.w, c1.x
        mov r7.xz, r1.xyww
        cmp r8.xz, r0.x, r7.xyyw, r7.yyzw  // ::input3<0>, ::input4<0>

#line 2924
        mov r9.yzw, c49
        add r10.xyz, -r9.yzww, c1.x

#line 2918
        mov r1.x, r7.y

#line 2922
        mov r1.zw, r2.xyyx

#line 2918
        cmp r11.xy, r0.x, r1.yxzw, r1.xzzw  // ::input3<1>, ::input4<1>

#line 2927
        mov r12.xy, r1.xzzw

#line 2922
        mov r12.z, r2.z
        cmp r3.xz, r0.x, r1.wyxw, r12  // ::input3<2>, ::input4<2>

#line 2926
        cmp r5.w, r0.x, r7.y, r3.w  // ::input4<3>
        cmp r2.w, -r10_abs.z, r5.w, r3.w  // ::input4<3>
        cmp r12.xzw, -r10_abs.y, r3, r2  // ::input3<2>, ::input4<2,3>
        mov r3.xz, r2
        mov r3.y, r11.y
        cmp r13, -r10_abs.x, r3, r12  // ::input3<2>, ::input4<1,2,3>
        cmp r7.y, -r10_abs.x, r11.x, r1.y  // ::input3<1>
        mov r12.xzw, r3
        cmp r10, -r4.w, r12, r13  // ::input3<2>, ::input4<1,2,3>
        mov r8.y, r1.y
        cmp r7.xyz, -r4.w, r8.yxzw, r7.yxzw  // ::input3<1,0>, ::input4<0>
        abs r1.z, c2.x
        cmp r8.xy, r0.x, r7.ywzw, r7.wzzw  // ::input3<0>, ::input4<0>

#line 2941
        add r9.xyz, -r9.yzww, c2.x

#line 2935
        mov r11.z, r7.w

#line 2939
        mov r11.xyw, r10.xzzy

#line 2935
        cmp r12.xy, r0.x, r7.xwzw, r11.zwzw  // ::input3<1>, ::input4<1>

#line 2939
        cmp r13.xy, r0.x, r11.xzzw, r11.zyzw  // ::input3<2>, ::input4<2>

#line 2943
        cmp r4.w, r0.x, r7.w, r10.w  // ::input4<3>
        cmp r14.x, -r9_abs.z, r4.w, r10.w  // ::input4<3>
        mov r13.z, r10.w
        mov r14.yz, r11.xxyw
        cmp r11.xyz, -r9_abs.y, r13.yzxw, r14.zxyw  // ::input4<2,3>, ::input3<2>
        mov r12.zw, r10
        cmp r13.yzw, -r9_abs.x, r12, r11.xwxy  // ::input4<1,2,3>
        mov r14.w, r12.x
        mov r11.y, r7.x
        cmp r9.yz, -r9_abs.x, r14.xwyw, r11  // ::input3<1,2>
        mov r10.x, r8.y
        mov r13.x, r7.z
        cmp r3, -r1.z, r10, r13  // ::input4<0,1,2,3>
        mov r8.z, r11.y
        mov r8.w, r14.y
        mov r9.x, r7.y
        cmp r2.xyw, -r1.z, r8.wxzz, r9.zxzy  // ::input3<2,0,1>
        mov oC0, c125.z  // ::main<0,1,2,3>
        mov r0.w, c125.z
      else
        abs r1.z, c3.x
        cmp r0.w, -r1.z, c167_abs.y, c167_abs.x
        if_eq c3.x, r0.z

#line 2835
          texld r7, v0, s0  // ::color<0,1,2,3>

#line 2494
          log r1.z, r7.x
          mul r4.w, r1.z, c11.x
          exp r8.x, r4.w  // ::v<0>

#line 2499
          if_eq c10.x, r0.z

#line 2557
          else

#line 2499
            add r4.w, r6.y, c10.x

#line 2508
            mul r5.w, r7.x, -c58.x
            rsq r5.w, r5.w
            rcp r5.w, r5.w  // ::TransferInverse<0>
            cmp r6.w, -r7.x, -c167_abs.y, -c167_abs.x
            cmp r6.w, r7.x, r6.w, c125.z
            mad r8.w, r7.x, c101.x, c101.y
            log r8.w, r8.w
            mad r8.w, r8.w, c101.z, c101.w  // ::TransferInverse<0>
            cmp r5.w, r6.w, r8.w, r5.w  // ::TransferInverse<0>
            cmp r8.x, -r4_abs.w, r5.w, r8.x  // ::TransferInverse<0>

#line 2512
            if_eq c10.x, -r6.y

#line 2557
            else

#line 2512
              add r4.w, r6.x, c10.x

#line 2515
              add r5.w, -r7.x, c52.x
              mul r6.w, r7.x, c52.y
              add r8.w, r7.x, c52.z
              mul r8.w, r8.w, c52.w
              mul r9.x, r8.w, r8.w
              mul r8.w, r8.w, r9.x
              cmp r5.w, r5.w, r6.w, r8.w  // ::v<0>
              cmp r8.x, -r4_abs.w, r5.w, r8.x  // ::TransferInverse<0>

#line 2520
              if_eq c10.x, -r6.x

#line 2557
              else

#line 2520
                mov r9.x, c10.x  // ::Companding<0>
                add r4.w, r9.x, c58.x

#line 2535
                if_eq r9.x, -c58.x

#line 2529
                  mul r1.z, r1.z, c56.x
                  exp r1.z, r1.z
                  mad r9.yz, r1.z, c55.xxyw, c55.xzww  // ::a<0>, ::b<0>
                  rcp r1.z, r9.z
                  mul r1.z, r1.z, r9.y
                  pow r5.w, r1.z, c56.y  // ::TransferInverse<0>
                  cmp r8.x, -r4_abs.w, r5.w, r8.x  // ::TransferInverse<0>

#line 2557
                else

#line 2551
                  add r9.xyz, r9.x, c166

#line 2554
                  mul r10.xy, r7.x, c56.zwzw

#line 2546
                  add r11, r7.x, c53
                  mul r10.zw, r11.xyyw, c54.xyxy

#line 2538
                  pow r1.z, r10.z, c166.w
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2546
                  pow r4.w, r10.w, c166.w
                  cmp r4.w, r11.z, r4.w, r10.x  // ::L<0>

#line 2554
                  add r5.w, -r7.x, c54.z
                  add r6.w, r7.x, c54.w
                  mul r6.w, r6.w, c57.x
                  pow r8.w, r6.w, c57.y
                  cmp r5.w, r5.w, r10.y, r8.w  // ::v<0>

#line 2557
                  cmp r5.w, -r9_abs.z, r5.w, r7.x  // ::TransferInverse<0>
                  cmp r4.w, -r9_abs.y, r4.w, r5.w  // ::TransferInverse<0>
                  cmp r8.x, -r9_abs.x, r1.z, r4.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2494
          log r1.z, r7.y
          mul r4.w, r1.z, c11.x
          exp r8.y, r4.w  // ::v<0>

#line 2499
          if_eq c10.x, r0.z

#line 2557
          else

#line 2499
            add r4.w, r6.y, c10.x

#line 2508
            mul r5.w, r7.y, -c58.x
            rsq r5.w, r5.w
            rcp r5.w, r5.w  // ::TransferInverse<0>
            cmp r6.w, -r7.y, -c167_abs.y, -c167_abs.x
            cmp r6.w, r7.y, r6.w, c125.z
            mad r8.w, r7.y, c101.x, c101.y
            log r8.w, r8.w
            mad r8.w, r8.w, c101.z, c101.w  // ::TransferInverse<0>
            cmp r5.w, r6.w, r8.w, r5.w  // ::TransferInverse<0>
            cmp r8.y, -r4_abs.w, r5.w, r8.y  // ::TransferInverse<0>

#line 2512
            if_eq c10.x, -r6.y

#line 2557
            else

#line 2512
              add r4.w, r6.x, c10.x

#line 2515
              add r5.w, -r7.y, c52.x
              mul r6.w, r7.y, c52.y
              add r8.w, r7.y, c52.z
              mul r8.w, r8.w, c52.w
              mul r9.x, r8.w, r8.w
              mul r8.w, r8.w, r9.x
              cmp r5.w, r5.w, r6.w, r8.w  // ::v<0>
              cmp r8.y, -r4_abs.w, r5.w, r8.y  // ::TransferInverse<0>

#line 2520
              if_eq c10.x, -r6.x

#line 2557
              else

#line 2520
                mov r9.x, c10.x  // ::Companding<0>
                add r4.w, r9.x, c58.x

#line 2535
                if_eq r9.x, -c58.x

#line 2529
                  mul r1.z, r1.z, c56.x
                  exp r1.z, r1.z
                  mad r9.yz, r1.z, c55.xxyw, c55.xzww  // ::a<0>, ::b<0>
                  rcp r1.z, r9.z
                  mul r1.z, r1.z, r9.y
                  pow r5.w, r1.z, c56.y  // ::TransferInverse<0>
                  cmp r8.y, -r4_abs.w, r5.w, r8.y  // ::TransferInverse<0>

#line 2557
                else

#line 2551
                  add r9.xyz, r9.x, c166

#line 2554
                  mul r10.xy, r7.y, c56.zwzw

#line 2546
                  add r11, r7.y, c53
                  mul r10.zw, r11.xyyw, c54.xyxy

#line 2538
                  pow r1.z, r10.z, c166.w
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2546
                  pow r4.w, r10.w, c166.w
                  cmp r4.w, r11.z, r4.w, r10.x  // ::L<0>

#line 2554
                  add r5.w, -r7.y, c54.z
                  add r6.w, r7.y, c54.w
                  mul r6.w, r6.w, c57.x
                  pow r8.w, r6.w, c57.y
                  cmp r5.w, r5.w, r10.y, r8.w  // ::v<0>

#line 2557
                  cmp r5.w, -r9_abs.z, r5.w, r7.y  // ::TransferInverse<0>
                  cmp r4.w, -r9_abs.y, r4.w, r5.w  // ::TransferInverse<0>
                  cmp r8.y, -r9_abs.x, r1.z, r4.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2494
          log r1.z, r7.z
          mul r4.w, r1.z, c11.x
          exp r8.z, r4.w  // ::v<0>

#line 2499
          if_eq c10.x, r0.z

#line 2557
          else

#line 2499
            add r4.w, r6.y, c10.x

#line 2508
            mul r5.w, r7.z, -c58.x
            rsq r5.w, r5.w
            rcp r5.w, r5.w  // ::TransferInverse<0>
            cmp r6.w, -r7.z, -c167_abs.y, -c167_abs.x
            cmp r6.w, r7.z, r6.w, c125.z
            mad r8.w, r7.z, c101.x, c101.y
            log r8.w, r8.w
            mad r8.w, r8.w, c101.z, c101.w  // ::TransferInverse<0>
            cmp r5.w, r6.w, r8.w, r5.w  // ::TransferInverse<0>
            cmp r8.z, -r4_abs.w, r5.w, r8.z  // ::TransferInverse<0>

#line 2512
            if_eq c10.x, -r6.y

#line 2557
            else

#line 2512
              add r4.w, r6.x, c10.x

#line 2515
              add r5.w, -r7.z, c52.x
              mul r6.w, r7.z, c52.y
              add r8.w, r7.z, c52.z
              mul r8.w, r8.w, c52.w
              mul r9.x, r8.w, r8.w
              mul r8.w, r8.w, r9.x
              cmp r5.w, r5.w, r6.w, r8.w  // ::v<0>
              cmp r8.z, -r4_abs.w, r5.w, r8.z  // ::TransferInverse<0>

#line 2520
              if_eq c10.x, -r6.x

#line 2557
              else

#line 2520
                mov r9.x, c10.x  // ::Companding<0>
                add r4.w, r9.x, c58.x

#line 2535
                if_eq r9.x, -c58.x

#line 2529
                  mul r1.z, r1.z, c56.x
                  exp r1.z, r1.z
                  mad r9.yz, r1.z, c55.xxyw, c55.xzww  // ::a<0>, ::b<0>
                  rcp r1.z, r9.z
                  mul r1.z, r1.z, r9.y
                  pow r5.w, r1.z, c56.y  // ::TransferInverse<0>
                  cmp r8.z, -r4_abs.w, r5.w, r8.z  // ::TransferInverse<0>

#line 2557
                else

#line 2551
                  add r9.xyz, r9.x, c166

#line 2554
                  mul r10.xy, r7.z, c56.zwzw

#line 2546
                  add r11, r7.z, c53
                  mul r10.zw, r11.xyyw, c54.xyxy

#line 2538
                  pow r1.z, r10.z, c166.w
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2546
                  pow r4.w, r10.w, c166.w
                  cmp r4.w, r11.z, r4.w, r10.x  // ::L<0>

#line 2554
                  add r5.w, -r7.z, c54.z
                  add r6.w, r7.z, c54.w
                  mul r6.w, r6.w, c57.x
                  pow r8.w, r6.w, c57.y
                  cmp r5.w, r5.w, r10.y, r8.w  // ::v<0>

#line 2557
                  cmp r5.w, -r9_abs.z, r5.w, r7.z  // ::TransferInverse<0>
                  cmp r4.w, -r9_abs.y, r4.w, r5.w  // ::TransferInverse<0>
                  cmp r8.z, -r9_abs.x, r1.z, r4.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2650
          if_eq c0.x, r0.z
            mov r9.xyz, r8  // ::FLrgb<0,1,2>
            mov r1.z, -c167.y
          else
            if_eq c0.x, -r6.x
              mov r9.xyz, r8  // ::FLrgb<0,1,2>
              mov r1.z, -c167.y
            else
              mov r10.x, c0.x  // ::Model<0>
              if_eq r10.x, -c58.x
                mov r9.xyz, r8  // ::FLrgb<0,1,2>
                mov r1.z, -c167.y
              else
                if_eq r10.x, -c60.x

#line 737
                  add r9.xyz, -r8, -c167.y  // ::Lrgb_CMY<0,1,2>

#line 2653
                  mov r1.z, -c167.y
                else
                  if_eq r10.x, -c100.x

#line 863
                    add r10.yzw, -r8.xzxy, r8.xyzx

#line 536
                    cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                    min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                    max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 845
                    add r6.w, -r4.w, r5.w  // ::c<0>
                    add r8.w, r6.w, c167.y
                    add r11.x, -r6.w, -c167.y
                    rcp r11.x, r11.x
                    mul r4.w, r4.w, r11.x  // ::v<0>

#line 857
                    add r11.xy, -r8, r5.w
                    rcp r5.w, r6.w

#line 863
                    mul r10.y, r5.w, r10.y

#line 855
                    cmp r11.zw, r10.y, c144.xyxy, c144
                    mul r10.y, r10.y, r11.w
                    frc r10.y, r10.y
                    mul r10.y, r10.y, r11.z  // ::h<0>

#line 859
                    mad r10.z, r10.z, r5.w, -c45.x  // ::h<0>

#line 863
                    mad r5.w, r10.w, r5.w, -c60.x  // ::h<0>
                    cmp r5.w, -r11_abs.y, r10.z, r5.w  // ::h<0>
                    cmp r5.w, -r11_abs.x, r10.y, r5.w  // ::h<0>
                    mul r10.y, r5.w, c57.z  // ::h<0>
                    cmp r5.w, r5.w, c84.y, c84.z
                    mul r10.y, r5.w, r10.y
                    frc r10.y, r10.y
                    mul r5.w, r5.w, r10.y  // ::h<0>
                    mul r5.w, r5.w, c169.z
                    cmp r9.x, -r6.w, c125.z, r5.w  // ::Lrgb_HCV<0>
                    mul r9.y, r6.w, c169.w  // ::Lrgb_HCV<1>
                    mul r4.w, r4.w, c169.w
                    cmp r9.z, r8.w, c125.z, r4.w  // ::Lrgb_HCV<2>

#line 2654
                    mov r1.z, -c167.y
                  else
                    if_eq r10.x, -c105.x

#line 542
                      add r4.w, r8.y, r8.x
                      add r4.w, r8.z, r4.w  // ::GetSum<0>

#line 908
                      rcp r5.w, r4.w
                      mul r10.yzw, r5.w, r8.xxyz  // ::r<0>, ::g<0>, ::b<0>
                      mad r11.xyz, r8.xxyw, r5.w, -r10.zwww
                      add r5.w, r11.y, r11.x
                      mul r5.w, r5.w, -c168.w
                      mul r11.xy, r11.xzzw, r11
                      add r6.w, r11.y, r11.x
                      rsq r6.w, r6.w
                      mul r5.w, r5.w, r6.w
                      add r6.w, -r5_abs.w, -c167.y
                      rsq r6.w, r6.w
                      rcp r6.w, r6.w
                      mad r8.w, r5_abs.w, c63.x, c63.y
                      mad r8.w, r8.w, r5_abs.w, c57.w
                      mad r8.w, r8.w, r5_abs.w, c63.z
                      mul r6.w, r6.w, r8.w
                      mad r8.w, r6.w, c80.x, c80.y
                      cmp r5.w, r5.w, c167_abs.x, c167_abs.y
                      mad r5.w, r8.w, r5.w, r6.w  // ::h<0>

#line 913
                      add r6.w, -r5.w, c51.w  // ::h<0>
                      cmp r5.w, r11.z, r5.w, r6.w  // ::h<0>

#line 538
                      min r6.w, r10.w, r10.z
                      min r8.w, r6.w, r10.y  // ::GetMinimum<0>

#line 917
                      mad r6.w, r8.w, -c49.w, c49.y  // ::s<0>
                      mul r9.z, r4.w, c63.w  // ::i<0>
                      mul r9.x, r5.w, c80.z  // ::Lrgb_HCY<0>
                      mul r9.y, r6.w, c169.w  // ::Lrgb_HCY<1>

#line 2655
                      mov r1.z, -c167.y
                    else
                      if_eq r10.x, -c118.z

#line 1123
                        add r10.yzw, -r8.xzyx, r8.xyxz

#line 536
                        cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                        min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                        max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1102
                        add r6.w, -r4.w, r5.w  // ::chroma<0>
                        add r4.w, r4.w, r5.w

#line 1107
                        add r8.w, r4.w, c167.y

#line 1128
                        mul r9.xz, r4.w, c62.xyyw  // ::Lrgb_HSL<2>

#line 1108
                        rcp r11.x, r9.x
                        mul r11.x, r6.w, r11.x
                        mad r4.w, r4.w, -c49.y, c49.z
                        rcp r4.w, r4.w
                        mul r4.w, r4.w, r6.w
                        cmp r11.y, r8.w, r4.w, r11.x  // ::s<0>

#line 1121
                        add r12.xyz, -r5.w, r8.xzyw

#line 1113
                        rcp r4.w, r6.w

#line 1123
                        mul r5.w, r4.w, r10.y  // ::h<0>

#line 1119
                        mad r11.zw, r10.xyyz, r4.w, -c166.xyzx  // ::h<0>

#line 1114
                        cmp r5.w, r10.y, r5.w, r11.z  // ::h<0>

#line 1123
                        mad r4.w, r10.w, r4.w, -c45.x  // ::h<0>
                        cmp r4.w, -r12_abs.z, r4.w, c125.z  // ::h<0>
                        cmp r4.w, -r12_abs.y, r11.w, r4.w  // ::h<0>
                        cmp r4.w, -r12_abs.x, r5.w, r4.w  // ::h<0>
                        mul r11.x, r4.w, c80.w  // ::h<0>
                        cmp r9.xw, -r6_abs.w, c125.z, r11.xyzy  // ::h<0>, ::s<0>

#line 2656
                        mul r9.y, r9.w, c169.w
                        mov r1.z, -c167.y
                      else
                        if_eq r10.x, -c59.z

#line 1025
                          add r10.xyz, -r8.zxyw, r8.yzxw

#line 536
                          cmp r11.xy, r10.x, r8.zyzw, r8.yzzw
                          min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                          max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1004
                          add r4.w, -r4.w, r5.w  // ::chroma<0>

#line 1013
                          rcp r6.w, r5.w
                          mul r11.y, r4.w, r6.w  // ::_s<0>

#line 1024
                          add r12.xyz, -r5.w, r8

#line 1017
                          rcp r6.w, r4.w

#line 1025
                          mul r8.w, r6.w, r10.x  // ::_h<0>
                          mad r10.zw, r10.xyxz, r6.w, -c166.xyzx  // ::_h<0>

#line 1018
                          cmp r8.w, r10.x, r8.w, r10.z  // ::_h<0>

#line 1022
                          mad r6.w, r10.y, r6.w, -c45.x  // ::_h<0>

#line 1025
                          cmp r10.x, -r12_abs.z, r10.w, c125.z  // ::_h<0>
                          cmp r6.w, -r12_abs.y, r6.w, r10.x  // ::_h<0>
                          cmp r6.w, -r12_abs.x, r8.w, r6.w  // ::_h<0>
                          mul r11.x, r6.w, c80.w  // ::_h<0>
                          cmp r9.xw, -r4_abs.w, c125.z, r11.xyzy  // ::_h<0>, ::_s<0>
                          mul r9.z, r5.w, c169.w  // ::Lrgb_HSB<2>

#line 2657
                          mul r9.y, r9.w, c169.w
                          mov r1.z, -c167.y
                        else
                          add r4.w, r6.z, c0.x
                          cmp r1.z, -r4_abs.w, c167_abs.y, c167_abs.x

#line 1123
                          add r10.xyz, -r8.zyxw, r8.yxzw

#line 536
                          cmp r11.xy, r10.x, r8.zyzw, r8.yzzw
                          min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                          max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1102
                          add r6.w, -r4.w, r5.w  // ::chroma<0>
                          add r4.w, r4.w, r5.w

#line 1107
                          add r8.w, r4.w, c167.y

#line 1128
                          mul r9.xz, r4.w, c62.xyyw  // ::Lrgb_HSL<2>

#line 1108
                          rcp r10.w, r9.x
                          mul r10.w, r6.w, r10.w
                          mad r4.w, r4.w, -c49.y, c49.z
                          rcp r4.w, r4.w
                          mul r4.w, r4.w, r6.w
                          cmp r11.y, r8.w, r4.w, r10.w  // ::s<0>

#line 1121
                          add r12.xyz, -r5.w, r8.xzyw

#line 1113
                          rcp r4.w, r6.w

#line 1123
                          mul r5.w, r4.w, r10.x  // ::h<0>

#line 1119
                          mad r10.yw, r10.xxzy, r4.w, -c166.xzzx  // ::h<0>

#line 1114
                          cmp r5.w, r10.x, r5.w, r10.y  // ::h<0>

#line 1123
                          mad r4.w, r10.z, r4.w, -c45.x  // ::h<0>
                          cmp r4.w, -r12_abs.z, r4.w, c125.z  // ::h<0>
                          cmp r4.w, -r12_abs.y, r10.w, r4.w  // ::h<0>
                          cmp r4.w, -r12_abs.x, r5.w, r4.w  // ::h<0>
                          mul r11.x, r4.w, c80.w  // ::h<0>
                          cmp r9.xw, -r6_abs.w, c125.z, r11.xyzy  // ::h<0>, ::s<0>

#line 2658
                          mul r9.y, r9.w, c169.w
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r1.z, -r1.z

#line 2707
          else

#line 2660
            mov r10.x, c0.x  // ::Model<0>
            if_eq r10.x, c168.x

#line 1123
              add r10.yzw, -r8.xzyx, r8.xyxz

#line 536
              cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
              min r1.z, r11.x, r8.x  // ::GetMinimum<0>
              max r4.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1102
              add r5.w, -r1.z, r4.w  // ::chroma<0>
              add r1.z, r1.z, r4.w

#line 1107
              add r6.w, r1.z, c167.y

#line 1128
              mul r9.xz, r1.z, c62.xyyw  // ::Lrgb_HSL<2>

#line 1108
              rcp r8.w, r9.x
              mul r8.w, r5.w, r8.w
              mad r1.z, r1.z, -c49.y, c49.z
              rcp r1.z, r1.z
              mul r1.z, r1.z, r5.w
              cmp r11.y, r6.w, r1.z, r8.w  // ::s<0>

#line 1121
              add r12.xyz, -r4.w, r8.xzyw

#line 1113
              rcp r1.z, r5.w

#line 1123
              mul r4.w, r1.z, r10.y  // ::h<0>

#line 1119
              mad r11.zw, r10.xyyz, r1.z, -c166.xyzx  // ::h<0>

#line 1114
              cmp r4.w, r10.y, r4.w, r11.z  // ::h<0>

#line 1123
              mad r1.z, r10.w, r1.z, -c45.x  // ::h<0>
              cmp r1.z, -r12_abs.z, r1.z, c125.z  // ::h<0>
              cmp r1.z, -r12_abs.y, r11.w, r1.z  // ::h<0>
              cmp r1.z, -r12_abs.x, r4.w, r1.z  // ::h<0>
              mul r11.x, r1.z, c80.w  // ::h<0>
              cmp r9.xw, -r5_abs.w, c125.z, r11.xyzy  // ::h<0>, ::s<0>

#line 2660
              mul r9.y, r9.w, c169.w
              mov r1.z, -c167.y
            else
              if_eq r10.x, -c60.z

#line 1151
                frc r4.w, c0.x
                add r4.w, -r4.w, c0.x
                add r11, r4.w, c118
                add r12, r4.w, c59
                add r13, r4.w, c45
                add r14, r4.w, c58
                add r15, r4.w, c60
                add r16, r4.w, c100
                add r17, r4.w, c105
                add r18, r4.w, c67
                add r19, r4.w, c61
                add r20, r4.w, c46
                add r21, r4.w, c35
                add r22, r4.w, c36
                add r23, r4.w, c47
                cmp r10.yzw, -r11_abs.x, c169.x, c169.y
                cmp r10.yzw, -r12_abs.x, -c167.y, r10
                cmp r10.yzw, -r13_abs.x, c169.x, r10
                cmp r10.yzw, -r14_abs.x, c169.x, r10
                cmp r10.yzw, -r15_abs.x, -c167.y, r10
                cmp r10.yzw, -r16_abs.x, c169.xzww, r10
                cmp r10.yzw, -r17_abs.x, c169.xzwx, r10
                cmp r10.yzw, -r11_abs.z, c169.xzww, r10
                cmp r10.yzw, -r12_abs.z, c169.xzww, r10
                cmp r10.yzw, -r13_abs.z, c169.xzww, r10
                cmp r10.yzw, -r14_abs.z, c169.xzww, r10
                cmp r10.yzw, -r15_abs.z, c169.xzwx, r10
                cmp r10.yzw, -r16_abs.z, c169.xzwx, r10
                cmp r10.yzw, -r17_abs.z, c169.xzww, r10
                cmp r10.yzw, -r18_abs.x, -c167.y, r10
                cmp r10.yzw, -r18_abs.z, c169.xwwz, r10
                cmp r10.yzw, -r19_abs.x, c169.xwwz, r10
                cmp r10.yzw, -r19_abs.z, c169.xwwz, r10
                cmp r10.yzw, -r20_abs.x, c169.x, r10
                cmp r10.yzw, -r20_abs.y, c169.w, r10
                cmp r10.yzw, -r21_abs.x, c66.xxyy, r10
                cmp r10.yzw, -r21_abs.y, -c167.y, r10
                cmp r10.yzw, -r21_abs.z, -c167.y, r10
                cmp r10.yzw, -r21_abs.w, c169.xzww, r10
                cmp r10.yzw, -r22_abs.x, c169.xzww, r10
                cmp r10.yzw, -r22_abs.y, c169.xzww, r10
                cmp r10.yzw, -r22_abs.z, c169.xwwz, r10
                cmp r10.yzw, -r22_abs.w, c169.xwwz, r10
                cmp r10.yzw, -r23_abs.x, c66.xzzw, r10
                cmp r10.yzw, -r23_abs.y, c169.xwwz, r10
                cmp r10.yzw, -r23_abs.z, c169.xwwz, r10
                cmp r10.yzw, -r23_abs.w, c169.xwwz, r10
                cmp r10.yzw, -r11_abs.y, -c167.y, r10
                cmp r10.yzw, -r12_abs.y, c170.xxyz, r10
                cmp r10.yzw, -r13_abs.y, c169.xwwz, r10
                cmp r10.yzw, -r14_abs.y, c169.xwwz, r10
                cmp r10.yzw, -r15_abs.y, c169.xwwz, r10
                cmp r10.yzw, -r16_abs.y, -c167.y, r10
                cmp r10.yzw, -r17_abs.y, -c167.y, r10
                cmp r10.yzw, -r11_abs.w, -c167.y, r10
                cmp r10.yzw, -r12_abs.w, c170.xyzx, r10
                cmp r10.yzw, -r13_abs.w, c169.x, r10
                cmp r10.yzw, -r14_abs.w, -c167.y, r10
                cmp r10.yzw, -r15_abs.w, c170.xwxx, r10
                cmp r10.yzw, -r16_abs.w, -c167.y, r10
                cmp r10.yzw, -r17_abs.w, c171.xxyy, r10
                cmp r10.yzw, -r18_abs.y, c171.xzww, r10
                cmp r10.yzw, -r18_abs.w, c172.xxyy, r10
                cmp r10.yzw, -r19_abs.y, -c167.y, r10
                cmp r10.yzw, -r19_abs.w, c172.xxzw, r10
                cmp r10.yzw, -r20_abs.z, c171.xzww, r10
                cmp r10.yzw, -r20_abs.w, c171.xzww, r10  // ::max<0,1,2>
                add r4.w, r8.y, r8.y
                mad r4.w, r8.x, -c60.x, r4.w
                add r4.w, r8.z, r4.w

#line 1190
                mul r5.w, r4.w, c62.z  // ::m<0>

#line 1157
                mad r11.xyz, r4.w, -c62.z, r8
                mul r6.w, r11.y, -c60.x
                mad r6.w, r11.x, -c58.x, -r6.w
                mad r6.w, r11.z, c60.x, r6.w
                mul r6.w, r6.w, c62.w  // ::j<0>
                mul r11.xy, r11, r11
                add r8.w, r11.y, r11.x
                mad r8.w, r11.z, r11.z, r8.w
                rsq r8.w, r8.w
                mul r6.w, r6.w, r8.w
                add r11.x, -r6_abs.w, -c167.y
                rsq r11.x, r11.x
                rcp r11.x, r11.x
                mad r11.y, r6_abs.w, c63.x, c63.y
                mad r11.y, r11.y, r6_abs.w, c57.w
                mad r11.y, r11.y, r6_abs.w, c63.z
                mul r11.x, r11.x, r11.y
                mad r11.y, r11.x, c80.x, c80.y
                cmp r6.w, r6.w, c167_abs.x, c167_abs.y
                mad r6.w, r11.y, r6.w, r11.x  // ::t<0>
                add r11.x, -r8.z, r8.y
                add r11.y, -r6.w, c51.w
                cmp r6.w, r11.x, r6.w, r11.y  // ::w<0>

#line 1190
                mad r11.xy, r4.w, -c64.x, c64.yzzw  // Pow2::input<0,0>

#line 576
                mul r11.x, r11.x, r11.x  // ::Pow2<0>

#line 1170
                dp2add r11.x, r5.w, r5.w, r11.x  // ::v<0>

#line 399
                add r11.z, -r4.w, c64.w

#line 1190
                mad r11.w, r4.w, c119.x, c119.y  // Pow2::input<0>

#line 576
                mul r11.w, r11.w, r11.w  // ::Pow2<0>

#line 1190
                dp2add r11.y, r11.y, r11.y, r11.w  // ::v<0>
                cmp r11.z, r11.z, -c167_abs.y, -c167_abs.x
                cmp r11.z, -r4.w, c125.z, r11.z
                cmp r11.y, r11.z, c125.z, r11.y  // ::v<0>
                cmp r11.z, -r4.w, -c167_abs.y, -c167_abs.x
                cmp r4.w, r4.w, r11.z, c125.z
                cmp r4.w, r4.w, r11.y, r11.x  // ::v<0>
                mul r6.w, r10.y, r6.w
                rcp r8.w, r8.w
                rsq r4.w, r4.w
                mul r4.w, r4.w, r8.w  // ::s<0>
                mul r9.x, r6.w, c84.x  // ::Lrgb_HSM<0>
                mul r9.y, r10.z, r4.w  // ::Lrgb_HSM<1>
                mul r9.z, r10.w, r5.w  // ::Lrgb_HSM<2>

#line 2661
                mov r1.z, -c167.y
              else
                if_eq r10.x, -c100.z

#line 1330
                  mul r10.yzw, r8.xxyz, c169.x  // ::_input<0,1,2>

#line 1334
                  mul r11.xyz, r10.yzww, r10.yzww
                  mul r11.xy, r11, c119.zwzw
                  add r4.w, r11.y, r11.x
                  mad r4.w, r11.z, c65.x, r4.w
                  rsq r4.w, r4.w
                  rcp r4.w, r4.w  // ::p<0>
                  mad r11.xy, r8.x, c169.x, -r10.wzzw
                  cmp r5.w, -r11_abs.x, c167_abs.y, c167_abs.x
                  cmp r5.w, -r11_abs.y, r5.w, c125.z
                  if_ne r5.w, -r5.w

#line 1339
                    mov r11.zw, c125.z  // ::h<0>, ::s<0>
                  else

#line 1352
                    mad r12.xy, r8.yzzw, c169.x, -r10.wzzw
                    mul r12.zw, r12.xyyx, c57.z

#line 1347
                    rcp r5.w, r11.y
                    mad r13.y, r12.z, -r5.w, -c167.y  // ::h<0>
                    rcp r5.w, r10.y

#line 1352
                    rcp r6.w, r11.x
                    mul r13.x, r6.w, r12.w  // ::h<0>
                    mad r13.zw, r10, -r5.w, -c167.y  // ::s<0,0>
                    cmp r12.zw, r12.y, r13.xyyz, r13.xyxw  // ::h<0>, ::s<0>
                    cmp r5.w, r11.x, -c167_abs.y, -c167_abs.x
                    cmp r5.w, r11.y, r5.w, c125.z
                    cmp r12.zw, r5.w, c125.z, r12  // ::h<0>, ::s<0>

#line 1382
                    mul r13.xy, r11, c57.z

#line 1362
                    rcp r5.w, r12.x
                    mad r14.y, r13.x, -r5.w, c63.w  // ::h<0>
                    rcp r5.w, r10.z

#line 1367
                    mad r13.xz, r8.yyzw, c169.x, -r10.y

#line 1377
                    mul r15.xy, r13.zxzw, c57.z

#line 1367
                    rcp r6.w, r13.x
                    mad r14.x, r15.x, r6.w, c63.w  // ::h<0>
                    mad r14.zw, r10.xywy, -r5.w, -c167.y  // ::s<0,0>
                    cmp r11.xy, r11.x, r14.yzzw, r14.xwzw  // ::h<0>, ::s<0>

#line 1385
                    cmp r14.xy, r12, -c167_abs.y, -c167_abs.x
                    cmp r14.xy, r13.xzzw, r14, c125.z

#line 1370
                    cmp r11.xy, r14.x, r12.zwzw, r11  // ::h<0>, ::s<0>

#line 1377
                    rcp r5.w, r13.z
                    mad r15.y, r15.y, -r5.w, c65.y  // ::h<0>
                    rcp r5.w, r10.w

#line 1382
                    rcp r6.w, r12.y
                    mad r15.x, r13.y, r6.w, c65.y  // ::h<0>
                    mad r15.zw, r10.xyyz, -r5.w, -c167.y  // ::s<0,0>
                    cmp r10.yz, r13.x, r15, r15.xxww  // ::h<0>, ::s<0>
                    cmp r11.zw, r14.y, r11.xyxy, r10.xyyz  // ::h<0>, ::s<0>
                  endif
                  mul r9.y, r11.w, c169.w  // ::Lrgb_HSP<1>
                  mad r5.w, r11.z, c65.z, c65.w
                  frc r6.w, r5.w
                  add r9.x, r5.w, -r6.w  // ::Lrgb_HSP<0>
                  add r4.w, r4.w, -c168.w
                  frc r5.w, r4.w
                  add r9.z, r4.w, -r5.w  // ::Lrgb_HSP<2>

#line 2662
                  mov r1.z, -c167.y
                else
                  if_eq r10.x, -c105.z

#line 1025
                    add r10.yzw, -r8.xzxy, r8.xyzx

#line 536
                    cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                    min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                    max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1004
                    add r6.w, -r4.w, r5.w  // ::chroma<0>

#line 1024
                    add r11.xyz, -r5.w, r8

#line 1017
                    rcp r8.w, r6.w

#line 1025
                    mul r11.w, r8.w, r10.y  // ::_h<0>
                    mad r12.xy, r10.ywzw, r8.w, -c166.zxzw  // ::_h<0>

#line 1018
                    cmp r10.y, r10.y, r11.w, r12.x  // ::_h<0>

#line 1022
                    mad r8.w, r10.z, r8.w, -c45.x  // ::_h<0>

#line 1025
                    cmp r10.z, -r11_abs.z, r12.y, c125.z  // ::_h<0>
                    cmp r8.w, -r11_abs.y, r8.w, r10.z  // ::_h<0>
                    cmp r8.w, -r11_abs.x, r10.y, r8.w  // ::_h<0>
                    mul r8.w, r8.w, c80.w  // ::_h<0>
                    cmp r9.x, -r6_abs.w, c125.z, r8.w  // ::_h<0>

#line 1419
                    add r5.w, -r5.w, -c167.y  // ::black<0>
                    mul r9.y, r4.w, c169.w  // ::Lrgb_HWB<1>
                    mul r9.z, r5.w, c169.w  // ::Lrgb_HWB<2>

#line 2663
                    mov r1.z, -c167.y
                  else

#line 2667
                    add r11, r10.x, c174
                    add r10.yz, r10.x, c46.xxyw

#line 2372
                    dp3 r4.w, r8, c151  // ::y<0>
                    add r12.xy, -r4.w, r8.zxzw

#line 2416
                    mad r4.w, r4.w, c164.x, c164.y  // ::Lrgb_YCbCr<0>
                    mad r12.xy, r12, c165, c165.z  // ::Lrgb_YCbCr<1,2>

#line 2436
                    mul r5.w, r12.x, c119.w
                    mad r5.w, r4.w, c119.z, r5.w
                    mad r13.x, r12.y, c65.x, r5.w  // ::Lrgb_JPEG<0>
                    mad r5.w, r4.w, -c164.z, c164.w
                    mad r5.w, r12.x, -c151.w, r5.w
                    mad r13.y, r12.y, -c168.w, r5.w  // ::Lrgb_JPEG<1>
                    mad r4.w, r4.w, c165.w, c165.z
                    mad r4.w, r12.x, -c128.x, r4.w
                    mad r13.z, r12.y, -c128.y, r4.w  // ::Lrgb_JPEG<2>

#line 2669
                    cmp r4.w, -r10_abs.z, c167_abs.y, c167_abs.x
                    cmp r12.xyz, -r10_abs.z, c125.z, r9  // ::FLrgb<0,1,2>
                    cmp r12.xyz, -r10_abs.y, r13, r12  // ::FLrgb<0,1,2>
                    cmp r4.w, -r10_abs.y, -c167.y, r4.w
                    cmp r10.yzw, -r11_abs.w, r8.xxyz, r12.xxyz  // ::FLrgb<0,1,2>
                    cmp r4.w, -r11_abs.w, -c167.y, r4.w
                    cmp r10.yzw, -r11_abs.z, r8.xxyz, r10  // ::FLrgb<0,1,2>
                    cmp r4.w, -r11_abs.z, -c167.y, r4.w
                    cmp r10.yzw, -r11_abs.y, r8.xxyz, r10  // ::FLrgb<0,1,2>
                    cmp r4.w, -r11_abs.y, -c167.y, r4.w
                    cmp r9.xyz, -r11_abs.x, r8, r10.yzww  // ::FLrgb<0,1,2>
                    cmp r1.z, -r11_abs.x, -c167.y, r4.w
                  endif
                endif
              endif
            endif
            if_ne r1.z, -r1.z

#line 2707
            else

#line 2671
              if_eq r10.x, -c35.x

#line 586
                abs r1.z, c13.x

#line 590
                rcp r4.w, c13.x
                mul r11.x, r4.w, c12.x  // ::xyY_XYZ<0>
                mov r12.x, c13.x  // ::WhiteY<0>
                add r5.w, -r12.x, -c12.x
                add r5.w, r5.w, -c167.y
                mul r11.z, r4.w, r5.w  // ::xyY_XYZ<2>
                mov r11.y, -c167.y
                cmp r10.yzw, -r1.z, c128.z, r11.xxyz  // ::xyY_XYZ<0,1,2>

#line 548
                mul r11.xyz, r8.y, c18
                mad r11.xyz, r8.x, c17, r11
                mad r11.xyz, r8.z, c19, r11  // ::x<0>, ::y<0>, ::z<0>

#line 630
                add r12.xy, r10.ywzw, c68

#line 633
                cmp r4.w, -r12_abs.y, c68.z, c68.w
                cmp r4.w, -r1.z, c125.z, r4.w
                cmp r4.w, -r12_abs.x, r4.w, c125.z

#line 643
                add r12.xy, r10.zwzw, r10.yzzw
                mul r12.xy, r12, c127  // ::Ka<0,0>
                cmp r12.xy, r4.w, r12, c127.zwzw  // ::ComputeKa<0>, ::ComputeKb<0>

#line 1694
                cmp r1.z, -r1.z, c145.x, c145.y
                mul r1.z, r1.z, r11.y
                rsq r4.w, r1.z
                rcp r5.w, r4.w
                mul r9.x, r5.w, c169.w  // ::L<0>
                rcp r5.w, r10.y
                mad r5.w, r11.x, r5.w, -r1.z
                mul r5.w, r4.w, r5.w
                mul r9.y, r5.w, r12.x  // ::a<0>
                rcp r5.w, r10.w
                mad r1.z, r11.z, -r5.w, r1.z
                mul r1.z, r4.w, r1.z
                mul r9.z, r1.z, r12.y  // ::b<0>

#line 2671
                mov r1.z, -c167.y
              else
                if_eq r10.x, -c35.y

#line 548
                  mul r11, r8.y, c18.yzxy
                  mad r11, r8.x, c17.yzxy, r11
                  mad r11, r8.z, c19.yzxy, r11  // ::y<0>, ::z<0>, ::x<0>, ::y<0>

#line 1743
                  mul r10.yz, r11.xzww, c145.xzww
                  add r4.w, r10.z, r10.y
                  mad r4.w, r11.y, -c128.w, r4.w  // PerceptualQuantizer::x<0>

#line 562
                  mul r4.w, r4.w, c91.x
                  pow r5.w, r4.w, c56.x  // ::xx<0>
                  mad r10.yz, r5.w, c55.xxyw, c55.xzww
                  rcp r4.w, r10.z
                  mul r4.w, r4.w, r10.y
                  pow r5.w, r4.w, c91.y  // ::result<0>

#line 1744
                  mul r10.yzw, r11.xxzw, c163.xxyz
                  mad r4.w, r11.z, c91.z, r10.y
                  mad r4.w, r11.y, c91.w, r4.w  // PerceptualQuantizer::x<0>

#line 562
                  mul r4.w, r4.w, c91.x
                  pow r6.w, r4.w, c56.x  // ::xx<0>
                  mad r11.xz, r6.w, c55.xyyw, c55.zyww
                  rcp r4.w, r11.z
                  mul r4.w, r4.w, r11.x
                  pow r6.w, r4.w, c91.y  // ::result<0>

#line 1744
                  add r4.w, r10.w, r10.z
                  mad r4.w, r11.y, c163.w, r4.w  // PerceptualQuantizer::x<0>

#line 562
                  mul r4.w, r4.w, c91.x
                  pow r8.w, r4.w, c56.x  // ::xx<0>
                  mad r10.yz, r8.w, c55.xxyw, c55.xzww
                  rcp r4.w, r10.z
                  mul r4.w, r4.w, r10.y
                  pow r8.w, r4.w, c91.y  // ::result<0>

#line 1746
                  add r4.w, r5.w, r6.w

#line 1749
                  mul r10.yz, r6.w, c162.xxyw
                  mad r6.w, r5.w, c162.z, -r10.y
                  mad r9.y, r8.w, c162.w, r6.w  // ::az<0>
                  mad r5.w, r5.w, c69.x, r10.z
                  mad r9.z, r8.w, -c69.y, r5.w  // ::bz<0>
                  mul r5.w, r4.w, c69.z
                  mad r4.w, r4.w, -c102.x, c102.y
                  rcp r4.w, r4.w
                  mad r9.x, r5.w, r4.w, c69.w  // ::Jz<0>

#line 2672
                  mov r1.z, -c167.y
                else
                  if_eq r10.x, -c35.z

#line 548
                    mov r11.xyz, c29  // ::LMSk_LABk_x<0,1,2>
                    add r10.yzw, r11.xxyz, c30.xxyz
                    add r9.xyz, r10.yzww, c31  // ::x<0>, ::y<0>, ::z<0>

#line 2673
                    mov r1.z, -c167.y
                  else
                    if_eq r10.x, -c35.w

#line 1025
                      add r10.yzw, -r8.xzxy, r8.xyzx

#line 536
                      cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                      min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                      max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1004
                      add r4.w, -r4.w, r5.w  // ::chroma<0>

#line 1013
                      rcp r6.w, r5.w
                      mul r11.y, r4.w, r6.w  // ::_s<0>

#line 1024
                      add r12.xyz, -r5.w, r8

#line 1017
                      rcp r6.w, r4.w

#line 1025
                      mul r8.w, r6.w, r10.y  // ::_h<0>
                      mad r11.zw, r10.xyyw, r6.w, -c166.xyzx  // ::_h<0>

#line 1018
                      cmp r8.w, r10.y, r8.w, r11.z  // ::_h<0>

#line 1022
                      mad r6.w, r10.z, r6.w, -c45.x  // ::_h<0>

#line 1025
                      cmp r10.y, -r12_abs.z, r11.w, c125.z  // ::_h<0>
                      cmp r6.w, -r12_abs.y, r6.w, r10.y  // ::_h<0>
                      cmp r6.w, -r12_abs.x, r8.w, r6.w  // ::_h<0>
                      mul r11.x, r6.w, c80.w  // ::_h<0>
                      cmp r9.xw, -r4_abs.w, c125.z, r11.xyzy  // ::_h<0>, ::_s<0>
                      mul r9.z, r5.w, c169.w  // ::Lrgb_HSB<2>

#line 2674
                      mul r9.y, r9.w, c169.w
                      mov r1.z, -c167.y
                    else
                      if_eq r10.x, -c36.x

#line 1123
                        add r10.yzw, -r8.xzyx, r8.xyxz

#line 536
                        cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                        min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                        max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1102
                        add r6.w, -r4.w, r5.w  // ::chroma<0>
                        add r4.w, r4.w, r5.w

#line 1107
                        add r8.w, r4.w, c167.y

#line 1128
                        mul r9.xz, r4.w, c62.xyyw  // ::Lrgb_HSL<2>

#line 1108
                        rcp r11.x, r9.x
                        mul r11.x, r6.w, r11.x
                        mad r4.w, r4.w, -c49.y, c49.z
                        rcp r4.w, r4.w
                        mul r4.w, r4.w, r6.w
                        cmp r11.y, r8.w, r4.w, r11.x  // ::s<0>

#line 1121
                        add r12.xyz, -r5.w, r8.xzyw

#line 1113
                        rcp r4.w, r6.w

#line 1123
                        mul r5.w, r4.w, r10.y  // ::h<0>

#line 1119
                        mad r11.zw, r10.xyyz, r4.w, -c166.xyzx  // ::h<0>

#line 1114
                        cmp r5.w, r10.y, r5.w, r11.z  // ::h<0>

#line 1123
                        mad r4.w, r10.w, r4.w, -c45.x  // ::h<0>
                        cmp r4.w, -r12_abs.z, r4.w, c125.z  // ::h<0>
                        cmp r4.w, -r12_abs.y, r11.w, r4.w  // ::h<0>
                        cmp r4.w, -r12_abs.x, r5.w, r4.w  // ::h<0>
                        mul r11.x, r4.w, c80.w  // ::h<0>
                        cmp r9.xw, -r6_abs.w, c125.z, r11.xyzy  // ::h<0>, ::s<0>

#line 2675
                        mul r9.y, r9.w, c169.w
                        mov r1.z, -c167.y
                      else
                        if_eq r10.x, -c36.y

#line 1025
                          add r10.yzw, -r8.xzxy, r8.xyzx

#line 536
                          cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                          min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                          max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1004
                          add r6.w, -r4.w, r5.w  // ::chroma<0>

#line 1024
                          add r11.xyz, -r5.w, r8

#line 1017
                          rcp r8.w, r6.w

#line 1025
                          mul r9.w, r8.w, r10.y  // ::_h<0>
                          mad r12.xy, r10.ywzw, r8.w, -c166.zxzw  // ::_h<0>

#line 1018
                          cmp r9.w, r10.y, r9.w, r12.x  // ::_h<0>

#line 1022
                          mad r8.w, r10.z, r8.w, -c45.x  // ::_h<0>

#line 1025
                          cmp r10.y, -r11_abs.z, r12.y, c125.z  // ::_h<0>
                          cmp r8.w, -r11_abs.y, r8.w, r10.y  // ::_h<0>
                          cmp r8.w, -r11_abs.x, r9.w, r8.w  // ::_h<0>
                          mul r8.w, r8.w, c80.w  // ::_h<0>
                          cmp r9.x, -r6_abs.w, c125.z, r8.w  // ::_h<0>

#line 1419
                          add r5.w, -r5.w, -c167.y  // ::black<0>
                          mul r9.y, r4.w, c169.w  // ::Lrgb_HWB<1>
                          mul r9.z, r5.w, c169.w  // ::Lrgb_HWB<2>

#line 2676
                          mov r1.z, -c167.y
                        else
                          if_eq r10.x, -c36.z
                            mov r9.xyz, c125.z  // ::FLrgb<0,1,2>
                            mov r1.z, -c167.y
                          else
                            if_eq r10.x, -c36.w
                              mov r9.xyz, c125.z  // ::FLrgb<0,1,2>
                              mov r1.z, -c167.y
                            else
                              if_eq r10.x, -c47.x
                                mov r9.xyz, c125.z  // ::FLrgb<0,1,2>
                                mov r1.z, -c167.y
                              else
                                add r4.w, r10.x, c47.y
                                cmp r1.z, -r4_abs.w, c167_abs.y, c167_abs.x
                                cmp r9.xyz, -r4_abs.w, c125.z, r9  // ::FLrgb<0,1,2>
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r1.z, -r1.z

#line 2707
              else

#line 2682
                if_eq r10.x, -c47.z
                  mov r9.xyz, c125.z  // ::FLrgb<0,1,2>
                  mov r1.z, -c167.y
                else
                  if_eq r10.x, -c47.w
                    mov r9.xyz, c125.z  // ::FLrgb<0,1,2>
                    mov r1.z, -c167.y
                  else
                    if_eq r10.x, -c106.x

#line 548
                      mul r10.yzw, r8.y, c18.xxyz
                      mad r10.yzw, r8.x, c17.xxyz, r10
                      mad r10.yzw, r8.z, c19.xxyz, r10  // ::x<0>, ::y<0>, ::z<0>
                      mul r11.xyz, r10.z, c21
                      mad r11.xyz, r10.y, c20, r11
                      mad r9.xyz, r10.w, c22, r11  // ::x<0>, ::y<0>, ::z<0>

#line 2684
                      mov r1.z, -c167.y
                    else
                      if_eq r10.x, -c106.y

#line 586
                        abs r4.w, c13.x

#line 590
                        rcp r5.w, c13.x
                        mul r11.x, r5.w, c12.x  // ::xyY_XYZ<0>
                        mov r12.x, c13.x  // ::WhiteY<0>
                        add r6.w, -r12.x, -c12.x
                        add r6.w, r6.w, -c167.y
                        mul r11.z, r5.w, r6.w  // ::xyY_XYZ<2>
                        mov r11.y, -c167.y
                        cmp r10.yzw, -r4.w, c128.z, r11.xxyz  // ::xyY_XYZ<0,1,2>

#line 649
                        cmp r11.xy, -r4.w, c146, c146.zwzw

#line 1853
                        mul r4.w, r8.y, r11.x  // ::yr<0>

#line 649
                        mul r5.w, r8.x, -c60.x
                        mad r6.w, r8.y, -c67.z, r8.x
                        mad r6.w, r8.z, -c58.x, r6.w
                        rcp r6.w, r6.w

#line 654
                        mul r8.w, r8.y, r6.w

#line 649
                        add r9.w, r10.y, r11.y
                        mul r10.y, r10.y, -c60.x
                        mad r9.w, r10.w, -c58.x, r9.w
                        rcp r9.w, r9.w
                        mul r10.y, r9.w, r10.y  // ::ComputeKu<0>

#line 654
                        mul r9.w, r10.z, r9.w
                        mul r9.w, r9.w, -c45.z  // ::ComputeKv<0>

#line 1860
                        mad r10.z, r8.y, -r11.x, c102.z
                        mul r4.w, r4.w, c102.w
                        cmp r4.w, r10.z, r4.w, c169.w  // ::L<0>

#line 1863
                        max r9.x, r4.w, c125.z  // ::L<0>

#line 1866
                        mul r4.w, r9.x, -c105.z
                        mad r5.w, r5.w, r6.w, -r10.y
                        mul r9.y, r4.w, r5.w  // ::u<0>

#line 1869
                        mad r5.w, r8.w, -c45.z, -r9.w
                        mul r9.z, r4.w, r5.w  // ::v<0>

#line 2685
                        mov r1.z, -c167.y
                      else
                        if_eq r10.x, -c106.z
                          mov r9.xyz, r8  // ::FLrgb<0,1,2>
                          mov r1.z, -c167.y
                        else
                          if_eq r10.x, -c106.w
                            mov r9.xyz, r8  // ::FLrgb<0,1,2>
                            mov r1.z, -c167.y
                          else
                            if_eq r10.x, -c37.x
                              mov r9.xyz, r8  // ::FLrgb<0,1,2>
                              mov r1.z, -c167.y
                            else
                              if_eq r10.x, -c37.y

#line 597
                                add r4.w, r8.y, r8.x
                                add r4.w, r8.z, r4.w  // ::sum<0>

#line 602
                                rcp r5.w, r4.w
                                mul r10.yz, r5.w, r8.xxyw  // ::XYZ_xyY<0,1>
                                cmp r9.xy, -r4_abs.w, c125.z, r10.yzzw  // ::XYZ_xyY<0,1>

#line 2689
                                mov r9.z, r8.y
                                mov r1.z, -c167.y
                              else
                                if_eq r10.x, -c37.z

#line 1454
                                  add r4.w, r8.y, r8.x
                                  add r4.w, r8.z, r4.w  // ::sum<0>
                                  rcp r5.w, r4.w
                                  mul r10.yz, r5.w, r8.xxyw
                                  cmp r10.yz, -r4_abs.w, c125.z, r10  // ::x<0>, ::y<0>

#line 1459
                                  rcp r4.w, r10.z
                                  mul r4.w, r4.w, r10.y
                                  mov_sat r5.w, r4_abs.w
                                  add r6.w, r4_abs.w, c167.y
                                  rcp r8.w, r4_abs.w
                                  cmp r6.w, r6.w, r8.w, -c167.y
                                  mul r5.w, r5.w, r6.w
                                  mul r6.w, r5.w, r5.w
                                  mad r8.w, r6.w, c50.x, c50.y
                                  mad r8.w, r6.w, r8.w, c50.z
                                  mad r8.w, r6.w, r8.w, c50.w
                                  mad r6.w, r6.w, r8.w, c51.x
                                  mul r5.w, r5.w, r6.w
                                  add r6.w, -r4_abs.w, -c167.y
                                  cmp r6.w, r6.w, c167_abs.x, c167_abs.y
                                  mad r8.w, r5.w, c51.y, c51.z
                                  mad r5.w, r8.w, r6.w, r5.w
                                  min r6.w, r4.w, -c167.y
                                  cmp r4.w, r6.w, c167_abs.x, c167_abs.y
                                  add r6.w, r5.w, r5.w
                                  mad r4.w, r4.w, -r6.w, r5.w
                                  mad r11.xy, r4.w, c78.x, c78.yzzw
                                  cmp r4.w, r10.z, c125.z, r11.y
                                  cmp r9.x, -r10.z, r4.w, r11.x  // ::tsl<0>
                                  mul r10.yz, r10, r10
                                  add r4.w, r10.z, r10.y
                                  rsq r4.w, r4.w
                                  rcp r9.y, r4.w  // ::tsl<1>
                                  dp3 r9.z, r8, c135  // ::tsl<2>

#line 2690
                                  mov r1.z, -c167.y
                                else
                                  add r4.w, r10.x, c37.w
                                  cmp r1.z, -r4_abs.w, c167_abs.y, c167_abs.x

#line 548
                                  mul r10.yzw, r8.y, c18.xxyz
                                  mad r10.yzw, r8.x, c17.xxyz, r10
                                  mad r10.yzw, r8.z, c19.xxyz, r10  // ::x<0>, ::y<0>, ::z<0>

#line 2139
                                  mad r5.w, r10.z, -c58.x, -r10.y
                                  add r5.w, r10.w, r5.w
                                  mul r11.z, r5.w, -c168.w  // ::Lrgb_UCS<2>

#line 2691
                                  mul r11.xy, r10.yzzw, c161
                                  cmp r9.xyz, -r4_abs.w, r11, r9  // ::FLrgb<0,1,2>
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
                if_ne r1.z, -r1.z

#line 2707
                else
                  add r10.yz, r10.x, c48.xzww
                  cmp r1.z, -r10_abs.z, -c167_abs.y, -c167_abs.x

#line 2693
                  if_eq r10.x, -c40.x

#line 586
                    abs r4.w, c13.x

#line 590
                    rcp r5.w, c13.x
                    mul r11.x, r5.w, c12.x  // ::xyY_XYZ<0>
                    mov r12.x, c13.x  // ::WhiteY<0>
                    add r6.w, -r12.x, -c12.x
                    add r6.w, r6.w, -c167.y
                    mul r11.z, r5.w, r6.w  // ::xyY_XYZ<2>
                    mov r11.y, -c167.y
                    cmp r11.xyz, -r4.w, c128.z, r11  // ::xyY_XYZ<0,1,2>

#line 548
                    mul r12, r8.y, c18.xyzx
                    mad r12, r8.x, c17.xyzx, r12
                    mad r12, r8.z, c19.xyzx, r12  // ::x<0>, ::y<0>, ::z<0>, ::x<0>

#line 2177
                    cmp r4.w, -r4.w, c146.y, c146.w
                    add r4.w, r4.w, r11.x
                    mul r5.w, r11.x, -c60.x
                    mad r4.w, r11.z, -c58.x, r4.w
                    rcp r4.w, r4.w
                    mul r6.w, r11.y, r4.w

#line 2181
                    mul r11.xyz, r12.xyww, c103  // ::x<0>
                    add r8.w, r11.y, r11.x
                    mad r8.w, r12.z, c78.w, r8.w  // ::uv<0>
                    rcp r9.w, r8.w
                    mul r10.w, r9.w, r11.z
                    cmp r10.w, -r8_abs.w, c125.z, r10.w  // ::_u<0>
                    mul r9.w, r12.y, r9.w
                    mul r9.w, r9.w, c135.w
                    cmp r8.w, -r8_abs.w, c125.z, r9.w  // ::_v<0>

#line 2185
                    mad r4.w, r5.w, -r4.w, r10.w
                    mul r11.x, r4.w, c161.z  // ::u<0>
                    mad r4.w, r6.w, c105.x, r8.w
                    mul r11.y, r4.w, c161.z  // ::v<0>

#line 2693
                    mov r11.z, -c59.z
                    mov r4.w, -c167.y
                  else
                    if_eq r10.x, -c40.y

#line 2372
                      dp3 r5.w, r8, c151  // ::y<0>
                      add r12.xy, -r5.w, r8.zxzw

#line 2396
                      mad r11.x, r5.w, c164.x, c164.y  // ::Lrgb_xvYCC<0>
                      mad r11.yz, r12.xxyw, c165.xxyw, c165.z  // ::Lrgb_xvYCC<1,2>

#line 2694
                      mov r4.w, -c167.y
                    else
                      if_eq r10.x, -c40.z

#line 548
                        mul r12.xyz, r8.y, c18
                        mad r12.xyz, r8.x, c17, r12
                        mad r11.xyz, r8.z, c19.xzyw, r12.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 597
                        add r5.w, r11.z, r11.x
                        add r5.w, r11.y, r5.w  // ::sum<0>

#line 602
                        rcp r6.w, r5.w
                        mul r12.xy, r6.w, r11.xzzw  // ::XYZ_xyY<0,1>
                        cmp r11.xy, -r5_abs.w, c125.z, r12  // ::XYZ_xyY<0,1>

#line 2695
                        mov r4.w, -c167.y
                      else
                        if_eq r10.x, -c40.w

#line 548
                          mul r12.xyz, r8.y, c18
                          mad r12.xyz, r8.x, c17, r12
                          mad r11.xyz, r8.z, c19.xzyw, r12.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 597
                          add r5.w, r11.z, r11.x
                          add r5.w, r11.y, r5.w  // ::sum<0>

#line 602
                          rcp r6.w, r5.w
                          mul r12.xy, r6.w, r11.xzzw  // ::XYZ_xyY<0,1>
                          cmp r11.xy, -r5_abs.w, c125.z, r12  // ::XYZ_xyY<0,1>

#line 2696
                          mov r4.w, -c167.y
                        else
                          if_eq r10.x, -c92.x

#line 548
                            mul r12.xyz, r8.y, c18
                            mad r12.xyz, r8.x, c17, r12
                            mad r11.xyz, r8.z, c19, r12  // ::x<0>, ::y<0>, ::z<0>

#line 2697
                            mov r4.w, -c167.y
                          else
                            if_eq r10.x, -c92.y

#line 2372
                              dp3 r5.w, r8, c151  // ::y<0>
                              add r12.xy, -r5.w, r8.zxzw

#line 2416
                              mad r11.x, r5.w, c164.x, c164.y  // ::Lrgb_YCbCr<0>
                              mad r11.yz, r12.xxyw, c165.xxyw, c165.z  // ::Lrgb_YCbCr<1,2>

#line 2698
                              mov r4.w, -c167.y
                            else
                              if_eq r10.x, -c92.z

#line 2266
                                mul r12.xyz, r8.xxyw, c156
                                add r12.xy, r12.z, r12
                                mul r5.w, r8.z, -c168.w
                                mad r11.x, r8.z, c78.y, r12.x  // ::Lrgb_YCoCg<0>
                                mad r11.y, r8.z, -c78.y, r12.y  // ::Lrgb_YCoCg<1>
                                mad r11.z, r8.x, -c168.w, -r5.w  // ::Lrgb_YCoCg<2>

#line 2699
                                mov r4.w, -c167.y
                              else

#line 2702
                                add r12.xyz, r10.x, c157

#line 2320
                                mul r13, r8.y, c140

#line 2285
                                mad r5.w, r8.x, c161.w, -r13.y
                                mad r14.w, r8.z, -c160.y, r5.w  // ::Lrgb_YDbDr<1>

#line 2320
                                mad r13.xyz, r8.x, c73, r13.wzxw

#line 2346
                                mul r15, r8.y, c71
                                mad r15, r8.x, c70, r15  // ::Lrgb_YES<1>

#line 2702
                                cmp r5.w, -r12_abs.z, c167_abs.y, c167_abs.x

#line 2340
                                mad r14.xyz, r8.z, c74, r13  // ::Lrgb_YES<0>, ::Lrgb_YDbDr<2>, ::y<0>

#line 2343
                                add r10.xw, -r8.yyzz, r8.xyzy
                                cmp r10.xw, -r10_abs, c167_abs.x, c167_abs.y
                                add r6.w, r10.w, r10.x

#line 2346
                                mad r13.xyz, r8.z, c72.yzxw, r15.zwyw  // ::i<0>, ::q<0>, ::Lrgb_YES<2>
                                cmp r16.yz, -r6.w, c125.z, r13.xxyw  // ::i<0>, ::q<0>

#line 2702
                                mov r16.x, r14.z
                                cmp r15.yzw, -r12_abs.z, r16.xxyz, r9.xxyz  // ::FLrgb<0,1,2>
                                mov r13.x, r14.x
                                mov r13.y, r15.x
                                cmp r13.xyz, -r12_abs.y, r13, r15.yzww  // ::FLrgb<0,1,2>
                                cmp r5.w, -r12_abs.y, -c167.y, r5.w
                                cmp r11.xyz, -r12_abs.x, r14.zwyw, r13  // ::FLrgb<0,1,2>
                                cmp r4.w, -r12_abs.x, -c167.y, r5.w
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif

#line 2478
                  mul r12, r8.y, c76
                  mad r12, r8.x, c75, r12
                  mad r12, r8.z, c77, r12  // ::y<0,0>, ::u<0>, ::v<0>

#line 2374
                  add r10.xw, r8.zyzx, -r12.x
                  mul r13.yz, r10.xxww, c136.xxyw  // ::pb<0>, ::pr<0>

#line 2705
                  cmp r10.xzw, -r10_abs.z, r12.yyzw, r11.xyyz  // ::FLrgb<0,1,2>
                  mov r13.x, r12.x
                  cmp r10.xzw, -r10_abs.y, r13.xyyz, r10  // ::FLrgb<0,1,2>
                  cmp r1.z, -r10_abs.y, c167.y, r1.z
                  cmp r8.xyz, r1.z, r8, r10.xzww  // ::FLrgb<0,1,2>
                  cmp r9.xyz, -r4.w, r8, r11  // ::FLrgb<0,1,2>
                endif
              endif
            endif
          endif

#line 536
          max r1.z, r7.y, r7.z
          max r4.w, r7.x, r1.z  // ::l<0>

#line 2958
          add r1.z, -r4.w, c44.x
          mov r8.x, c6.x  // ::X<0>
          mul r5.w, r8.x, c43.x
          mul r10.x, r5.w, c103.w  // ::tx<0>
          mov r11.x, c7.x  // ::Y<0>
          mul r5.w, r11.x, c43.x
          mul r10.y, r5.w, c103.w  // ::ty<0>
          mov r12.x, c8.x  // ::Z<0>
          mul r5.w, r12.x, c43.x
          mul r10.z, r5.w, c103.w  // ::tz<0>

#line 2965
          add r4.w, -r4.w, c42.x
          mul r5.w, r8.x, c41.x
          mul r13.x, r5.w, c103.w  // ::tx<0>
          mul r5.w, r11.x, c41.x
          mul r13.y, r5.w, c103.w  // ::ty<0>
          mul r5.w, r12.x, c41.x
          mul r13.z, r5.w, c103.w  // ::tz<0>

#line 2974
          mul r5.w, r8.x, c39.x
          mul r8.x, r5.w, c103.w  // ::tx<0>
          mul r5.w, r11.x, c39.x
          mul r8.y, r5.w, c103.w  // ::ty<0>
          mul r5.w, r12.x, c39.x
          mul r8.z, r5.w, c103.w  // ::tz<0>
          cmp r8.xyz, r4.w, r13, r8  // ::tx<0>, ::ty<0>, ::tz<0>
          cmp r8.xyz, r1.z, r10, r8  // ::tx<0>, ::ty<0>, ::tz<0>

#line 429
          add r1.z, r4.x, r5.x
          add r4.w, r5.x, r9.x
          add r1.z, r1.z, -r4.w
          mad r10.z, r1.z, r8.x, r9.x  // ::FLerp<0>
          add r1.z, r4.y, r5.y
          add r4.w, r5.y, r9.y
          add r1.z, r1.z, -r4.w
          mad r11.y, r1.z, r8.y, r9.y  // ::FLerp<1>
          add r1.z, r4.z, r5.z
          add r4.w, r5.z, r9.z
          add r1.z, r1.z, -r4.w
          mul r4.w, r8.z, r1.z
          mad r8.y, r1.z, r8.z, r9.z  // ::FLerp<2>

#line 2714
          if_eq c0.x, r0.z

#line 1997
            mul r1.z, r11.y, c156.w
            mad r12.x, r10.z, c157.w, r1.z  // ::RCA_Lrgb<0>
            mul r9.xy, r8.y, c136.zwzw
            mad r12.z, r11.y, c157.w, r9.x  // ::RCA_Lrgb<1>
            mad r12.y, r10.z, c156.w, r9.y  // ::RCA_Lrgb<2>

#line 2714
            mov r1.z, -c167.y
          else
            if_eq c0.x, -r6.x

#line 2076
              mul r5.w, r8.y, c156.w
              mad r12.x, r10.z, c157.w, r5.w  // ::RGV_Lrgb<0>
              mul r9.xy, r11.y, c136.wzzw
              mad r12.z, r10.z, c156.w, r9.x  // ::RGV_Lrgb<1>
              mad r12.y, r8.y, c157.w, r9.y  // ::RGV_Lrgb<2>

#line 2715
              mov r1.z, -c167.y
            else
              mov r9.x, c0.x  // ::Model<0>
              if_eq r9.x, -c58.x

#line 2088
                min r5.w, r8.y, r11.y
                min r6.w, r5.w, r10.z  // ::white<0>
                add r5.w, -r6.w, r10.z  // ::r<0>
                add r8.w, -r6.w, r11.y  // ::y<0>
                add r9.y, -r6.w, r8.y  // ::b<0>
                max r10.w, r8.w, r9.y
                max r9.w, r5.w, r10.w  // ::mY<0>
                min r13.z, r9.y, r8.w  // ::g<0>
                add r8.w, r8.w, -r13.z  // ::y<0>

#line 2099
                add r13.y, r9.y, -r13.z  // ::b<0>

#line 2105
                cmp r9.y, -r13.z, -c167_abs.x, -c167_abs.y
                cmp r9.y, -r13.y, c125.z, r9.y
                mul r13.xw, r13.yyzz, -c45.x
                cmp r13.yz, r9.y, r13, r13.xxww  // ::b<0>, ::g<0>
                add r13.x, r5.w, r8.w  // ::r<0>
                add r13.w, r8.w, r13.z  // ::g<0>
                max r5.w, r13.w, r13.y
                max r8.w, r13.x, r5.w  // ::mG<0>

#line 2114
                rcp r5.w, r8.w
                mul r5.w, r5.w, r9.w  // ::mN<0>

#line 2118
                mul r14.xyz, r5.w, r13.xwyw  // ::r<0>, ::g<0>, ::b<0>
                cmp r13.xyz, -r8.w, r13.xwyw, r14  // ::r<0>, ::g<0>, ::b<0>

#line 2123
                add r13.xyz, r6.w, r13  // ::r<0>, ::g<0>, ::b<0>
                frc r14.xyz, r13
                add r13.xyz, r13, -r14
                mul r12.xyz, r13.xzyw, c73.w  // ::RYB_Lrgb<0,2,1>

#line 2716
                mov r1.z, -c167.y
              else
                if_eq r9.x, -c60.x

#line 733
                  add r12.x, -r10.z, -c167.y  // ::CMY_Lrgb<0>
                  add r12.z, -r11.y, -c167.y  // ::CMY_Lrgb<1>
                  add r12.y, -r8.y, -c167.y  // ::CMY_Lrgb<2>

#line 2717
                  mov r1.z, -c167.y
                else
                  if_eq r9.x, -c100.x

#line 783
                    mul r5.w, r11.y, c103.w  // ::c<0>
                    mul r13.xyz, r8.y, c103.w  // ::g<0,0,0>

#line 791
                    if_eq r5.w, c125.z

#line 840
                      mov r12.xyz, r13.xzyw  // ::HCV_Lrgb<0,2,1>
                    else

#line 783
                      mul r6.w, r10.z, c74.w  // ::h<0>

#line 791
                      cmp r8.w, r10.z, c84.y, c84.z
                      mul r6.w, r6.w, r8.w
                      frc r6.w, r6.w
                      mul r6.w, r6.w, r8.w
                      mul r8.w, r6.w, -c105.x  // ::hi<0>
                      cmp r6.w, r6.w, c84.y, c84.z
                      mul r9.y, r6.w, r8.w
                      frc r9.y, r9.y
                      mul r14.x, r6.w, r9.y  // ::v<0>

#line 796
                      frc r9.w, r8.w
                      add r8.w, r8.w, -r9.w  // ::fhi<0>

#line 822
                      add r15, r8.w, c175

#line 833
                      mov r14.yz, c167_abs.xxyw
                      mad r14.w, r6.w, -r9.y, -c167.y
                      cmp r13.xyw, -r15_abs.w, r14.xyzz, r14.zyzw  // ::pure<0,1,2>
                      mad r16.xyz, r14.xzyw, c84.zyyw, c84.ywww
                      cmp r13.xyw, -r15_abs.z, r16.zxzy, r13  // ::pure<0,1,2>
                      cmp r13.xyw, -r15_abs.y, r14.yzzx, r13  // ::pure<0,1,2>
                      cmp r13.xyw, -r15_abs.x, r16.xyzz, r13  // ::pure<0,1,2>
                      cmp r13.xyw, -r8_abs.w, r14.zxzy, r13  // ::pure<0,1,2>

#line 839
                      lrp r12.xyz, r5.w, r13.xwyw, r13.z  // ::result<0,2,1>
                    endif

#line 2718
                    mov r1.z, -c167.y
                  else
                    if_eq r9.x, -c105.x

#line 875
                      cmp r9.yw, r10.z, c79.xxzy, c79.xzzw
                      mul r5.w, r9.w, r10.z
                      frc r5.w, r5.w
                      mad r6.w, r9.y, r5.w, c169.z
                      mul r5.w, r5.w, c169.z
                      cmp r5.w, r10.z, r5.w, r6.w
                      mul r6.w, r11.y, c103.w  // ::s<0>
                      mul r8.w, r8.y, c73.w  // ::i<0>

#line 882
                      if_lt r5.w, c72.w
                        mad r9.y, r11.y, -c176.x, c176.y
                        mul r12.y, r8.w, r9.y  // ::b<0>
                        mad r9.y, r5.w, c176.z, c176.w
                        frc r9.y, r9.y
                        mad r9.y, r9.y, c81.x, c81.y
                        sincos r13.x, r9.y
                        mul r9.y, r6.w, r13.x
                        mad r9.w, r5.w, -c81.z, c81.w
                        mad r9.w, r9.w, c116.x, c116.y
                        frc r9.w, r9.w
                        mad r9.w, r9.w, c81.x, c81.y
                        sincos r14.x, r9.w
                        rcp r9.w, r14.x
                        mad r9.y, r9.y, r9.w, -c167.y
                        mul r12.x, r8.w, r9.y  // ::r<0>
                        mad r9.y, r13.x, -r9.w, -c167.y
                        mad r9.y, r6.w, r9.y, -c167.y
                        mul r12.z, r8.w, r9.y  // ::g<0>
                      else
                        if_lt r5.w, c171.y
                          mad r9.y, r5.w, c116.z, c116.w  // ::h<0>
                          mad r9.w, r11.y, -c176.x, c176.y
                          mul r12.x, r8.w, r9.w  // ::r<0>
                          mad r9.w, r9.y, c116.x, c116.y
                          frc r9.w, r9.w
                          mad r9.w, r9.w, c81.x, c81.y
                          sincos r13.x, r9.w
                          mul r9.w, r6.w, r13.x
                          add r9.y, -r9.y, c81.w
                          mad r9.y, r9.y, c116.x, c116.y
                          frc r9.y, r9.y
                          mad r9.y, r9.y, c81.x, c81.y
                          sincos r14.x, r9.y
                          rcp r9.y, r14.x
                          mad r9.w, r9.w, r9.y, -c167.y

#line 893
                          mad r9.y, r13.x, -r9.y, -c167.y
                          mad r9.y, r6.w, r9.y, -c167.y
                          mul r12.yz, r8.w, r9.xyww  // ::b<0>, ::g<0>
                        else

#line 897
                          mad r5.w, r5.w, c117.x, c117.y  // ::h<0>
                          mad r9.y, r11.y, -c176.x, c176.y
                          mul r12.z, r8.w, r9.y  // ::g<0>
                          mad r9.y, r5.w, c116.x, c116.y
                          frc r9.y, r9.y
                          mad r9.y, r9.y, c81.x, c81.y
                          sincos r13.x, r9.y
                          mul r9.y, r6.w, r13.x
                          add r5.w, -r5.w, c81.w
                          mad r5.w, r5.w, c116.x, c116.y
                          frc r5.w, r5.w
                          mad r5.w, r5.w, c81.x, c81.y
                          sincos r14.x, r5.w
                          rcp r5.w, r14.x
                          mad r9.y, r9.y, r5.w, -c167.y
                          mul r12.y, r8.w, r9.y  // ::b<0>
                          mad r5.w, r13.x, -r5.w, -c167.y
                          mad r5.w, r6.w, r5.w, -c167.y
                          mul r12.x, r5.w, r8.w  // ::r<0>
                        endif
                      endif

#line 2719
                      mov r1.z, -c167.y
                    else
                      if_eq r9.x, -c118.z

#line 1895
                        if_lt c169.w, r8.y

#line 1903
                          mad r12.xyz, r10.z, c153.xyxw, c153.zxxw
                        else

#line 1895
                          add r5.w, r8.y, c117.z

#line 1898
                          if_lt r8.y, c117.w
                            cmp r10.xy, r5.w, c169.wyzw, c169.y  // ::HPLuv_Lrgb<0,1>

#line 1903
                            mov r12.xyz, r10.xzyw  // ::HPLuv_Lrgb<0,2,1>
                          else

#line 464
                            add r5.w, r8.y, c168.z
                            mul r6.w, r5.w, r5.w
                            mul r8.w, r5.w, r6.w
                            mul r8.w, r8.w, c82.x  // ::s1<0>
                            mad r6.w, r5.w, -r6.w, c82.y

#line 1828
                            mul r13, r8.y, c86

#line 465
                            cmp r6.w, r6.w, r13.x, r8.w  // ::s2<0>

#line 450
                            mul r8.w, r8.y, r6.w
                            mul r9.y, r8.w, c82.z  // ::y<0>
                            mul r14.xy, r6.w, c83  // ::x<0>, ::z<0>
                            rcp r9.w, r14.y
                            mul r10.w, r9.w, r14.x  // ::GetBounds2<0>
                            mul r9.y, r9.w, r9.y  // ::GetBounds2<1>

#line 481
                            rcp r11.w, r10.w

#line 444
                            mad r9.w, r14.x, -r9.w, -r11.w
                            rcp r9.w, r9.w
                            mul r9.w, r9.w, r9.y  // ::GetIntersection<0>

#line 482
                            mad r9.y, r9.w, r10.w, r9.y  // GetDistance::input<1>

#line 439
                            mul r9.y, r9.y, r9.y
                            mad r9.y, r9.w, r9.w, r9.y
                            rsq r9.y, r9.y
                            rcp r9.y, r9.y  // ::GetDistance<0>

#line 484
                            min r10.w, r9.y, c82.w  // ::GetChroma1a<0>

#line 450
                            mad r8.w, r8.w, c82.z, -r13.y  // ::y<0>
                            mad r6.w, r6.w, c83.y, c83.z  // ::z<0>
                            rcp r6.w, r6.w
                            mul r9.y, r6.w, r14.x  // ::GetBounds2<0>
                            mul r8.w, r6.w, r8.w  // ::GetBounds2<1>

#line 481
                            rcp r9.w, r9.y

#line 444
                            mad r6.w, r14.x, -r6.w, -r9.w
                            rcp r6.w, r6.w
                            mul r6.w, r6.w, r8.w  // ::GetIntersection<0>

#line 482
                            mad r8.w, r6.w, r9.y, r8.w  // GetDistance::input<1>

#line 439
                            mul r8.w, r8.w, r8.w
                            mad r6.w, r6.w, r6.w, r8.w
                            rsq r6.w, r6.w
                            rcp r6.w, r6.w  // ::GetDistance<0>

#line 484
                            min r8.w, r6.w, r10.w  // ::GetChroma1a<0>

#line 1899
                            mul r6.w, r11.y, r8.w
                            mul r6.w, r6.w, c103.w  // ::C<0>

#line 667
                            mad r8.w, r10.z, c85.x, c85.y
                            frc r8.w, r8.w
                            mad r8.w, r8.w, c81.x, c81.y
                            sincos r14.xy, r8.w
                            mul r9.yw, r6.w, r14.xxzy  // ::a<0>, ::b<0>

#line 586
                            abs r6.w, c13.x

#line 590
                            rcp r8.w, c13.x
                            mul r14.x, r8.w, c12.x  // ::xyY_XYZ<0>
                            mov r15.x, c13.x  // ::WhiteY<0>
                            add r10.w, -r15.x, -c12.x
                            add r10.w, r10.w, -c167.y
                            mul r14.z, r8.w, r10.w  // ::xyY_XYZ<2>
                            mov r14.y, -c167.y
                            cmp r14.xyz, -r6.w, c128.z, r14  // ::xyY_XYZ<0,1,2>

#line 649
                            cmp r6.w, -r6.w, c146.y, c146.w
                            add r6.w, r6.w, r14.x
                            mul r8.w, r14.x, -c60.x
                            mad r6.w, r14.z, -c58.x, r6.w
                            rcp r6.w, r6.w
                            mul r8.w, r6.w, r8.w  // ::ComputeKu<0>

#line 654
                            mul r6.w, r14.y, r6.w
                            mul r6.w, r6.w, -c45.z  // ::ComputeKv<0>

#line 1826
                            add r10.w, -r8.y, c83.w
                            mul r5.w, r5.w, c85.z
                            mul r11.w, r5.w, r5.w
                            mul r5.w, r5.w, r11.w
                            cmp r5.w, r10.w, r13.x, r5.w  // ::Y<0>
                            mad r8.w, r13.w, r8.w, r9.y
                            rcp r8.w, r8.w
                            mad r8.w, r13.z, r8.w, c167.y
                            mul r8.w, r8.w, c63.w  // ::a<0>
                            mul r9.y, r5.w, c100.x  // ::b<0>
                            mul r10.w, r8.y, -c37.w
                            mad r6.w, r13.w, r6.w, r9.w
                            rcp r6.w, r6.w
                            mad r6.w, r10.w, r6.w, c100.x
                            mad r6.w, r5.w, r6.w, -r9.y
                            rcp r9.w, r8.w
                            mul r6.w, r6.w, r9.w  // ::X<0>
                            mad r8.w, r6.w, r8.w, r9.y  // ::Z<0>

#line 1837
                            max r9.y, r6.w, c125.z  // ::X<0>

#line 1840
                            max r6.w, r5.w, c125.z  // ::Y<0>

#line 1843
                            max r5.w, r8.w, c125.z  // ::Z<0>

#line 548
                            mul r13.xyz, r6.w, c24
                            mad r13.xyz, r9.y, c23, r13
                            mad r12.xyz, r5.w, c25.xzyw, r13.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 1903
                          endif
                        endif

#line 2720
                        mov r1.z, -c167.y
                      else
                        if_eq r9.x, -c59.z

#line 928
                          mul r5.w, r11.y, c103.w  // ::_s<0>
                          mul r13.y, r8.y, c103.w  // ::_b<0>

#line 931
                          add r6.w, -r10.z, c85.w

#line 943
                          mul r8.w, r10.z, c153.w
                          cmp r6.w, r6.w, r8.w, c133.x  // ::SectorPosition<0>
                          frc r8.w, r6.w
                          add r8.w, r6.w, -r8.w  // ::SectorNumber<0>

#line 947
                          add r6.w, r6.w, -r8.w  // ::FractionalSector<0>

#line 950
                          mad r9.x, r11.y, -c176.x, c176.y
                          mul r13.z, r9.x, r13.y  // ::p<0>
                          mad r9.x, r5.w, -r6.w, -c167.y
                          mul r13.w, r9.x, r13.y  // ::q<0>
                          add r6.w, -r6.w, -c167.y
                          mad r6.w, r5.w, -r6.w, -c167.y
                          mul r13.x, r6.w, r13.y  // ::t<0>

#line 979
                          add r14, r8.w, c175

#line 985
                          add r6.w, r8.w, c100.x

#line 990
                          cmp r9.xyw, -r6_abs.w, r13.yzzw, c125.z  // ::r<0>, ::g<0>, ::b<0>
                          cmp r9.xyw, -r14_abs.w, r13.xzzy, r9  // ::r<0>, ::g<0>, ::b<0>
                          cmp r9.xyw, -r14_abs.z, r13.zwzy, r9  // ::r<0>, ::g<0>, ::b<0>
                          cmp r9.xyw, -r14_abs.y, r13.zyzx, r9  // ::r<0>, ::g<0>, ::b<0>
                          cmp r9.xyw, -r14_abs.x, r13.wyzz, r9  // ::r<0>, ::g<0>, ::b<0>
                          cmp r9.xyw, -r8_abs.w, r13.yxzz, r9  // ::r<0>, ::g<0>, ::b<0>
                          cmp r12.xyz, -r5_abs.w, r13.y, r9.xwyw  // ::r<0>, ::b<0>, ::g<0>

#line 2721
                          mov r1.z, -c167.y
                        else
                          add r5.w, r6.z, c0.x
                          cmp r1.z, -r5_abs.w, c167_abs.y, c167_abs.x
                          if_eq c0.x, -r6.z

#line 1037
                            mul r12.xyz, r8.y, c103.w  // ::l<0,0,0>

#line 1044
                            if_lt -r11.y, c125.z

#line 1037
                              mul r5.w, r11.y, c103.w  // ::s<0>
                              min r6.w, r10.z, c85.w  // ::h<0>
                              mul r8.w, r6.w, c153.w  // ::h<0>

#line 1046
                              mad r9.x, r8.y, c133.y, c133.z
                              add r9.x, -r9_abs.x, -c167.y
                              mul r13.x, r5.w, r9.x  // ::chroma<0>
                              cmp r9.xy, r6.w, c173, c173.zwzw
                              mul r5.w, r8.w, r9.y
                              frc r5.w, r5.w
                              mad r5.w, r9.x, r5.w, c167.y
                              add r5.w, -r5_abs.w, -c167.y
                              mul r13.y, r5.w, r13.x  // ::v<0>

#line 1067
                              add r14, -r6.w, c129

#line 1073
                              add r15, r6.w, -c129.wzyx

#line 1079
                              add r5.w, r6.w, c133.w
                              add r9.xy, -r6.w, c130

#line 1084
                              cmp r9.xy, r9, -c167_abs.y, -c167_abs.x
                              cmp r5.w, r5.w, r9.x, c125.z
                              mov r13.z, c125.z
                              cmp r16.xyz, r5.w, c125.z, r13.xzyw  // ::result<0,1,2>
                              cmp r5.w, r15.w, r9.y, c125.z
                              cmp r9.xyw, r5.w, r16.xyzz, r13.yzzx  // ::result<0,1,2>
                              cmp r14, r14, -c167_abs.y, -c167_abs.x
                              cmp r14.xyz, r15.zyxw, r14, c125.z
                              cmp r9.xyw, r14.x, r9, r13.zyzx  // ::result<0,1,2>
                              cmp r9.xyw, r14.y, r9, r13.zxzy  // ::result<0,1,2>
                              cmp r9.xyw, r14.z, r9, r13.yxzz  // ::result<0,1,2>
                              cmp r5.w, r6.w, r14.w, c125.z
                              cmp r9.xyw, r5.w, r9, r13.xyzz  // ::result<0,1,2>
                              mad r5.w, r13.x, c168.w, r12.y  // ::w<0>

#line 1089
                              add r12.xyz, r5.w, r9.xwyw  // ::result<0,2,1>

#line 1094
                            endif

#line 2722
                          else
                            mov r12.xyz, c125.z
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r1.z, -r1.z

#line 2767
          else

#line 2724
            mov r9.x, c0.x  // ::Model<0>
            if_eq r9.x, c168.x

#line 1940
              if_lt c169.w, r8.y

#line 1948
                mad r12.xyz, r10.z, c153.xyxw, c153.zxxw
              else

#line 1940
                add r1.z, r8.y, c117.z

#line 1943
                if_lt r8.y, c117.w
                  cmp r12.xz, r1.z, c169.wyyw, c169.y  // ::HSLuv_Lrgb<0,1>

#line 1948
                  mov r12.y, r10.z
                else

#line 464
                  add r1.z, r8.y, c168.z
                  mul r5.w, r1.z, r1.z
                  mul r6.w, r1.z, r5.w
                  mul r6.w, r6.w, c82.x  // ::s1<0>
                  mad r5.w, r1.z, -r5.w, c82.y

#line 1828
                  mul r13, r8.y, c86

#line 465
                  cmp r5.w, r5.w, r13.x, r6.w  // ::s2<0>

#line 450
                  mul r6.w, r8.y, r5.w
                  mul r8.w, r6.w, c82.z  // ::y<0>
                  mul r14, r5.w, c159  // ::x<0>, ::z<0>, ::x<0>, ::z<0>
                  rcp r9.y, r14.y
                  mul r9.w, r9.y, r14.x  // ::GetBounds2<0>
                  mul r8.w, r8.w, r9.y  // ::GetBounds2<1>
                  mad r6.w, r6.w, c82.z, -r13.y  // ::y<0>
                  mad r15.xy, r5.w, c177, c177.z  // ::z<0,0>
                  rcp r9.y, r15.x
                  mul r10.w, r9.y, r14.x  // ::GetBounds2<0>
                  mul r6.w, r6.w, r9.y  // ::GetBounds2<1>
                  mul r9.y, r5.w, r13.y  // ::y<0>
                  rcp r11.w, r14.w
                  mul r12.w, r11.w, r14.z  // ::GetBounds2<0>
                  mul r11.w, r9.y, r11.w  // ::GetBounds2<1>
                  mad r13.y, r13.y, r5.w, -r13.y  // ::y<0>
                  rcp r14.x, r15.y
                  mul r14.y, r14.x, r14.z  // ::GetBounds2<0>
                  mul r14.x, r13.y, r14.x  // ::GetBounds2<1>
                  mul r14.zw, r5.w, c130  // ::x<0>, ::z<0>
                  rcp r14.w, r14.w
                  mul r15.x, r14.w, r14.z  // ::GetBounds2<0>
                  mul r9.y, r9.y, r14.w  // ::GetBounds2<1>
                  mad r5.w, r5.w, c177.w, c177.z  // ::z<0>
                  rcp r5.w, r5.w
                  mul r14.z, r5.w, r14.z  // ::GetBounds2<0>
                  mul r5.w, r5.w, r13.y  // ::GetBounds2<1>

#line 667
                  mad r15.yz, r10.z, c137.xxyw, c137.z
                  frc r15.yz, r15
                  mad r15.yz, r15, c81.x, c81.y

#line 498
                  sincos r16.xy, r15.y
                  mad r9.w, r9.w, -r16.x, r16.y
                  rcp r9.w, r9.w
                  mul r8.w, r8.w, r9.w  // ::length<0>
                  min r9.w, r8.w, c82.w  // GetChroma2a::result<0>
                  cmp r8.w, r8.w, r9.w, c82.w  // GetChroma2a::result<0>
                  mad r9.w, r10.w, -r16.x, r16.y
                  rcp r9.w, r9.w
                  mul r6.w, r6.w, r9.w  // ::length<0>
                  min r9.w, r6.w, r8.w  // GetChroma2a::result<0>
                  cmp r6.w, r6.w, r9.w, r8.w  // GetChroma2a::result<0>
                  mad r8.w, r12.w, -r16.x, r16.y
                  rcp r8.w, r8.w
                  mul r8.w, r8.w, r11.w  // ::length<0>
                  min r9.w, r8.w, r6.w  // GetChroma2a::result<0>
                  cmp r6.w, r8.w, r9.w, r6.w  // GetChroma2a::result<0>
                  mad r8.w, r14.y, -r16.x, r16.y
                  rcp r8.w, r8.w
                  mul r8.w, r8.w, r14.x  // ::length<0>
                  min r9.w, r8.w, r6.w  // GetChroma2a::result<0>
                  cmp r6.w, r8.w, r9.w, r6.w  // GetChroma2a::result<0>
                  mad r8.w, r15.x, -r16.x, r16.y
                  rcp r8.w, r8.w
                  mul r8.w, r8.w, r9.y  // ::length<0>
                  min r9.y, r8.w, r6.w  // GetChroma2a::result<0>
                  cmp r6.w, r8.w, r9.y, r6.w  // GetChroma2a::result<0>
                  mad r8.w, r14.z, -r16.x, r16.y
                  rcp r8.w, r8.w
                  mul r5.w, r5.w, r8.w  // ::length<0>
                  min r8.w, r5.w, r6.w  // GetChroma2a::result<0>
                  cmp r5.w, r5.w, r8.w, r6.w  // GetChroma2a::result<0>

#line 1944
                  mul r5.w, r11.y, r5.w
                  mul r5.w, r5.w, c103.w  // ::C<0>

#line 667
                  sincos r14.xy, r15.z
                  mul r9.yw, r5.w, r14.xxzy  // ::a<0>, ::b<0>

#line 586
                  abs r5.w, c13.x

#line 590
                  rcp r6.w, c13.x
                  mul r14.x, r6.w, c12.x  // ::xyY_XYZ<0>
                  mov r15.x, c13.x  // ::WhiteY<0>
                  add r8.w, -r15.x, -c12.x
                  add r8.w, r8.w, -c167.y
                  mul r14.z, r6.w, r8.w  // ::xyY_XYZ<2>
                  mov r14.y, -c167.y
                  cmp r14.xyz, -r5.w, c128.z, r14  // ::xyY_XYZ<0,1,2>

#line 649
                  cmp r5.w, -r5.w, c146.y, c146.w
                  add r5.w, r5.w, r14.x
                  mul r6.w, r14.x, -c60.x
                  mad r5.w, r14.z, -c58.x, r5.w
                  rcp r5.w, r5.w
                  mul r6.w, r5.w, r6.w  // ::ComputeKu<0>

#line 654
                  mul r5.w, r14.y, r5.w
                  mul r5.w, r5.w, -c45.z  // ::ComputeKv<0>

#line 1826
                  add r8.w, -r8.y, c83.w
                  mul r1.z, r1.z, c85.z
                  mul r10.w, r1.z, r1.z
                  mul r1.z, r1.z, r10.w
                  cmp r1.z, r8.w, r13.x, r1.z  // ::Y<0>
                  mad r6.w, r13.w, r6.w, r9.y
                  rcp r6.w, r6.w
                  mad r6.w, r13.z, r6.w, c167.y
                  mul r6.w, r6.w, c63.w  // ::a<0>
                  mul r8.w, r1.z, c100.x  // ::b<0>
                  mul r9.y, r8.y, -c37.w
                  mad r5.w, r13.w, r5.w, r9.w
                  rcp r5.w, r5.w
                  mad r5.w, r9.y, r5.w, c100.x
                  mad r5.w, r1.z, r5.w, -r8.w
                  rcp r9.y, r6.w
                  mul r5.w, r5.w, r9.y  // ::X<0>
                  mad r6.w, r5.w, r6.w, r8.w  // ::Z<0>

#line 1837
                  max r8.w, r5.w, c125.z  // ::X<0>

#line 1840
                  max r5.w, r1.z, c125.z  // ::Y<0>

#line 1843
                  max r1.z, r6.w, c125.z  // ::Z<0>

#line 548
                  mul r13.xyz, r5.w, c24
                  mad r13.xyz, r8.w, c23, r13
                  mad r12.xyz, r1.z, c25.xzyw, r13.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 1948
                endif
              endif

#line 2724
              mov r1.z, -c167.y
            else
              if_eq r9.x, -c60.z

#line 1134
                mad r5.w, r10.z, c85.x, c85.y
                frc r5.w, r5.w
                mad r5.w, r5.w, c81.x, c81.y
                sincos r13.x, r5.w  // ::h<0>
                mul r5.w, r11.y, r13.x

#line 1138
                mul r6.w, r5.w, c137.w  // ::j<0>

#line 1146
                mul r12.xz, r8.y, c154.xyyw  // ::m<0>
                mad r5.w, r5.w, c137.w, r12.z
                mad r5.w, r8.y, -c154.z, r5.w
                mul r12.z, r5.w, c78.y  // ::g<0>
                mad r5.w, r8.y, c154.w, -r6.w
                mul r12.y, r5.w, -c168.w  // ::b<0>

#line 2725
                mov r1.z, -c167.y
              else
                if_eq r9.x, -c100.z

#line 1211
                  mad r5.w, r11.y, -c176.x, c176.y  // ::minOverMax<0>
                  if_lt -r5.w, c125.z

#line 1216
                    if_lt r10.z, c80.w
                      mul r6.w, r10.z, c153.w  // ::h<0>
                      rcp r8.w, r5.w
                      lrp r9.y, r6.w, r8.w, -c167.y  // ::part<0>
                      mul r9.w, r8.w, r8.w
                      mul r9.y, r9.y, r9.y
                      mul r9.y, r9.y, c119.w
                      mad r9.y, r9.w, c119.z, r9.y
                      add r9.y, r9.y, c65.x
                      rsq r9.y, r9.y
                      mul r13.z, r8.y, r9.y  // ::b<0>
                      mul r13.x, r8.w, r13.z  // ::r<0>
                      mad r8.w, r13.z, r8.w, -r13.z
                      mad r13.y, r6.w, r8.w, r13.z  // ::g<0>
                    else
                      if_lt r10.z, c72.w

#line 1227
                        mad r6.w, r10.z, -c121.x, c121.y
                        mul r6.w, r6.w, -c105.x  // ::h<0>
                        rcp r8.w, r5.w
                        lrp r9.y, r6.w, r8.w, -c167.y  // ::part<0>
                        mul r9.w, r8.w, r8.w
                        mul r9.y, r9.y, r9.y
                        mul r9.y, r9.y, c119.z
                        mad r9.y, r9.w, c119.w, r9.y
                        add r9.y, r9.y, c65.x
                        rsq r9.y, r9.y
                        mul r13.z, r8.y, r9.y  // ::b<0>
                        mul r13.y, r8.w, r13.z  // ::g<0>
                        mad r8.w, r13.z, r8.w, -r13.z
                        mad r13.x, r6.w, r8.w, r13.z  // ::r<0>
                      else
                        if_lt r10.z, c121.z
                          mad r6.w, r10.z, c121.x, c121.w
                          mul r6.w, r6.w, -c105.x  // ::h<0>
                          rcp r8.w, r5.w
                          lrp r9.y, r6.w, r8.w, -c167.y  // ::part<0>

#line 1238
                          mul r9.w, r8.w, r8.w
                          mul r9.y, r9.y, r9.y
                          mul r9.y, r9.y, c65.x
                          mad r9.y, r9.w, c119.w, r9.y
                          add r9.y, r9.y, c119.z
                          rsq r9.y, r9.y
                          mul r13.x, r8.y, r9.y  // ::r<0>
                          mul r13.y, r8.w, r13.x  // ::g<0>
                          mad r8.w, r13.x, r8.w, -r13.x
                          mad r13.z, r6.w, r8.w, r13.x  // ::b<0>
                        else
                          if_lt r10.z, c171.y
                            mad r6.w, r10.z, -c120.x, c120.y
                            mul r6.w, r6.w, -c105.x  // ::h<0>
                            rcp r8.w, r5.w
                            lrp r9.y, r6.w, r8.w, -c167.y  // ::part<0>
                            mul r9.w, r8.w, r8.w
                            mul r9.y, r9.y, r9.y
                            mul r9.y, r9.y, c119.w
                            mad r9.y, r9.w, c65.x, r9.y
                            add r9.y, r9.y, c119.z
                            rsq r9.y, r9.y
                            mul r13.x, r8.y, r9.y  // ::r<0>
                            mul r13.z, r8.w, r13.x  // ::b<0>

#line 1249
                            mad r8.w, r13.x, r8.w, -r13.x
                            mad r13.y, r6.w, r8.w, r13.x  // ::g<0>
                          else
                            add r6.w, r10.z, -c78.w
                            mad r8.w, r10.z, c120.x, c120.z
                            mul r8.w, r8.w, -c105.x  // ::h<0>
                            rcp r5.w, r5.w
                            lrp r9.y, r8.w, r5.w, -c167.y  // ::part<0>
                            mul r9.w, r5.w, r5.w

#line 1265
                            mul r14.xy, r9.w, c135.zxzw

#line 1256
                            mul r9.y, r9.y, r9.y
                            mad r9.y, r9.y, c119.z, r14.x
                            add r9.y, r9.y, c119.w
                            rsq r9.y, r9.y
                            mul r15.y, r8.y, r9.y  // ::g<0>
                            mul r15.z, r5.w, r15.y  // ::b<0>
                            mad r9.y, r15.y, r5.w, -r15.y
                            mad r15.x, r8.w, r9.y, r15.y  // ::r<0>

#line 1263
                            mad r8.w, r10.z, -c176.z, c176.y
                            mul r8.w, r8.w, -c105.x  // ::h<0>
                            lrp r9.y, r8.w, r5.w, -c167.y  // ::part<0>
                            mul r9.y, r9.y, r9.y
                            mad r9.y, r9.y, c65.x, r14.y
                            add r9.y, r9.y, c119.w
                            rsq r9.y, r9.y
                            mul r14.y, r8.y, r9.y  // ::g<0>
                            mul r14.x, r5.w, r14.y  // ::r<0>
                            mad r5.w, r14.y, r5.w, -r14.y
                            mad r14.z, r8.w, r5.w, r14.y  // ::b<0>
                            cmp r13.xyz, r6.w, r14, r15  // ::r<0>, ::g<0>, ::b<0>
                          endif
                        endif
                      endif
                    endif
                  else

#line 1273
                    if_lt r10.z, c80.w
                      mul r5.w, r10.z, c153.w  // ::h<0>
                      mul r6.w, r8.y, r8.y
                      mul r8.w, r10.z, r5.w
                      mad r8.w, r8.w, c139.x, c139.y
                      rcp r8.w, r8.w
                      mul r6.w, r6.w, r8.w
                      rsq r6.w, r6.w
                      rcp r13.x, r6.w  // ::r<0>
                      mul r13.y, r5.w, r13.x  // ::g<0>
                      mov r13.z, c125.z
                    else
                      if_lt r10.z, c72.w
                        mad r5.w, r10.z, -c121.x, c121.y
                        mul r6.w, r5.w, -c105.x  // ::h<0>

#line 1284
                        mul r8.w, r8.y, r8.y
                        mul r5.w, r5.w, r6.w
                        mad r5.w, r5.w, c139.z, c139.w
                        rcp r5.w, r5.w
                        mul r5.w, r5.w, r8.w
                        rsq r5.w, r5.w
                        rcp r13.y, r5.w  // ::g<0>
                        mul r13.x, r6.w, r13.y  // ::r<0>
                        mov r13.z, c125.z
                      else

#line 1307
                        mad r9.yw, r10.z, c120.x, c120.xwzz
                        mul r14.xy, r9.ywzw, -c105.x  // ::h<0,0>

#line 1292
                        mul r5.w, r8.y, r8.y

#line 1308
                        mul r9.yw, r9, r14.xxzy
                        mad r9.yw, r9, c178.xxzy, c178.xzzw

#line 1292
                        rcp r6.w, r9.y
                        mul r6.w, r5.w, r6.w
                        rsq r6.w, r6.w
                        rcp r15.y, r6.w  // ::g<0>
                        mul r15.z, r14.x, r15.y  // ::b<0>

#line 1315
                        mad r14.xz, r10.z, -c152.x, c152.yyzw
                        mul r16.xy, r14.xzzw, -c105.x  // ::h<0,0>
                        mul r14.xz, r14, r16.xyyw
                        mad r14.xz, r14, c138.xyyw, c138.zyww

#line 1300
                        rcp r6.w, r14.x
                        mul r6.w, r5.w, r6.w
                        rsq r6.w, r6.w
                        rcp r17.z, r6.w  // ::b<0>
                        mul r17.y, r16.x, r17.z  // ::g<0>

#line 1305
                        add r16.xzw, r10.z, c132.xyyz

#line 1308
                        rcp r6.w, r9.w
                        mul r6.w, r5.w, r6.w
                        rsq r6.w, r6.w
                        rcp r18.z, r6.w  // ::b<0>
                        mul r18.x, r14.y, r18.z  // ::r<0>

#line 1316
                        rcp r6.w, r14.z
                        mul r5.w, r5.w, r6.w
                        rsq r5.w, r5.w
                        rcp r14.x, r5.w  // ::r<0>
                        mul r14.z, r16.y, r14.x  // ::b<0>
                        mov r14.y, c125.z
                        mov r18.y, c125.z
                        cmp r14.xyz, r16.w, r14, r18  // ::r<0>, ::g<0>, ::b<0>
                        mov r17.x, c125.z
                        cmp r14.xyz, r16.z, r14, r17  // ::r<0>, ::g<0>, ::b<0>
                        mov r15.x, c125.z
                        cmp r13.xyz, r16.x, r14, r15  // ::r<0>, ::g<0>, ::b<0>
                      endif
                    endif
                  endif

#line 1323
                  add r13.xyz, r13, -c168.w
                  frc r14.xyz, r13
                  add r13.xyz, r13, -r14
                  mul_sat r12.xyz, r13.xzyw, c73.w  // ::result<0,2,1>

#line 2726
                  mov r1.z, -c167.y
                else
                  if_eq r9.x, -c105.z

#line 1393
                    mul r5.w, r11.y, c103.w  // ::white<0>
                    mul r6.w, r8.y, c103.w  // ::black<0>
                    mad r6.w, r11.y, c103.w, r6.w

#line 1402
                    if_ge r6.w, -c167.y

#line 1398
                      rcp r6.w, r6.w
                      mul r12.xyz, r5.w, r6.w  // ::gray<0,0,0>

#line 1413
                    else

#line 931
                      add r6.w, -r10.z, c85.w

#line 943
                      mul r8.w, r10.z, c153.w
                      cmp r6.w, r6.w, r8.w, c133.x  // ::SectorPosition<0>
                      frc r8.w, r6.w
                      add r8.w, r6.w, -r8.w  // ::SectorNumber<0>

#line 947
                      add r6.w, r6.w, -r8.w  // ::FractionalSector<0>

#line 951
                      add r13.x, -r6.w, -c167.y  // ::q<0>

#line 979
                      add r14, r8.w, c175

#line 985
                      add r6.w, r8.w, c100.x
                      cmp r15.x, -r6_abs.w, c167_abs.y, c167_abs.x  // ::r<0>

#line 990
                      mov r13.y, c125.z
                      cmp r15.yz, -r6_abs.w, r13.xyxw, c125.z  // ::g<0>, ::b<0>
                      mad r13.zw, r13.x, c84, c84.y
                      cmp r15.xyz, -r14_abs.w, r13.zyww, r15  // ::r<0>, ::g<0>, ::b<0>
                      cmp r15.xyz, -r14_abs.z, r13.yxww, r15  // ::r<0>, ::g<0>, ::b<0>
                      mad r16.xyz, r13.wxyw, c84.yzyw, c84.wyww
                      cmp r14.yzw, -r14_abs.y, r16.xzxy, r15.xxyz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r13.xyz, -r14_abs.x, r13.xwyw, r14.yzww  // ::r<0>, ::g<0>, ::b<0>
                      cmp r13.xyz, -r8_abs.w, r16, r13  // ::r<0>, ::g<0>, ::b<0>

#line 1405
                      mad r6.w, r11.y, -c176.x, c176.y
                      mad r6.w, r8.y, -c103.w, r6.w

#line 1412
                      mad r12.xyz, r13.xzyw, r6.w, r5.w  // ::rgb<0,2,1>
                    endif

#line 2727
                    mov r1.z, -c167.y
                  else
                    if_eq r9.x, -c67.x

#line 548
                      mul r13.xyz, r11.y, c122
                      mad r13.xyz, r10.z, c87, r13
                      mad r12.xyz, r8.y, c88.xzyw, r13.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2728
                      mov r1.z, -c167.y
                    else
                      if_eq r9.x, -c46.x

#line 2424
                        add r5.w, r8.y, c125.w
                        mad r6.w, r5.w, c152.w, r10.z  // ::ycbcr<0>
                        add r8.w, r11.y, c125.w
                        mad r9.y, r8.w, -c132.w, r10.z
                        mad r5.w, r5.w, -c122.w, r9.y  // ::ycbcr<1>
                        mad r8.w, r8.w, c87.w, r10.z  // ::ycbcr<2>

#line 2404
                        add r6.w, r6.w, -c168.z
                        mul r9.y, r6.w, c88.w  // ::ypbpr<0>
                        add r5.w, r5.w, c125.w
                        add r8.w, r8.w, c125.w

#line 2359
                        mad r12.x, r8.w, c98.x, r9.y  // ::r<0>
                        mad r12.y, r5.w, c98.y, r9.y  // ::b<0>
                        mul r5.w, r12.x, c151.x
                        mad r5.w, r6.w, c88.w, -r5.w
                        mad r5.w, r12.y, -c151.z, r5.w
                        mul r12.z, r5.w, c98.z  // ::g<0>

#line 2730
                        mov r1.z, -c167.y
                      else
                        add r5.w, r9.x, c46.y
                        cmp r1.z, -r5_abs.w, c167_abs.y, c167_abs.x

#line 1620
                        add r6.w, r10.z, c168.z
                        mul r6.w, r6.w, c85.z  // ::fy<0>
                        mad r8.w, r11.y, c98.w, r6.w  // ::fx<0>
                        mad r9.y, r8.y, -c123.x, r6.w  // ::fz<0>
                        mul r9.w, r8.w, r8.w
                        mul r10.w, r8.w, r9.w  // ::fx3<0>
                        mul r11.w, r9.y, r9.y
                        mul r12.w, r9.y, r11.w  // ::fz3<0>
                        mad r9.w, r8.w, -r9.w, c102.z
                        mad r8.w, r8.w, c123.y, c123.z
                        mul r8.w, r8.w, c86.x
                        cmp r8.w, r9.w, r8.w, r10.w  // ::xr<0>
                        add r9.w, -r10.z, c83.w
                        mul r10.w, r6.w, r6.w
                        mul r6.w, r6.w, r10.w
                        mul r10.w, r10.z, c86.x
                        cmp r6.w, r9.w, r10.w, r6.w  // ::yr<0>
                        mad r9.w, r9.y, -r11.w, c102.z
                        mad r9.y, r9.y, c123.y, c123.z
                        mul r9.y, r9.y, c86.x
                        cmp r9.y, r9.w, r9.y, r12.w  // ::zr<0>

#line 586
                        abs r9.w, c13.x

#line 590
                        rcp r10.w, c13.x
                        mul r13.x, r10.w, c12.x  // ::xyY_XYZ<0>
                        mov r14.x, c13.x  // ::WhiteY<0>
                        add r11.w, -r14.x, -c12.x
                        add r11.w, r11.w, -c167.y
                        mul r13.z, r10.w, r11.w  // ::xyY_XYZ<2>
                        mov r13.y, -c167.y
                        cmp r13.xyz, -r9.w, c128.z, r13  // ::xyY_XYZ<0,1,2>

#line 1632
                        mul r14.x, r8.w, r13.x  // ::Lab_Lrgb<0>
                        mul r14.y, r6.w, r13.y  // ::Lab_Lrgb<1>
                        mul r14.z, r9.y, r13.z  // ::Lab_Lrgb<2>

#line 2731
                        cmp r12.xyz, -r5_abs.w, r14.xzyw, r12  // ::TLrgb<0,2,1>
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r1.z, -r1.z

#line 2767
            else

#line 2733
              if_eq r9.x, -c35.x

#line 586
                abs r1.z, c13.x

#line 590
                rcp r5.w, c13.x
                mul r13.x, r5.w, c12.x  // ::xyY_XYZ<0>
                mov r14.x, c13.x  // ::WhiteY<0>
                add r6.w, -r14.x, -c12.x
                add r6.w, r6.w, -c167.y
                mul r13.z, r5.w, r6.w  // ::xyY_XYZ<2>
                mov r13.y, -c167.y
                cmp r13.xyz, -r1.z, c128.z, r13  // ::xyY_XYZ<0,1,2>

#line 630
                add r9.yw, r13.xxzz, c68.xxzy

#line 633
                cmp r5.w, -r9_abs.w, c68.z, c68.w
                cmp r5.w, -r1.z, c125.z, r5.w
                cmp r5.w, -r9_abs.y, r5.w, c125.z

#line 643
                add r9.yw, r13.xyzz, r13.xxzy
                mul r9.yw, r9, c127.xxzy  // ::Ka<0,0>

#line 1676
                mul r6.w, r10.z, c103.w
                mul r6.w, r6.w, r6.w
                mul r6.w, r13.y, r6.w  // ::Y<0>
                rcp r8.w, r9.y
                cmp r8.w, r5.w, r8.w, c123.w
                mul r8.w, r8.w, r11.y
                cmp r1.z, -r1.z, c145.x, c145.y
                mul r1.z, r1.z, r6.w
                rsq r9.y, r1.z
                rcp r9.y, r9.y
                mad r8.w, r8.w, r9.y, r1.z
                mul r8.w, r13.x, r8.w  // ::X<0>
                rcp r9.w, r9.w
                cmp r5.w, r5.w, r9.w, c89.x
                mul r5.w, r5.w, r8.y
                mad r1.z, r5.w, r9.y, -r1.z
                mul r1.z, -r13.z, r1.z  // ::Z<0>

#line 548
                mul r13.xyz, r6.w, c24
                mad r13.xyz, r8.w, c23, r13
                mad r12.xyz, r1.z, c25.xzyw, r13.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2733
                mov r1.z, -c167.y
              else
                if_eq r9.x, -c35.y

#line 1722
                  add r5.w, r10.z, -c69.w  // ::Jz<0>
                  mad r6.w, r5.w, c89.y, c89.z
                  rcp r6.w, r6.w

#line 1727
                  mul r9.yw, r11.y, c148.xxzy
                  mad r8.w, r5.w, r6.w, r9.y
                  mad r8.w, r8.y, c89.w, r8.w  // PerceptualQuantizerInverse::X<0>

#line 569
                  pow r10.w, r8.w, c148.z  // ::XX<0>
                  add r8.w, -r10.w, c55.z
                  mad r10.w, r10.w, c90.x, c90.y
                  rcp r10.w, r10.w
                  mul r8.w, r8.w, r10.w
                  pow r10.w, r8.w, c148.w

#line 1727
                  mad r9.yw, r5.w, r6.w, -r9
                  mad r9.yw, r8.y, -c90.xzzw, r9  // PerceptualQuantizerInverse::X<0,0>

#line 569
                  pow r5.w, r9.y, c148.z  // ::XX<0>
                  add r6.w, -r5.w, c55.z
                  mad r5.w, r5.w, c90.x, c90.y
                  rcp r5.w, r5.w
                  mul r5.w, r5.w, r6.w
                  pow r6.w, r5.w, c148.w
                  pow r5.w, r9.w, c148.z  // ::XX<0>
                  add r8.w, -r5.w, c55.z
                  mad r5.w, r5.w, c90.x, c90.y
                  rcp r5.w, r5.w
                  mul r5.w, r5.w, r8.w
                  pow r8.w, r5.w, c148.w

#line 1731
                  mul r13.xyz, r6.w, c150
                  mad r9.yw, r10.w, c147.xxzy, -r13.xxzz
                  mad r5.w, r10.w, c150.w, r13.y
                  mad r5.w, r8.w, -c147.z, r5.w  // ::Y<0>
                  mad r9.yw, r8.w, c149.xxzy, r9  // ::X<0>, ::Z<0>
                  mul r5.w, r5.w, c91.x  // ::xyz<1>
                  mul r9.yw, r9, c91.x  // ::xyz<0,2>

#line 548
                  mul r13.xyz, r5.w, c24
                  mad r13.xyz, r9.y, c23, r13
                  mad r12.xyz, r9.w, c25.xzyw, r13.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2734
                  mov r1.z, -c167.y
                else
                  if_eq r9.x, -c35.z

#line 586
                    abs r5.w, c13.x

#line 590
                    rcp r6.w, c13.x
                    mul r13.x, r6.w, c12.x  // ::xyY_XYZ<0>
                    mov r14.x, c13.x  // ::WhiteY<0>
                    add r8.w, -r14.x, -c12.x
                    add r8.w, r8.w, -c167.y
                    mul r13.z, r6.w, r8.w  // ::xyY_XYZ<2>
                    mov r13.y, -c167.y
                    cmp r13.xyz, -r5.w, c128.z, r13  // ::xyY_XYZ<0,1,2>

#line 548
                    mul r14.xyz, r11.y, c27
                    mad r14.xyz, r10.z, c26, r14
                    mad r14.xyz, r8.y, c28, r14  // ::x<0>, ::y<0>, ::z<0>

#line 578
                    mul r15.xyz, r14, r14
                    mul r14.xyz, r14, r15  // ::Pow3<0,0,0>

#line 548
                    mul r15.xyz, r14.y, c33
                    mad r14.xyw, r14.x, c32.xyzz, r15.xyzz
                    mad r14.xyz, r14.z, c34, r14.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 1780
                    mul r13.xyz, r13, r14  // ::xyz<0,1,2>

#line 548
                    mul r14.xyz, r13.y, c24
                    mad r13.xyw, r13.x, c23.xyzz, r14.xyzz
                    mad r12.xyz, r13.z, c25.xzyw, r13.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2735
                    mov r1.z, -c167.y
                  else
                    if_eq r9.x, -c35.w

#line 928
                      mul r5.w, r11.y, c103.w  // ::_s<0>
                      mul r13.y, r8.y, c103.w  // ::_b<0>

#line 931
                      add r6.w, -r10.z, c85.w

#line 943
                      mul r8.w, r10.z, c153.w
                      cmp r6.w, r6.w, r8.w, c133.x  // ::SectorPosition<0>
                      frc r8.w, r6.w
                      add r8.w, r6.w, -r8.w  // ::SectorNumber<0>

#line 947
                      add r6.w, r6.w, -r8.w  // ::FractionalSector<0>

#line 950
                      mad r9.y, r11.y, -c176.x, c176.y
                      mul r13.z, r9.y, r13.y  // ::p<0>
                      mad r9.y, r5.w, -r6.w, -c167.y
                      mul r13.w, r9.y, r13.y  // ::q<0>
                      add r6.w, -r6.w, -c167.y
                      mad r6.w, r5.w, -r6.w, -c167.y
                      mul r13.x, r6.w, r13.y  // ::t<0>

#line 979
                      add r14, r8.w, c175

#line 985
                      add r6.w, r8.w, c100.x

#line 990
                      cmp r15.xyz, -r6_abs.w, r13.yzww, c125.z  // ::r<0>, ::g<0>, ::b<0>
                      cmp r15.xyz, -r14_abs.w, r13.xzyw, r15  // ::r<0>, ::g<0>, ::b<0>
                      cmp r15.xyz, -r14_abs.z, r13.zwyw, r15  // ::r<0>, ::g<0>, ::b<0>
                      cmp r14.yzw, -r14_abs.y, r13.xzyx, r15.xxyz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r14.xyz, -r14_abs.x, r13.wyzw, r14.yzww  // ::r<0>, ::g<0>, ::b<0>
                      cmp r13.xzw, -r8_abs.w, r13.yyxz, r14.xyyz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r12.xyz, -r5_abs.w, r13.y, r13.xwzw  // ::r<0>, ::b<0>, ::g<0>

#line 2736
                      mov r1.z, -c167.y
                    else
                      if_eq r9.x, -c36.x

#line 1037
                        mul r12.xyz, r8.y, c103.w  // ::l<0,0,0>

#line 1044
                        if_lt -r11.y, c125.z

#line 1037
                          mul r5.w, r11.y, c103.w  // ::s<0>
                          min r6.w, r10.z, c85.w  // ::h<0>
                          mul r8.w, r6.w, c153.w  // ::h<0>

#line 1046
                          mad r9.y, r8.y, c133.y, c133.z
                          add r9.y, -r9_abs.y, -c167.y
                          mul r13.x, r5.w, r9.y  // ::chroma<0>
                          cmp r9.yw, r6.w, c173.xxzy, c173.xzzw
                          mul r5.w, r8.w, r9.w
                          frc r5.w, r5.w
                          mad r5.w, r9.y, r5.w, c167.y
                          add r5.w, -r5_abs.w, -c167.y
                          mul r13.y, r5.w, r13.x  // ::v<0>

#line 1067
                          add r14, -r6.w, c129

#line 1073
                          add r15, r6.w, -c129.wzyx

#line 1079
                          add r5.w, r6.w, c133.w
                          add r9.yw, -r6.w, c130.xxzy

#line 1084
                          cmp r9.yw, r9, -c167_abs.y, -c167_abs.x
                          cmp r5.w, r5.w, r9.y, c125.z
                          mov r13.z, c125.z
                          cmp r16.xyz, r5.w, c125.z, r13.xzyw  // ::result<0,1,2>
                          cmp r5.w, r15.w, r9.w, c125.z
                          cmp r16.xyz, r5.w, r16, r13.yzxw  // ::result<0,1,2>
                          cmp r14, r14, -c167_abs.y, -c167_abs.x
                          cmp r14.xyz, r15.zyxw, r14, c125.z
                          cmp r15.xyz, r14.x, r16, r13.zyxw  // ::result<0,1,2>
                          cmp r15.xyz, r14.y, r15, r13.zxyw  // ::result<0,1,2>
                          cmp r14.xyz, r14.z, r15, r13.yxzw  // ::result<0,1,2>
                          cmp r5.w, r6.w, r14.w, c125.z
                          cmp r13.yzw, r5.w, r14.xxyz, r13.xxyz  // ::result<0,1,2>
                          mad r5.w, r13.x, c168.w, r12.y  // ::w<0>

#line 1089
                          add r12.xyz, r5.w, r13.ywzw  // ::result<0,2,1>

#line 1094
                        endif

#line 2737
                        mov r1.z, -c167.y
                      else
                        if_eq r9.x, -c36.y

#line 1393
                          mul r5.w, r11.y, c103.w  // ::white<0>
                          mul r6.w, r8.y, c103.w  // ::black<0>
                          mad r6.w, r11.y, c103.w, r6.w

#line 1402
                          if_ge r6.w, -c167.y

#line 1398
                            rcp r6.w, r6.w
                            mul r12.xyz, r5.w, r6.w  // ::gray<0,0,0>

#line 1413
                          else

#line 931
                            add r6.w, -r10.z, c85.w

#line 943
                            mul r8.w, r10.z, c153.w
                            cmp r6.w, r6.w, r8.w, c133.x  // ::SectorPosition<0>
                            frc r8.w, r6.w
                            add r8.w, r6.w, -r8.w  // ::SectorNumber<0>

#line 947
                            add r6.w, r6.w, -r8.w  // ::FractionalSector<0>

#line 951
                            add r13.x, -r6.w, -c167.y  // ::q<0>

#line 979
                            add r14, r8.w, c175

#line 985
                            add r6.w, r8.w, c100.x
                            cmp r15.x, -r6_abs.w, c167_abs.y, c167_abs.x  // ::r<0>

#line 990
                            mov r13.y, c125.z
                            cmp r15.yz, -r6_abs.w, r13.xyxw, c125.z  // ::g<0>, ::b<0>
                            mad r13.zw, r13.x, c84, c84.y
                            cmp r15.xyz, -r14_abs.w, r13.zyww, r15  // ::r<0>, ::g<0>, ::b<0>
                            cmp r15.xyz, -r14_abs.z, r13.yxww, r15  // ::r<0>, ::g<0>, ::b<0>
                            mad r16.xyz, r13.wxyw, c84.yzyw, c84.wyww
                            cmp r14.yzw, -r14_abs.y, r16.xzxy, r15.xxyz  // ::r<0>, ::g<0>, ::b<0>
                            cmp r13.xyz, -r14_abs.x, r13.xwyw, r14.yzww  // ::r<0>, ::g<0>, ::b<0>
                            cmp r13.xyz, -r8_abs.w, r16, r13  // ::r<0>, ::g<0>, ::b<0>

#line 1405
                            mad r6.w, r11.y, -c176.x, c176.y
                            mad r6.w, r8.y, -c103.w, r6.w

#line 1412
                            mad r12.xyz, r13.xzyw, r6.w, r5.w  // ::rgb<0,2,1>
                          endif

#line 2738
                          mov r1.z, -c167.y
                        else
                          if_eq r9.x, -c36.z

#line 667
                            mad r5.w, r8.y, c85.x, c85.y
                            frc r5.w, r5.w
                            mad r5.w, r5.w, c81.x, c81.y
                            sincos r13.xy, r5.w
                            mul r9.yw, r11.y, r13.xxzy  // ::a<0>, ::b<0>

#line 1620
                            add r5.w, r10.z, c168.z
                            mul r6.w, r5.w, c85.z  // ::fy<0>
                            mul r8.w, r9.w, c123.x
                            mad r9.y, r9.y, c98.w, r6.w  // ::fx<0>
                            mad r5.w, r5.w, c85.z, -r8.w  // ::fz<0>
                            mul r8.w, r9.y, r9.y
                            mul r9.w, r8.w, r9.y  // ::fx3<0>
                            mul r10.w, r5.w, r5.w
                            mul r11.w, r5.w, r10.w  // ::fz3<0>
                            mad r8.w, r9.y, -r8.w, c102.z
                            mad r9.y, r9.y, c123.y, c123.z
                            mul r9.y, r9.y, c86.x
                            cmp r8.w, r8.w, r9.y, r9.w  // ::xr<0>
                            add r9.y, -r10.z, c83.w
                            mul r9.w, r6.w, r6.w
                            mul r6.w, r6.w, r9.w
                            mul r9.w, r10.z, c86.x
                            cmp r6.w, r9.y, r9.w, r6.w  // ::yr<0>
                            mad r9.y, r5.w, -r10.w, c102.z
                            mad r5.w, r5.w, c123.y, c123.z
                            mul r5.w, r5.w, c86.x
                            cmp r5.w, r9.y, r5.w, r11.w  // ::zr<0>

#line 586
                            abs r9.y, c13.x

#line 590
                            rcp r9.w, c13.x
                            mul r13.x, r9.w, c12.x  // ::xyY_XYZ<0>
                            mov r14.x, c13.x  // ::WhiteY<0>
                            add r10.w, -r14.x, -c12.x
                            add r10.w, r10.w, -c167.y
                            mul r13.z, r9.w, r10.w  // ::xyY_XYZ<2>
                            mov r13.y, -c167.y
                            cmp r13.xyz, -r9.y, c128.z, r13  // ::xyY_XYZ<0,1,2>

#line 1632
                            mul r12.x, r8.w, r13.x  // ::Lab_Lrgb<0>
                            mul r12.z, r6.w, r13.y  // ::Lab_Lrgb<1>
                            mul r12.y, r5.w, r13.z  // ::Lab_Lrgb<2>

#line 2739
                            mov r1.z, -c167.y
                          else
                            if_eq r9.x, -c36.w

#line 667
                              mad r5.w, r8.y, c85.x, c85.y
                              frc r5.w, r5.w
                              mad r5.w, r5.w, c81.x, c81.y
                              sincos r13.xy, r5.w
                              mul r9.yw, r11.y, r13.xxzy  // ::a<0>, ::b<0>

#line 586
                              abs r5.w, c13.x

#line 590
                              rcp r6.w, c13.x
                              mul r13.x, r6.w, c12.x  // ::xyY_XYZ<0>
                              mov r14.x, c13.x  // ::WhiteY<0>
                              add r8.w, -r14.x, -c12.x
                              add r8.w, r8.w, -c167.y
                              mul r13.z, r6.w, r8.w  // ::xyY_XYZ<2>
                              mov r13.y, -c167.y
                              cmp r13.xyz, -r5.w, c128.z, r13  // ::xyY_XYZ<0,1,2>

#line 630
                              add r14.xy, r13.xzzw, c68

#line 633
                              cmp r6.w, -r14_abs.y, c68.z, c68.w
                              cmp r6.w, -r5.w, c125.z, r6.w
                              cmp r6.w, -r14_abs.x, r6.w, c125.z

#line 643
                              add r14.xy, r13.yzzw, r13
                              mul r14.xy, r14, c127  // ::Ka<0,0>

#line 1676
                              mul r8.w, r10.z, c103.w
                              mul r8.w, r8.w, r8.w
                              mul r8.w, r13.y, r8.w  // ::Y<0>
                              rcp r10.w, r14.x
                              cmp r10.w, r6.w, r10.w, c123.w
                              mul r9.y, r9.y, r10.w
                              cmp r5.w, -r5.w, c145.x, c145.y
                              mul r5.w, r5.w, r8.w
                              rsq r10.w, r5.w
                              rcp r10.w, r10.w
                              mad r9.y, r9.y, r10.w, r5.w
                              mul r9.y, r13.x, r9.y  // ::X<0>
                              rcp r11.w, r14.y
                              cmp r6.w, r6.w, r11.w, c89.x
                              mul r6.w, r6.w, r9.w
                              mad r5.w, r6.w, r10.w, -r5.w
                              mul r5.w, -r13.z, r5.w  // ::Z<0>

#line 548
                              mul r13.xyz, r8.w, c24
                              mad r13.xyz, r9.y, c23, r13
                              mad r12.xyz, r5.w, c25.xzyw, r13.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2740
                              mov r1.z, -c167.y
                            else
                              if_eq r9.x, -c47.x

#line 667
                                mad r5.w, r8.y, c85.x, c85.y
                                frc r5.w, r5.w
                                mad r5.w, r5.w, c81.x, c81.y
                                sincos r13.xy, r5.w
                                mul r13, r11.y, r13.xyxy  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1722
                                add r5.w, r10.z, -c69.w  // ::Jz<0>
                                mad r6.w, r5.w, c89.y, c89.z
                                rcp r6.w, r6.w

#line 1727
                                mul r9.yw, r13.xxzz, c148.xxzy
                                mad r8.w, r5.w, r6.w, r9.y
                                mad r8.w, r13.y, c89.w, r8.w  // PerceptualQuantizerInverse::X<0>

#line 569
                                pow r10.w, r8.w, c148.z  // ::XX<0>
                                add r8.w, -r10.w, c55.z
                                mad r10.w, r10.w, c90.x, c90.y
                                rcp r10.w, r10.w
                                mul r8.w, r8.w, r10.w
                                pow r10.w, r8.w, c148.w

#line 1727
                                mad r9.yw, r5.w, r6.w, -r9
                                mad r9.yw, r13, -c90.xzzw, r9  // PerceptualQuantizerInverse::X<0,0>

#line 569
                                pow r5.w, r9.y, c148.z  // ::XX<0>
                                add r6.w, -r5.w, c55.z
                                mad r5.w, r5.w, c90.x, c90.y
                                rcp r5.w, r5.w
                                mul r5.w, r5.w, r6.w
                                pow r6.w, r5.w, c148.w
                                pow r5.w, r9.w, c148.z  // ::XX<0>
                                add r8.w, -r5.w, c55.z
                                mad r5.w, r5.w, c90.x, c90.y
                                rcp r5.w, r5.w
                                mul r5.w, r5.w, r8.w
                                pow r8.w, r5.w, c148.w

#line 1731
                                mul r13.xyz, r6.w, c150
                                mad r9.yw, r10.w, c147.xxzy, -r13.xxzz
                                mad r5.w, r10.w, c150.w, r13.y
                                mad r5.w, r8.w, -c147.z, r5.w  // ::Y<0>
                                mad r9.yw, r8.w, c149.xxzy, r9  // ::X<0>, ::Z<0>
                                mul r5.w, r5.w, c91.x  // ::xyz<1>
                                mul r9.yw, r9, c91.x  // ::xyz<0,2>

#line 548
                                mul r13.xyz, r5.w, c24
                                mad r13.xyz, r9.y, c23, r13
                                mad r12.xyz, r9.w, c25.xzyw, r13.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2741
                                mov r1.z, -c167.y
                              else
                                add r5.w, r9.x, c47.y
                                cmp r1.z, -r5_abs.w, c167_abs.y, c167_abs.x

#line 667
                                mad r6.w, r8.y, c85.x, c85.y
                                frc r6.w, r6.w
                                mad r6.w, r6.w, c81.x, c81.y
                                sincos r13.xy, r6.w
                                mul r10.xy, r11.y, r13  // ::a<0>, ::b<0>

#line 2060
                                add r13.xyz, r10, c169.wwyw
                                mul r13.xzw, r13.xyyz, c149.zyzw  // ::result<0,1,2>

#line 590
                                mul r6.w, r13.w, r13.x
                                rcp r8.w, r13.z
                                mul r14.x, r6.w, r8.w  // ::xyY_XYZ<0>
                                mad r6.w, r13.y, -c123.x, -r13.x
                                add r6.w, r6.w, -c167.y
                                mul r6.w, r13.w, r6.w
                                mul r14.z, r8.w, r6.w  // ::xyY_XYZ<2>
                                mov r14.y, r13.w
                                cmp r13.xyz, -r13_abs.z, c128.z, r14  // ::xyY_XYZ<0,1,2>

#line 2742
                                cmp r12.xyz, -r5_abs.w, r13.xzyw, r12  // ::TLrgb<0,2,1>
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r1.z, -r1.z

#line 2767
              else

#line 2744
                if_eq r9.x, -c47.z

#line 667
                  mad r1.z, r8.y, c85.x, c85.y
                  frc r1.z, r1.z
                  mad r1.z, r1.z, c81.x, c81.y
                  sincos r13.xy, r1.z
                  mul r9.yw, r11.y, r13.xxzy  // ::a<0>, ::b<0>

#line 586
                  abs r1.z, c13.x

#line 590
                  rcp r5.w, c13.x
                  mul r13.x, r5.w, c12.x  // ::xyY_XYZ<0>
                  mov r14.x, c13.x  // ::WhiteY<0>
                  add r6.w, -r14.x, -c12.x
                  add r6.w, r6.w, -c167.y
                  mul r13.z, r5.w, r6.w  // ::xyY_XYZ<2>
                  mov r13.y, -c167.y
                  cmp r13.xyz, -r1.z, c128.z, r13  // ::xyY_XYZ<0,1,2>

#line 649
                  cmp r1.z, -r1.z, c146.y, c146.w
                  add r1.z, r1.z, r13.x
                  mul r5.w, r13.x, -c60.x
                  mad r1.z, r13.z, -c58.x, r1.z
                  rcp r1.z, r1.z
                  mul r5.w, r1.z, r5.w  // ::ComputeKu<0>

#line 654
                  mul r1.z, r13.y, r1.z
                  mul r1.z, r1.z, -c45.z  // ::ComputeKv<0>

#line 1826
                  add r6.w, -r10.z, c83.w
                  add r8.w, r10.z, c168.z
                  mul r8.w, r8.w, c85.z
                  mul r10.w, r8.w, r8.w
                  mul r8.w, r8.w, r10.w

#line 1831
                  mul r13, r10.z, c155

#line 1826
                  cmp r6.w, r6.w, r13.x, r8.w  // ::Y<0>
                  mad r5.w, r13.z, r5.w, r9.y
                  rcp r5.w, r5.w
                  mad r5.w, r13.y, r5.w, c167.y
                  mul r5.w, r5.w, c63.w  // ::a<0>
                  mul r8.w, r6.w, c100.x  // ::b<0>
                  mad r1.z, r13.z, r1.z, r9.w
                  rcp r1.z, r1.z
                  mad r1.z, r13.w, r1.z, c100.x
                  mad r1.z, r6.w, r1.z, -r8.w
                  rcp r9.y, r5.w
                  mul r1.z, r1.z, r9.y  // ::X<0>
                  mad r5.w, r1.z, r5.w, r8.w  // ::Z<0>

#line 1837
                  max r8.w, r1.z, c125.z  // ::X<0>

#line 1840
                  max r1.z, r6.w, c125.z  // ::Y<0>

#line 1843
                  max r6.w, r5.w, c125.z  // ::Z<0>

#line 548
                  mul r13.xyz, r1.z, c24
                  mad r13.xyz, r8.w, c23, r13
                  mad r12.xyz, r6.w, c25.xzyw, r13.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2744
                  mov r1.z, -c167.y
                else
                  if_eq r9.x, -c47.w

#line 667
                    mad r5.w, r8.y, c85.x, c85.y
                    frc r5.w, r5.w
                    mad r5.w, r5.w, c81.x, c81.y
                    sincos r13.xy, r5.w
                    mul r10.xy, r11.y, r13  // ::a<0>, ::b<0>

#line 2208
                    add r10.xyw, r10.xyzz, c169.wwzy
                    mul r13.xyz, r10.xyww, c149.zzww  // ::result<0,1,2>

#line 590
                    mul r5.w, r13.z, r13.x
                    rcp r6.w, r13.y
                    mul r14.x, r5.w, r6.w  // ::xyY_XYZ<0>
                    mad r5.w, r10.y, -c123.x, -r13.x
                    add r5.w, r5.w, -c167.y
                    mul r5.w, r13.z, r5.w
                    mul r14.z, r6.w, r5.w  // ::xyY_XYZ<2>
                    mov r14.y, r13.z
                    cmp r10.xyw, -r13_abs.y, c128.z, r14.xyzz  // ::xyY_XYZ<0,1,2>

#line 548
                    mul r13.xyz, r10.y, c24
                    mad r13.xyz, r10.x, c23, r13
                    mad r12.xyz, r10.w, c25.xzyw, r13.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2745
                    mov r1.z, -c167.y
                  else
                    if_eq r9.x, -c106.x

#line 548
                      mul r10.xyw, r11.y, c15.xyzz
                      mad r10.xyw, r10.z, c14.xyzz, r10
                      mad r10.xyw, r8.y, c16.xyzz, r10  // ::x<0>, ::y<0>, ::z<0>
                      mul r13.xyz, r10.y, c24
                      mad r13.xyz, r10.x, c23, r13
                      mad r12.xyz, r10.w, c25.xzyw, r13.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2746
                      mov r1.z, -c167.y
                    else
                      if_eq r9.x, -c106.y

#line 586
                        abs r5.w, c13.x

#line 590
                        rcp r6.w, c13.x
                        mul r13.x, r6.w, c12.x  // ::xyY_XYZ<0>
                        mov r10.x, c13.x  // ::WhiteY<0>
                        add r8.w, -r10.x, -c12.x
                        add r8.w, r8.w, -c167.y
                        mul r13.z, r6.w, r8.w  // ::xyY_XYZ<2>
                        mov r13.y, -c167.y
                        cmp r10.xyw, -r5.w, c128.z, r13.xyzz  // ::xyY_XYZ<0,1,2>

#line 649
                        cmp r5.w, -r5.w, c146.y, c146.w
                        add r5.w, r5.w, r10.x
                        mul r6.w, r10.x, -c60.x
                        mad r5.w, r10.w, -c58.x, r5.w
                        rcp r5.w, r5.w
                        mul r6.w, r5.w, r6.w  // ::ComputeKu<0>

#line 654
                        mul r5.w, r10.y, r5.w
                        mul r5.w, r5.w, -c45.z  // ::ComputeKv<0>

#line 1826
                        add r8.w, -r10.z, c83.w
                        add r9.y, r10.z, c168.z
                        mul r9.y, r9.y, c85.z
                        mul r9.w, r9.y, r9.y
                        mul r9.y, r9.w, r9.y

#line 1831
                        mul r13, r10.z, c155

#line 1826
                        cmp r8.w, r8.w, r13.x, r9.y  // ::Y<0>
                        mad r6.w, r13.z, r6.w, r11.y
                        rcp r6.w, r6.w
                        mad r6.w, r13.y, r6.w, c167.y
                        mul r6.w, r6.w, c63.w  // ::a<0>
                        mul r9.y, r8.w, c100.x  // ::b<0>
                        mad r5.w, r13.z, r5.w, r8.y
                        rcp r5.w, r5.w
                        mad r5.w, r13.w, r5.w, c100.x
                        mad r5.w, r8.w, r5.w, -r9.y
                        rcp r9.w, r6.w
                        mul r5.w, r5.w, r9.w  // ::X<0>
                        mad r6.w, r5.w, r6.w, r9.y  // ::Z<0>

#line 1837
                        max r9.y, r5.w, c125.z  // ::X<0>

#line 1840
                        max r5.w, r8.w, c125.z  // ::Y<0>

#line 1843
                        max r8.w, r6.w, c125.z  // ::Z<0>

#line 548
                        mul r10.xyw, r5.w, c24.xyzz
                        mad r10.xyw, r9.y, c23.xyzz, r10
                        mad r12.xyz, r8.w, c25.xzyw, r10.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2747
                        mov r1.z, -c167.y
                      else
                        if_eq r9.x, -c37.y

#line 590
                          mul r5.w, r8.y, r10.z
                          rcp r6.w, r11.y
                          mul r8.x, r5.w, r6.w  // ::xyY_XYZ<0>
                          add r5.w, -r10.z, -r11.y
                          add r5.w, r5.w, -c167.y
                          mul r5.w, r8.y, r5.w
                          mul r8.z, r6.w, r5.w  // ::xyY_XYZ<2>
                          cmp r12.xyz, -r11_abs.y, c128.z, r8.xzyw  // ::xyY_XYZ<0,2,1>

#line 2749
                          mov r1.z, -c167.y
                        else
                          if_eq r9.x, -c37.z

#line 1438
                            mad r5.w, r10.z, c156.x, c156.z
                            frc r5.w, r5.w
                            mad r5.w, r5.w, c81.x, c81.y
                            sincos r13.xy, r5.w
                            rcp r5.w, r13.x
                            mul r5.w, r5.w, r13.y  // ::x<0>
                            mul r6.w, r5.w, r5.w  // ::x<0>
                            mul r8.w, r11.y, r11.y
                            mul r8.w, r8.w, -c100.x
                            rcp r6.w, r6.w
                            add r6.w, r6.w, -c167.y
                            mul r6.w, r6.w, -c45.z
                            rcp r6.w, r6.w
                            mul r6.w, r6.w, r8.w
                            rsq r6.w, r6.w
                            rcp r6.w, r6.w  // ::r<0>
                            mad r5.w, r5.w, r5.w, -c167.y
                            mul r5.w, r5.w, -c45.z
                            rcp r5.w, r5.w
                            mul r5.w, r5.w, r8.w
                            rsq r5.w, r5.w
                            rcp r5.w, r5.w  // ::g<0>
                            mul r8.w, r5.w, c147.w
                            mad r8.w, r6.w, c124.x, r8.w
                            add r8.w, r8.w, c65.x
                            rcp r8.w, r8.w
                            mul r8.w, r8.w, r8.y  // ::k<0>
                            add r9.y, -r6.w, -c167.y
                            add r9.y, -r5.w, r9.y
                            mul r12.y, r8.w, r9.y  // ::B<0>
                            mul r12.z, r5.w, r8.w  // ::G<0>
                            mul r12.x, r6.w, r8.w  // ::R<0>

#line 2750
                            mov r1.z, -c167.y
                          else
                            add r5.w, r9.x, c37.w
                            cmp r1.z, -r5_abs.w, c167_abs.y, c167_abs.x

#line 2133
                            mul r6.w, r10.z, c124.y  // XYZ_Lrgb::input<0>
                            mad r8.w, r11.y, c58.x, r6.w
                            mad r8.w, r8.y, -c45.x, r8.w  // XYZ_Lrgb::input<2>

#line 548
                            mul r10.xyw, r11.y, c24.xyzz
                            mad r10.xyw, r6.w, c23.xyzz, r10
                            mad r10.xyw, r8.w, c25.xyzz, r10  // ::x<0>, ::y<0>, ::z<0>

#line 2751
                            cmp r12.xyz, -r5_abs.w, r10.xwyw, r12  // ::TLrgb<0,2,1>
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
                if_ne r1.z, -r1.z

#line 2767
                else
                  add r9.yw, r9.x, c48.xzzw
                  cmp r1.z, -r9_abs.w, -c167_abs.y, -c167_abs.x

#line 2753
                  if_eq r9.x, -c40.x

#line 2153
                    if_eq r9.z, -r4.w

#line 2166
                      mov r10.xyw, c125.z  // ::UVW_Lrgb<0,1,2>
                    else

#line 586
                      abs r4.w, c13.x

#line 590
                      rcp r5.w, c13.x
                      mul r13.x, r5.w, c12.x  // ::xyY_XYZ<0>
                      mov r14.x, c13.x  // ::WhiteY<0>
                      add r6.w, -r14.x, -c12.x
                      add r6.w, r6.w, -c167.y
                      mul r13.z, r5.w, r6.w  // ::xyY_XYZ<2>
                      mov r13.y, -c167.y
                      cmp r13.xyz, -r4.w, c128.z, r13  // ::xyY_XYZ<0,1,2>

#line 2154
                      cmp r4.w, -r4.w, c146.y, c146.w
                      add r4.w, r4.w, r13.x
                      mul r5.w, r13.x, -c60.x
                      mad r4.w, r13.z, -c58.x, r4.w
                      rcp r4.w, r4.w
                      mul r5.w, r4.w, r5.w  // ::uN<0>
                      mul r4.w, r13.y, r4.w
                      mul r4.w, r4.w, -c105.x  // ::vN<0>
                      add r6.w, r8.y, -c61.z
                      mul r6.w, r6.w, c124.z
                      mul r8.w, r6.w, r6.w
                      mul r6.w, r6.w, r8.w  // ::y<0>
                      mul r8.w, r8.y, -c105.z
                      rcp r9.z, r8.w
                      mad r5.w, r10.z, r9.z, r5.w
                      cmp r5.w, -r8_abs.w, c125.z, r5.w  // ::_u<0>
                      mad r4.w, r11.y, r9.z, r4.w
                      cmp r4.w, -r8_abs.w, c125.z, r4.w  // ::_v<0>
                      mul r8.w, r5.w, r6.w
                      rcp r4.w, r4.w
                      mul r8.w, r4.w, r8.w  // ::x<0>
                      add r9.z, r4.w, r4.w
                      mul r4.w, r5.w, r4.w
                      mad r4.w, r4.w, c168.w, r9.z
                      add r4.w, r4.w, c100.x
                      mul r4.w, r4.w, r6.w  // ::z<0>

#line 2165
                      mul r5.w, r8.w, c103.w  // ::xyz<0>
                      mul r6.w, r6.w, c103.w  // ::xyz<1>
                      mul r4.w, r4.w, c103.w  // ::xyz<2>

#line 548
                      mul r13.xyz, r6.w, c24
                      mad r13.xyz, r5.w, c23, r13
                      mad r10.xyw, r4.w, c25.xyzz, r13.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 2166
                    endif

#line 2753
                    mov r4.w, -c167.y
                  else
                    if_eq r9.x, -c40.y

#line 2384
                      add r5.w, r10.z, -c168.z
                      mul r6.w, r5.w, c88.w  // ::ypbpr<0>
                      add r8.w, r11.y, c125.w
                      add r9.z, r8.y, c125.w

#line 2359
                      mad r10.x, r9.z, c98.x, r6.w  // ::r<0>
                      mad r10.w, r8.w, c98.y, r6.w  // ::b<0>
                      mul r6.w, r10.x, c151.x
                      mad r5.w, r5.w, c88.w, -r6.w
                      mad r5.w, r10.w, -c151.z, r5.w
                      mul r10.y, r5.w, c98.z  // ::g<0>

#line 2754
                      mov r4.w, -c167.y
                    else
                      if_eq r9.x, -c40.z

#line 590
                        mul r5.w, r8.y, r10.z
                        rcp r6.w, r11.y
                        mul r8.x, r5.w, r6.w  // ::xyY_XYZ<0>
                        add r5.w, -r10.z, -r11.y
                        add r5.w, r5.w, -c167.y
                        mul r5.w, r8.y, r5.w
                        mul r8.z, r6.w, r5.w  // ::xyY_XYZ<2>
                        cmp r8.xzw, -r11_abs.y, c128.z, r8.xyyz  // ::xyY_XYZ<0,1,2>

#line 548
                        mul r13.xyz, r8.z, c24
                        mad r13.xyz, r8.x, c23, r13
                        mad r10.xyw, r8.w, c25.xyzz, r13.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 2755
                        mov r4.w, -c167.y
                      else
                        if_eq r9.x, -c40.w

#line 586
                          abs r5.w, c13.x

#line 590
                          rcp r6.w, c13.x
                          mul r13.x, r6.w, c12.x  // ::xyY_XYZ<0>
                          mov r8.x, c13.x  // ::WhiteY<0>
                          add r8.x, -r8.x, -c12.x
                          add r8.x, r8.x, -c167.y
                          mul r13.z, r6.w, r8.x  // ::xyY_XYZ<2>

#line 2225
                          mov r13.y, -c167.y
                          mul r8.xzw, r13.xyyz, c169.w
                          cmp r8.xzw, -r5.w, c124.w, r8  // ::white<0,1,2>

#line 2229
                          add r5.w, r8.z, r8.x
                          add r5.w, r8.w, r5.w
                          rcp r6.w, r5.w
                          mul r6.w, r6.w, r8.z  // ::x0<0>
                          mul r5.w, r5.w, c103.w  // ::ew<0>

#line 2234
                          mul r8.x, r8.y, r8.y

#line 2238
                          mul r8.zw, c38.xyyx, c38.xyxz
                          mul r13.yz, r8.x, c176.xxyw  // ::Y<0>
                          mul r8.x, r6.w, r13.z
                          mul r8.zw, r11.y, r8
                          mul r14.xy, r8.zwzw, c169.w
                          mad r8.x, r8.x, r5.w, r14.x
                          mul r6.w, r6.w, r14.y
                          mad r6.w, r6.w, -r5.w, r8.x
                          mul r8.x, r11.y, c169.w
                          mul r14.xz, r8.x, c38
                          mul r8.z, r5.w, r14.y
                          mad r8.x, r8.x, c38.x, -r8.z
                          mul r8.z, r5.w, r13.y
                          mad r8.x, r13.z, r5.w, r8.x
                          rcp r8.x, r8.x
                          mul r6.w, r6.w, r8.x  // ::x<0>
                          mad r8.x, r14.z, c38.x, r13.z
                          mad r8.x, r8.w, -c169.w, r8.x
                          mad r8.z, r8.z, c169.w, r14.x
                          mad r5.w, r14.y, -r5.w, r8.z
                          rcp r5.w, r5.w
                          mul r8.z, r5.w, r8.x  // ::y<0>

#line 590
                          mul r8.w, r13.y, r6.w
                          rcp r9.z, r8.z
                          mul r13.x, r8.w, r9.z  // ::xyY_XYZ<0>
                          mad r5.w, r8.x, -r5.w, -r6.w
                          add r5.w, r5.w, -c167.y
                          mul r5.w, r13.y, r5.w
                          mul r13.w, r9.z, r5.w  // ::xyY_XYZ<2>
                          cmp r8.xzw, -r8_abs.z, c128.z, r13.xyyw  // ::xyY_XYZ<0,1,2>

#line 548
                          mul r13.xyz, r8.z, c24
                          mad r13.xyz, r8.x, c23, r13
                          mad r10.xyw, r8.w, c25.xyzz, r13.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 2756
                          mov r4.w, -c167.y
                        else
                          if_eq r9.x, -c92.x

#line 548
                            mul r8.xzw, r11.y, c24.xyyz
                            mad r8.xzw, r10.z, c23.xyyz, r8
                            mad r10.xyw, r8.y, c25.xyzz, r8.xzzw  // ::x<0>, ::y<0>, ::z<0>

#line 2757
                            mov r4.w, -c167.y
                          else
                            if_eq r9.x, -c92.y

#line 2404
                              add r5.w, r10.z, -c168.z
                              mul r6.w, r5.w, c88.w  // ::ypbpr<0>
                              add r8.x, r11.y, c125.w
                              add r8.z, r8.y, c125.w

#line 2359
                              mad r10.x, r8.z, c98.x, r6.w  // ::r<0>
                              mad r10.w, r8.x, c98.y, r6.w  // ::b<0>
                              mul r6.w, r10.x, c151.x
                              mad r5.w, r5.w, c88.w, -r6.w
                              mad r5.w, r10.w, -c151.z, r5.w
                              mul r10.y, r5.w, c98.z  // ::g<0>

#line 2758
                              mov r4.w, -c167.y
                            else

#line 2762
                              add r13, r9.x, c179

#line 2260
                              add r5.w, r10.z, -r11.y  // ::c<0>
                              add r14.x, r8.y, r5.w  // ::YCoCg_Lrgb<0>
                              add r14.y, r10.z, r11.y  // ::YCoCg_Lrgb<1>
                              add r14.z, -r8.y, r5.w  // ::YCoCg_Lrgb<2>

#line 2303
                              mad r8.xzw, r11.y, c126.xyyz, r10.z

#line 2275
                              mad r5.w, r11.y, -c126.w, r10.z
                              mad r15.y, r8.y, c96.x, r5.w  // ::g<0>
                              mad r15.xz, r8.y, -c96.yyzw, r8  // ::r<0>, ::b<0>

#line 2303
                              mad r16.x, r8.y, c96.w, r8.w  // ::r<0>

#line 2328
                              mad r17, r11.y, c93, r10.z

#line 2304
                              mad r16.y, r8.y, c96.w, r17.x  // ::g<0>

#line 2762
                              cmp r5.w, -r13_abs.w, c167_abs.y, c167_abs.x

#line 2328
                              mad r8.xzw, r8.y, c94.xyyz, r17.yyzw  // ::b<0>, ::r<0>, ::g<0>
                              mad r6.w, r11.y, c94.w, r10.z
                              mad r6.w, r8.y, c95.x, r6.w  // ::b<0>

#line 2332
                              mov_sat r9.xz, r8.zyww
                              cmp r17.xy, r8.zwzw, r9.xzzw, c125.z  // ::r<0>, ::g<0>
                              mov_sat r8.z, r6.w
                              cmp r17.z, r6.w, r8.z, c125.z  // ::b<0>

#line 2762
                              cmp r17.xyz, -r13_abs.w, r17, r12.xzyw  // ::TLrgb<0,1,2>
                              mov r16.z, r8.x
                              cmp r8.xzw, -r13_abs.z, r16.xyyz, r17.xyyz  // ::TLrgb<0,1,2>
                              cmp r5.w, -r13_abs.z, -c167.y, r5.w
                              cmp r8.xzw, -r13_abs.y, r15.xyyz, r8  // ::TLrgb<0,1,2>
                              cmp r5.w, -r13_abs.y, -c167.y, r5.w
                              cmp r10.xyw, -r13_abs.x, r14.xyzz, r8.xzzw  // ::TLrgb<0,1,2>
                              cmp r4.w, -r13_abs.x, -c167.y, r5.w
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif

#line 2448
                  mad r13.xy, r8.y, c95.yzzw, r10.z  // ::r<0,0>

#line 2454
                  mad r8.xzw, r11.y, c97.xyyz, r10.z  // ::b<0,0>

#line 2361
                  mad r5.w, r13.x, -c151.x, r10.z
                  mad r5.w, r8.x, -c151.z, r5.w
                  mul r13.z, r5.w, c98.z  // ::g<0>

#line 2451
                  mad r5.w, r8.y, c95.w, r8.z  // ::g<0>

#line 2458
                  mov_sat r6.w, r13.y
                  cmp r14.x, r13.y, r6.w, c125.z  // ::r<0>
                  mov_sat r6.w, r5.w
                  cmp r14.y, r5.w, r6.w, c125.z  // ::g<0>
                  mov_sat r5.w, r8.w
                  cmp r14.z, r8.w, r5.w, c125.z  // ::b<0>

#line 2765
                  cmp r9.xzw, -r9_abs.w, r14.xyyz, r10.xyyw  // ::TLrgb<0,1,2>
                  mov r13.w, r8.x
                  cmp r8.xzw, -r9_abs.y, r13, r9  // ::TLrgb<0,1,2>
                  cmp r1.z, -r9_abs.y, c167.y, r1.z
                  mov r11.x, r10.z
                  mov r11.z, r8.y
                  cmp r8.xyz, r1.z, r11, r8.xzww  // ::TLrgb<0,1,2>
                  cmp r12.xyz, -r4.w, r8.xzyw, r10.xwyw  // ::TLrgb<0,2,1>
                endif
              endif
            endif
          endif

#line 2573
          rcp r1.z, c11.x
          log r4.w, r12.x
          mul r5.w, r1.z, r4.w
          exp r7.x, r5.w  // ::V<0>

#line 2578
          if_eq c10.x, r0.z

#line 2638
          else

#line 2578
            add r5.w, r6.y, c10.x

#line 2586
            add r6.w, -r12.x, -c167.y
            rsq r8.x, r12.x
            rcp r8.x, r8.x
            mul r8.x, r8.x, -c168.w  // ::Transfer<0>
            cmp r6.w, r6.w, -c167_abs.y, -c167_abs.x
            cmp r6.w, r12.x, r6.w, c125.z
            add r8.y, r12.x, c101.y
            log r8.y, r8.y
            mad r8.y, r8.y, c101.z, c101.w  // ::Transfer<0>
            cmp r6.w, r6.w, r8.y, r8.x  // ::Transfer<0>
            cmp r7.x, -r5_abs.w, r6.w, r7.x  // ::Transfer<0>

#line 2593
            if_eq c10.x, -r6.y

#line 2638
            else

#line 2593
              add r5.w, r6.x, c10.x

#line 2596
              add r6.w, -r12.x, c102.z
              mul r8.x, r12.x, c97.w
              cmp r6.w, r6.w, r8.x, -c167.y  // ::V<0>
              cmp r7.x, -r5_abs.w, r6.w, r7.x  // ::Transfer<0>

#line 2601
              if_eq c10.x, -r6.x

#line 2638
              else

#line 2601
                mov r8.x, c10.x  // ::Companding<0>
                add r5.w, r8.x, c58.x

#line 2616
                if_eq r8.x, -c58.x

#line 2610
                  mul r6.w, r4.w, c131.x
                  exp r6.w, r6.w
                  add r8.y, r6.w, -c55.z
                  max r9.x, r8.y, c125.z  // ::a<0>
                  mad r6.w, r6.w, -c55.y, c55.x  // ::b<0>
                  rcp r6.w, r6.w
                  mul r6.w, r6.w, r9.x
                  pow r8.y, r6.w, c148.w
                  mul r6.w, r8.y, c131.y  // ::Transfer<0>
                  cmp r7.x, -r5_abs.w, r6.w, r7.x  // ::Transfer<0>

#line 2638
                else

#line 2632
                  add r8.xyz, r8.x, c166

#line 2627
                  add r9.xy, r12.x, c131.zwzw

#line 2635
                  mul r9.zw, r12.x, c158.xyxy
                  mul r10.xy, r4.w, c158.zwzw

#line 2619
                  exp r4.w, r10.x

#line 2627
                  mad r10.xz, r4.w, c104.xyyw, c104.zyww
                  cmp r9.xy, r9, r10.xzzw, r9.z  // ::V<0,0>

#line 2635
                  add r4.w, -r12.x, c99.x
                  exp r5.w, r10.y
                  mad r5.w, r5.w, c99.y, c99.z
                  cmp r4.w, r4.w, r9.w, r5.w  // ::V<0>

#line 2638
                  cmp r4.w, -r8_abs.z, r4.w, r12.x  // ::Transfer<0>
                  cmp r4.w, -r8_abs.y, r9.y, r4.w  // ::Transfer<0>
                  cmp r7.x, -r8_abs.x, r9.x, r4.w  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2573
          log r4.w, r12.z
          mul r5.w, r1.z, r4.w
          exp r7.y, r5.w  // ::V<0>

#line 2578
          if_eq c10.x, r0.z

#line 2638
          else

#line 2578
            add r5.w, r6.y, c10.x

#line 2586
            add r6.w, -r12.z, -c167.y
            rsq r8.x, r12.z
            rcp r8.x, r8.x
            mul r8.x, r8.x, -c168.w  // ::Transfer<0>
            cmp r6.w, r6.w, -c167_abs.y, -c167_abs.x
            cmp r6.w, r12.z, r6.w, c125.z
            add r8.y, r12.z, c101.y
            log r8.y, r8.y
            mad r8.y, r8.y, c101.z, c101.w  // ::Transfer<0>
            cmp r6.w, r6.w, r8.y, r8.x  // ::Transfer<0>
            cmp r7.y, -r5_abs.w, r6.w, r7.y  // ::Transfer<0>

#line 2593
            if_eq c10.x, -r6.y

#line 2638
            else

#line 2593
              add r5.w, r6.x, c10.x

#line 2596
              add r6.w, -r12.z, c102.z
              mul r8.x, r12.z, c97.w
              cmp r6.w, r6.w, r8.x, -c167.y  // ::V<0>
              cmp r7.y, -r5_abs.w, r6.w, r7.y  // ::Transfer<0>

#line 2601
              if_eq c10.x, -r6.x

#line 2638
              else

#line 2601
                mov r8.x, c10.x  // ::Companding<0>
                add r5.w, r8.x, c58.x

#line 2616
                if_eq r8.x, -c58.x

#line 2610
                  mul r6.w, r4.w, c131.x
                  exp r6.w, r6.w
                  add r8.y, r6.w, -c55.z
                  max r9.x, r8.y, c125.z  // ::a<0>
                  mad r6.w, r6.w, -c55.y, c55.x  // ::b<0>
                  rcp r6.w, r6.w
                  mul r6.w, r6.w, r9.x
                  pow r8.y, r6.w, c148.w
                  mul r6.w, r8.y, c131.y  // ::Transfer<0>
                  cmp r7.y, -r5_abs.w, r6.w, r7.y  // ::Transfer<0>

#line 2638
                else

#line 2632
                  add r8.xyz, r8.x, c166

#line 2627
                  add r9.xy, r12.z, c131.zwzw

#line 2635
                  mul r9.zw, r12.z, c158.xyxy
                  mul r10.xy, r4.w, c158.zwzw

#line 2619
                  exp r4.w, r10.x

#line 2627
                  mad r10.xz, r4.w, c104.xyyw, c104.zyww
                  cmp r9.xy, r9, r10.xzzw, r9.z  // ::V<0,0>

#line 2635
                  add r4.w, -r12.z, c99.x
                  exp r5.w, r10.y
                  mad r5.w, r5.w, c99.y, c99.z
                  cmp r4.w, r4.w, r9.w, r5.w  // ::V<0>

#line 2638
                  cmp r4.w, -r8_abs.z, r4.w, r12.z  // ::Transfer<0>
                  cmp r4.w, -r8_abs.y, r9.y, r4.w  // ::Transfer<0>
                  cmp r7.y, -r8_abs.x, r9.x, r4.w  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2573
          log r4.w, r12.y
          mul r1.z, r1.z, r4.w
          exp r7.z, r1.z  // ::V<0>

#line 2578
          if_eq c10.x, r0.z

#line 2638
          else

#line 2578
            add r1.z, r6.y, c10.x

#line 2586
            add r5.w, -r12.y, -c167.y
            rsq r6.w, r12.y
            rcp r6.w, r6.w
            mul r6.w, r6.w, -c168.w  // ::Transfer<0>
            cmp r5.w, r5.w, -c167_abs.y, -c167_abs.x
            cmp r5.w, r12.y, r5.w, c125.z
            add r8.x, r12.y, c101.y
            log r8.x, r8.x
            mad r8.x, r8.x, c101.z, c101.w  // ::Transfer<0>
            cmp r5.w, r5.w, r8.x, r6.w  // ::Transfer<0>
            cmp r7.z, -r1_abs.z, r5.w, r7.z  // ::Transfer<0>

#line 2593
            if_eq c10.x, -r6.y

#line 2638
            else

#line 2593
              add r1.z, r6.x, c10.x

#line 2596
              add r5.w, -r12.y, c102.z
              mul r6.y, r12.y, c97.w
              cmp r5.w, r5.w, r6.y, -c167.y  // ::V<0>
              cmp r7.z, -r1_abs.z, r5.w, r7.z  // ::Transfer<0>

#line 2601
              if_eq c10.x, -r6.x

#line 2638
              else

#line 2601
                mov r8.x, c10.x  // ::Companding<0>
                add r1.z, r8.x, c58.x

#line 2616
                if_eq r8.x, -c58.x

#line 2610
                  mul r5.w, r4.w, c131.x
                  exp r5.w, r5.w
                  add r6.y, r5.w, -c55.z
                  max r8.y, r6.y, c125.z  // ::a<0>
                  mad r5.w, r5.w, -c55.y, c55.x  // ::b<0>
                  rcp r5.w, r5.w
                  mul r5.w, r5.w, r8.y
                  pow r6.y, r5.w, c148.w
                  mul r5.w, r6.y, c131.y  // ::Transfer<0>
                  cmp r7.z, -r1_abs.z, r5.w, r7.z  // ::Transfer<0>

#line 2638
                else

#line 2632
                  add r8.xyz, r8.x, c166

#line 2627
                  add r6.yw, r12.y, c131.xzzw

#line 2635
                  mul r9.xy, r12.y, c158
                  mul r9.zw, r4.w, c158

#line 2619
                  exp r1.z, r9.z

#line 2627
                  mad r10.xy, r1.z, c104, c104.zwzw
                  cmp r6.yw, r6, r10.xxzy, r9.x  // ::V<0,0>

#line 2635
                  add r1.z, -r12.y, c99.x
                  exp r4.w, r9.w
                  mad r4.w, r4.w, c99.y, c99.z
                  cmp r1.z, r1.z, r9.y, r4.w  // ::V<0>

#line 2638
                  cmp r1.z, -r8_abs.z, r1.z, r12.y  // ::Transfer<0>
                  cmp r1.z, -r8_abs.y, r6.w, r1.z  // ::Transfer<0>
                  cmp r7.z, -r8_abs.x, r6.y, r1.z  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2986
          mov oC0, r7  // ::main<0,1,2,3>
        else
          mov oC0, c125.z  // ::main<0,1,2,3>
        endif
        mov r3.x, r1.w  // ::input4<0>
        mov r3.yz, r2  // ::input4<1,2>
        mov r2.yw, r1.xxzy  // ::input3<0,1>
      endif
    endif

#line 2989
    if_ne r0.w, -r0.w

#line 3059
    else

#line 2991
      mov r1.x, c0.x  // ::Model<0>
      add r7, r1.x, c180
      cmp r8, -r7_abs, c167_abs.y, c167_abs.x
      add r0.w, r8.y, r8.x
      cmp r0.w, -r0.w, c167_abs.x, c167_abs.y
      add r0.w, r8.z, r0.w
      cmp r0.w, -r0.w, c167_abs.x, c167_abs.y
      add r0.w, r8.w, r0.w
      cmp r0.w, -r0.w, c167_abs.x, c167_abs.y
      add r1.yz, r1.x, c107.xxyw
      cmp r1.yz, -r1_abs.xzyw, c167_abs.y, c167_abs.x
      add r0.w, r0.w, r1.z
      cmp r0.w, -r0.w, c167_abs.x, c167_abs.y
      add r0.w, r1.y, r0.w
      if_lt -r0.w, c125.z

#line 3025
        mov r2.z, -c167.y
        cmp r1.zw, -r7_abs.w, r2, -c167.y  // ::input6<0,2>
        cmp r1.zw, -r7_abs.z, r2.xyyz, r1  // ::input6<0,2>
        cmp r1.zw, -r7_abs.y, r2.xyyz, r1  // ::input6<0,2>
        cmp r1.zw, -r7_abs.x, r2.xyyw, r1  // ::input6<0,2>

#line 2781
        if_eq r1.x, -c67.z

#line 1497
          mul r0.w, r1.z, c103.w  // ::a<0>
          rsq r0.w, r0.w
          rcp r0.w, r0.w
          mul r0.w, r0.w, c99.w
          rcp r0.w, r0.w
          mul r0.w, r0.w, r1.w
          pow r2.z, r0.w, c107.z  // ::t<0>

#line 1508
          mad r6.yw, r2.x, c181.xxzy, c181.xzzw

#line 1498
          mad r0.w, r6.y, c116.x, c116.y
          frc r0.w, r0.w
          mad r0.w, r0.w, c81.x, c81.y
          sincos r7.x, r0.w
          add r0.w, r7.x, c107.w

#line 1502
          mul r0.w, r0.w, c108.x
          rcp r2.z, r2.z
          mul r0.w, r0.w, r2.z  // ::p1<0>
          mad r2.z, r1.z, c108.y, c108.z  // ::p2<0>

#line 1508
          frc r4.w, r6.w
          mad r4.w, r4.w, c81.x, c81.y
          sincos r7.xy, r4.w
          if_ge r7_abs.y, r7_abs.x
            rcp r4.w, r7.y
            mul r5.w, r4.w, r7.x
            mul r6.y, r5.w, c108.w
            mad r4.w, r0.w, r4.w, r6.y
            add r4.w, r4.w, c111.x
            rcp r4.w, r4.w
            mul r8.y, r2.z, r4.w  // ::cb<0>
            mul r8.x, r5.w, r8.y  // ::ca<0>
          else

#line 1516
            rcp r4.w, r7.x
            mad r0.w, r0.w, r4.w, c108.w
            mul r4.w, r4.w, r7.y
            mad r0.w, r4.w, -c111.y, r0.w
            rcp r0.w, r0.w
            mul r8.x, r0.w, r2.z  // ::ca<0>
            mul r8.y, r4.w, r8.x  // ::cb<0>
          endif

#line 547
          mul r6.yw, r8.x, c111.xzzw
          mad r6.yw, r2.z, c112.xxzy, r6
          mad r6.yw, r8.y, c112.xxzz, r6  // ::x<0>, ::y<0>
          mul r0.w, r8.x, c112.w
          mad r0.w, r2.z, c109.x, r0.w
          mad r0.w, r8.y, c109.y, r0.w  // ::z<0>

#line 1480
          add r6.yw, r6, c109.z
          mul r7.xy, r6_abs.ywzw, c109.w
          add r6.yw, -r6_abs, c103.z
          rcp r2.z, r6.y
          mul r2.z, r2.z, r7.x
          pow r4.w, r2.z, c143.x
          rcp r2.z, r6.w
          mul r2.z, r2.z, r7.y
          pow r5.w, r2.z, c143.x
          add r0.w, r0.w, c109.z
          mul r2.z, r0_abs.w, c109.w
          add r0.w, -r0_abs.w, c103.z
          rcp r0.w, r0.w
          mul r0.w, r0.w, r2.z
          pow r2.z, r0.w, c143.x

#line 548
          mul r7.xyz, r5.w, c143.yzww
          mad r7.xyz, r4.w, c114, r7  // ::x<0>, ::y<0>
          mad r0.w, r2.z, c169.w, r7.z  // ::z<0>
          mul r8, r7.xyxy, c113
          add r6.yw, r8, r8.xxzz
          mad r6.yw, r0.w, c110.xxzy, r6  // ::x<0>, ::y<0>
          mul r7.xy, r7, c110.zwzw
          add r2.z, r7.y, r7.x
          mad r0.w, r0.w, c114.w, r2.z  // ::z<0>
          mul r7, r6.ywyw, c141
          add r7.xy, r7.ywzw, r7.xzzw
          mad r7.xy, r0.w, c142, r7  // ::x<0>, ::y<0>
          mul r6.yw, r6, c142.xzzw
          add r2.z, r6.w, r6.y
          mad r0.w, r0.w, c115.x, r2.z  // ::z<0>
          mul r7.yzw, r7.y, c24.xxyz
          mad r7.xyz, r7.x, c23, r7.yzww
          mad r7.xyz, r0.w, c25, r7  // ::x<0>, ::y<0>, ::z<0>

#line 2781
          mov r1.y, -c167.y
        else
          if_eq r1.x, c168.z

#line 1497
            mul r0.w, r1.z, c103.w  // ::a<0>
            rsq r0.w, r0.w
            rcp r0.w, r0.w
            mul r0.w, r0.w, c99.w
            rcp r0.w, r0.w
            mul r0.w, r0.w, r1.w
            pow r2.z, r0.w, c107.z  // ::t<0>

#line 1508
            mad r6.yw, r2.x, c181.xxzy, c181.xzzw

#line 1498
            mad r0.w, r6.y, c116.x, c116.y
            frc r0.w, r0.w
            mad r0.w, r0.w, c81.x, c81.y
            sincos r8.x, r0.w
            add r0.w, r8.x, c107.w

#line 1502
            mul r0.w, r0.w, c108.x
            rcp r2.z, r2.z
            mul r0.w, r0.w, r2.z  // ::p1<0>
            mad r2.z, r1.z, c108.y, c108.z  // ::p2<0>

#line 1508
            frc r4.w, r6.w
            mad r4.w, r4.w, c81.x, c81.y
            sincos r8.xy, r4.w
            if_ge r8_abs.y, r8_abs.x
              rcp r4.w, r8.y
              mul r5.w, r4.w, r8.x
              mul r6.y, r5.w, c108.w
              mad r4.w, r0.w, r4.w, r6.y
              add r4.w, r4.w, c111.x
              rcp r4.w, r4.w
              mul r9.y, r2.z, r4.w  // ::cb<0>
              mul r9.x, r5.w, r9.y  // ::ca<0>
            else

#line 1516
              rcp r4.w, r8.x
              mad r0.w, r0.w, r4.w, c108.w
              mul r4.w, r4.w, r8.y
              mad r0.w, r4.w, -c111.y, r0.w
              rcp r0.w, r0.w
              mul r9.x, r0.w, r2.z  // ::ca<0>
              mul r9.y, r4.w, r9.x  // ::cb<0>
            endif

#line 547
            mul r6.yw, r9.x, c111.xzzw
            mad r6.yw, r2.z, c112.xxzy, r6
            mad r6.yw, r9.y, c112.xxzz, r6  // ::x<0>, ::y<0>
            mul r0.w, r9.x, c112.w
            mad r0.w, r2.z, c109.x, r0.w
            mad r0.w, r9.y, c109.y, r0.w  // ::z<0>

#line 1480
            add r6.yw, r6, c109.z
            mul r8.xy, r6_abs.ywzw, c109.w
            add r6.yw, -r6_abs, c103.z
            rcp r2.z, r6.y
            mul r2.z, r2.z, r8.x
            pow r4.w, r2.z, c143.x
            rcp r2.z, r6.w
            mul r2.z, r2.z, r8.y
            pow r5.w, r2.z, c143.x
            add r0.w, r0.w, c109.z
            mul r2.z, r0_abs.w, c109.w
            add r0.w, -r0_abs.w, c103.z
            rcp r0.w, r0.w
            mul r0.w, r0.w, r2.z
            pow r2.z, r0.w, c143.x

#line 548
            mul r8.xyz, r5.w, c143.yzww
            mad r8.xyz, r4.w, c114, r8  // ::x<0>, ::y<0>
            mad r0.w, r2.z, c169.w, r8.z  // ::z<0>
            mul r9, r8.xyxy, c113
            add r6.yw, r9, r9.xxzz
            mad r6.yw, r0.w, c110.xxzy, r6  // ::x<0>, ::y<0>
            mul r8.xy, r8, c110.zwzw
            add r2.z, r8.y, r8.x
            mad r0.w, r0.w, c114.w, r2.z  // ::z<0>
            mul r8, r6.ywyw, c141
            add r8.xy, r8.ywzw, r8.xzzw
            mad r8.xy, r0.w, c142, r8  // ::x<0>, ::y<0>
            mul r6.yw, r6, c142.xzzw
            add r2.z, r6.w, r6.y
            mad r0.w, r0.w, c115.x, r2.z  // ::z<0>
            mul r8.yzw, r8.y, c24.xxyz
            mad r8.xyz, r8.x, c23, r8.yzww
            mad r7.xyz, r0.w, c25, r8  // ::x<0>, ::y<0>, ::z<0>

#line 2782
            mov r1.y, -c167.y
          else
            if_eq r1.x, -c61.z

#line 1497
              mul r0.w, r1.z, c103.w  // ::a<0>
              rsq r0.w, r0.w
              rcp r0.w, r0.w
              mul r0.w, r0.w, c99.w
              rcp r0.w, r0.w
              mul r0.w, r0.w, r1.w
              pow r2.z, r0.w, c107.z  // ::t<0>

#line 1508
              mad r6.yw, r2.x, c181.xxzy, c181.xzzw

#line 1498
              mad r0.w, r6.y, c116.x, c116.y
              frc r0.w, r0.w
              mad r0.w, r0.w, c81.x, c81.y
              sincos r8.x, r0.w
              add r0.w, r8.x, c107.w

#line 1502
              mul r0.w, r0.w, c108.x
              rcp r2.z, r2.z
              mul r0.w, r0.w, r2.z  // ::p1<0>
              mad r2.z, r1.z, c108.y, c108.z  // ::p2<0>

#line 1508
              frc r4.w, r6.w
              mad r4.w, r4.w, c81.x, c81.y
              sincos r8.xy, r4.w
              if_ge r8_abs.y, r8_abs.x
                rcp r4.w, r8.y
                mul r5.w, r4.w, r8.x
                mul r6.y, r5.w, c108.w
                mad r4.w, r0.w, r4.w, r6.y
                add r4.w, r4.w, c111.x
                rcp r4.w, r4.w
                mul r9.y, r2.z, r4.w  // ::cb<0>
                mul r9.x, r5.w, r9.y  // ::ca<0>
              else

#line 1516
                rcp r4.w, r8.x
                mad r0.w, r0.w, r4.w, c108.w
                mul r4.w, r4.w, r8.y
                mad r0.w, r4.w, -c111.y, r0.w
                rcp r0.w, r0.w
                mul r9.x, r0.w, r2.z  // ::ca<0>
                mul r9.y, r4.w, r9.x  // ::cb<0>
              endif

#line 547
              mul r6.yw, r9.x, c111.xzzw
              mad r6.yw, r2.z, c112.xxzy, r6
              mad r6.yw, r9.y, c112.xxzz, r6  // ::x<0>, ::y<0>
              mul r0.w, r9.x, c112.w
              mad r0.w, r2.z, c109.x, r0.w
              mad r0.w, r9.y, c109.y, r0.w  // ::z<0>

#line 1480
              add r6.yw, r6, c109.z
              mul r8.xy, r6_abs.ywzw, c109.w
              add r6.yw, -r6_abs, c103.z
              rcp r2.z, r6.y
              mul r2.z, r2.z, r8.x
              pow r4.w, r2.z, c143.x
              rcp r2.z, r6.w
              mul r2.z, r2.z, r8.y
              pow r5.w, r2.z, c143.x
              add r0.w, r0.w, c109.z
              mul r2.z, r0_abs.w, c109.w
              add r0.w, -r0_abs.w, c103.z
              rcp r0.w, r0.w
              mul r0.w, r0.w, r2.z
              pow r2.z, r0.w, c143.x

#line 548
              mul r8.xyz, r5.w, c143.yzww
              mad r8.xyz, r4.w, c114, r8  // ::x<0>, ::y<0>
              mad r0.w, r2.z, c169.w, r8.z  // ::z<0>
              mul r9, r8.xyxy, c113
              add r6.yw, r9, r9.xxzz
              mad r6.yw, r0.w, c110.xxzy, r6  // ::x<0>, ::y<0>
              mul r8.xy, r8, c110.zwzw
              add r2.z, r8.y, r8.x
              mad r0.w, r0.w, c114.w, r2.z  // ::z<0>
              mul r8, r6.ywyw, c141
              add r8.xy, r8.ywzw, r8.xzzw
              mad r8.xy, r0.w, c142, r8  // ::x<0>, ::y<0>
              mul r6.yw, r6, c142.xzzw
              add r2.z, r6.w, r6.y
              mad r0.w, r0.w, c115.x, r2.z  // ::z<0>
              mul r8.yzw, r8.y, c24.xxyz
              mad r8.xyz, r8.x, c23, r8.yzww
              mad r7.xyz, r0.w, c25, r8  // ::x<0>, ::y<0>, ::z<0>

#line 2783
              mov r1.y, -c167.y
            else
              if_eq r1.x, -c106.z

#line 1497
                mul r0.w, r1.z, c103.w  // ::a<0>
                rsq r0.w, r0.w
                rcp r0.w, r0.w
                mul r0.w, r0.w, c99.w
                rcp r0.w, r0.w
                mul r0.w, r0.w, r1.w
                pow r2.z, r0.w, c107.z  // ::t<0>

#line 1508
                mad r6.yw, r2.x, c181.xxzy, c181.xzzw

#line 1498
                mad r0.w, r6.y, c116.x, c116.y
                frc r0.w, r0.w
                mad r0.w, r0.w, c81.x, c81.y
                sincos r8.x, r0.w
                add r0.w, r8.x, c107.w

#line 1502
                mul r0.w, r0.w, c108.x
                rcp r2.z, r2.z
                mul r0.w, r0.w, r2.z  // ::p1<0>
                mad r2.z, r1.z, c108.y, c108.z  // ::p2<0>

#line 1508
                frc r4.w, r6.w
                mad r4.w, r4.w, c81.x, c81.y
                sincos r8.xy, r4.w
                if_ge r8_abs.y, r8_abs.x
                  rcp r4.w, r8.y
                  mul r5.w, r4.w, r8.x
                  mul r6.y, r5.w, c108.w
                  mad r4.w, r0.w, r4.w, r6.y
                  add r4.w, r4.w, c111.x
                  rcp r4.w, r4.w
                  mul r9.y, r2.z, r4.w  // ::cb<0>
                  mul r9.x, r5.w, r9.y  // ::ca<0>
                else

#line 1516
                  rcp r4.w, r8.x
                  mad r0.w, r0.w, r4.w, c108.w
                  mul r4.w, r4.w, r8.y
                  mad r0.w, r4.w, -c111.y, r0.w
                  rcp r0.w, r0.w
                  mul r9.x, r0.w, r2.z  // ::ca<0>
                  mul r9.y, r4.w, r9.x  // ::cb<0>
                endif

#line 547
                mul r6.yw, r9.x, c111.xzzw
                mad r6.yw, r2.z, c112.xxzy, r6
                mad r6.yw, r9.y, c112.xxzz, r6  // ::x<0>, ::y<0>
                mul r0.w, r9.x, c112.w
                mad r0.w, r2.z, c109.x, r0.w
                mad r0.w, r9.y, c109.y, r0.w  // ::z<0>

#line 1480
                add r6.yw, r6, c109.z
                mul r8.xy, r6_abs.ywzw, c109.w
                add r6.yw, -r6_abs, c103.z
                rcp r2.z, r6.y
                mul r2.z, r2.z, r8.x
                pow r4.w, r2.z, c143.x
                rcp r2.z, r6.w
                mul r2.z, r2.z, r8.y
                pow r5.w, r2.z, c143.x
                add r0.w, r0.w, c109.z
                mul r2.z, r0_abs.w, c109.w
                add r0.w, -r0_abs.w, c103.z
                rcp r0.w, r0.w
                mul r0.w, r0.w, r2.z
                pow r2.z, r0.w, c143.x

#line 548
                mul r8.xyz, r5.w, c143.yzww
                mad r8.xyz, r4.w, c114, r8  // ::x<0>, ::y<0>
                mad r0.w, r2.z, c169.w, r8.z  // ::z<0>
                mul r9, r8.xyxy, c113
                add r6.yw, r9, r9.xxzz
                mad r6.yw, r0.w, c110.xxzy, r6  // ::x<0>, ::y<0>
                mul r8.xy, r8, c110.zwzw
                add r2.z, r8.y, r8.x
                mad r0.w, r0.w, c114.w, r2.z  // ::z<0>
                mul r8, r6.ywyw, c141
                add r8.xy, r8.ywzw, r8.xzzw
                mad r8.xy, r0.w, c142, r8  // ::x<0>, ::y<0>
                mul r6.yw, r6, c142.xzzw
                add r2.z, r6.w, r6.y
                mad r0.w, r0.w, c115.x, r2.z  // ::z<0>
                mul r8.yzw, r8.y, c24.xxyz
                mad r8.xyz, r8.x, c23, r8.yzww
                mad r7.xyz, r0.w, c25, r8  // ::x<0>, ::y<0>, ::z<0>

#line 2785
                mov r1.y, -c167.y
              else
                if_eq r1.x, -c106.w

#line 1497
                  mul r0.w, r1.z, c103.w  // ::a<0>
                  rsq r0.w, r0.w
                  rcp r0.w, r0.w
                  mul r0.w, r0.w, c99.w
                  rcp r0.w, r0.w
                  mul r0.w, r0.w, r1.w
                  pow r2.z, r0.w, c107.z  // ::t<0>

#line 1508
                  mad r6.yw, r2.x, c181.xxzy, c181.xzzw

#line 1498
                  mad r0.w, r6.y, c116.x, c116.y
                  frc r0.w, r0.w
                  mad r0.w, r0.w, c81.x, c81.y
                  sincos r8.x, r0.w
                  add r0.w, r8.x, c107.w

#line 1502
                  mul r0.w, r0.w, c108.x
                  rcp r2.z, r2.z
                  mul r0.w, r0.w, r2.z  // ::p1<0>
                  mad r2.z, r1.z, c108.y, c108.z  // ::p2<0>

#line 1508
                  frc r4.w, r6.w
                  mad r4.w, r4.w, c81.x, c81.y
                  sincos r8.xy, r4.w
                  if_ge r8_abs.y, r8_abs.x
                    rcp r4.w, r8.y
                    mul r5.w, r4.w, r8.x
                    mul r6.y, r5.w, c108.w
                    mad r4.w, r0.w, r4.w, r6.y
                    add r4.w, r4.w, c111.x
                    rcp r4.w, r4.w
                    mul r9.y, r2.z, r4.w  // ::cb<0>
                    mul r9.x, r5.w, r9.y  // ::ca<0>
                  else

#line 1516
                    rcp r4.w, r8.x
                    mad r0.w, r0.w, r4.w, c108.w
                    mul r4.w, r4.w, r8.y
                    mad r0.w, r4.w, -c111.y, r0.w
                    rcp r0.w, r0.w
                    mul r9.x, r0.w, r2.z  // ::ca<0>
                    mul r9.y, r4.w, r9.x  // ::cb<0>
                  endif

#line 547
                  mul r6.yw, r9.x, c111.xzzw
                  mad r6.yw, r2.z, c112.xxzy, r6
                  mad r6.yw, r9.y, c112.xxzz, r6  // ::x<0>, ::y<0>
                  mul r0.w, r9.x, c112.w
                  mad r0.w, r2.z, c109.x, r0.w
                  mad r0.w, r9.y, c109.y, r0.w  // ::z<0>

#line 1480
                  add r6.yw, r6, c109.z
                  mul r8.xy, r6_abs.ywzw, c109.w
                  add r6.yw, -r6_abs, c103.z
                  rcp r2.z, r6.y
                  mul r2.z, r2.z, r8.x
                  pow r4.w, r2.z, c143.x
                  rcp r2.z, r6.w
                  mul r2.z, r2.z, r8.y
                  pow r5.w, r2.z, c143.x
                  add r0.w, r0.w, c109.z
                  mul r2.z, r0_abs.w, c109.w
                  add r0.w, -r0_abs.w, c103.z
                  rcp r0.w, r0.w
                  mul r0.w, r0.w, r2.z
                  pow r2.z, r0.w, c143.x

#line 548
                  mul r8.xyz, r5.w, c143.yzww
                  mad r8.xyz, r4.w, c114, r8  // ::x<0>, ::y<0>
                  mad r0.w, r2.z, c169.w, r8.z  // ::z<0>
                  mul r9, r8.xyxy, c113
                  add r6.yw, r9, r9.xxzz
                  mad r6.yw, r0.w, c110.xxzy, r6  // ::x<0>, ::y<0>
                  mul r8.xy, r8, c110.zwzw
                  add r2.z, r8.y, r8.x
                  mad r0.w, r0.w, c114.w, r2.z  // ::z<0>
                  mul r8, r6.ywyw, c141
                  add r8.xy, r8.ywzw, r8.xzzw
                  mad r8.xy, r0.w, c142, r8  // ::x<0>, ::y<0>
                  mul r6.yw, r6, c142.xzzw
                  add r2.z, r6.w, r6.y
                  mad r0.w, r0.w, c115.x, r2.z  // ::z<0>
                  mul r8.yzw, r8.y, c24.xxyz
                  mad r8.xyz, r8.x, c23, r8.yzww
                  mad r7.xyz, r0.w, c25, r8  // ::x<0>, ::y<0>, ::z<0>

#line 2786
                  mov r1.y, -c167.y
                else
                  if_eq r1.x, -c37.x

#line 1497
                    mul r0.w, r1.z, c103.w  // ::a<0>
                    rsq r0.w, r0.w
                    rcp r0.w, r0.w
                    mul r0.w, r0.w, c99.w
                    rcp r0.w, r0.w
                    mul r0.w, r0.w, r1.w
                    pow r1.w, r0.w, c107.z  // ::t<0>

#line 1508
                    mad r6.yw, r2.x, c181.xxzy, c181.xzzw

#line 1498
                    mad r0.w, r6.y, c116.x, c116.y
                    frc r0.w, r0.w
                    mad r0.w, r0.w, c81.x, c81.y
                    sincos r8.x, r0.w
                    add r0.w, r8.x, c107.w

#line 1502
                    mul r0.w, r0.w, c108.x
                    rcp r1.w, r1.w
                    mul r0.w, r0.w, r1.w  // ::p1<0>
                    mad r1.z, r1.z, c108.y, c108.z  // ::p2<0>

#line 1508
                    frc r1.w, r6.w
                    mad r1.w, r1.w, c81.x, c81.y
                    sincos r8.xy, r1.w
                    if_ge r8_abs.y, r8_abs.x
                      rcp r1.w, r8.y
                      mul r2.z, r1.w, r8.x
                      mul r4.w, r2.z, c108.w
                      mad r1.w, r0.w, r1.w, r4.w
                      add r1.w, r1.w, c111.x
                      rcp r1.w, r1.w
                      mul r9.y, r1.w, r1.z  // ::cb<0>
                      mul r9.x, r2.z, r9.y  // ::ca<0>
                    else

#line 1516
                      rcp r1.w, r8.x
                      mad r0.w, r0.w, r1.w, c108.w
                      mul r1.w, r1.w, r8.y
                      mad r0.w, r1.w, -c111.y, r0.w
                      rcp r0.w, r0.w
                      mul r9.x, r0.w, r1.z  // ::ca<0>
                      mul r9.y, r1.w, r9.x  // ::cb<0>
                    endif

#line 547
                    mul r6.yw, r9.x, c111.xzzw
                    mad r6.yw, r1.z, c112.xxzy, r6
                    mad r6.yw, r9.y, c112.xxzz, r6  // ::x<0>, ::y<0>
                    mul r0.w, r9.x, c112.w
                    mad r0.w, r1.z, c109.x, r0.w
                    mad r0.w, r9.y, c109.y, r0.w  // ::z<0>

#line 1480
                    add r1.zw, r6.xyyw, c109.z
                    mul r6.yw, r1_abs.xzzw, c109.w
                    add r1.zw, -r1_abs, c103.z
                    rcp r1.z, r1.z
                    mul r1.z, r1.z, r6.y
                    pow r2.z, r1.z, c143.x
                    rcp r1.z, r1.w
                    mul r1.z, r1.z, r6.w
                    pow r4.w, r1.z, c143.x
                    add r0.w, r0.w, c109.z
                    mul r1.z, r0_abs.w, c109.w
                    add r0.w, -r0_abs.w, c103.z
                    rcp r0.w, r0.w
                    mul r0.w, r0.w, r1.z
                    pow r1.z, r0.w, c143.x

#line 548
                    mul r8.xyz, r4.w, c143.yzww
                    mad r8.xyz, r2.z, c114, r8  // ::x<0>, ::y<0>
                    mad r0.w, r1.z, c169.w, r8.z  // ::z<0>
                    mul r9, r8.xyxy, c113
                    add r1.zw, r9.xyyw, r9.xyxz
                    mad r1.zw, r0.w, c110.xyxy, r1  // ::x<0>, ::y<0>
                    mul r6.yw, r8.xxzy, c110.xzzw
                    add r2.z, r6.w, r6.y
                    mad r0.w, r0.w, c114.w, r2.z  // ::z<0>
                    mul r8, r1.zwzw, c141
                    add r6.yw, r8, r8.xxzz
                    mad r6.yw, r0.w, c142.xxzy, r6  // ::x<0>, ::y<0>
                    mul r1.zw, r1, c142
                    add r1.z, r1.w, r1.z
                    mad r0.w, r0.w, c115.x, r1.z  // ::z<0>
                    mul r8.xyz, r6.w, c24
                    mad r8.xyz, r6.y, c23, r8
                    mad r7.xyz, r0.w, c25, r8  // ::x<0>, ::y<0>, ::z<0>

#line 2787
                  else
                    mov r7.xyz, c125.z
                  endif
                endif
              endif
            endif
          endif
        endif
        cmp r1.yzw, -r1.y, c125.z, r7.xxyz  // ::TLrgb<0,1,2>

#line 2573
        rcp r0.w, c11.x
        log r2.z, r1.y
        mul r4.w, r0.w, r2.z
        exp r7.x, r4.w  // ::V<0>

#line 2578
        if_eq c10.x, r0.z

#line 2638
        else

#line 2578
          mov r6.y, c167.y
          add r4.w, r6.y, c10.x

#line 2586
          add r5.w, -r1.y, -c167.y
          rsq r6.w, r1.y
          rcp r6.w, r6.w
          mul r6.w, r6.w, -c168.w  // ::Transfer<0>
          cmp r5.w, r5.w, -c167_abs.y, -c167_abs.x
          cmp r5.w, r1.y, r5.w, c125.z
          add r7.w, r1.y, c101.y
          log r7.w, r7.w
          mad r7.w, r7.w, c101.z, c101.w  // ::Transfer<0>
          cmp r5.w, r5.w, r7.w, r6.w  // ::Transfer<0>
          cmp r7.x, -r4_abs.w, r5.w, r7.x  // ::Transfer<0>

#line 2593
          if_eq c10.x, -r6.y

#line 2638
          else

#line 2593
            add r4.w, r6.x, c10.x

#line 2596
            add r5.w, -r1.y, c102.z
            mul r6.y, r1.y, c97.w
            cmp r5.w, r5.w, r6.y, -c167.y  // ::V<0>
            cmp r7.x, -r4_abs.w, r5.w, r7.x  // ::Transfer<0>

#line 2601
            if_eq c10.x, -r6.x

#line 2638
            else

#line 2601
              mov r8.x, c10.x  // ::Companding<0>
              add r4.w, r8.x, c58.x

#line 2616
              if_eq r8.x, -c58.x

#line 2610
                mul r5.w, r2.z, c131.x
                exp r5.w, r5.w
                add r6.y, r5.w, -c55.z
                max r7.w, r6.y, c125.z  // ::a<0>
                mad r5.w, r5.w, -c55.y, c55.x  // ::b<0>
                rcp r5.w, r5.w
                mul r5.w, r5.w, r7.w
                pow r6.y, r5.w, c148.w
                mul r5.w, r6.y, c131.y  // ::Transfer<0>
                cmp r7.x, -r4_abs.w, r5.w, r7.x  // ::Transfer<0>

#line 2638
              else

#line 2632
                add r8.xyz, r8.x, c166

#line 2627
                add r6.yw, r1.y, c131.xzzw

#line 2635
                mul r9.xy, r1.y, c158
                mul r9.zw, r2.z, c158

#line 2619
                exp r2.z, r9.z

#line 2627
                mad r10.xy, r2.z, c104, c104.zwzw
                cmp r6.yw, r6, r10.xxzy, r9.x  // ::V<0,0>

#line 2635
                add r2.z, -r1.y, c99.x
                exp r4.w, r9.w
                mad r4.w, r4.w, c99.y, c99.z
                cmp r2.z, r2.z, r9.y, r4.w  // ::V<0>

#line 2638
                cmp r1.y, -r8_abs.z, r2.z, r1.y  // ::Transfer<0>
                cmp r1.y, -r8_abs.y, r6.w, r1.y  // ::Transfer<0>
                cmp r7.x, -r8_abs.x, r6.y, r1.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2573
        log r1.y, r1.z
        mul r2.z, r0.w, r1.y
        exp r7.y, r2.z  // ::V<0>

#line 2578
        if_eq c10.x, r0.z

#line 2638
        else

#line 2578
          mov r6.y, c167.y
          add r2.z, r6.y, c10.x

#line 2586
          add r4.w, -r1.z, -c167.y
          rsq r5.w, r1.z
          rcp r5.w, r5.w
          mul r5.w, r5.w, -c168.w  // ::Transfer<0>
          cmp r4.w, r4.w, -c167_abs.y, -c167_abs.x
          cmp r4.w, r1.z, r4.w, c125.z
          add r6.w, r1.z, c101.y
          log r6.w, r6.w
          mad r6.w, r6.w, c101.z, c101.w  // ::Transfer<0>
          cmp r4.w, r4.w, r6.w, r5.w  // ::Transfer<0>
          cmp r7.y, -r2_abs.z, r4.w, r7.y  // ::Transfer<0>

#line 2593
          if_eq c10.x, -r6.y

#line 2638
          else

#line 2593
            add r2.z, r6.x, c10.x

#line 2596
            add r4.w, -r1.z, c102.z
            mul r5.w, r1.z, c97.w
            cmp r4.w, r4.w, r5.w, -c167.y  // ::V<0>
            cmp r7.y, -r2_abs.z, r4.w, r7.y  // ::Transfer<0>

#line 2601
            if_eq c10.x, -r6.x

#line 2638
            else

#line 2601
              mov r8.x, c10.x  // ::Companding<0>
              add r2.z, r8.x, c58.x

#line 2616
              if_eq r8.x, -c58.x

#line 2610
                mul r4.w, r1.y, c131.x
                exp r4.w, r4.w
                add r5.w, r4.w, -c55.z
                max r6.y, r5.w, c125.z  // ::a<0>
                mad r4.w, r4.w, -c55.y, c55.x  // ::b<0>
                rcp r4.w, r4.w
                mul r4.w, r4.w, r6.y
                pow r5.w, r4.w, c148.w
                mul r4.w, r5.w, c131.y  // ::Transfer<0>
                cmp r7.y, -r2_abs.z, r4.w, r7.y  // ::Transfer<0>

#line 2638
              else

#line 2632
                add r8.xyz, r8.x, c166

#line 2627
                add r6.yw, r1.z, c131.xzzw

#line 2635
                mul r9, r1.zzyy, c158

#line 2619
                exp r1.y, r9.z

#line 2627
                mad r10.xy, r1.y, c104, c104.zwzw
                cmp r6.yw, r6, r10.xxzy, r9.x  // ::V<0,0>

#line 2635
                add r1.y, -r1.z, c99.x
                exp r2.z, r9.w
                mad r2.z, r2.z, c99.y, c99.z
                cmp r1.y, r1.y, r9.y, r2.z  // ::V<0>

#line 2638
                cmp r1.y, -r8_abs.z, r1.y, r1.z  // ::Transfer<0>
                cmp r1.y, -r8_abs.y, r6.w, r1.y  // ::Transfer<0>
                cmp r7.y, -r8_abs.x, r6.y, r1.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2573
        log r1.y, r1.w
        mul r0.w, r0.w, r1.y
        exp r7.z, r0.w  // ::V<0>

#line 2578
        if_eq c10.x, r0.z

#line 2638
        else

#line 2578
          mov r6.y, c167.y
          add r0.w, r6.y, c10.x

#line 2586
          add r1.z, -r1.w, -c167.y
          rsq r2.z, r1.w
          rcp r2.z, r2.z
          mul r2.z, r2.z, -c168.w  // ::Transfer<0>
          cmp r1.z, r1.z, -c167_abs.y, -c167_abs.x
          cmp r1.z, r1.w, r1.z, c125.z
          add r4.w, r1.w, c101.y
          log r4.w, r4.w
          mad r4.w, r4.w, c101.z, c101.w  // ::Transfer<0>
          cmp r1.z, r1.z, r4.w, r2.z  // ::Transfer<0>
          cmp r7.z, -r0_abs.w, r1.z, r7.z  // ::Transfer<0>

#line 2593
          if_eq c10.x, -r6.y

#line 2638
          else

#line 2593
            add r0.w, r6.x, c10.x

#line 2596
            add r1.z, -r1.w, c102.z
            mul r2.z, r1.w, c97.w
            cmp r1.z, r1.z, r2.z, -c167.y  // ::V<0>
            cmp r7.z, -r0_abs.w, r1.z, r7.z  // ::Transfer<0>

#line 2601
            if_eq c10.x, -r6.x

#line 2638
            else

#line 2601
              mov r8.x, c10.x  // ::Companding<0>
              add r0.w, r8.x, c58.x

#line 2616
              if_eq r8.x, -c58.x

#line 2610
                mul r1.z, r1.y, c131.x
                exp r1.z, r1.z
                add r2.z, r1.z, -c55.z
                max r4.w, r2.z, c125.z  // ::a<0>
                mad r1.z, r1.z, -c55.y, c55.x  // ::b<0>
                rcp r1.z, r1.z
                mul r1.z, r1.z, r4.w
                pow r2.z, r1.z, c148.w
                mul r1.z, r2.z, c131.y  // ::Transfer<0>
                cmp r7.z, -r0_abs.w, r1.z, r7.z  // ::Transfer<0>

#line 2638
              else

#line 2632
                add r8.xyz, r8.x, c166

#line 2627
                add r6.yw, r1.w, c131.xzzw

#line 2635
                mul r9.xy, r1.w, c158
                mul r1.yz, r1.y, c158.xzww

#line 2619
                exp r0.w, r1.y

#line 2627
                mad r9.zw, r0.w, c104.xyxy, c104
                cmp r6.yw, r6, r9.xzzw, r9.x  // ::V<0,0>

#line 2635
                add r0.w, -r1.w, c99.x
                exp r1.y, r1.z
                mad r1.y, r1.y, c99.y, c99.z
                cmp r0.w, r0.w, r9.y, r1.y  // ::V<0>

#line 2638
                cmp r0.w, -r8_abs.z, r0.w, r1.w  // ::Transfer<0>
                cmp r0.w, -r8_abs.y, r6.w, r0.w  // ::Transfer<0>
                cmp r7.z, -r8_abs.x, r6.y, r0.w  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 3040
      else
        if_ge c0.x, r0.y
          mov r0.w, c168.w  // ::Minimum3<152>
          mad r8, r3.xwyz, c5.x, -r0.w
          frc r9, r8
          add r8, r8, -r9
          rcp r0.y, c5.x
          mul r8, r0.y, r8
          cmp r3, -c5.x, r3.xwyz, r8  // ::input4<0,3,1,2>

#line 746
          add r8, -r3, -c167.y
          mul r1.yzw, r8.y, r8.xxzw  // ::r<0>, ::g<0>, ::b<0>

#line 2775
          add r9.xyz, r1.x, c115.yzww

#line 769
          mad r8.xzw, r8, r8.y, r3.y  // ::c<0>, ::m<0>, ::y<0>

#line 2010
          mul r10.xyz, r3.xzww, r8.y  // ::r<0>, ::g<0>, ::b<0>

#line 2033
          lrp r11.xyz, r3.xzww, -c167.y, r3.y  // ::r<0>, ::g<0>, ::b<0>

#line 2775
          cmp r3.xyz, -r9_abs.y, r10, r11  // ::TLrgb<0,1,2>
          cmp r3.xyz, -r9_abs.x, r8.xzww, r3  // ::TLrgb<0,1,2>
          cmp r1.yzw, -r0_abs.x, r1, r3.xxyz  // ::TLrgb<0,1,2>
          cmp r0.y, -r9_abs.z, -c167_abs.y, -c167_abs.x
          cmp r0.y, -r9_abs.y, c167.y, r0.y
          cmp r0.y, -r9_abs.x, c167.y, r0.y
          cmp r0.x, -r0_abs.x, c167.y, r0.y
          cmp r0.xyw, r0.x, c125.z, r1.yzzw  // ::TLrgb<0,1,2>

#line 2573
          rcp r1.y, c11.x
          log r1.z, r0.x
          mul r1.w, r1.z, r1.y
          exp r7.x, r1.w  // ::V<0>

#line 2578
          if_eq c10.x, r0.z

#line 2638
          else

#line 2578
            mov r3.y, c167.y
            add r1.w, r3.y, c10.x

#line 2586
            add r2.z, -r0.x, -c167.y
            rsq r3.x, r0.x
            rcp r3.x, r3.x
            mul r3.x, r3.x, -c168.w  // ::Transfer<0>
            cmp r2.z, r2.z, -c167_abs.y, -c167_abs.x
            cmp r2.z, r0.x, r2.z, c125.z
            add r3.z, r0.x, c101.y
            log r3.z, r3.z
            mad r3.z, r3.z, c101.z, c101.w  // ::Transfer<0>
            cmp r2.z, r2.z, r3.z, r3.x  // ::Transfer<0>
            cmp r7.x, -r1_abs.w, r2.z, r7.x  // ::Transfer<0>

#line 2593
            if_eq c10.x, -r3.y

#line 2638
            else

#line 2593
              add r1.w, r6.x, c10.x

#line 2596
              add r2.z, -r0.x, c102.z
              mul r3.x, r0.x, c97.w
              cmp r2.z, r2.z, r3.x, -c167.y  // ::V<0>
              cmp r7.x, -r1_abs.w, r2.z, r7.x  // ::Transfer<0>

#line 2601
              if_eq c10.x, -r6.x

#line 2638
              else

#line 2601
                mov r3.x, c10.x  // ::Companding<0>
                add r1.w, r3.x, c58.x

#line 2616
                if_eq r3.x, -c58.x

#line 2610
                  mul r2.z, r1.z, c131.x
                  exp r2.z, r2.z
                  add r3.y, r2.z, -c55.z
                  max r4.w, r3.y, c125.z  // ::a<0>
                  mad r2.z, r2.z, -c55.y, c55.x  // ::b<0>
                  rcp r2.z, r2.z
                  mul r2.z, r2.z, r4.w
                  pow r3.y, r2.z, c148.w
                  mul r2.z, r3.y, c131.y  // ::Transfer<0>
                  cmp r7.x, -r1_abs.w, r2.z, r7.x  // ::Transfer<0>

#line 2638
                else

#line 2632
                  add r3.xyz, r3.x, c166

#line 2627
                  add r6.yw, r0.x, c131.xzzw

#line 2635
                  mul r8.xy, r0.x, c158
                  mul r1.zw, r1.z, c158

#line 2619
                  exp r1.z, r1.z

#line 2627
                  mad r8.zw, r1.z, c104.xyxy, c104
                  cmp r6.yw, r6, r8.xzzw, r8.x  // ::V<0,0>

#line 2635
                  add r1.z, -r0.x, c99.x
                  exp r1.w, r1.w
                  mad r1.w, r1.w, c99.y, c99.z
                  cmp r1.z, r1.z, r8.y, r1.w  // ::V<0>

#line 2638
                  cmp r0.x, -r3_abs.z, r1.z, r0.x  // ::Transfer<0>
                  cmp r0.x, -r3_abs.y, r6.w, r0.x  // ::Transfer<0>
                  cmp r7.x, -r3_abs.x, r6.y, r0.x  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2573
          log r0.x, r0.y
          mul r1.z, r0.x, r1.y
          exp r7.y, r1.z  // ::V<0>

#line 2578
          if_eq c10.x, r0.z

#line 2638
          else

#line 2578
            mov r3.y, c167.y
            add r1.z, r3.y, c10.x

#line 2586
            add r1.w, -r0.y, -c167.y
            rsq r2.z, r0.y
            rcp r2.z, r2.z
            mul r2.z, r2.z, -c168.w  // ::Transfer<0>
            cmp r1.w, r1.w, -c167_abs.y, -c167_abs.x
            cmp r1.w, r0.y, r1.w, c125.z
            add r3.x, r0.y, c101.y
            log r3.x, r3.x
            mad r3.x, r3.x, c101.z, c101.w  // ::Transfer<0>
            cmp r1.w, r1.w, r3.x, r2.z  // ::Transfer<0>
            cmp r7.y, -r1_abs.z, r1.w, r7.y  // ::Transfer<0>

#line 2593
            if_eq c10.x, -r3.y

#line 2638
            else

#line 2593
              add r1.z, r6.x, c10.x

#line 2596
              add r1.w, -r0.y, c102.z
              mul r2.z, r0.y, c97.w
              cmp r1.w, r1.w, r2.z, -c167.y  // ::V<0>
              cmp r7.y, -r1_abs.z, r1.w, r7.y  // ::Transfer<0>

#line 2601
              if_eq c10.x, -r6.x

#line 2638
              else

#line 2601
                mov r3.x, c10.x  // ::Companding<0>
                add r1.z, r3.x, c58.x

#line 2616
                if_eq r3.x, -c58.x

#line 2610
                  mul r1.w, r0.x, c131.x
                  exp r1.w, r1.w
                  add r2.z, r1.w, -c55.z
                  max r3.y, r2.z, c125.z  // ::a<0>
                  mad r1.w, r1.w, -c55.y, c55.x  // ::b<0>
                  rcp r1.w, r1.w
                  mul r1.w, r1.w, r3.y
                  pow r2.z, r1.w, c148.w
                  mul r1.w, r2.z, c131.y  // ::Transfer<0>
                  cmp r7.y, -r1_abs.z, r1.w, r7.y  // ::Transfer<0>

#line 2638
                else

#line 2632
                  add r3.xyz, r3.x, c166

#line 2627
                  add r1.zw, r0.y, c131

#line 2635
                  mul r6.yw, r0.y, c158.xxzy
                  mul r8.xy, r0.x, c158.zwzw

#line 2619
                  exp r0.x, r8.x

#line 2627
                  mad r8.xz, r0.x, c104.xyyw, c104.zyww
                  cmp r1.zw, r1, r8.xyxz, r6.y  // ::V<0,0>

#line 2635
                  add r0.x, -r0.y, c99.x
                  exp r2.z, r8.y
                  mad r2.z, r2.z, c99.y, c99.z
                  cmp r0.x, r0.x, r6.w, r2.z  // ::V<0>

#line 2638
                  cmp r0.x, -r3_abs.z, r0.x, r0.y  // ::Transfer<0>
                  cmp r0.x, -r3_abs.y, r1.w, r0.x  // ::Transfer<0>
                  cmp r7.y, -r3_abs.x, r1.z, r0.x  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2573
          log r0.x, r0.w
          mul r0.y, r0.x, r1.y
          exp r7.z, r0.y  // ::V<0>

#line 2578
          if_eq c10.x, r0.z

#line 2638
          else

#line 2578
            mov r0.y, c167.y
            add r1.y, r0.y, c10.x

#line 2586
            add r1.z, -r0.w, -c167.y
            rsq r1.w, r0.w
            rcp r1.w, r1.w
            mul r1.w, r1.w, -c168.w  // ::Transfer<0>
            cmp r1.z, r1.z, -c167_abs.y, -c167_abs.x
            cmp r1.z, r0.w, r1.z, c125.z
            add r2.z, r0.w, c101.y
            log r2.z, r2.z
            mad r2.z, r2.z, c101.z, c101.w  // ::Transfer<0>
            cmp r1.z, r1.z, r2.z, r1.w  // ::Transfer<0>
            cmp r7.z, -r1_abs.y, r1.z, r7.z  // ::Transfer<0>

#line 2593
            if_eq c10.x, -r0.y

#line 2638
            else

#line 2593
              add r0.y, r6.x, c10.x

#line 2596
              add r1.y, -r0.w, c102.z
              mul r1.z, r0.w, c97.w
              cmp r1.y, r1.y, r1.z, -c167.y  // ::V<0>
              cmp r7.z, -r0_abs.y, r1.y, r7.z  // ::Transfer<0>

#line 2601
              if_eq c10.x, -r6.x

#line 2638
              else

#line 2601
                mov r3.x, c10.x  // ::Companding<0>
                add r0.y, r3.x, c58.x

#line 2616
                if_eq r3.x, -c58.x

#line 2610
                  mul r1.y, r0.x, c131.x
                  exp r1.y, r1.y
                  add r1.z, r1.y, -c55.z
                  max r2.z, r1.z, c125.z  // ::a<0>
                  mad r1.y, r1.y, -c55.y, c55.x  // ::b<0>
                  rcp r1.y, r1.y
                  mul r1.y, r1.y, r2.z
                  pow r2.z, r1.y, c148.w
                  mul r1.y, r2.z, c131.y  // ::Transfer<0>
                  cmp r7.z, -r0_abs.y, r1.y, r7.z  // ::Transfer<0>

#line 2638
                else

#line 2632
                  add r1.yzw, r3.x, c166.xxyz

#line 2627
                  add r3.xy, r0.w, c131.zwzw

#line 2635
                  mul r3.zw, r0.w, c158.xyxy
                  mul r0.xy, r0.x, c158.zwzw

#line 2619
                  exp r0.x, r0.x

#line 2627
                  mad r6.yw, r0.x, c104.xxzy, c104.xzzw
                  cmp r3.xy, r3, r6.ywzw, r3.z  // ::V<0,0>

#line 2635
                  add r0.x, -r0.w, c99.x
                  exp r0.y, r0.y
                  mad r0.y, r0.y, c99.y, c99.z
                  cmp r0.x, r0.x, r3.w, r0.y  // ::V<0>

#line 2638
                  cmp r0.x, -r1_abs.w, r0.x, r0.w  // ::Transfer<0>
                  cmp r0.x, -r1_abs.z, r3.y, r0.x  // ::Transfer<0>
                  cmp r7.z, -r1_abs.y, r3.x, r0.x  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 3048
        else

#line 3052
          mov r0.w, c168.w  // ::Minimum3<152>
          mad r0.xyw, r2.ywzx, c5.x, -r0.w
          frc r1.yzw, r0.xxyw
          add r0.xyw, r0, -r1.yzzw
          rcp r1.y, c5.x
          mul r0.xyw, r0, r1.y
          cmp r0.xyw, -c5.x, r2.ywzx, r0  // ::input3<0,1,2>

#line 406
          lrp r2.z, r0.x, r5.x, r4.x  // ::ConvertRange<0>
          lrp r3.y, r0.y, r5.y, r4.y  // ::ConvertRange<0>
          add r0.x, -r4.z, r5.z
          mul r0.x, r0.x, r0.w
          lrp r8.y, r0.w, r5.z, r4.z  // ::ConvertRange<0>

#line 2714
          if_eq c0.x, r0.z

#line 1997
            mul r0.y, r3.y, c156.w
            mad r5.x, r2.z, c157.w, r0.y  // ::RCA_Lrgb<0>
            mul r0.yw, r8.y, c136.xzzw
            mad r5.z, r3.y, c157.w, r0.y  // ::RCA_Lrgb<1>
            mad r5.y, r2.z, c156.w, r0.w  // ::RCA_Lrgb<2>

#line 2714
            mov r0.y, -c167.y
          else
            if_eq c0.x, -r6.x

#line 2076
              mul r0.w, r8.y, c156.w
              mad r5.x, r2.z, c157.w, r0.w  // ::RGV_Lrgb<0>
              mul r1.yz, r3.y, c136.xwzw
              mad r5.z, r2.z, c156.w, r1.y  // ::RGV_Lrgb<1>
              mad r5.y, r8.y, c157.w, r1.z  // ::RGV_Lrgb<2>

#line 2715
              mov r0.y, -c167.y
            else
              if_eq r1.x, -c58.x

#line 2088
                min r0.w, r8.y, r3.y
                min r1.y, r0.w, r2.z  // ::white<0>
                add r0.w, -r1.y, r2.z  // ::r<0>
                add r1.z, -r1.y, r3.y  // ::y<0>
                add r1.w, -r1.y, r8.y  // ::b<0>
                max r2.w, r1.z, r1.w
                max r3.w, r0.w, r2.w  // ::mY<0>
                min r9.z, r1.w, r1.z  // ::g<0>
                add r1.z, r1.z, -r9.z  // ::y<0>

#line 2099
                add r9.y, r1.w, -r9.z  // ::b<0>

#line 2105
                cmp r1.w, -r9.z, -c167_abs.x, -c167_abs.y
                cmp r1.w, -r9.y, c125.z, r1.w
                mul r4.xy, r9.yzzw, -c45.x
                cmp r9.yz, r1.w, r9, r4.xxyw  // ::b<0>, ::g<0>
                add r9.x, r0.w, r1.z  // ::r<0>
                add r9.w, r1.z, r9.z  // ::g<0>
                max r0.w, r9.w, r9.y
                max r1.z, r9.x, r0.w  // ::mG<0>

#line 2114
                rcp r0.w, r1.z
                mul r0.w, r0.w, r3.w  // ::mN<0>

#line 2118
                mul r4.xyw, r0.w, r9.xwzy  // ::r<0>, ::g<0>, ::b<0>
                cmp r4.xyw, -r1.z, r9.xwzy, r4  // ::r<0>, ::g<0>, ::b<0>

#line 2123
                add r1.yzw, r1.y, r4.xxyw  // ::r<0>, ::g<0>, ::b<0>
                frc r4.xyw, r1.yzzw
                add r1.yzw, r1, -r4.xxyw
                mul r5.xyz, r1.ywzw, c73.w  // ::RYB_Lrgb<0,2,1>

#line 2716
                mov r0.y, -c167.y
              else
                if_eq r1.x, -c60.x

#line 733
                  add r5.x, -r2.z, -c167.y  // ::CMY_Lrgb<0>
                  add r5.z, -r3.y, -c167.y  // ::CMY_Lrgb<1>
                  add r5.y, -r8.y, -c167.y  // ::CMY_Lrgb<2>

#line 2717
                  mov r0.y, -c167.y
                else
                  if_eq r1.x, -c100.x

#line 783
                    mul r0.w, r3.y, c103.w  // ::c<0>
                    mul r1.yzw, r8.y, c103.w  // ::g<0,0,0>

#line 791
                    if_eq r0.w, c125.z

#line 840
                      mov r5.xyz, r1.ywzw  // ::HCV_Lrgb<0,2,1>
                    else

#line 783
                      mul r1.y, r2.z, c74.w  // ::h<0>

#line 791
                      cmp r1.z, r2.z, c84.y, c84.z
                      mul r1.y, r1.z, r1.y
                      frc r1.y, r1.y
                      mul r1.y, r1.y, r1.z
                      mul r1.z, r1.y, -c105.x  // ::hi<0>
                      cmp r1.y, r1.y, c84.y, c84.z
                      mul r2.w, r1.y, r1.z
                      frc r2.w, r2.w
                      mul r9.x, r1.y, r2.w  // ::v<0>

#line 796
                      frc r3.w, r1.z
                      add r1.z, r1.z, -r3.w  // ::fhi<0>

#line 822
                      add r10, r1.z, c175

#line 833
                      mov r9.yz, c167_abs.xxyw
                      mad r9.w, r1.y, -r2.w, -c167.y
                      cmp r4.xyw, -r10_abs.w, r9.xyzz, r9.zyzw  // ::pure<0,1,2>
                      mad r11.xyz, r9.xzyw, c84.zyyw, c84.ywww
                      cmp r4.xyw, -r10_abs.z, r11.zxzy, r4  // ::pure<0,1,2>
                      cmp r4.xyw, -r10_abs.y, r9.yzzx, r4  // ::pure<0,1,2>
                      cmp r4.xyw, -r10_abs.x, r11.xyzz, r4  // ::pure<0,1,2>
                      cmp r4.xyw, -r1_abs.z, r9.zxzy, r4  // ::pure<0,1,2>

#line 839
                      lrp r5.xyz, r0.w, r4.xwyw, r1.w  // ::result<0,2,1>
                    endif

#line 2718
                    mov r0.y, -c167.y
                  else
                    if_eq r1.x, -c105.x

#line 875
                      cmp r1.yz, r2.z, c79.xxyw, c79.xzww
                      mul r0.w, r1.z, r2.z
                      frc r0.w, r0.w
                      mad r1.y, r1.y, r0.w, c169.z
                      mul r0.w, r0.w, c169.z
                      cmp r0.w, r2.z, r0.w, r1.y
                      mul r1.y, r3.y, c103.w  // ::s<0>
                      mul r1.z, r8.y, c73.w  // ::i<0>

#line 882
                      if_lt r0.w, c72.w
                        mad r1.w, r3.y, -c176.x, c176.y
                        mul r5.y, r1.w, r1.z  // ::b<0>
                        mad r1.w, r0.w, c176.z, c176.w
                        frc r1.w, r1.w
                        mad r1.w, r1.w, c81.x, c81.y
                        sincos r9.x, r1.w
                        mul r1.w, r1.y, r9.x
                        mad r2.w, r0.w, -c81.z, c81.w
                        mad r2.w, r2.w, c116.x, c116.y
                        frc r2.w, r2.w
                        mad r2.w, r2.w, c81.x, c81.y
                        sincos r10.x, r2.w
                        rcp r2.w, r10.x
                        mad r1.w, r1.w, r2.w, -c167.y
                        mul r5.x, r1.w, r1.z  // ::r<0>
                        mad r1.w, r9.x, -r2.w, -c167.y
                        mad r1.w, r1.y, r1.w, -c167.y
                        mul r5.z, r1.w, r1.z  // ::g<0>
                      else
                        if_lt r0.w, c171.y
                          mad r1.w, r0.w, c116.z, c116.w  // ::h<0>
                          mad r2.w, r3.y, -c176.x, c176.y
                          mul r5.x, r1.z, r2.w  // ::r<0>
                          mad r2.w, r1.w, c116.x, c116.y
                          frc r2.w, r2.w
                          mad r2.w, r2.w, c81.x, c81.y
                          sincos r9.x, r2.w
                          mul r2.w, r1.y, r9.x
                          add r1.w, -r1.w, c81.w
                          mad r1.w, r1.w, c116.x, c116.y
                          frc r1.w, r1.w
                          mad r1.w, r1.w, c81.x, c81.y
                          sincos r10.x, r1.w
                          rcp r1.w, r10.x
                          mad r2.w, r2.w, r1.w, -c167.y
                          mul r5.z, r1.z, r2.w  // ::g<0>

#line 893
                          mad r1.w, r9.x, -r1.w, -c167.y
                          mad r1.w, r1.y, r1.w, -c167.y
                          mul r5.y, r1.w, r1.z  // ::b<0>
                        else

#line 897
                          mad r0.w, r0.w, c117.x, c117.y  // ::h<0>
                          mad r1.w, r3.y, -c176.x, c176.y
                          mul r5.z, r1.w, r1.z  // ::g<0>
                          mad r1.w, r0.w, c116.x, c116.y
                          frc r1.w, r1.w
                          mad r1.w, r1.w, c81.x, c81.y
                          sincos r9.x, r1.w
                          mul r1.w, r1.y, r9.x
                          add r0.w, -r0.w, c81.w
                          mad r0.w, r0.w, c116.x, c116.y
                          frc r0.w, r0.w
                          mad r0.w, r0.w, c81.x, c81.y
                          sincos r10.x, r0.w
                          rcp r0.w, r10.x
                          mad r1.w, r1.w, r0.w, -c167.y
                          mul r5.y, r1.w, r1.z  // ::b<0>
                          mad r0.w, r9.x, -r0.w, -c167.y
                          mad r0.w, r1.y, r0.w, -c167.y
                          mul r5.x, r0.w, r1.z  // ::r<0>
                        endif
                      endif

#line 2719
                      mov r0.y, -c167.y
                    else
                      if_eq r1.x, -c118.z

#line 1895
                        if_lt c169.w, r8.y

#line 1903
                          mad r5.xyz, r2.z, c153.xyxw, c153.zxxw
                        else

#line 1895
                          add r0.w, r8.y, c117.z

#line 1898
                          if_lt r8.y, c117.w
                            cmp r2.xy, r0.w, c169.wyzw, c169.y  // ::HPLuv_Lrgb<0,1>

#line 1903
                            mov r5.xyz, r2.xzyw  // ::HPLuv_Lrgb<0,2,1>
                          else

#line 464
                            add r0.w, r8.y, c168.z
                            mul r1.y, r0.w, r0.w
                            mul r1.z, r0.w, r1.y
                            mul r1.z, r1.z, c82.x  // ::s1<0>
                            mad r1.y, r0.w, -r1.y, c82.y

#line 1828
                            mul r9, r8.y, c86

#line 465
                            cmp r1.y, r1.y, r9.x, r1.z  // ::s2<0>

#line 450
                            mul r1.z, r8.y, r1.y
                            mul r1.w, r1.z, c82.z  // ::y<0>
                            mul r4.xy, r1.y, c83  // ::x<0>, ::z<0>
                            rcp r2.w, r4.y
                            mul r3.w, r2.w, r4.x  // ::GetBounds2<0>
                            mul r1.w, r1.w, r2.w  // ::GetBounds2<1>

#line 481
                            rcp r4.y, r3.w

#line 444
                            mad r2.w, r4.x, -r2.w, -r4.y
                            rcp r2.w, r2.w
                            mul r2.w, r1.w, r2.w  // ::GetIntersection<0>

#line 482
                            mad r1.w, r2.w, r3.w, r1.w  // GetDistance::input<1>

#line 439
                            mul r1.w, r1.w, r1.w
                            mad r1.w, r2.w, r2.w, r1.w
                            rsq r1.w, r1.w
                            rcp r1.w, r1.w  // ::GetDistance<0>

#line 484
                            min r2.w, r1.w, c82.w  // ::GetChroma1a<0>

#line 450
                            mad r1.z, r1.z, c82.z, -r9.y  // ::y<0>
                            mad r1.y, r1.y, c83.y, c83.z  // ::z<0>
                            rcp r1.y, r1.y
                            mul r1.w, r1.y, r4.x  // ::GetBounds2<0>
                            mul r1.z, r1.y, r1.z  // ::GetBounds2<1>

#line 481
                            rcp r3.w, r1.w

#line 444
                            mad r1.y, r4.x, -r1.y, -r3.w
                            rcp r1.y, r1.y
                            mul r1.y, r1.y, r1.z  // ::GetIntersection<0>

#line 482
                            mad r1.z, r1.y, r1.w, r1.z  // GetDistance::input<1>

#line 439
                            mul r1.z, r1.z, r1.z
                            mad r1.y, r1.y, r1.y, r1.z
                            rsq r1.y, r1.y
                            rcp r1.y, r1.y  // ::GetDistance<0>

#line 484
                            min r3.w, r1.y, r2.w  // ::GetChroma1a<0>

#line 1899
                            mul r1.y, r3.y, r3.w
                            mul r1.y, r1.y, c103.w  // ::C<0>

#line 667
                            mad r1.z, r2.z, c85.x, c85.y
                            frc r1.z, r1.z
                            mad r1.z, r1.z, c81.x, c81.y
                            sincos r10.xy, r1.z
                            mul r1.yz, r1.y, r10.xxyw  // ::a<0>, ::b<0>

#line 586
                            abs r1.w, c13.x

#line 590
                            rcp r2.w, c13.x
                            mul r10.x, r2.w, c12.x  // ::xyY_XYZ<0>
                            mov r4.x, c13.x  // ::WhiteY<0>
                            add r3.w, -r4.x, -c12.x
                            add r3.w, r3.w, -c167.y
                            mul r10.z, r2.w, r3.w  // ::xyY_XYZ<2>
                            mov r10.y, -c167.y
                            cmp r4.xyw, -r1.w, c128.z, r10.xyzz  // ::xyY_XYZ<0,1,2>

#line 649
                            cmp r1.w, -r1.w, c146.y, c146.w
                            add r1.w, r1.w, r4.x
                            mul r2.w, r4.x, -c60.x
                            mad r1.w, r4.w, -c58.x, r1.w
                            rcp r1.w, r1.w
                            mul r2.w, r1.w, r2.w  // ::ComputeKu<0>

#line 654
                            mul r1.w, r4.y, r1.w
                            mul r1.w, r1.w, -c45.z  // ::ComputeKv<0>

#line 1826
                            add r3.w, -r8.y, c83.w
                            mul r0.w, r0.w, c85.z
                            mul r4.x, r0.w, r0.w
                            mul r0.w, r0.w, r4.x
                            cmp r0.w, r3.w, r9.x, r0.w  // ::Y<0>
                            mad r1.y, r9.w, r2.w, r1.y
                            rcp r1.y, r1.y
                            mad r1.y, r9.z, r1.y, c167.y
                            mul r1.y, r1.y, c63.w  // ::a<0>
                            mul r2.w, r0.w, c100.x  // ::b<0>
                            mul r3.w, r8.y, -c37.w
                            mad r1.z, r9.w, r1.w, r1.z
                            rcp r1.z, r1.z
                            mad r1.z, r3.w, r1.z, c100.x
                            mad r1.z, r0.w, r1.z, -r2.w
                            rcp r1.w, r1.y
                            mul r1.z, r1.w, r1.z  // ::X<0>
                            mad r1.y, r1.z, r1.y, r2.w  // ::Z<0>

#line 1837
                            max r2.w, r1.z, c125.z  // ::X<0>

#line 1840
                            max r1.z, r0.w, c125.z  // ::Y<0>

#line 1843
                            max r0.w, r1.y, c125.z  // ::Z<0>

#line 548
                            mul r1.yzw, r1.z, c24.xxyz
                            mad r1.yzw, r2.w, c23.xxyz, r1
                            mad r5.xyz, r0.w, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 1903
                          endif
                        endif

#line 2720
                        mov r0.y, -c167.y
                      else
                        if_eq r1.x, -c59.z

#line 928
                          mul r0.w, r3.y, c103.w  // ::_s<0>
                          mul r9.y, r8.y, c103.w  // ::_b<0>

#line 931
                          add r1.y, -r2.z, c85.w

#line 943
                          mul r1.z, r2.z, c153.w
                          cmp r1.y, r1.y, r1.z, c133.x  // ::SectorPosition<0>
                          frc r1.z, r1.y
                          add r1.z, -r1.z, r1.y  // ::SectorNumber<0>

#line 947
                          add r1.y, -r1.z, r1.y  // ::FractionalSector<0>

#line 950
                          mad r1.w, r3.y, -c176.x, c176.y
                          mul r9.z, r1.w, r9.y  // ::p<0>
                          mad r1.w, r0.w, -r1.y, -c167.y
                          add r1.y, -r1.y, -c167.y
                          mad r1.y, r0.w, -r1.y, -c167.y
                          mul r9.xw, r1.yyzw, r9.y  // ::t<0>, ::q<0>

#line 979
                          add r10, r1.z, c175

#line 985
                          add r1.y, r1.z, c100.x

#line 990
                          cmp r4.xyw, -r1_abs.y, r9.yzzw, c125.z  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r10_abs.w, r9.xzzy, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r10_abs.z, r9.zwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r10_abs.y, r9.zyzx, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r10_abs.x, r9.wyzz, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r1.yzw, -r1_abs.z, r9.xyxz, r4.xxyw  // ::r<0>, ::g<0>, ::b<0>
                          cmp r5.xyz, -r0_abs.w, r9.y, r1.ywzw  // ::r<0>, ::b<0>, ::g<0>

#line 2721
                          mov r0.y, -c167.y
                        else
                          add r0.w, r6.z, c0.x
                          cmp r0.y, -r0_abs.w, c167_abs.y, c167_abs.x
                          if_eq c0.x, -r6.z

#line 1037
                            mul r5.xyz, r8.y, c103.w  // ::l<0,0,0>

#line 1044
                            if_lt -r3.y, c125.z

#line 1037
                              mul r0.w, r3.y, c103.w  // ::s<0>
                              min r1.y, r2.z, c85.w  // ::h<0>
                              mul r1.z, r1.y, c153.w  // ::h<0>

#line 1046
                              mad r1.w, r8.y, c133.y, c133.z
                              add r1.w, -r1_abs.w, -c167.y
                              mul r9.x, r0.w, r1.w  // ::chroma<0>
                              cmp r4.xy, r1.y, c173, c173.zwzw
                              mul r0.w, r1.z, r4.y
                              frc r0.w, r0.w
                              mad r0.w, r4.x, r0.w, c167.y
                              add r0.w, -r0_abs.w, -c167.y
                              mul r9.y, r0.w, r9.x  // ::v<0>

#line 1067
                              add r10, -r1.y, c129

#line 1073
                              add r11, r1.y, -c129.wzyx

#line 1079
                              add r0.w, r1.y, c133.w
                              add r1.zw, -r1.y, c130.xyxy

#line 1084
                              cmp r1.zw, r1, -c167_abs.y, -c167_abs.x
                              cmp r0.w, r0.w, r1.z, c125.z
                              mov r9.z, c125.z
                              cmp r4.xyw, r0.w, c125.z, r9.xzzy  // ::result<0,1,2>
                              cmp r0.w, r11.w, r1.w, c125.z
                              cmp r4.xyw, r0.w, r4, r9.yzzx  // ::result<0,1,2>
                              cmp r10, r10, -c167_abs.y, -c167_abs.x
                              cmp r6.yzw, r11.xzyx, r10.xxyz, c125.z
                              cmp r4.xyw, r6.y, r4, r9.zyzx  // ::result<0,1,2>
                              cmp r4.xyw, r6.z, r4, r9.zxzy  // ::result<0,1,2>
                              cmp r4.xyw, r6.w, r4, r9.yxzz  // ::result<0,1,2>
                              cmp r0.w, r1.y, r10.w, c125.z
                              cmp r1.yzw, r0.w, r4.xxyw, r9.xxyz  // ::result<0,1,2>
                              mad r0.w, r9.x, c168.w, r5.y  // ::w<0>

#line 1089
                              add r5.xyz, r0.w, r1.ywzw  // ::result<0,2,1>

#line 1094
                            endif

#line 2722
                          else
                            mov r5.xyz, c125.z
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r0.y, -r0.y

#line 2767
          else

#line 2724
            if_eq r1.x, c168.x

#line 1940
              if_lt c169.w, r8.y

#line 1948
                mad r5.xyz, r2.z, c153.xyxw, c153.zxxw
              else

#line 1940
                add r0.y, r8.y, c117.z

#line 1943
                if_lt r8.y, c117.w
                  cmp r5.xz, r0.y, c169.wyyw, c169.y  // ::HSLuv_Lrgb<0,1>

#line 1948
                  mov r5.y, r2.z
                else

#line 464
                  add r0.y, r8.y, c168.z
                  mul r0.w, r0.y, r0.y
                  mul r1.y, r0.w, r0.y
                  mul r1.y, r1.y, c82.x  // ::s1<0>
                  mad r0.w, r0.y, -r0.w, c82.y

#line 1828
                  mul r9, r8.y, c86

#line 465
                  cmp r0.w, r0.w, r9.x, r1.y  // ::s2<0>

#line 450
                  mul r1.y, r8.y, r0.w
                  mul r1.z, r1.y, c82.z  // ::y<0>
                  mul r10, r0.w, c159  // ::x<0>, ::z<0>, ::x<0>, ::z<0>
                  rcp r1.w, r10.y
                  mul r2.w, r1.w, r10.x  // ::GetBounds2<0>
                  mul r1.z, r1.w, r1.z  // ::GetBounds2<1>
                  mad r1.y, r1.y, c82.z, -r9.y  // ::y<0>
                  mad r4.xy, r0.w, c177, c177.z  // ::z<0,0>
                  rcp r1.w, r4.x
                  mul r3.w, r1.w, r10.x  // ::GetBounds2<0>
                  mul r1.y, r1.w, r1.y  // ::GetBounds2<1>
                  mul r1.w, r0.w, r9.y  // ::y<0>
                  rcp r4.x, r10.w
                  mul r4.w, r4.x, r10.z  // ::GetBounds2<0>
                  mul r4.x, r1.w, r4.x  // ::GetBounds2<1>
                  mad r5.w, r9.y, r0.w, -r9.y  // ::y<0>
                  rcp r4.y, r4.y
                  mul r6.y, r4.y, r10.z  // ::GetBounds2<0>
                  mul r4.y, r4.y, r5.w  // ::GetBounds2<1>
                  mul r6.zw, r0.w, c130  // ::x<0>, ::z<0>
                  rcp r6.w, r6.w
                  mul r7.w, r6.w, r6.z  // ::GetBounds2<0>
                  mul r1.w, r1.w, r6.w  // ::GetBounds2<1>
                  mad r0.w, r0.w, c177.w, c177.z  // ::z<0>
                  rcp r0.w, r0.w
                  mul r6.z, r0.w, r6.z  // ::GetBounds2<0>
                  mul r0.w, r0.w, r5.w  // ::GetBounds2<1>

#line 667
                  mad r10.xy, r2.z, c137, c137.z
                  frc r10.xy, r10
                  mad r10.xy, r10, c81.x, c81.y

#line 498
                  sincos r11.xy, r10.x
                  mad r2.w, r2.w, -r11.x, r11.y
                  rcp r2.w, r2.w
                  mul r1.z, r1.z, r2.w  // ::length<0>
                  min r2.w, r1.z, c82.w  // GetChroma2a::result<0>
                  cmp r1.z, r1.z, r2.w, c82.w  // GetChroma2a::result<0>
                  mad r2.w, r3.w, -r11.x, r11.y
                  rcp r2.w, r2.w
                  mul r1.y, r1.y, r2.w  // ::length<0>
                  min r2.w, r1.y, r1.z  // GetChroma2a::result<0>
                  cmp r1.y, r1.y, r2.w, r1.z  // GetChroma2a::result<0>
                  mad r1.z, r4.w, -r11.x, r11.y
                  rcp r1.z, r1.z
                  mul r1.z, r1.z, r4.x  // ::length<0>
                  min r2.w, r1.z, r1.y  // GetChroma2a::result<0>
                  cmp r1.y, r1.z, r2.w, r1.y  // GetChroma2a::result<0>
                  mad r1.z, r6.y, -r11.x, r11.y
                  rcp r1.z, r1.z
                  mul r1.z, r1.z, r4.y  // ::length<0>
                  min r2.w, r1.z, r1.y  // GetChroma2a::result<0>
                  cmp r1.y, r1.z, r2.w, r1.y  // GetChroma2a::result<0>
                  mad r1.z, r7.w, -r11.x, r11.y
                  rcp r1.z, r1.z
                  mul r1.z, r1.z, r1.w  // ::length<0>
                  min r2.w, r1.z, r1.y  // GetChroma2a::result<0>
                  cmp r1.y, r1.z, r2.w, r1.y  // GetChroma2a::result<0>
                  mad r1.z, r6.z, -r11.x, r11.y
                  rcp r1.z, r1.z
                  mul r0.w, r0.w, r1.z  // ::length<0>
                  min r2.w, r0.w, r1.y  // GetChroma2a::result<0>
                  cmp r0.w, r0.w, r2.w, r1.y  // GetChroma2a::result<0>

#line 1944
                  mul r0.w, r3.y, r0.w
                  mul r0.w, r0.w, c103.w  // ::C<0>

#line 667
                  sincos r11.xy, r10.y
                  mul r1.yz, r0.w, r11.xxyw  // ::a<0>, ::b<0>

#line 586
                  abs r0.w, c13.x

#line 590
                  rcp r1.w, c13.x
                  mul r10.x, r1.w, c12.x  // ::xyY_XYZ<0>
                  mov r4.x, c13.x  // ::WhiteY<0>
                  add r2.w, -r4.x, -c12.x
                  add r2.w, r2.w, -c167.y
                  mul r10.z, r1.w, r2.w  // ::xyY_XYZ<2>
                  mov r10.y, -c167.y
                  cmp r4.xyw, -r0.w, c128.z, r10.xyzz  // ::xyY_XYZ<0,1,2>

#line 649
                  cmp r0.w, -r0.w, c146.y, c146.w
                  add r0.w, r0.w, r4.x
                  mul r1.w, r4.x, -c60.x
                  mad r0.w, r4.w, -c58.x, r0.w
                  rcp r0.w, r0.w
                  mul r1.w, r0.w, r1.w  // ::ComputeKu<0>

#line 654
                  mul r0.w, r4.y, r0.w
                  mul r0.w, r0.w, -c45.z  // ::ComputeKv<0>

#line 1826
                  add r2.w, -r8.y, c83.w
                  mul r0.y, r0.y, c85.z
                  mul r3.w, r0.y, r0.y
                  mul r0.y, r0.y, r3.w
                  cmp r0.y, r2.w, r9.x, r0.y  // ::Y<0>
                  mad r1.y, r9.w, r1.w, r1.y
                  rcp r1.y, r1.y
                  mad r1.y, r9.z, r1.y, c167.y
                  mul r1.y, r1.y, c63.w  // ::a<0>
                  mul r1.w, r0.y, c100.x  // ::b<0>
                  mul r2.w, r8.y, -c37.w
                  mad r0.w, r9.w, r0.w, r1.z
                  rcp r0.w, r0.w
                  mad r0.w, r2.w, r0.w, c100.x
                  mad r0.w, r0.y, r0.w, -r1.w
                  rcp r1.z, r1.y
                  mul r0.w, r0.w, r1.z  // ::X<0>
                  mad r1.y, r0.w, r1.y, r1.w  // ::Z<0>

#line 1837
                  max r1.z, r0.w, c125.z  // ::X<0>

#line 1840
                  max r1.w, r0.y, c125.z  // ::Y<0>

#line 1843
                  max r0.y, r1.y, c125.z  // ::Z<0>

#line 548
                  mul r4.xyw, r1.w, c24.xyzz
                  mad r1.yzw, r1.z, c23.xxyz, r4.xxyw
                  mad r5.xyz, r0.y, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 1948
                endif
              endif

#line 2724
              mov r0.y, -c167.y
            else
              if_eq r1.x, -c60.z

#line 1134
                mad r0.w, r2.z, c85.x, c85.y
                frc r0.w, r0.w
                mad r0.w, r0.w, c81.x, c81.y
                sincos r9.x, r0.w  // ::h<0>
                mul r0.w, r3.y, r9.x

#line 1138
                mul r1.y, r0.w, c137.w  // ::j<0>

#line 1146
                mul r5.xz, r8.y, c154.xyyw  // ::m<0>
                mad r0.w, r0.w, c137.w, r5.z
                mad r0.w, r8.y, -c154.z, r0.w
                mul r5.z, r0.w, c78.y  // ::g<0>
                mad r0.w, r8.y, c154.w, -r1.y
                mul r5.y, r0.w, -c168.w  // ::b<0>

#line 2725
                mov r0.y, -c167.y
              else
                if_eq r1.x, -c100.z

#line 1211
                  mad r0.w, r3.y, -c176.x, c176.y  // ::minOverMax<0>
                  if_lt -r0.w, c125.z

#line 1216
                    if_lt r2.z, c80.w
                      mul r1.y, r2.z, c153.w  // ::h<0>
                      rcp r1.z, r0.w
                      lrp r2.w, r1.y, r1.z, -c167.y  // ::part<0>
                      mul r1.w, r1.z, r1.z
                      mul r2.w, r2.w, r2.w
                      mul r2.w, r2.w, c119.w
                      mad r1.w, r1.w, c119.z, r2.w
                      add r1.w, r1.w, c65.x
                      rsq r1.w, r1.w
                      mul r9.z, r1.w, r8.y  // ::b<0>
                      mul r9.x, r1.z, r9.z  // ::r<0>
                      mad r1.z, r9.z, r1.z, -r9.z
                      mad r9.y, r1.y, r1.z, r9.z  // ::g<0>
                    else
                      if_lt r2.z, c72.w

#line 1227
                        mad r1.y, r2.z, -c121.x, c121.y
                        mul r1.y, r1.y, -c105.x  // ::h<0>
                        rcp r1.z, r0.w
                        lrp r2.w, r1.y, r1.z, -c167.y  // ::part<0>
                        mul r1.w, r1.z, r1.z
                        mul r2.w, r2.w, r2.w
                        mul r2.w, r2.w, c119.z
                        mad r1.w, r1.w, c119.w, r2.w
                        add r1.w, r1.w, c65.x
                        rsq r1.w, r1.w
                        mul r9.z, r1.w, r8.y  // ::b<0>
                        mul r9.y, r1.z, r9.z  // ::g<0>
                        mad r1.z, r9.z, r1.z, -r9.z
                        mad r9.x, r1.y, r1.z, r9.z  // ::r<0>
                      else
                        if_lt r2.z, c121.z
                          mad r1.y, r2.z, c121.x, c121.w
                          mul r1.y, r1.y, -c105.x  // ::h<0>
                          rcp r1.z, r0.w
                          lrp r2.w, r1.y, r1.z, -c167.y  // ::part<0>

#line 1238
                          mul r1.w, r1.z, r1.z
                          mul r2.w, r2.w, r2.w
                          mul r2.w, r2.w, c65.x
                          mad r1.w, r1.w, c119.w, r2.w
                          add r1.w, r1.w, c119.z
                          rsq r1.w, r1.w
                          mul r9.x, r1.w, r8.y  // ::r<0>
                          mul r9.y, r1.z, r9.x  // ::g<0>
                          mad r1.z, r9.x, r1.z, -r9.x
                          mad r9.z, r1.y, r1.z, r9.x  // ::b<0>
                        else
                          if_lt r2.z, c171.y
                            mad r1.y, r2.z, -c120.x, c120.y
                            mul r1.y, r1.y, -c105.x  // ::h<0>
                            rcp r1.z, r0.w
                            lrp r2.w, r1.y, r1.z, -c167.y  // ::part<0>
                            mul r1.w, r1.z, r1.z
                            mul r2.w, r2.w, r2.w
                            mul r2.w, r2.w, c119.w
                            mad r1.w, r1.w, c65.x, r2.w
                            add r1.w, r1.w, c119.z
                            rsq r1.w, r1.w
                            mul r9.x, r1.w, r8.y  // ::r<0>
                            mul r9.z, r1.z, r9.x  // ::b<0>

#line 1249
                            mad r1.z, r9.x, r1.z, -r9.x
                            mad r9.y, r1.y, r1.z, r9.x  // ::g<0>
                          else
                            add r1.y, r2.z, -c78.w
                            mad r1.z, r2.z, c120.x, c120.z
                            mul r1.z, r1.z, -c105.x  // ::h<0>
                            rcp r0.w, r0.w
                            lrp r2.w, r1.z, r0.w, -c167.y  // ::part<0>
                            mul r1.w, r0.w, r0.w

#line 1265
                            mul r4.xy, r1.w, c135.zxzw

#line 1256
                            mul r1.w, r2.w, r2.w
                            mad r1.w, r1.w, c119.z, r4.x
                            add r1.w, r1.w, c119.w
                            rsq r1.w, r1.w
                            mul r10.y, r1.w, r8.y  // ::g<0>
                            mul r10.z, r0.w, r10.y  // ::b<0>
                            mad r1.w, r10.y, r0.w, -r10.y
                            mad r10.x, r1.z, r1.w, r10.y  // ::r<0>

#line 1263
                            mad r1.z, r2.z, -c176.z, c176.y
                            mul r1.z, r1.z, -c105.x  // ::h<0>
                            lrp r2.w, r1.z, r0.w, -c167.y  // ::part<0>
                            mul r1.w, r2.w, r2.w
                            mad r1.w, r1.w, c65.x, r4.y
                            add r1.w, r1.w, c119.w
                            rsq r1.w, r1.w
                            mul r11.y, r1.w, r8.y  // ::g<0>
                            mul r11.x, r0.w, r11.y  // ::r<0>
                            mad r0.w, r11.y, r0.w, -r11.y
                            mad r11.z, r1.z, r0.w, r11.y  // ::b<0>
                            cmp r9.xyz, r1.y, r11, r10  // ::r<0>, ::g<0>, ::b<0>
                          endif
                        endif
                      endif
                    endif
                  else

#line 1273
                    if_lt r2.z, c80.w
                      mul r0.w, r2.z, c153.w  // ::h<0>
                      mul r1.y, r8.y, r8.y
                      mul r1.z, r2.z, r0.w
                      mad r1.z, r1.z, c139.x, c139.y
                      rcp r1.z, r1.z
                      mul r1.y, r1.z, r1.y
                      rsq r1.y, r1.y
                      rcp r9.x, r1.y  // ::r<0>
                      mul r9.y, r0.w, r9.x  // ::g<0>
                      mov r9.z, c125.z
                    else
                      if_lt r2.z, c72.w
                        mad r0.w, r2.z, -c121.x, c121.y
                        mul r1.y, r0.w, -c105.x  // ::h<0>

#line 1284
                        mul r1.z, r8.y, r8.y
                        mul r0.w, r0.w, r1.y
                        mad r0.w, r0.w, c139.z, c139.w
                        rcp r0.w, r0.w
                        mul r0.w, r0.w, r1.z
                        rsq r0.w, r0.w
                        rcp r9.y, r0.w  // ::g<0>
                        mul r9.x, r1.y, r9.y  // ::r<0>
                        mov r9.z, c125.z
                      else

#line 1307
                        mad r1.yz, r2.z, c120.x, c120.xwzw
                        mul r4.xy, r1.yzzw, -c105.x  // ::h<0,0>

#line 1292
                        mul r0.w, r8.y, r8.y

#line 1308
                        mul r1.yz, r1, r4.xxyw
                        mad r1.yz, r1, c178.xxyw, c178.xzww

#line 1292
                        rcp r1.y, r1.y
                        mul r1.y, r0.w, r1.y
                        rsq r1.y, r1.y
                        rcp r10.y, r1.y  // ::g<0>
                        mul r10.z, r4.x, r10.y  // ::b<0>

#line 1315
                        mad r1.yw, r2.z, -c152.x, c152.xyzz
                        mul r4.xw, r1.yyzw, -c105.x  // ::h<0,0>
                        mul r1.yw, r1, r4.xxzw
                        mad r1.yw, r1, c138.xxzy, c138.xzzw

#line 1300
                        rcp r1.y, r1.y
                        mul r1.y, r0.w, r1.y
                        rsq r1.y, r1.y
                        rcp r11.z, r1.y  // ::b<0>
                        mul r11.y, r4.x, r11.z  // ::g<0>

#line 1305
                        add r6.yzw, r2.z, c132.xxyz

#line 1308
                        rcp r1.y, r1.z
                        mul r1.y, r0.w, r1.y
                        rsq r1.y, r1.y
                        rcp r12.z, r1.y  // ::b<0>
                        mul r12.x, r4.y, r12.z  // ::r<0>

#line 1316
                        rcp r1.y, r1.w
                        mul r0.w, r0.w, r1.y
                        rsq r0.w, r0.w
                        rcp r13.x, r0.w  // ::r<0>
                        mul r13.z, r4.w, r13.x  // ::b<0>
                        mov r13.y, c125.z
                        mov r12.y, c125.z
                        cmp r1.yzw, r6.w, r13.xxyz, r12.xxyz  // ::r<0>, ::g<0>, ::b<0>
                        mov r11.x, c125.z
                        cmp r1.yzw, r6.z, r1, r11.xxyz  // ::r<0>, ::g<0>, ::b<0>
                        mov r10.x, c125.z
                        cmp r9.xyz, r6.y, r1.yzww, r10  // ::r<0>, ::g<0>, ::b<0>
                      endif
                    endif
                  endif

#line 1323
                  add r1.yzw, r9.xxyz, -c168.w
                  frc r4.xyw, r1.yzzw
                  add r1.yzw, r1, -r4.xxyw
                  mul_sat r5.xyz, r1.ywzw, c73.w  // ::result<0,2,1>

#line 2726
                  mov r0.y, -c167.y
                else
                  if_eq r1.x, -c105.z

#line 1393
                    mul r0.w, r3.y, c103.w  // ::white<0>
                    mul r1.y, r8.y, c103.w  // ::black<0>
                    mad r1.y, r3.y, c103.w, r1.y

#line 1402
                    if_ge r1.y, -c167.y

#line 1398
                      rcp r1.y, r1.y
                      mul r5.xyz, r0.w, r1.y  // ::gray<0,0,0>

#line 1413
                    else

#line 931
                      add r1.y, -r2.z, c85.w

#line 943
                      mul r1.z, r2.z, c153.w
                      cmp r1.y, r1.y, r1.z, c133.x  // ::SectorPosition<0>
                      frc r1.z, r1.y
                      add r1.z, -r1.z, r1.y  // ::SectorNumber<0>

#line 947
                      add r1.y, -r1.z, r1.y  // ::FractionalSector<0>

#line 951
                      add r9.x, -r1.y, -c167.y  // ::q<0>

#line 979
                      add r10, r1.z, c175

#line 985
                      add r1.y, r1.z, c100.x
                      cmp r11.x, -r1_abs.y, c167_abs.y, c167_abs.x  // ::r<0>

#line 990
                      mov r9.y, c125.z
                      cmp r11.yz, -r1_abs.y, r9.xyxw, c125.z  // ::g<0>, ::b<0>
                      mad r9.zw, r9.x, c84, c84.y
                      cmp r4.xyw, -r10_abs.w, r9.zyzw, r11.xyzz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r10_abs.z, r9.yxzw, r4  // ::r<0>, ::g<0>, ::b<0>
                      mad r6.yzw, r9.xwxy, c84.xyzy, c84.xwyw
                      cmp r4.xyw, -r10_abs.y, r6.wyzz, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r10_abs.x, r9.xwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r1.yzw, -r1_abs.z, r6, r4.xxyw  // ::r<0>, ::g<0>, ::b<0>

#line 1405
                      mad r2.w, r3.y, -c176.x, c176.y
                      mad r2.w, r8.y, -c103.w, r2.w

#line 1412
                      mad r5.xyz, r1.ywzw, r2.w, r0.w  // ::rgb<0,2,1>
                    endif

#line 2727
                    mov r0.y, -c167.y
                  else
                    if_eq r1.x, -c67.x

#line 548
                      mul r1.yzw, r3.y, c122.xxyz
                      mad r1.yzw, r2.z, c87.xxyz, r1
                      mad r5.xyz, r8.y, c88.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2728
                      mov r0.y, -c167.y
                    else
                      if_eq r1.x, -c46.x

#line 2424
                        add r0.w, r8.y, c125.w
                        mad r1.y, r0.w, c152.w, r2.z  // ::ycbcr<0>
                        add r1.z, r3.y, c125.w
                        mad r1.w, r1.z, -c132.w, r2.z
                        mad r0.w, r0.w, -c122.w, r1.w  // ::ycbcr<1>
                        mad r1.z, r1.z, c87.w, r2.z  // ::ycbcr<2>

#line 2404
                        add r1.y, r1.y, -c168.z
                        mul r1.w, r1.y, c88.w  // ::ypbpr<0>
                        add r0.w, r0.w, c125.w
                        add r1.z, r1.z, c125.w

#line 2359
                        mad r5.x, r1.z, c98.x, r1.w  // ::r<0>
                        mad r5.y, r0.w, c98.y, r1.w  // ::b<0>
                        mul r0.w, r5.x, c151.x
                        mad r0.w, r1.y, c88.w, -r0.w
                        mad r0.w, r5.y, -c151.z, r0.w
                        mul r5.z, r0.w, c98.z  // ::g<0>

#line 2730
                        mov r0.y, -c167.y
                      else
                        add r0.w, r1.x, c46.y
                        cmp r0.y, -r0_abs.w, c167_abs.y, c167_abs.x

#line 1620
                        add r1.y, r2.z, c168.z
                        mul r1.y, r1.y, c85.z  // ::fy<0>
                        mad r1.z, r3.y, c98.w, r1.y  // ::fx<0>
                        mad r1.w, r8.y, -c123.x, r1.y  // ::fz<0>
                        mul r2.w, r1.z, r1.z
                        mul r3.w, r1.z, r2.w  // ::fx3<0>
                        mul r4.x, r1.w, r1.w
                        mul r4.y, r1.w, r4.x  // ::fz3<0>
                        mad r2.w, r1.z, -r2.w, c102.z
                        mad r1.z, r1.z, c123.y, c123.z
                        mul r1.z, r1.z, c86.x
                        cmp r1.z, r2.w, r1.z, r3.w  // ::xr<0>
                        add r2.w, -r2.z, c83.w
                        mul r3.w, r1.y, r1.y
                        mul r1.y, r1.y, r3.w
                        mul r3.w, r2.z, c86.x
                        cmp r1.y, r2.w, r3.w, r1.y  // ::yr<0>
                        mad r2.w, r1.w, -r4.x, c102.z
                        mad r1.w, r1.w, c123.y, c123.z
                        mul r1.w, r1.w, c86.x
                        cmp r1.w, r2.w, r1.w, r4.y  // ::zr<0>

#line 586
                        abs r2.w, c13.x

#line 590
                        rcp r3.w, c13.x
                        mul r9.x, r3.w, c12.x  // ::xyY_XYZ<0>
                        mov r4.x, c13.x  // ::WhiteY<0>
                        add r4.x, -r4.x, -c12.x
                        add r4.x, r4.x, -c167.y
                        mul r9.z, r3.w, r4.x  // ::xyY_XYZ<2>
                        mov r9.y, -c167.y
                        cmp r4.xyw, -r2.w, c128.z, r9.xyzz  // ::xyY_XYZ<0,1,2>

#line 1632
                        mul r9.xyz, r1.zyww, r4.xyww  // ::Lab_Lrgb<0,1,2>

#line 2731
                        cmp r5.xyz, -r0_abs.w, r9.xzyw, r5  // ::TLrgb<0,2,1>
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r0.y, -r0.y

#line 2767
            else

#line 2733
              if_eq r1.x, -c35.x

#line 586
                abs r0.y, c13.x

#line 590
                rcp r0.w, c13.x
                mul r9.x, r0.w, c12.x  // ::xyY_XYZ<0>
                mov r4.x, c13.x  // ::WhiteY<0>
                add r1.y, -r4.x, -c12.x
                add r1.y, r1.y, -c167.y
                mul r9.z, r0.w, r1.y  // ::xyY_XYZ<2>
                mov r9.y, -c167.y
                cmp r1.yzw, -r0.y, c128.z, r9.xxyz  // ::xyY_XYZ<0,1,2>

#line 630
                add r4.xy, r1.ywzw, c68

#line 633
                cmp r0.w, -r4_abs.y, c68.z, c68.w
                cmp r0.w, -r0.y, c125.z, r0.w
                cmp r0.w, -r4_abs.x, r0.w, c125.z

#line 643
                add r4.xy, r1.zwzw, r1.yzzw
                mul r4.xy, r4, c127  // ::Ka<0,0>

#line 1676
                mul r2.w, r2.z, c103.w
                mul r2.w, r2.w, r2.w
                mul r1.z, r1.z, r2.w  // ::Y<0>
                rcp r2.w, r4.x
                cmp r2.w, r0.w, r2.w, c123.w
                mul r2.w, r2.w, r3.y
                cmp r0.y, -r0.y, c145.x, c145.y
                mul r0.y, r0.y, r1.z
                rsq r3.w, r0.y
                rcp r3.w, r3.w
                mad r2.w, r2.w, r3.w, r0.y
                mul r1.y, r1.y, r2.w  // ::X<0>
                rcp r2.w, r4.y
                cmp r0.w, r0.w, r2.w, c89.x
                mul r0.w, r0.w, r8.y
                mad r0.y, r0.w, r3.w, -r0.y
                mul r0.y, -r1.w, r0.y  // ::Z<0>

#line 548
                mul r4.xyw, r1.z, c24.xyzz
                mad r1.yzw, r1.y, c23.xxyz, r4.xxyw
                mad r5.xyz, r0.y, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2733
                mov r0.y, -c167.y
              else
                if_eq r1.x, -c35.y

#line 1722
                  add r0.w, r2.z, -c69.w  // ::Jz<0>
                  mad r1.y, r0.w, c89.y, c89.z
                  rcp r1.y, r1.y

#line 1727
                  mul r1.zw, r3.y, c148.xyxy
                  mad r2.w, r0.w, r1.y, r1.z
                  mad r2.w, r8.y, c89.w, r2.w  // PerceptualQuantizerInverse::X<0>

#line 569
                  pow r3.w, r2.w, c148.z  // ::XX<0>
                  add r2.w, -r3.w, c55.z
                  mad r3.w, r3.w, c90.x, c90.y
                  rcp r3.w, r3.w
                  mul r2.w, r2.w, r3.w
                  pow r3.w, r2.w, c148.w

#line 1727
                  mad r1.yz, r0.w, r1.y, -r1.xzww
                  mad r1.yz, r8.y, -c90.xzww, r1  // PerceptualQuantizerInverse::X<0,0>

#line 569
                  pow r0.w, r1.y, c148.z  // ::XX<0>
                  add r1.y, -r0.w, c55.z
                  mad r0.w, r0.w, c90.x, c90.y
                  rcp r0.w, r0.w
                  mul r0.w, r0.w, r1.y
                  pow r1.y, r0.w, c148.w
                  pow r0.w, r1.z, c148.z  // ::XX<0>
                  add r1.z, -r0.w, c55.z
                  mad r0.w, r0.w, c90.x, c90.y
                  rcp r0.w, r0.w
                  mul r0.w, r0.w, r1.z
                  pow r1.z, r0.w, c148.w

#line 1731
                  mul r4.xyw, r1.y, c150.xyzz
                  mad r1.yw, r3.w, c147.xxzy, -r4.xxzw
                  mad r0.w, r3.w, c150.w, r4.y
                  mad r0.w, r1.z, -c147.z, r0.w  // ::Y<0>
                  mad r1.yz, r1.z, c149.xxyw, r1.xyww  // ::X<0>, ::Z<0>
                  mul r0.w, r0.w, c91.x  // ::xyz<1>
                  mul r1.yz, r1, c91.x  // ::xyz<0,2>

#line 548
                  mul r4.xyw, r0.w, c24.xyzz
                  mad r4.xyw, r1.y, c23.xyzz, r4
                  mad r5.xyz, r1.z, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2734
                  mov r0.y, -c167.y
                else
                  if_eq r1.x, -c35.z

#line 586
                    abs r0.w, c13.x

#line 590
                    rcp r1.y, c13.x
                    mul r9.x, r1.y, c12.x  // ::xyY_XYZ<0>
                    mov r4.x, c13.x  // ::WhiteY<0>
                    add r1.z, -r4.x, -c12.x
                    add r1.z, r1.z, -c167.y
                    mul r9.z, r1.y, r1.z  // ::xyY_XYZ<2>
                    mov r9.y, -c167.y
                    cmp r1.yzw, -r0.w, c128.z, r9.xxyz  // ::xyY_XYZ<0,1,2>

#line 548
                    mul r4.xyw, r3.y, c27.xyzz
                    mad r4.xyw, r2.z, c26.xyzz, r4
                    mad r4.xyw, r8.y, c28.xyzz, r4  // ::x<0>, ::y<0>, ::z<0>

#line 578
                    mul r6.yzw, r4.xxyw, r4.xxyw
                    mul r4.xyw, r4, r6.yzzw  // ::Pow3<0,0,0>

#line 548
                    mul r6.yzw, r4.y, c33.xxyz
                    mad r6.yzw, r4.x, c32.xxyz, r6
                    mad r4.xyw, r4.w, c34.xyzz, r6.yzzw  // ::x<0>, ::y<0>, ::z<0>

#line 1780
                    mul r1.yzw, r1, r4.xxyw  // ::xyz<0,1,2>

#line 548
                    mul r4.xyw, r1.z, c24.xyzz
                    mad r4.xyw, r1.y, c23.xyzz, r4
                    mad r5.xyz, r1.w, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2735
                    mov r0.y, -c167.y
                  else
                    if_eq r1.x, -c35.w

#line 928
                      mul r0.w, r3.y, c103.w  // ::_s<0>
                      mul r9.y, r8.y, c103.w  // ::_b<0>

#line 931
                      add r1.y, -r2.z, c85.w

#line 943
                      mul r1.z, r2.z, c153.w
                      cmp r1.y, r1.y, r1.z, c133.x  // ::SectorPosition<0>
                      frc r1.z, r1.y
                      add r1.z, -r1.z, r1.y  // ::SectorNumber<0>

#line 947
                      add r1.y, -r1.z, r1.y  // ::FractionalSector<0>

#line 950
                      mad r1.w, r3.y, -c176.x, c176.y
                      mul r9.z, r1.w, r9.y  // ::p<0>
                      mad r1.w, r0.w, -r1.y, -c167.y
                      add r1.y, -r1.y, -c167.y
                      mad r1.y, r0.w, -r1.y, -c167.y
                      mul r9.xw, r1.yyzw, r9.y  // ::t<0>, ::q<0>

#line 979
                      add r10, r1.z, c175

#line 985
                      add r1.y, r1.z, c100.x

#line 990
                      cmp r4.xyw, -r1_abs.y, r9.yzzw, c125.z  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r10_abs.w, r9.xzzy, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r10_abs.z, r9.zwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r10_abs.y, r9.zyzx, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r10_abs.x, r9.wyzz, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r1.yzw, -r1_abs.z, r9.xyxz, r4.xxyw  // ::r<0>, ::g<0>, ::b<0>
                      cmp r5.xyz, -r0_abs.w, r9.y, r1.ywzw  // ::r<0>, ::b<0>, ::g<0>

#line 2736
                      mov r0.y, -c167.y
                    else
                      if_eq r1.x, -c36.x

#line 1037
                        mul r5.xyz, r8.y, c103.w  // ::l<0,0,0>

#line 1044
                        if_lt -r3.y, c125.z

#line 1037
                          mul r0.w, r3.y, c103.w  // ::s<0>
                          min r1.y, r2.z, c85.w  // ::h<0>
                          mul r1.z, r1.y, c153.w  // ::h<0>

#line 1046
                          mad r1.w, r8.y, c133.y, c133.z
                          add r1.w, -r1_abs.w, -c167.y
                          mul r9.x, r0.w, r1.w  // ::chroma<0>
                          cmp r4.xy, r1.y, c173, c173.zwzw
                          mul r0.w, r1.z, r4.y
                          frc r0.w, r0.w
                          mad r0.w, r4.x, r0.w, c167.y
                          add r0.w, -r0_abs.w, -c167.y
                          mul r9.y, r0.w, r9.x  // ::v<0>

#line 1067
                          add r10, -r1.y, c129

#line 1073
                          add r11, r1.y, -c129.wzyx

#line 1079
                          add r0.w, r1.y, c133.w
                          add r1.zw, -r1.y, c130.xyxy

#line 1084
                          cmp r1.zw, r1, -c167_abs.y, -c167_abs.x
                          cmp r0.w, r0.w, r1.z, c125.z
                          mov r9.z, c125.z
                          cmp r4.xyw, r0.w, c125.z, r9.xzzy  // ::result<0,1,2>
                          cmp r0.w, r11.w, r1.w, c125.z
                          cmp r4.xyw, r0.w, r4, r9.yzzx  // ::result<0,1,2>
                          cmp r10, r10, -c167_abs.y, -c167_abs.x
                          cmp r6.yzw, r11.xzyx, r10.xxyz, c125.z
                          cmp r4.xyw, r6.y, r4, r9.zyzx  // ::result<0,1,2>
                          cmp r4.xyw, r6.z, r4, r9.zxzy  // ::result<0,1,2>
                          cmp r4.xyw, r6.w, r4, r9.yxzz  // ::result<0,1,2>
                          cmp r0.w, r1.y, r10.w, c125.z
                          cmp r1.yzw, r0.w, r4.xxyw, r9.xxyz  // ::result<0,1,2>
                          mad r0.w, r9.x, c168.w, r5.y  // ::w<0>

#line 1089
                          add r5.xyz, r0.w, r1.ywzw  // ::result<0,2,1>

#line 1094
                        endif

#line 2737
                        mov r0.y, -c167.y
                      else
                        if_eq r1.x, -c36.y

#line 1393
                          mul r0.w, r3.y, c103.w  // ::white<0>
                          mul r1.y, r8.y, c103.w  // ::black<0>
                          mad r1.y, r3.y, c103.w, r1.y

#line 1402
                          if_ge r1.y, -c167.y

#line 1398
                            rcp r1.y, r1.y
                            mul r5.xyz, r0.w, r1.y  // ::gray<0,0,0>

#line 1413
                          else

#line 931
                            add r1.y, -r2.z, c85.w

#line 943
                            mul r1.z, r2.z, c153.w
                            cmp r1.y, r1.y, r1.z, c133.x  // ::SectorPosition<0>
                            frc r1.z, r1.y
                            add r1.z, -r1.z, r1.y  // ::SectorNumber<0>

#line 947
                            add r1.y, -r1.z, r1.y  // ::FractionalSector<0>

#line 951
                            add r9.x, -r1.y, -c167.y  // ::q<0>

#line 979
                            add r10, r1.z, c175

#line 985
                            add r1.y, r1.z, c100.x
                            cmp r11.x, -r1_abs.y, c167_abs.y, c167_abs.x  // ::r<0>

#line 990
                            mov r9.y, c125.z
                            cmp r11.yz, -r1_abs.y, r9.xyxw, c125.z  // ::g<0>, ::b<0>
                            mad r9.zw, r9.x, c84, c84.y
                            cmp r4.xyw, -r10_abs.w, r9.zyzw, r11.xyzz  // ::r<0>, ::g<0>, ::b<0>
                            cmp r4.xyw, -r10_abs.z, r9.yxzw, r4  // ::r<0>, ::g<0>, ::b<0>
                            mad r6.yzw, r9.xwxy, c84.xyzy, c84.xwyw
                            cmp r4.xyw, -r10_abs.y, r6.wyzz, r4  // ::r<0>, ::g<0>, ::b<0>
                            cmp r4.xyw, -r10_abs.x, r9.xwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                            cmp r1.yzw, -r1_abs.z, r6, r4.xxyw  // ::r<0>, ::g<0>, ::b<0>

#line 1405
                            mad r2.w, r3.y, -c176.x, c176.y
                            mad r2.w, r8.y, -c103.w, r2.w

#line 1412
                            mad r5.xyz, r1.ywzw, r2.w, r0.w  // ::rgb<0,2,1>
                          endif

#line 2738
                          mov r0.y, -c167.y
                        else
                          if_eq r1.x, -c36.z

#line 667
                            mad r0.w, r8.y, c85.x, c85.y
                            frc r0.w, r0.w
                            mad r0.w, r0.w, c81.x, c81.y
                            sincos r9.xy, r0.w
                            mul r1.yz, r3.y, r9.xxyw  // ::a<0>, ::b<0>

#line 1620
                            add r0.w, r2.z, c168.z
                            mul r1.w, r0.w, c85.z  // ::fy<0>
                            mul r1.z, r1.z, c123.x
                            mad r1.y, r1.y, c98.w, r1.w  // ::fx<0>
                            mad r0.w, r0.w, c85.z, -r1.z  // ::fz<0>
                            mul r1.z, r1.y, r1.y
                            mul r2.w, r1.z, r1.y  // ::fx3<0>
                            mul r3.w, r0.w, r0.w
                            mul r4.x, r0.w, r3.w  // ::fz3<0>
                            mad r1.z, r1.y, -r1.z, c102.z
                            mad r1.y, r1.y, c123.y, c123.z
                            mul r1.y, r1.y, c86.x
                            cmp r1.y, r1.z, r1.y, r2.w  // ::xr<0>
                            add r1.z, -r2.z, c83.w
                            mul r2.w, r1.w, r1.w
                            mul r1.w, r1.w, r2.w
                            mul r2.w, r2.z, c86.x
                            cmp r1.z, r1.z, r2.w, r1.w  // ::yr<0>
                            mad r1.w, r0.w, -r3.w, c102.z
                            mad r0.w, r0.w, c123.y, c123.z
                            mul r0.w, r0.w, c86.x
                            cmp r0.w, r1.w, r0.w, r4.x  // ::zr<0>

#line 586
                            abs r1.w, c13.x

#line 590
                            rcp r2.w, c13.x
                            mul r9.x, r2.w, c12.x  // ::xyY_XYZ<0>
                            mov r4.x, c13.x  // ::WhiteY<0>
                            add r3.w, -r4.x, -c12.x
                            add r3.w, r3.w, -c167.y
                            mul r9.z, r2.w, r3.w  // ::xyY_XYZ<2>
                            mov r9.y, -c167.y
                            cmp r4.xyw, -r1.w, c128.z, r9.xyzz  // ::xyY_XYZ<0,1,2>

#line 1632
                            mul r5.xz, r1.yyzw, r4.xyyw  // ::Lab_Lrgb<0,1>
                            mul r5.y, r0.w, r4.w  // ::Lab_Lrgb<2>

#line 2739
                            mov r0.y, -c167.y
                          else
                            if_eq r1.x, -c36.w

#line 667
                              mad r0.w, r8.y, c85.x, c85.y
                              frc r0.w, r0.w
                              mad r0.w, r0.w, c81.x, c81.y
                              sincos r9.xy, r0.w
                              mul r1.yz, r3.y, r9.xxyw  // ::a<0>, ::b<0>

#line 586
                              abs r0.w, c13.x

#line 590
                              rcp r1.w, c13.x
                              mul r9.x, r1.w, c12.x  // ::xyY_XYZ<0>
                              mov r4.x, c13.x  // ::WhiteY<0>
                              add r2.w, -r4.x, -c12.x
                              add r2.w, r2.w, -c167.y
                              mul r9.z, r1.w, r2.w  // ::xyY_XYZ<2>
                              mov r9.y, -c167.y
                              cmp r4.xyw, -r0.w, c128.z, r9.xyzz  // ::xyY_XYZ<0,1,2>

#line 630
                              add r6.yz, r4.xxww, c68.xxyw

#line 633
                              cmp r1.w, -r6_abs.z, c68.z, c68.w
                              cmp r1.w, -r0.w, c125.z, r1.w
                              cmp r1.w, -r6_abs.y, r1.w, c125.z

#line 643
                              add r6.yz, r4.xyww, r4.xxyw
                              mul r6.yz, r6, c127.xxyw  // ::Ka<0,0>

#line 1676
                              mul r2.w, r2.z, c103.w
                              mul r2.w, r2.w, r2.w
                              mul r2.w, r4.y, r2.w  // ::Y<0>
                              rcp r3.w, r6.y
                              cmp r3.w, r1.w, r3.w, c123.w
                              mul r1.y, r1.y, r3.w
                              cmp r0.w, -r0.w, c145.x, c145.y
                              mul r0.w, r0.w, r2.w
                              rsq r3.w, r0.w
                              rcp r3.w, r3.w
                              mad r1.y, r1.y, r3.w, r0.w
                              mul r1.y, r4.x, r1.y  // ::X<0>
                              rcp r4.x, r6.z
                              cmp r1.w, r1.w, r4.x, c89.x
                              mul r1.z, r1.w, r1.z
                              mad r0.w, r1.z, r3.w, -r0.w
                              mul r0.w, -r4.w, r0.w  // ::Z<0>

#line 548
                              mul r4.xyw, r2.w, c24.xyzz
                              mad r1.yzw, r1.y, c23.xxyz, r4.xxyw
                              mad r5.xyz, r0.w, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2740
                              mov r0.y, -c167.y
                            else
                              if_eq r1.x, -c47.x

#line 667
                                mad r0.w, r8.y, c85.x, c85.y
                                frc r0.w, r0.w
                                mad r0.w, r0.w, c81.x, c81.y
                                sincos r9.xy, r0.w
                                mul r9, r3.y, r9.xyxy  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1722
                                add r0.w, r2.z, -c69.w  // ::Jz<0>
                                mad r1.y, r0.w, c89.y, c89.z
                                rcp r1.y, r1.y

#line 1727
                                mul r1.zw, r9.xyxz, c148.xyxy
                                mad r2.w, r0.w, r1.y, r1.z
                                mad r2.w, r9.y, c89.w, r2.w  // PerceptualQuantizerInverse::X<0>

#line 569
                                pow r3.w, r2.w, c148.z  // ::XX<0>
                                add r2.w, -r3.w, c55.z
                                mad r3.w, r3.w, c90.x, c90.y
                                rcp r3.w, r3.w
                                mul r2.w, r2.w, r3.w
                                pow r3.w, r2.w, c148.w

#line 1727
                                mad r1.yz, r0.w, r1.y, -r1.xzww
                                mad r1.yz, r9.xyww, -c90.xzww, r1  // PerceptualQuantizerInverse::X<0,0>

#line 569
                                pow r0.w, r1.y, c148.z  // ::XX<0>
                                add r1.y, -r0.w, c55.z
                                mad r0.w, r0.w, c90.x, c90.y
                                rcp r0.w, r0.w
                                mul r0.w, r0.w, r1.y
                                pow r1.y, r0.w, c148.w
                                pow r0.w, r1.z, c148.z  // ::XX<0>
                                add r1.z, -r0.w, c55.z
                                mad r0.w, r0.w, c90.x, c90.y
                                rcp r0.w, r0.w
                                mul r0.w, r0.w, r1.z
                                pow r1.z, r0.w, c148.w

#line 1731
                                mul r4.xyw, r1.y, c150.xyzz
                                mad r1.yw, r3.w, c147.xxzy, -r4.xxzw
                                mad r0.w, r3.w, c150.w, r4.y
                                mad r0.w, r1.z, -c147.z, r0.w  // ::Y<0>
                                mad r1.yz, r1.z, c149.xxyw, r1.xyww  // ::X<0>, ::Z<0>
                                mul r0.w, r0.w, c91.x  // ::xyz<1>
                                mul r1.yz, r1, c91.x  // ::xyz<0,2>

#line 548
                                mul r4.xyw, r0.w, c24.xyzz
                                mad r4.xyw, r1.y, c23.xyzz, r4
                                mad r5.xyz, r1.z, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2741
                                mov r0.y, -c167.y
                              else
                                add r0.w, r1.x, c47.y
                                cmp r0.y, -r0_abs.w, c167_abs.y, c167_abs.x

#line 667
                                mad r1.y, r8.y, c85.x, c85.y
                                frc r1.y, r1.y
                                mad r1.y, r1.y, c81.x, c81.y
                                sincos r9.xy, r1.y
                                mul r2.xy, r3.y, r9  // ::a<0>, ::b<0>

#line 2060
                                add r1.yzw, r2.xxyz, c169.xwwy
                                mul r4.xyw, r1.yzzw, c149.zzzw  // ::result<0,1,2>

#line 590
                                mul r1.y, r4.w, r4.x
                                rcp r1.w, r4.y
                                mul r9.x, r1.w, r1.y  // ::xyY_XYZ<0>
                                mad r1.y, r1.z, -c123.x, -r4.x
                                add r1.y, r1.y, -c167.y
                                mul r1.y, r4.w, r1.y
                                mul r9.z, r1.w, r1.y  // ::xyY_XYZ<2>
                                mov r9.y, r4.w
                                cmp r1.yzw, -r4_abs.y, c128.z, r9.xxyz  // ::xyY_XYZ<0,1,2>

#line 2742
                                cmp r5.xyz, -r0_abs.w, r1.ywzw, r5  // ::TLrgb<0,2,1>
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r0.y, -r0.y

#line 2767
              else

#line 2744
                if_eq r1.x, -c47.z

#line 667
                  mad r0.y, r8.y, c85.x, c85.y
                  frc r0.y, r0.y
                  mad r0.y, r0.y, c81.x, c81.y
                  sincos r9.xy, r0.y
                  mul r0.yw, r3.y, r9.xxzy  // ::a<0>, ::b<0>

#line 586
                  abs r1.y, c13.x

#line 590
                  rcp r1.z, c13.x
                  mul r9.x, r1.z, c12.x  // ::xyY_XYZ<0>
                  mov r4.x, c13.x  // ::WhiteY<0>
                  add r1.w, -r4.x, -c12.x
                  add r1.w, r1.w, -c167.y
                  mul r9.z, r1.z, r1.w  // ::xyY_XYZ<2>
                  mov r9.y, -c167.y
                  cmp r4.xyw, -r1.y, c128.z, r9.xyzz  // ::xyY_XYZ<0,1,2>

#line 649
                  cmp r1.y, -r1.y, c146.y, c146.w
                  add r1.y, r1.y, r4.x
                  mul r1.z, r4.x, -c60.x
                  mad r1.y, r4.w, -c58.x, r1.y
                  rcp r1.y, r1.y
                  mul r1.z, r1.y, r1.z  // ::ComputeKu<0>

#line 654
                  mul r1.y, r4.y, r1.y
                  mul r1.y, r1.y, -c45.z  // ::ComputeKv<0>

#line 1826
                  add r1.w, -r2.z, c83.w
                  add r2.w, r2.z, c168.z
                  mul r2.w, r2.w, c85.z
                  mul r3.w, r2.w, r2.w
                  mul r2.w, r2.w, r3.w

#line 1831
                  mul r9, r2.z, c155

#line 1826
                  cmp r1.w, r1.w, r9.x, r2.w  // ::Y<0>
                  mad r0.y, r9.z, r1.z, r0.y
                  rcp r0.y, r0.y
                  mad r0.y, r9.y, r0.y, c167.y
                  mul r0.y, r0.y, c63.w  // ::a<0>
                  mul r1.z, r1.w, c100.x  // ::b<0>
                  mad r0.w, r9.z, r1.y, r0.w
                  rcp r0.w, r0.w
                  mad r0.w, r9.w, r0.w, c100.x
                  mad r0.w, r1.w, r0.w, -r1.z
                  rcp r1.y, r0.y
                  mul r0.w, r0.w, r1.y  // ::X<0>
                  mad r0.y, r0.w, r0.y, r1.z  // ::Z<0>

#line 1837
                  max r1.y, r0.w, c125.z  // ::X<0>

#line 1840
                  max r0.w, r1.w, c125.z  // ::Y<0>

#line 1843
                  max r1.z, r0.y, c125.z  // ::Z<0>

#line 548
                  mul r4.xyw, r0.w, c24.xyzz
                  mad r4.xyw, r1.y, c23.xyzz, r4
                  mad r5.xyz, r1.z, c25.xzyw, r4.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2744
                  mov r0.y, -c167.y
                else
                  if_eq r1.x, -c47.w

#line 667
                    mad r0.w, r8.y, c85.x, c85.y
                    frc r0.w, r0.w
                    mad r0.w, r0.w, c81.x, c81.y
                    sincos r9.xy, r0.w
                    mul r2.xy, r3.y, r9  // ::a<0>, ::b<0>

#line 2208
                    add r1.yzw, r2.xxyz, c169.xwwy
                    mul r2.xyw, r1.yzzw, c149.zzzw  // ::result<0,1,2>

#line 590
                    mul r0.w, r2.w, r2.x
                    rcp r1.y, r2.y
                    mul r9.x, r0.w, r1.y  // ::xyY_XYZ<0>
                    mad r0.w, r1.z, -c123.x, -r2.x
                    add r0.w, r0.w, -c167.y
                    mul r0.w, r2.w, r0.w
                    mul r9.z, r1.y, r0.w  // ::xyY_XYZ<2>
                    mov r9.y, r2.w
                    cmp r1.yzw, -r2_abs.y, c128.z, r9.xxyz  // ::xyY_XYZ<0,1,2>

#line 548
                    mul r2.xyw, r1.z, c24.xyzz
                    mad r2.xyw, r1.y, c23.xyzz, r2
                    mad r5.xyz, r1.w, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2745
                    mov r0.y, -c167.y
                  else
                    if_eq r1.x, -c106.x

#line 548
                      mul r1.yzw, r3.y, c15.xxyz
                      mad r1.yzw, r2.z, c14.xxyz, r1
                      mad r1.yzw, r8.y, c16.xxyz, r1  // ::x<0>, ::y<0>, ::z<0>
                      mul r2.xyw, r1.z, c24.xyzz
                      mad r2.xyw, r1.y, c23.xyzz, r2
                      mad r5.xyz, r1.w, c25.xzyw, r2.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2746
                      mov r0.y, -c167.y
                    else
                      if_eq r1.x, -c106.y

#line 586
                        abs r0.w, c13.x

#line 590
                        rcp r1.y, c13.x
                        mul r9.x, r1.y, c12.x  // ::xyY_XYZ<0>
                        mov r2.x, c13.x  // ::WhiteY<0>
                        add r1.z, -r2.x, -c12.x
                        add r1.z, r1.z, -c167.y
                        mul r9.z, r1.y, r1.z  // ::xyY_XYZ<2>
                        mov r9.y, -c167.y
                        cmp r1.yzw, -r0.w, c128.z, r9.xxyz  // ::xyY_XYZ<0,1,2>

#line 649
                        cmp r0.w, -r0.w, c146.y, c146.w
                        add r0.w, r0.w, r1.y
                        mul r1.y, r1.y, -c60.x
                        mad r0.w, r1.w, -c58.x, r0.w
                        rcp r0.w, r0.w
                        mul r1.y, r0.w, r1.y  // ::ComputeKu<0>

#line 654
                        mul r0.w, r1.z, r0.w
                        mul r0.w, r0.w, -c45.z  // ::ComputeKv<0>

#line 1826
                        add r1.z, -r2.z, c83.w
                        add r1.w, r2.z, c168.z
                        mul r1.w, r1.w, c85.z
                        mul r2.x, r1.w, r1.w
                        mul r1.w, r1.w, r2.x

#line 1831
                        mul r9, r2.z, c155

#line 1826
                        cmp r1.z, r1.z, r9.x, r1.w  // ::Y<0>
                        mad r1.y, r9.z, r1.y, r3.y
                        rcp r1.y, r1.y
                        mad r1.y, r9.y, r1.y, c167.y
                        mul r1.y, r1.y, c63.w  // ::a<0>
                        mul r1.w, r1.z, c100.x  // ::b<0>
                        mad r0.w, r9.z, r0.w, r8.y
                        rcp r0.w, r0.w
                        mad r0.w, r9.w, r0.w, c100.x
                        mad r0.w, r1.z, r0.w, -r1.w
                        rcp r2.x, r1.y
                        mul r0.w, r0.w, r2.x  // ::X<0>
                        mad r1.y, r0.w, r1.y, r1.w  // ::Z<0>

#line 1837
                        max r1.w, r0.w, c125.z  // ::X<0>

#line 1840
                        max r0.w, r1.z, c125.z  // ::Y<0>

#line 1843
                        max r2.x, r1.y, c125.z  // ::Z<0>

#line 548
                        mul r4.xyw, r0.w, c24.xyzz
                        mad r1.yzw, r1.w, c23.xxyz, r4.xxyw
                        mad r5.xyz, r2.x, c25.xzyw, r1.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 2747
                        mov r0.y, -c167.y
                      else
                        if_eq r1.x, -c37.y

#line 590
                          mul r0.w, r2.z, r8.y
                          rcp r1.y, r3.y
                          mul r8.x, r0.w, r1.y  // ::xyY_XYZ<0>
                          add r0.w, -r2.z, -r3.y
                          add r0.w, r0.w, -c167.y
                          mul r0.w, r8.y, r0.w
                          mul r8.z, r1.y, r0.w  // ::xyY_XYZ<2>
                          cmp r5.xyz, -r3_abs.y, c128.z, r8.xzyw  // ::xyY_XYZ<0,2,1>

#line 2749
                          mov r0.y, -c167.y
                        else
                          if_eq r1.x, -c37.z

#line 1438
                            mad r0.w, r2.z, c156.x, c156.z
                            frc r0.w, r0.w
                            mad r0.w, r0.w, c81.x, c81.y
                            sincos r9.xy, r0.w
                            rcp r0.w, r9.x
                            mul r0.w, r0.w, r9.y  // ::x<0>
                            mul r1.y, r0.w, r0.w  // ::x<0>
                            mul r1.z, r3.y, r3.y
                            mul r1.z, r1.z, -c100.x
                            rcp r1.y, r1.y
                            add r1.y, r1.y, -c167.y
                            mul r1.y, r1.y, -c45.z
                            rcp r1.y, r1.y
                            mul r1.y, r1.y, r1.z
                            rsq r1.y, r1.y
                            rcp r1.y, r1.y  // ::r<0>
                            mad r0.w, r0.w, r0.w, -c167.y
                            mul r0.w, r0.w, -c45.z
                            rcp r0.w, r0.w
                            mul r0.w, r0.w, r1.z
                            rsq r0.w, r0.w
                            rcp r0.w, r0.w  // ::g<0>
                            mul r1.z, r0.w, c147.w
                            mad r1.z, r1.y, c124.x, r1.z
                            add r1.z, r1.z, c65.x
                            rcp r1.z, r1.z
                            mul r1.z, r1.z, r8.y  // ::k<0>
                            add r1.w, -r1.y, -c167.y
                            add r1.w, -r0.w, r1.w
                            mul r5.z, r0.w, r1.z  // ::G<0>
                            mul r5.xy, r1.ywzw, r1.z  // ::R<0>, ::B<0>

#line 2750
                            mov r0.y, -c167.y
                          else
                            add r0.w, r1.x, c37.w
                            cmp r0.y, -r0_abs.w, c167_abs.y, c167_abs.x

#line 2133
                            mul r1.y, r2.z, c124.y  // XYZ_Lrgb::input<0>
                            mad r1.z, r3.y, c58.x, r1.y
                            mad r1.z, r8.y, -c45.x, r1.z  // XYZ_Lrgb::input<2>

#line 548
                            mul r2.xyw, r3.y, c24.xyzz
                            mad r2.xyw, r1.y, c23.xyzz, r2
                            mad r1.yzw, r1.z, c25.xxyz, r2.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 2751
                            cmp r5.xyz, -r0_abs.w, r1.ywzw, r5  // ::TLrgb<0,2,1>
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
                if_ne r0.y, -r0.y

#line 2767
                else
                  add r0.yw, r1.x, c48.xzzw
                  cmp r1.y, -r0_abs.w, -c167_abs.y, -c167_abs.x

#line 2753
                  if_eq r1.x, -c40.x

#line 2153
                    if_eq r0.x, -r4.z

#line 2166
                      mov r2.xyw, c125.z  // ::UVW_Lrgb<0,1,2>
                    else

#line 586
                      abs r0.x, c13.x

#line 590
                      rcp r1.z, c13.x
                      mul r4.x, r1.z, c12.x  // ::xyY_XYZ<0>
                      mov r9.x, c13.x  // ::WhiteY<0>
                      add r1.w, -r9.x, -c12.x
                      add r1.w, r1.w, -c167.y
                      mul r4.z, r1.z, r1.w  // ::xyY_XYZ<2>
                      mov r4.y, -c167.y
                      cmp r4.xyz, -r0.x, c128.z, r4  // ::xyY_XYZ<0,1,2>

#line 2154
                      cmp r0.x, -r0.x, c146.y, c146.w
                      add r0.x, r0.x, r4.x
                      mul r1.z, r4.x, -c60.x
                      mad r0.x, r4.z, -c58.x, r0.x
                      rcp r0.x, r0.x
                      mul r1.z, r0.x, r1.z  // ::uN<0>
                      mul r0.x, r4.y, r0.x
                      mul r0.x, r0.x, -c105.x  // ::vN<0>
                      add r1.w, r8.y, -c61.z
                      mul r1.w, r1.w, c124.z
                      mul r3.w, r1.w, r1.w
                      mul r1.w, r1.w, r3.w  // ::y<0>
                      mul r3.w, r8.y, -c105.z
                      rcp r4.x, r3.w
                      mad r1.z, r2.z, r4.x, r1.z
                      cmp r1.z, -r3_abs.w, c125.z, r1.z  // ::_u<0>
                      mad r0.x, r3.y, r4.x, r0.x
                      cmp r0.x, -r3_abs.w, c125.z, r0.x  // ::_v<0>
                      mul r3.w, r1.z, r1.w
                      rcp r0.x, r0.x
                      mul r3.w, r0.x, r3.w  // ::x<0>
                      add r4.x, r0.x, r0.x
                      mul r0.x, r1.z, r0.x
                      mad r0.x, r0.x, c168.w, r4.x
                      add r0.x, r0.x, c100.x
                      mul r0.x, r0.x, r1.w  // ::z<0>

#line 2165
                      mul r1.z, r3.w, c103.w  // ::xyz<0>
                      mul r1.w, r1.w, c103.w  // ::xyz<1>
                      mul r0.x, r0.x, c103.w  // ::xyz<2>

#line 548
                      mul r4.xyz, r1.w, c24
                      mad r4.xyz, r1.z, c23, r4
                      mad r2.xyw, r0.x, c25.xyzz, r4.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 2166
                    endif

#line 2753
                    mov r0.x, -c167.y
                  else
                    if_eq r1.x, -c40.y

#line 2384
                      add r1.z, r2.z, -c168.z
                      mul r1.w, r1.z, c88.w  // ::ypbpr<0>
                      add r3.w, r3.y, c125.w
                      add r4.x, r8.y, c125.w

#line 2359
                      mad r2.x, r4.x, c98.x, r1.w  // ::r<0>
                      mad r2.w, r3.w, c98.y, r1.w  // ::b<0>
                      mul r1.w, r2.x, c151.x
                      mad r1.z, r1.z, c88.w, -r1.w
                      mad r1.z, r2.w, -c151.z, r1.z
                      mul r2.y, r1.z, c98.z  // ::g<0>

#line 2754
                      mov r0.x, -c167.y
                    else
                      if_eq r1.x, -c40.z

#line 590
                        mul r1.z, r2.z, r8.y
                        rcp r1.w, r3.y
                        mul r8.x, r1.w, r1.z  // ::xyY_XYZ<0>
                        add r1.z, -r2.z, -r3.y
                        add r1.z, r1.z, -c167.y
                        mul r1.z, r8.y, r1.z
                        mul r8.z, r1.w, r1.z  // ::xyY_XYZ<2>
                        cmp r4.xyz, -r3_abs.y, c128.z, r8  // ::xyY_XYZ<0,1,2>

#line 548
                        mul r6.yzw, r4.y, c24.xxyz
                        mad r4.xyw, r4.x, c23.xyzz, r6.yzzw
                        mad r2.xyw, r4.z, c25.xyzz, r4  // ::x<0>, ::y<0>, ::z<0>

#line 2755
                        mov r0.x, -c167.y
                      else
                        if_eq r1.x, -c40.w

#line 586
                          abs r1.z, c13.x

#line 590
                          rcp r1.w, c13.x
                          mul r4.x, r1.w, c12.x  // ::xyY_XYZ<0>
                          mov r8.x, c13.x  // ::WhiteY<0>
                          add r3.w, -r8.x, -c12.x
                          add r3.w, r3.w, -c167.y
                          mul r4.z, r1.w, r3.w  // ::xyY_XYZ<2>

#line 2225
                          mov r4.y, -c167.y
                          mul r4.xyz, r4, c169.w
                          cmp r4.xyz, -r1.z, c124.w, r4  // ::white<0,1,2>

#line 2229
                          add r1.z, r4.y, r4.x
                          add r1.z, r4.z, r1.z
                          rcp r1.w, r1.z
                          mul r1.w, r1.w, r4.y  // ::x0<0>
                          mul r1.z, r1.z, c103.w  // ::ew<0>

#line 2234
                          mul r3.w, r8.y, r8.y

#line 2238
                          mul r4.xy, c38.yxzw, c38.xzzw
                          mul r9.yz, r3.w, c176.xxyw  // ::Y<0>
                          mul r3.w, r1.w, r9.z
                          mul r4.xy, r3.y, r4
                          mul r4.xz, r4.xyyw, c169.w
                          mad r3.w, r3.w, r1.z, r4.x
                          mul r1.w, r1.w, r4.z
                          mad r1.w, r1.w, -r1.z, r3.w
                          mul r3.w, r3.y, c169.w
                          mul r4.xw, r3.w, c38.xyzz
                          mul r5.w, r1.z, r4.z
                          mad r3.w, r3.w, c38.x, -r5.w
                          mul r5.w, r1.z, r9.y
                          mad r3.w, r9.z, r1.z, r3.w
                          rcp r3.w, r3.w
                          mul r1.w, r1.w, r3.w  // ::x<0>
                          mad r3.w, r4.w, c38.x, r9.z
                          mad r3.w, r4.y, -c169.w, r3.w
                          mad r4.x, r5.w, c169.w, r4.x
                          mad r1.z, r4.z, -r1.z, r4.x
                          rcp r1.z, r1.z
                          mul r4.x, r1.z, r3.w  // ::y<0>

#line 590
                          mul r4.y, r9.y, r1.w
                          rcp r4.z, r4.x
                          mul r9.x, r4.z, r4.y  // ::xyY_XYZ<0>
                          mad r1.z, r3.w, -r1.z, -r1.w
                          add r1.z, r1.z, -c167.y
                          mul r1.z, r9.y, r1.z
                          mul r9.w, r4.z, r1.z  // ::xyY_XYZ<2>
                          cmp r4.xyz, -r4_abs.x, c128.z, r9.xyww  // ::xyY_XYZ<0,1,2>

#line 548
                          mul r6.yzw, r4.y, c24.xxyz
                          mad r4.xyw, r4.x, c23.xyzz, r6.yzzw
                          mad r2.xyw, r4.z, c25.xyzz, r4  // ::x<0>, ::y<0>, ::z<0>

#line 2756
                          mov r0.x, -c167.y
                        else
                          if_eq r1.x, -c92.x

#line 548
                            mul r4.xyz, r3.y, c24
                            mad r4.xyz, r2.z, c23, r4
                            mad r2.xyw, r8.y, c25.xyzz, r4.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 2757
                            mov r0.x, -c167.y
                          else
                            if_eq r1.x, -c92.y

#line 2404
                              add r1.z, r2.z, -c168.z
                              mul r1.w, r1.z, c88.w  // ::ypbpr<0>
                              add r3.w, r3.y, c125.w
                              add r4.x, r8.y, c125.w

#line 2359
                              mad r2.x, r4.x, c98.x, r1.w  // ::r<0>
                              mad r2.w, r3.w, c98.y, r1.w  // ::b<0>
                              mul r1.w, r2.x, c151.x
                              mad r1.z, r1.z, c88.w, -r1.w
                              mad r1.z, r2.w, -c151.z, r1.z
                              mul r2.y, r1.z, c98.z  // ::g<0>

#line 2758
                              mov r0.x, -c167.y
                            else

#line 2762
                              add r4, r1.x, c179

#line 2260
                              add r1.x, r2.z, -r3.y  // ::c<0>
                              add r9.x, r8.y, r1.x  // ::YCoCg_Lrgb<0>
                              add r9.y, r2.z, r3.y  // ::YCoCg_Lrgb<1>
                              add r9.z, -r8.y, r1.x  // ::YCoCg_Lrgb<2>

#line 2303
                              mad r1.xzw, r3.y, c126.xyyz, r2.z

#line 2275
                              mad r3.w, r3.y, -c126.w, r2.z
                              mad r10.y, r8.y, c96.x, r3.w  // ::g<0>
                              mad r10.xz, r8.y, -c96.yyzw, r1  // ::r<0>, ::b<0>

#line 2303
                              mad r11.x, r8.y, c96.w, r1.w  // ::r<0>

#line 2328
                              mad r12, r3.y, c93, r2.z

#line 2304
                              mad r11.y, r8.y, c96.w, r12.x  // ::g<0>

#line 2762
                              cmp r1.x, -r4_abs.w, c167_abs.y, c167_abs.x

#line 2328
                              mad r6.yzw, r8.y, c94.xxyz, r12  // ::b<0>, ::r<0>, ::g<0>
                              mad r1.z, r3.y, c94.w, r2.z
                              mad r1.z, r8.y, c95.x, r1.z  // ::b<0>

#line 2332
                              mov_sat r8.xz, r6.zyww
                              cmp r12.xy, r6.zwzw, r8.xzzw, c125.z  // ::r<0>, ::g<0>
                              mov_sat r1.w, r1.z
                              cmp r12.z, r1.z, r1.w, c125.z  // ::b<0>

#line 2762
                              cmp r8.xzw, -r4_abs.w, r12.xyyz, r5.xyzy  // ::TLrgb<0,1,2>
                              mov r11.z, r6.y
                              cmp r6.yzw, -r4_abs.z, r11.xxyz, r8.xxzw  // ::TLrgb<0,1,2>
                              cmp r1.x, -r4_abs.z, -c167.y, r1.x
                              cmp r6.yzw, -r4_abs.y, r10.xxyz, r6  // ::TLrgb<0,1,2>
                              cmp r1.x, -r4_abs.y, -c167.y, r1.x
                              cmp r2.xyw, -r4_abs.x, r9.xyzz, r6.yzzw  // ::TLrgb<0,1,2>
                              cmp r0.x, -r4_abs.x, -c167.y, r1.x
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif

#line 2448
                  mad r4.xy, r8.y, c95.yzzw, r2.z  // ::r<0,0>

#line 2454
                  mad r1.xzw, r3.y, c97.xyyz, r2.z  // ::b<0,0>

#line 2361
                  mad r3.w, r4.x, -c151.x, r2.z
                  mad r3.w, r1.x, -c151.z, r3.w
                  mul r4.z, r3.w, c98.z  // ::g<0>

#line 2451
                  mad r1.z, r8.y, c95.w, r1.z  // ::g<0>

#line 2458
                  mov_sat r3.w, r4.y
                  cmp r9.x, r4.y, r3.w, c125.z  // ::r<0>
                  mov_sat r3.w, r1.z
                  cmp r9.y, r1.z, r3.w, c125.z  // ::g<0>
                  mov_sat r1.z, r1.w
                  cmp r9.z, r1.w, r1.z, c125.z  // ::b<0>

#line 2765
                  cmp r6.yzw, -r0_abs.w, r9.xxyz, r2.xxyw  // ::TLrgb<0,1,2>
                  mov r4.w, r1.x
                  cmp r1.xzw, -r0_abs.y, r4, r6.yyzw  // ::TLrgb<0,1,2>
                  cmp r0.y, -r0_abs.y, c167.y, r1.y
                  mov r3.x, r2.z
                  mov r3.z, r8.y
                  cmp r1.xyz, r0.y, r3, r1.xzww  // ::TLrgb<0,1,2>
                  cmp r5.xyz, -r0.x, r1.xzyw, r2.xwyw  // ::TLrgb<0,2,1>
                endif
              endif
            endif
          endif

#line 2573
          rcp r0.x, c11.x
          log r0.y, r5.x
          mul r0.w, r0.y, r0.x
          exp r7.x, r0.w  // ::V<0>

#line 2578
          if_eq c10.x, r0.z

#line 2638
          else

#line 2578
            mov r1.y, c167.y
            add r0.w, r1.y, c10.x

#line 2586
            add r1.x, -r5.x, -c167.y
            rsq r1.z, r5.x
            rcp r1.z, r1.z
            mul r1.z, r1.z, -c168.w  // ::Transfer<0>
            cmp r1.x, r1.x, -c167_abs.y, -c167_abs.x
            cmp r1.x, r5.x, r1.x, c125.z
            add r1.w, r5.x, c101.y
            log r1.w, r1.w
            mad r1.w, r1.w, c101.z, c101.w  // ::Transfer<0>
            cmp r1.x, r1.x, r1.w, r1.z  // ::Transfer<0>
            cmp r7.x, -r0_abs.w, r1.x, r7.x  // ::Transfer<0>

#line 2593
            if_eq c10.x, -r1.y

#line 2638
            else

#line 2593
              add r0.w, r6.x, c10.x

#line 2596
              add r1.x, -r5.x, c102.z
              mul r1.y, r5.x, c97.w
              cmp r1.x, r1.x, r1.y, -c167.y  // ::V<0>
              cmp r7.x, -r0_abs.w, r1.x, r7.x  // ::Transfer<0>

#line 2601
              if_eq c10.x, -r6.x

#line 2638
              else

#line 2601
                mov r1.x, c10.x  // ::Companding<0>
                add r0.w, r1.x, c58.x

#line 2616
                if_eq r1.x, -c58.x

#line 2610
                  mul r1.y, r0.y, c131.x
                  exp r1.y, r1.y
                  add r1.z, r1.y, -c55.z
                  max r2.x, r1.z, c125.z  // ::a<0>
                  mad r1.y, r1.y, -c55.y, c55.x  // ::b<0>
                  rcp r1.y, r1.y
                  mul r1.y, r1.y, r2.x
                  pow r2.x, r1.y, c148.w
                  mul r1.y, r2.x, c131.y  // ::Transfer<0>
                  cmp r7.x, -r0_abs.w, r1.y, r7.x  // ::Transfer<0>

#line 2638
                else

#line 2632
                  add r1.xyz, r1.x, c166

#line 2627
                  add r2.xy, r5.x, c131.zwzw

#line 2635
                  mul r2.zw, r5.x, c158.xyxy
                  mul r0.yw, r0.y, c158.xzzw

#line 2619
                  exp r0.y, r0.y

#line 2627
                  mad r3.xy, r0.y, c104, c104.zwzw
                  cmp r2.xy, r2, r3, r2.z  // ::V<0,0>

#line 2635
                  add r0.y, -r5.x, c99.x
                  exp r0.w, r0.w
                  mad r0.w, r0.w, c99.y, c99.z
                  cmp r0.y, r0.y, r2.w, r0.w  // ::V<0>

#line 2638
                  cmp r0.y, -r1_abs.z, r0.y, r5.x  // ::Transfer<0>
                  cmp r0.y, -r1_abs.y, r2.y, r0.y  // ::Transfer<0>
                  cmp r7.x, -r1_abs.x, r2.x, r0.y  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2573
          log r0.y, r5.z
          mul r0.w, r0.y, r0.x
          exp r7.y, r0.w  // ::V<0>

#line 2578
          if_eq c10.x, r0.z

#line 2638
          else

#line 2578
            mov r1.y, c167.y
            add r0.w, r1.y, c10.x

#line 2586
            add r1.x, -r5.z, -c167.y
            rsq r1.z, r5.z
            rcp r1.z, r1.z
            mul r1.z, r1.z, -c168.w  // ::Transfer<0>
            cmp r1.x, r1.x, -c167_abs.y, -c167_abs.x
            cmp r1.x, r5.z, r1.x, c125.z
            add r1.w, r5.z, c101.y
            log r1.w, r1.w
            mad r1.w, r1.w, c101.z, c101.w  // ::Transfer<0>
            cmp r1.x, r1.x, r1.w, r1.z  // ::Transfer<0>
            cmp r7.y, -r0_abs.w, r1.x, r7.y  // ::Transfer<0>

#line 2593
            if_eq c10.x, -r1.y

#line 2638
            else

#line 2593
              add r0.w, r6.x, c10.x

#line 2596
              add r1.x, -r5.z, c102.z
              mul r1.y, r5.z, c97.w
              cmp r1.x, r1.x, r1.y, -c167.y  // ::V<0>
              cmp r7.y, -r0_abs.w, r1.x, r7.y  // ::Transfer<0>

#line 2601
              if_eq c10.x, -r6.x

#line 2638
              else

#line 2601
                mov r1.x, c10.x  // ::Companding<0>
                add r0.w, r1.x, c58.x

#line 2616
                if_eq r1.x, -c58.x

#line 2610
                  mul r1.y, r0.y, c131.x
                  exp r1.y, r1.y
                  add r1.z, r1.y, -c55.z
                  max r2.x, r1.z, c125.z  // ::a<0>
                  mad r1.y, r1.y, -c55.y, c55.x  // ::b<0>
                  rcp r1.y, r1.y
                  mul r1.y, r1.y, r2.x
                  pow r2.x, r1.y, c148.w
                  mul r1.y, r2.x, c131.y  // ::Transfer<0>
                  cmp r7.y, -r0_abs.w, r1.y, r7.y  // ::Transfer<0>

#line 2638
                else

#line 2632
                  add r1.xyz, r1.x, c166

#line 2627
                  add r2.xy, r5.z, c131.zwzw

#line 2635
                  mul r2.zw, r5.z, c158.xyxy
                  mul r0.yw, r0.y, c158.xzzw

#line 2619
                  exp r0.y, r0.y

#line 2627
                  mad r3.xy, r0.y, c104, c104.zwzw
                  cmp r2.xy, r2, r3, r2.z  // ::V<0,0>

#line 2635
                  add r0.y, -r5.z, c99.x
                  exp r0.w, r0.w
                  mad r0.w, r0.w, c99.y, c99.z
                  cmp r0.y, r0.y, r2.w, r0.w  // ::V<0>

#line 2638
                  cmp r0.y, -r1_abs.z, r0.y, r5.z  // ::Transfer<0>
                  cmp r0.y, -r1_abs.y, r2.y, r0.y  // ::Transfer<0>
                  cmp r7.y, -r1_abs.x, r2.x, r0.y  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2573
          log r0.y, r5.y
          mul r0.x, r0.y, r0.x
          exp r7.z, r0.x  // ::V<0>

#line 2578
          if_eq c10.x, r0.z

#line 2638
          else

#line 2578
            mov r1.y, c167.y
            add r0.x, r1.y, c10.x

#line 2586
            add r0.z, -r5.y, -c167.y
            rsq r0.w, r5.y
            rcp r0.w, r0.w
            mul r0.w, r0.w, -c168.w  // ::Transfer<0>
            cmp r0.z, r0.z, -c167_abs.y, -c167_abs.x
            cmp r0.z, r5.y, r0.z, c125.z
            add r1.x, r5.y, c101.y
            log r1.x, r1.x
            mad r1.x, r1.x, c101.z, c101.w  // ::Transfer<0>
            cmp r0.z, r0.z, r1.x, r0.w  // ::Transfer<0>
            cmp r7.z, -r0_abs.x, r0.z, r7.z  // ::Transfer<0>

#line 2593
            if_eq c10.x, -r1.y

#line 2638
            else

#line 2593
              add r0.x, r6.x, c10.x

#line 2596
              add r0.z, -r5.y, c102.z
              mul r0.w, r5.y, c97.w
              cmp r0.z, r0.z, r0.w, -c167.y  // ::V<0>
              cmp r7.z, -r0_abs.x, r0.z, r7.z  // ::Transfer<0>

#line 2601
              if_eq c10.x, -r6.x

#line 2638
              else

#line 2601
                mov r0.x, c10.x  // ::Companding<0>
                add r0.z, r0.x, c58.x

#line 2616
                if_eq r0.x, -c58.x

#line 2610
                  mul r0.w, r0.y, c131.x
                  exp r0.w, r0.w
                  add r1.x, r0.w, -c55.z
                  max r2.x, r1.x, c125.z  // ::a<0>
                  mad r0.w, r0.w, -c55.y, c55.x  // ::b<0>
                  rcp r0.w, r0.w
                  mul r0.w, r0.w, r2.x
                  pow r1.x, r0.w, c148.w
                  mul r0.w, r1.x, c131.y  // ::Transfer<0>
                  cmp r7.z, -r0_abs.z, r0.w, r7.z  // ::Transfer<0>

#line 2638
                else

#line 2632
                  add r0.xzw, r0.x, c166.xyyz

#line 2627
                  add r1.xy, r5.y, c131.zwzw

#line 2635
                  mul r1.zw, r5.y, c158.xyxy
                  mul r2.xy, r0.y, c158.zwzw

#line 2619
                  exp r0.y, r2.x

#line 2627
                  mad r2.xz, r0.y, c104.xyyw, c104.zyww
                  cmp r1.xy, r1, r2.xzzw, r1.z  // ::V<0,0>

#line 2635
                  add r0.y, -r5.y, c99.x
                  exp r1.z, r2.y
                  mad r1.z, r1.z, c99.y, c99.z
                  cmp r0.y, r0.y, r1.w, r1.z  // ::V<0>

#line 2638
                  cmp r0.y, -r0_abs.w, r0.y, r5.y  // ::Transfer<0>
                  cmp r0.y, -r0_abs.z, r1.y, r0.y  // ::Transfer<0>
                  cmp r7.z, -r0_abs.x, r1.x, r0.y  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 3056
        endif
      endif

#line 3059
      mov oC0.xyz, r7  // ::main<0,1,2>
      mov oC0.w, -c167.y  // ::main<3>

#line 2989
    endif

// approximately 6561 instruction slots used (1 texture, 6560 arithmetic)
