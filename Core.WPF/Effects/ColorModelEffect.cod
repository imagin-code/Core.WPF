//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float Companding;
//   float Depth;
//   float Gamma;
//   float HighlightAmount;
//   float3 LABk_LMSk_x;
//   float3 LABk_LMSk_y;
//   float3 LABk_LMSk_z;
//   float3 LMS_XYZ_x;
//   float3 LMS_XYZ_y;
//   float3 LMS_XYZ_z;
//   float3 LMSk_LABk_x;
//   float3 LMSk_LABk_y;
//   float3 LMSk_LABk_z;
//   float3 LMSk_XYZk_x;
//   float3 LMSk_XYZk_y;
//   float3 LMSk_XYZk_z;
//   float MidtoneAmount;
//   float MidtoneRange;
//   float Mode;
//   float Model;
//   float3 RGB_XYZ_x;
//   float3 RGB_XYZ_y;
//   float3 RGB_XYZ_z;
//   float ShadowAmount;
//   float ShadowRange;
//   float Shape;
//   float W;
//   float WhiteX;
//   float WhiteY;
//   float X;
//   float XComponent;
//   float3 XYZ_LMS_x;
//   float3 XYZ_LMS_y;
//   float3 XYZ_LMS_z;
//   float3 XYZ_RGB_x;
//   float3 XYZ_RGB_y;
//   float3 XYZ_RGB_z;
//   float Y;
//   float YComponent;
//   float Z;
//   sampler2D input;
//   float3 xyYC_exy;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   Model           c0       1
//   XComponent      c1       1
//   YComponent      c2       1
//   Mode            c3       1
//   Shape           c4       1
//   Depth           c5       1
//   X               c6       1
//   Y               c7       1
//   Z               c8       1
//   W               c9       1
//   Companding      c10      1
//   Gamma           c11      1
//   WhiteX          c12      1
//   WhiteY          c13      1
//   LMS_XYZ_x       c14      1
//   LMS_XYZ_y       c15      1
//   LMS_XYZ_z       c16      1
//   RGB_XYZ_x       c17      1
//   RGB_XYZ_y       c18      1
//   RGB_XYZ_z       c19      1
//   XYZ_LMS_x       c20      1
//   XYZ_LMS_y       c21      1
//   XYZ_LMS_z       c22      1
//   XYZ_RGB_x       c23      1
//   XYZ_RGB_y       c24      1
//   XYZ_RGB_z       c25      1
//   LABk_LMSk_x     c26      1
//   LABk_LMSk_y     c27      1
//   LABk_LMSk_z     c28      1
//   LMSk_LABk_x     c29      1
//   LMSk_LABk_y     c30      1
//   LMSk_LABk_z     c31      1
//   LMSk_XYZk_x     c32      1
//   LMSk_XYZk_y     c33      1
//   LMSk_XYZk_z     c34      1
//   xyYC_exy        c38      1
//   HighlightAmount c39      1
//   MidtoneAmount   c41      1
//   MidtoneRange    c42      1
//   ShadowAmount    c43      1
//   ShadowRange     c44      1
//   input           s0       1
//

    ps_3_0
    def c35, -25, -26, -27, -28
    def c36, -38, -39, -40, -41
    def c37, -10, -11, -12, -13
    def c40, -14, -15, -16, -17
    def c45, -17, -18, -19, -20
    def c46, -21, -22, -23, -24
    def c47, 1.41421354, 1, 2, 3
    def c48, 0.0208350997, -0.0851330012, 0.999866009, 6.28318548
    def c49, 8, 12, 6, 0.180141002
    def c50, -2, 1.57079637, -0, -3.14159274
    def c51, 7.85398197, 1.57079673, 0.159154937, 0.0799999982
    def c52, 0.159999996, 0.862069011, 0.159301758, 78.84375
    def c53, -0.0810000002, 0.0989999995, -0.0812428594, 0.0992968082
    def c54, 0.0404499993, 0.0549999997, 0.947867334, 2.4000001
    def c55, 0.222222224, 0.0773993805, 0.909918129, 0.909672439
    def c56, -3, -35, -4, -36
    def c57, 360, 100, 255, 128
    def c58, -0.0187292993, 0.0742610022, -0.212114394, 1.57072878
    def c59, -29, -30, -31, -32
    def c60, 60, 50, 0.142857149, 0.156173766
    def c61, 0.142857149, 7, 1, 6.99999952
    def c62, 0.114, 0.666666687, 360, 0.5
    def c63, 6742.07861, 3827.99316, 9.99999975e-005, 134.034378
    def c64, 18.8515625, 18.6875, 0.8359375, 1
    def c65, 0.219999999, 0.280000001, 1, -1.62954997e-011
    def c66, 100, 224, 122, -0.330299497
    def c67, 0.159154937, 0.25, 0.75, 104
    def c68, -33, -34, -35, -36
    def c69, 0.596000016, 0.211999997, 0.212599993, 120
    def c70, -0.275000006, -0.527999997, 0.715200007, 0.00277777785
    def c71, 0.25, -0.25, 0.5, -0.32100001
    def c72, 0.31099999, 0.0722000003, 0.538909256, 0.635001242
    def c73, 0.252999991, 0.5, 0.25, 0.298999995
    def c74, 0.063000001, -0.5, 0.114, 0.00392156886
    def c75, 0.298999995, -0.147129998, 0.61500001, -9.99999994e-009
    def c76, 0.587000012, -0.288859993, -0.514989972, 1.04719758
    def c77, 0.114, 0.43599999, -0.10001, 6.40657674e-007
    def c78, 360, 0.00277777785, -360, -0.00277777785
    def c79, 0.0174532942, 1.04719758, 0.159154937, 0.5
    def c80, 0.0174532942, -2.09439516, -4.18879032, 769859.875
    def c81, 1394988.5, -120846.469, 3.40282347e+038, 126452
    def c82, 0.00277777808, 0.5, 8.00000095, 0.00862068962
    def c83, -2, 3.14159274, 0.333333343, 57.2957764
    def c84, -7, -39, -8, -40
    def c85, -1, -33, -2, -34
    def c86, -9, -26, -27, -41
    def c87, 0.999778986, 1.07094002, 0.324891001, 0.00828392897
    def c88, 1.00014997, -0.377743989, 0.220439002, 0.714139998
    def c89, 0.999768972, 0.0629495978, -0.809638023, 0.00456620986
    def c90, 0.560000002, 0.439999998, 0.138605043, 0.0960192457
    def c91, 0.00746077253, 18.6875, -18.8515625, 6.27739477
    def c92, 0.0399999991, 0.00703035761, 0.00828392897, 9.99999996e-012
    def c93, 1.40199995, 1.77199996, 0.00456620986, 0.00703035761
    def c94, 1.43099999, -0.569000006, 0.430999994, 0.95599997
    def c95, 0.126000002, -1.87399995, 0.620999992, 1.57480001
    def c96, -0.272000015, -1.10800004, 1.8556, -0.580600023
    def c97, 0.525912642, 7.92025457e-005, -0.647000015, 1.70500004
    def c98, 1.39821029, 0.00499999989, 0.00200000009, 0.00571428565
    def c99, 1.13982999, -0.394650012, 2.02310991, 9.0329628
    def c100, 0.00313080009, 1.05499995, -0.0549999997, 0
    def c101, 1.09899998, 1.09929681, -0.0989999995, -0.0992968082
    def c102, -42, 42, 0, -128
    def c103, -43, -44, -45, 0
    def c104, 12, -0.284668922, 0.123957433, 0.559910715
    def c105, 0.00885645207, 903.296326, 300, 600
    def c106, 0.587000012, 0.883000016, 1.11600006, 0.00999999978
    def c107, 0.00277777785, -0.666666687, 1, -0.333333343
    def c108, 180, 0.00277777785, -0.333333343, 0.666666687
    def c109, -0.980705976, -1.18224943, 88.3659897, 32.0938988
    def c110, 0.00110705639, 769860, 52, 13
    def c111, -37, -0, -32, 1
    def c112, 175, 70, 9.99999983e+012, 1
    def c113, 0.418687999, 0.0813120008, 9.99999982e-014, 475.70459
    def c114, 239.999985, 179.999985, 119.999992, 59.9999962
    def c115, 0.00999999978, 0.00392156886, 1, 13824.001
    def c116, 0.0126833133, 10000, -0.0179999992, -0.0180539694
    def c117, 0.0199999996, -1, -299.999969, -359.999969
    def c118, -180, -240, -300, 0.344139993
    def c119, 1, -1, 0, 0.110705636
    def c120, 0.00277777785, 0.00277777808, 0.5, 0.00044209708
    def c121, 0.0097833341, 0.298999995, 1.79399991, 0.587000012
    def c122, 3.52200007, 0.684000015, 0.114, 0.298999995
    def c123, 0.684000015, -0.5, 0.25, 0.587000012
    def c124, 6, 0.166666672, -6, -0.166666672
    def c125, 9.99999983e+012, 1.49999999e-012, 1, 15
    def c126, 116, -16, 0.0142857144, 0.058047317
    def c127, 4.5, 12.9200001, 0.449999988, 0.416666657
    def c128, 9.23037151e-005, 0.66467905, 0.129132897, 0.267899334
    def c129, 2182.53833, 2313.62085, 15227.666, 0.47299999
    def c130, 9145.23047, 15718.4707, 3127.28296, -3250.75854
    def c131, 0.058047317, 0.811891913, 16613.7305, -909.828125
    def c132, -986593.562, 694074.125, 0.0640312433, 0.189999998
    def c133, 1394988.5, -120846.469, -315176.688, -210946.25
    def c134, -5, -37, -6, -38
    def c135, 0.212599993, 0.715200007, 0.0722000003, 0.331263989
    def c136, 0.00499999989, 0.00999999978, 0.185000002, 1.5
    def c137, 0.00110705639, 52, 13, 39
    def c138, 0, 1, 100, 0.0166666675
    def c139, 0.00999999978, 0.229999989, 0.00277777785, 0.333333343
    def c140, 0.666666687, 1, 0.114, 0.216999993
    def c141, 100, 1500, 400, -0.449999988
    def c142, 3.52399993, 0.54270798, 0.199075997, 1.29587495
    def c143, 833.27301, 6709.7002, 4.06670809, 1.09679902
    def c144, 7396.2832, 709.410828, 1747.68005, 1492.84155
    def c145, 219, 16, 0.168735996, 128
    def c146, 0.857142866, -6, 0.298999995, 0.587000012
    def c147, 120.715675, 142.24028, 128, 0.5
    def c148, -4, -5, -6, 2.22222233
    def c149, -10, -6, 10, 0
    def c150, 0, -134, -140, 16
    def c151, 0, -0.5, -1.33299994, 255
    def c152, 0, -0.595700026, -0.522599995, 100
    def c153, 1, 360, 76, 100
    def c154, 235, 240, 1, 0.5
    def c155, 1, 1.33299994, 0.595700026, 0.522599995
    def c156, 2, 0.5, -2, -0.5
    def c157, -18, -19, -20, -21
    def c158, -22, -23, -24, -25
    def c159, -28, -29, -30, -31
    def c160, -0, -32, -1, -33
    def c161, 0.298999995, 0.587000012, 0.114, -1.33299994
    def c162, -1, -2, -3, -4
    def c163, 0.00277777785, 0.5, 6.28318548, -3.14159274
    def c164, -120846.469, -210946.25, 126452, 694074.125
    def c165, 0.684000015, 1.79399991, 0.587000012, 0.114
    dcl_texcoord v0.xy  // uv<0,1>
    dcl_2d s0

#line 2521 "C:\Users\james\GitHub\Core.WPF\Core.WPF\Effects\ColorModel.fx"
    mov r0.xyz, c102
    add r0.x, r0.x, c0.x
    if_ge c0.x, r0.y

#line 2529
      mov r1.xy, c102.z
      mov r2.x, c102.z
      mov r1.w, c6.x  // ::input4<0>
      mov r2.y, c7.x  // ::input4<1>
      mov r2.z, c8.x  // ::input4<2>
      mov r3.w, c9.x  // ::input4<3>
      mov r4.xyz, c102.z
      mov r5.xyz, c102.z
    else

#line 2532
      frc r0.w, c0.x
      add r0.w, -r0.w, c0.x
      add r6, r0.w, c45
      add r7, r0.w, c46
      add r8, r0.w, c35
      add r9, r0.w, c59
      add r10, r0.w, c68
      add r11, r0.w, c36
      add r12.xyz, r0.w, c111
      cmp r13.xyz, -r6_abs.x, c102.zwww, c102.z
      cmp r13.xyz, -r6_abs.y, c149.xyxw, r13
      cmp r6.xyz, -r6_abs.z, -c111.ywww, r13
      cmp r6.xyz, -r6_abs.w, c102.z, r6
      cmp r6.xyz, -r7_abs.x, c102.z, r6
      cmp r6.xyz, -r7_abs.y, c102.z, r6
      cmp r6.xyz, -r7_abs.z, c102.z, r6
      cmp r6.xyz, -r7_abs.w, c102.z, r6
      cmp r6.xyz, -r8_abs.x, c102.z, r6
      cmp r6.xyz, -r8_abs.y, c102.z, r6
      cmp r6.xyz, -r8_abs.z, c150, r6
      cmp r6.xyz, -r8_abs.w, c102.z, r6
      cmp r6.xyz, -r9_abs.x, c102.z, r6
      cmp r6.xyz, -r9_abs.y, c150.yzxw, r6
      cmp r6.xyz, -r9_abs.z, c102.z, r6
      cmp r6.xyz, -r9_abs.w, c102.z, r6
      cmp r6.xyz, -r10_abs.x, c149.zwww, r6
      cmp r6.xyz, -r10_abs.y, c102.z, r6
      cmp r6.xyz, -r10_abs.z, c150.w, r6
      cmp r6.xyz, -r10_abs.w, c151.xyyw, r6
      cmp r6.xyz, -r12_abs.x, c151.xzzw, r6
      cmp r6.xyz, -r11_abs.x, c102.z, r6
      cmp r6.xyz, -r11_abs.y, c152, r6
      cmp r6.xyz, -r11_abs.z, c151.xyyw, r6
      cmp r4.xyz, -r11_abs.w, c151.xyyw, r6  // ::min3<0,1,2>
      add r6, r0.w, c134
      add r7, r0.w, c84
      add r8, r0.w, c86
      add r9, r0.w, c37
      add r10, r0.w, c40
      add r11, r0.w, c157
      add r13, r0.w, c158
      add r14, r0.w, c159
      add r15, r0.w, c85
      add r16, r0.w, c56
      cmp r0.w, -r12_abs.y, c111_abs.w, c111_abs.y
      cmp r12.xyw, -r15_abs.x, c151.w, r0.w
      cmp r12.xyw, -r15_abs.z, c111.w, r12
      cmp r12.xyw, -r16_abs.x, c57.xyzy, r12
      cmp r12.xyw, -r16_abs.z, c57.xyzz, r12
      cmp r12.xyw, -r6_abs.x, c57.xyzy, r12
      cmp r12.xyw, -r6_abs.z, c57.xyzy, r12
      cmp r12.xyw, -r7_abs.x, c57.xyzy, r12
      cmp r12.xyw, -r7_abs.z, c57.xyzy, r12
      cmp r12.xyw, -r8_abs.x, c57.xyzy, r12
      cmp r12.xyw, -r9_abs.x, c57.xyzy, r12
      cmp r12.xyw, -r9_abs.y, c57.xyzz, r12
      cmp r9.xyz, -r9_abs.z, c57, r12.xyww
      cmp r9.xyz, -r9_abs.w, c57.xyyw, r9
      cmp r9.xyz, -r10_abs.x, c111.w, r9
      cmp r9.xyz, -r10_abs.y, c151.w, r9
      cmp r9.xyz, -r10_abs.z, c152.w, r9
      cmp r9.xyz, -r10_abs.w, c57.ywww, r9
      cmp r9.xyz, -r11_abs.x, c49, r9
      cmp r9.xyz, -r11_abs.y, c111.w, r9
      cmp r9.xyz, -r11_abs.z, c111.w, r9
      cmp r9.xyz, -r11_abs.w, c57.yyxw, r9
      cmp r9.xyz, -r13_abs.x, c57.yyxw, r9
      cmp r9.xyz, -r13_abs.y, c153.xxyw, r9
      cmp r9.xyz, -r13_abs.z, c57.yyxw, r9
      cmp r9.xyz, -r13_abs.w, c57.yyxw, r9
      cmp r9.xyz, -r8_abs.y, c111.w, r9
      cmp r8.xyz, -r8_abs.z, c66, r9
      cmp r8.xyz, -r14_abs.x, c111.w, r8
      cmp r8.xyz, -r14_abs.y, c111.w, r8
      cmp r8.xyz, -r14_abs.z, c66.yzxw, r8
      cmp r8.xyz, -r14_abs.w, c151.w, r8
      cmp r8.xyz, -r12_abs.z, c111.w, r8
      cmp r8.xyz, -r15_abs.y, c153.zwww, r8
      cmp r8.xyz, -r15_abs.w, c111.w, r8
      cmp r8.xyz, -r16_abs.y, c154.xyyw, r8
      cmp r8.xyz, -r16_abs.w, c154.zwww, r8
      cmp r6.xyz, -r6_abs.y, c155.xyyw, r8
      cmp r6.xyz, -r6_abs.w, c111.w, r6
      cmp r6.xyz, -r7_abs.y, c155.xzww, r6
      cmp r6.xyz, -r7_abs.w, c154.zwww, r6
      cmp r5.xyz, -r8_abs.w, c154.zwww, r6  // ::max3<0,1,2>

#line 2536
      mov r1.x, c6.x  // ::input3<0>
      mov r1.y, c7.x  // ::input3<1>
      mov r2.x, c8.x  // ::input3<2>
      mov r1.w, c102.z  // ::input4<0>
      mov r2.yz, c102.z  // ::input4<1,2>
      mov r3.w, c102.z  // ::input4<3>
    endif

#line 2542
    mov r6.z, c85.z
    if_eq c3.x, -r6.z

#line 2548
      mov r0.w, c111.w
      add r0.w, -r0.w, c4.x

#line 440
      add r6.xyw, c154.wzzw, -v0.xyzy  // ::N<0>
      mul r6.xw, r6_abs, r6_abs
      add r4.w, r6.w, r6.x
      rsq r4.w, r4.w
      rcp r4.w, r4.w  // ::GetDistance<0>

#line 2550
      mad r4.w, r4.w, -c47.x, c47.y  // ::N<0>
      cmp r1.z, -r0_abs.w, r4.w, r6.y  // ::N<0>
      abs r0.w, c1.x
      cmp r7.xy, r0.x, r1.xzzw, r1.zwzw  // ::input3<0>, ::input4<0>

#line 2565
      mov r8.yzw, c47
      add r6.xyw, -r8.yzzw, c1.x

#line 2559
      mov r2.w, r1.z
      cmp r8.xy, r0.x, r1.yzzw, r2.wyzw  // ::input3<1>, ::input4<1>

#line 2563
      cmp r3.xy, r0.x, r2.xwzw, r2.wzzw  // ::input3<2>, ::input4<2>

#line 2567
      cmp r4.w, r0.x, r2.w, r3.w  // ::input4<3>
      cmp r9.x, -r6_abs.w, r4.w, r3.w  // ::input4<3>
      mov r9.yz, r2.xxzw
      cmp r10.xyz, -r6_abs.y, r3.ywxw, r9.zxyw  // ::input4<2,3>, ::input3<2>
      mov r8.z, r9.z
      mov r8.w, r3.w
      mov r10.w, r2.y
      cmp r11.yzw, -r6_abs.x, r8, r10.xwxy  // ::input4<1,2,3>
      mov r9.w, r8.x
      mov r10.y, r1.y
      cmp r1.yz, -r6_abs.x, r9.xwyw, r10  // ::input3<1,2>
      mov r8.x, r7.y
      mov r8.yz, r2
      mov r11.x, r1.w
      cmp r3, -r0.w, r8, r11  // ::input4<0,1,2,3>
      mov r7.z, r10.y
      mov r7.w, r9.y
      cmp r2.xyw, -r0.w, r7.wxzz, r1.zxzy  // ::input3<2,0,1>
      mov oC0, c102.z  // ::main<0,1,2,3>
      mov r0.w, c102.z
    else
      mov r6.xw, c111
      if_eq c3.x, r6.w

#line 2577
        add r4.w, -r6.w, c4.x

#line 2580
        add r7.xyz, c154.zwww, -v0.yxyw  // ::N<0>

#line 440
        add r5.w, -r7.x, -c151.y
        mul r5.w, r5_abs.w, r5_abs.w
        mad r5.w, r7_abs.y, r7_abs.y, r5.w
        rsq r5.w, r5.w
        rcp r5.w, r5.w  // ::GetDistance<0>

#line 2579
        mad r7.x, r5.w, -c47.x, c47.y  // ::xN<0>
        add r5.w, c151.y, v0.x
        min r6.y, r5_abs.w, r7_abs.z
        max r8.x, r7_abs.z, r5_abs.w
        rcp r7.w, r8.x
        mul r6.y, r6.y, r7.w
        mul r7.w, r6.y, r6.y
        mad r8.x, r7.w, c48.x, c48.y
        mad r8.x, r7.w, r8.x, c49.w
        mad r8.x, r7.w, r8.x, c66.w
        mad r7.w, r7.w, r8.x, c48.z
        mul r6.y, r6.y, r7.w
        add r7.w, -r7_abs.z, r5_abs.w
        cmp r7.w, r7.w, c111_abs.y, c111_abs.w
        mad r8.x, r6.y, c50.x, c50.y
        mad r6.y, r8.x, r7.w, r6.y
        cmp r7.w, r5.w, c50.z, c50.w
        add r6.y, r6.y, r7.w
        min r8.x, r5.w, r7.z
        max r8.y, r7.z, r5.w
        cmp r5.w, r8.y, c111_abs.w, c111_abs.y
        cmp r5.w, r8.x, c102.z, r5.w
        add r7.z, r6.y, r6.y
        mad r5.w, r5.w, -r7.z, r6.y
        add r7.zw, r5.w, c51.xyxy  // ::yN<0>
        add r5.w, -r7.z, c48.w
        cmp r5.w, r5.w, r7.z, r7.w  // ::yN<0>
        mul r7.y, r5.w, c51.z  // ::yN<0>

#line 2587
        mad r7.zw, v0.xyxy, c119.xyxy, c119.xyzx
        cmp r7.yw, -r4_abs.w, r7.xxzy, r7.xzzw  // ::M<0>, ::N<0>
        abs r4.w, c1.x
        mov r7.xz, r1.xyww
        cmp r8.xz, r0.x, r7.xyyw, r7.yyzw  // ::input3<0>, ::input4<0>

#line 2601
        mov r9.yzw, c47
        add r10.xyz, -r9.yzww, c1.x

#line 2595
        mov r1.x, r7.y

#line 2599
        mov r1.zw, r2.xyyx

#line 2595
        cmp r11.xy, r0.x, r1.yxzw, r1.xzzw  // ::input3<1>, ::input4<1>

#line 2604
        mov r12.xy, r1.xzzw

#line 2599
        mov r12.z, r2.z
        cmp r3.xz, r0.x, r1.wyxw, r12  // ::input3<2>, ::input4<2>

#line 2603
        cmp r5.w, r0.x, r7.y, r3.w  // ::input4<3>
        cmp r2.w, -r10_abs.z, r5.w, r3.w  // ::input4<3>
        cmp r12.xzw, -r10_abs.y, r3, r2  // ::input3<2>, ::input4<2,3>
        mov r3.xz, r2
        mov r3.y, r11.y
        cmp r13, -r10_abs.x, r3, r12  // ::input3<2>, ::input4<1,2,3>
        cmp r7.y, -r10_abs.x, r11.x, r1.y  // ::input3<1>
        mov r12.xzw, r3
        cmp r10, -r4.w, r12, r13  // ::input3<2>, ::input4<1,2,3>
        mov r8.y, r1.y
        cmp r7.xyz, -r4.w, r8.yxzw, r7.yxzw  // ::input3<1,0>, ::input4<0>
        abs r1.z, c2.x
        cmp r8.xy, r0.x, r7.ywzw, r7.wzzw  // ::input3<0>, ::input4<0>

#line 2618
        add r9.xyz, -r9.yzww, c2.x

#line 2612
        mov r11.z, r7.w

#line 2616
        mov r11.xyw, r10.xzzy

#line 2612
        cmp r12.xy, r0.x, r7.xwzw, r11.zwzw  // ::input3<1>, ::input4<1>

#line 2616
        cmp r13.xy, r0.x, r11.xzzw, r11.zyzw  // ::input3<2>, ::input4<2>

#line 2620
        cmp r4.w, r0.x, r7.w, r10.w  // ::input4<3>
        cmp r14.x, -r9_abs.z, r4.w, r10.w  // ::input4<3>
        mov r13.z, r10.w
        mov r14.yz, r11.xxyw
        cmp r11.xyz, -r9_abs.y, r13.yzxw, r14.zxyw  // ::input4<2,3>, ::input3<2>
        mov r12.zw, r10
        cmp r13.yzw, -r9_abs.x, r12, r11.xwxy  // ::input4<1,2,3>
        mov r14.w, r12.x
        mov r11.y, r7.x
        cmp r9.yz, -r9_abs.x, r14.xwyw, r11  // ::input3<1,2>
        mov r10.x, r8.y
        mov r13.x, r7.z
        cmp r3, -r1.z, r10, r13  // ::input4<0,1,2,3>
        mov r8.z, r11.y
        mov r8.w, r14.y
        mov r9.x, r7.y
        cmp r2.xyw, -r1.z, r8.wxzz, r9.zxzy  // ::input3<2,0,1>
        mov oC0, c102.z  // ::main<0,1,2,3>
        mov r0.w, c102.z
      else
        abs r1.z, c3.x
        cmp r0.w, -r1.z, c111_abs.w, c111_abs.y
        if_eq c3.x, r0.z

#line 2512
          texld r7, v0, s0  // ::color<0,1,2,3>

#line 2208
          log r1.z, r7.x
          mul r4.w, r1.z, c11.x
          exp r8.x, r4.w  // ::v<0>

#line 2213
          if_eq c10.x, r0.z

#line 2271
          else

#line 2213
            add r4.w, -r6.w, c10.x

#line 2222
            mul r5.w, r7.x, -c56.x
            rsq r5.w, r5.w
            rcp r5.w, r5.w  // ::TransferInverse<0>
            cmp r6.y, -r7.x, -c111_abs.w, -c111_abs.y
            cmp r6.y, r7.x, r6.y, c102.z
            mad r8.w, r7.x, c104.x, c104.y
            log r8.w, r8.w
            mad r8.w, r8.w, c104.z, c104.w  // ::TransferInverse<0>
            cmp r5.w, r6.y, r8.w, r5.w  // ::TransferInverse<0>
            cmp r8.x, -r4_abs.w, r5.w, r8.x  // ::TransferInverse<0>

#line 2226
            if_eq c10.x, r6.w

#line 2271
            else

#line 2226
              add r4.w, r6.z, c10.x

#line 2229
              add r5.w, -r7.x, c51.w
              mul r6.y, r7.x, c119.w
              add r8.w, r7.x, c52.x
              mul r8.w, r8.w, c52.y
              mul r9.x, r8.w, r8.w
              mul r8.w, r8.w, r9.x
              cmp r5.w, r5.w, r6.y, r8.w  // ::v<0>
              cmp r8.x, -r4_abs.w, r5.w, r8.x  // ::TransferInverse<0>

#line 2234
              if_eq c10.x, -r6.z

#line 2271
              else

#line 2234
                mov r9.x, c10.x  // ::Companding<0>
                add r4.w, r9.x, c56.x

#line 2249
                if_eq r9.x, -c56.x

#line 2243
                  mul r1.z, r1.z, c52.z
                  exp r1.z, r1.z
                  mad r9.yz, r1.z, c64.xxyw, c64.xzww  // ::a<0>, ::b<0>
                  rcp r1.z, r9.z
                  mul r1.z, r1.z, r9.y
                  pow r5.w, r1.z, c52.w  // ::TransferInverse<0>
                  cmp r8.x, -r4_abs.w, r5.w, r8.x  // ::TransferInverse<0>

#line 2271
                else

#line 2265
                  add r9.xyz, r9.x, c148

#line 2268
                  mul r10.xy, r7.x, c55

#line 2260
                  add r11, r7.x, c53
                  mul r10.zw, r11.xyyw, c55

#line 2252
                  pow r1.z, r10.z, c148.w
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2260
                  pow r4.w, r10.w, c148.w
                  cmp r4.w, r11.z, r4.w, r10.x  // ::L<0>

#line 2268
                  add r5.w, -r7.x, c54.x
                  add r6.y, r7.x, c54.y
                  mul r6.y, r6.y, c54.z
                  pow r8.w, r6.y, c54.w
                  cmp r5.w, r5.w, r10.y, r8.w  // ::v<0>

#line 2271
                  cmp r5.w, -r9_abs.z, r5.w, r7.x  // ::TransferInverse<0>
                  cmp r4.w, -r9_abs.y, r4.w, r5.w  // ::TransferInverse<0>
                  cmp r8.x, -r9_abs.x, r1.z, r4.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2208
          log r1.z, r7.y
          mul r4.w, r1.z, c11.x
          exp r8.y, r4.w  // ::v<0>

#line 2213
          if_eq c10.x, r0.z

#line 2271
          else

#line 2213
            add r4.w, -r6.w, c10.x

#line 2222
            mul r5.w, r7.y, -c56.x
            rsq r5.w, r5.w
            rcp r5.w, r5.w  // ::TransferInverse<0>
            cmp r6.y, -r7.y, -c111_abs.w, -c111_abs.y
            cmp r6.y, r7.y, r6.y, c102.z
            mad r8.w, r7.y, c104.x, c104.y
            log r8.w, r8.w
            mad r8.w, r8.w, c104.z, c104.w  // ::TransferInverse<0>
            cmp r5.w, r6.y, r8.w, r5.w  // ::TransferInverse<0>
            cmp r8.y, -r4_abs.w, r5.w, r8.y  // ::TransferInverse<0>

#line 2226
            if_eq c10.x, r6.w

#line 2271
            else

#line 2226
              add r4.w, r6.z, c10.x

#line 2229
              add r5.w, -r7.y, c51.w
              mul r6.y, r7.y, c119.w
              add r8.w, r7.y, c52.x
              mul r8.w, r8.w, c52.y
              mul r9.x, r8.w, r8.w
              mul r8.w, r8.w, r9.x
              cmp r5.w, r5.w, r6.y, r8.w  // ::v<0>
              cmp r8.y, -r4_abs.w, r5.w, r8.y  // ::TransferInverse<0>

#line 2234
              if_eq c10.x, -r6.z

#line 2271
              else

#line 2234
                mov r9.x, c10.x  // ::Companding<0>
                add r4.w, r9.x, c56.x

#line 2249
                if_eq r9.x, -c56.x

#line 2243
                  mul r1.z, r1.z, c52.z
                  exp r1.z, r1.z
                  mad r9.yz, r1.z, c64.xxyw, c64.xzww  // ::a<0>, ::b<0>
                  rcp r1.z, r9.z
                  mul r1.z, r1.z, r9.y
                  pow r5.w, r1.z, c52.w  // ::TransferInverse<0>
                  cmp r8.y, -r4_abs.w, r5.w, r8.y  // ::TransferInverse<0>

#line 2271
                else

#line 2265
                  add r9.xyz, r9.x, c148

#line 2268
                  mul r10.xy, r7.y, c55

#line 2260
                  add r11, r7.y, c53
                  mul r10.zw, r11.xyyw, c55

#line 2252
                  pow r1.z, r10.z, c148.w
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2260
                  pow r4.w, r10.w, c148.w
                  cmp r4.w, r11.z, r4.w, r10.x  // ::L<0>

#line 2268
                  add r5.w, -r7.y, c54.x
                  add r6.y, r7.y, c54.y
                  mul r6.y, r6.y, c54.z
                  pow r8.w, r6.y, c54.w
                  cmp r5.w, r5.w, r10.y, r8.w  // ::v<0>

#line 2271
                  cmp r5.w, -r9_abs.z, r5.w, r7.y  // ::TransferInverse<0>
                  cmp r4.w, -r9_abs.y, r4.w, r5.w  // ::TransferInverse<0>
                  cmp r8.y, -r9_abs.x, r1.z, r4.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2208
          log r1.z, r7.z
          mul r4.w, r1.z, c11.x
          exp r8.z, r4.w  // ::v<0>

#line 2213
          if_eq c10.x, r0.z

#line 2271
          else

#line 2213
            add r4.w, -r6.w, c10.x

#line 2222
            mul r5.w, r7.z, -c56.x
            rsq r5.w, r5.w
            rcp r5.w, r5.w  // ::TransferInverse<0>
            cmp r6.y, -r7.z, -c111_abs.w, -c111_abs.y
            cmp r6.y, r7.z, r6.y, c102.z
            mad r8.w, r7.z, c104.x, c104.y
            log r8.w, r8.w
            mad r8.w, r8.w, c104.z, c104.w  // ::TransferInverse<0>
            cmp r5.w, r6.y, r8.w, r5.w  // ::TransferInverse<0>
            cmp r8.z, -r4_abs.w, r5.w, r8.z  // ::TransferInverse<0>

#line 2226
            if_eq c10.x, r6.w

#line 2271
            else

#line 2226
              add r4.w, r6.z, c10.x

#line 2229
              add r5.w, -r7.z, c51.w
              mul r6.y, r7.z, c119.w
              add r8.w, r7.z, c52.x
              mul r8.w, r8.w, c52.y
              mul r9.x, r8.w, r8.w
              mul r8.w, r8.w, r9.x
              cmp r5.w, r5.w, r6.y, r8.w  // ::v<0>
              cmp r8.z, -r4_abs.w, r5.w, r8.z  // ::TransferInverse<0>

#line 2234
              if_eq c10.x, -r6.z

#line 2271
              else

#line 2234
                mov r9.x, c10.x  // ::Companding<0>
                add r4.w, r9.x, c56.x

#line 2249
                if_eq r9.x, -c56.x

#line 2243
                  mul r1.z, r1.z, c52.z
                  exp r1.z, r1.z
                  mad r9.yz, r1.z, c64.xxyw, c64.xzww  // ::a<0>, ::b<0>
                  rcp r1.z, r9.z
                  mul r1.z, r1.z, r9.y
                  pow r5.w, r1.z, c52.w  // ::TransferInverse<0>
                  cmp r8.z, -r4_abs.w, r5.w, r8.z  // ::TransferInverse<0>

#line 2271
                else

#line 2265
                  add r9.xyz, r9.x, c148

#line 2268
                  mul r10.xy, r7.z, c55

#line 2260
                  add r11, r7.z, c53
                  mul r10.zw, r11.xyyw, c55

#line 2252
                  pow r1.z, r10.z, c148.w
                  cmp r1.z, r11.x, r1.z, r10.x  // ::L<0>

#line 2260
                  pow r4.w, r10.w, c148.w
                  cmp r4.w, r11.z, r4.w, r10.x  // ::L<0>

#line 2268
                  add r5.w, -r7.z, c54.x
                  add r6.y, r7.z, c54.y
                  mul r6.y, r6.y, c54.z
                  pow r8.w, r6.y, c54.w
                  cmp r5.w, r5.w, r10.y, r8.w  // ::v<0>

#line 2271
                  cmp r5.w, -r9_abs.z, r5.w, r7.z  // ::TransferInverse<0>
                  cmp r4.w, -r9_abs.y, r4.w, r5.w  // ::TransferInverse<0>
                  cmp r8.z, -r9_abs.x, r1.z, r4.w  // ::TransferInverse<0>
                endif
              endif
            endif
          endif

#line 2364
          if_eq c0.x, r6.w
            mov r9.xyz, r8  // ::FLrgb<0,1,2>
            mov r1.z, c111.w
          else
            if_eq c0.x, -r6.z

#line 647
              add r9.xyz, -r8, c111.w  // ::Lrgb_CMY<0,1,2>

#line 2365
              mov r1.z, c111.w
            else
              mov r10.x, c0.x  // ::Model<0>
              if_eq r10.x, -c56.x

#line 773
                add r10.yzw, -r8.xzxy, r8.xyzx

#line 446
                cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 755
                add r6.y, -r4.w, r5.w  // ::c<0>
                add r8.w, r6.y, -c111.w
                add r11.x, -r6.y, c111.w
                rcp r11.x, r11.x
                mul r4.w, r4.w, r11.x  // ::v<0>

#line 767
                add r11.xy, -r8, r5.w
                rcp r5.w, r6.y

#line 773
                mul r10.y, r5.w, r10.y

#line 765
                cmp r11.zw, r10.y, c124.xyxy, c124
                mul r10.y, r10.y, r11.w
                frc r10.y, r10.y
                mul r10.y, r10.y, r11.z  // ::h<0>

#line 769
                mad r10.z, r10.z, r5.w, -c85.z  // ::h<0>

#line 773
                mad r5.w, r10.w, r5.w, -c56.z  // ::h<0>
                cmp r5.w, -r11_abs.y, r10.z, r5.w  // ::h<0>
                cmp r5.w, -r11_abs.x, r10.y, r5.w  // ::h<0>
                mul r10.y, r5.w, c124.y  // ::h<0>
                cmp r5.w, r5.w, c119.x, c119.y
                mul r10.y, r5.w, r10.y
                frc r10.y, r10.y
                mul r5.w, r5.w, r10.y  // ::h<0>
                mul r5.w, r5.w, c57.x
                cmp r9.x, -r6.y, c102.z, r5.w  // ::Lrgb_HCV<0>
                mul r9.y, r6.y, c152.w  // ::Lrgb_HCV<1>
                mul r4.w, r4.w, c152.w
                cmp r9.z, r8.w, c102.z, r4.w  // ::Lrgb_HCV<2>

#line 2366
                mov r1.z, c111.w
              else
                if_eq r10.x, -c56.z

#line 452
                  add r4.w, r8.y, r8.x
                  add r4.w, r8.z, r4.w  // ::GetSum<0>

#line 818
                  rcp r5.w, r4.w
                  mul r10.yzw, r5.w, r8.xxyz  // ::r<0>, ::g<0>, ::b<0>
                  mad r11.xyz, r8.xxyw, r5.w, -r10.zwww
                  add r5.w, r11.y, r11.x
                  mul r5.w, r5.w, -c151.y
                  mul r11.xy, r11.xzzw, r11
                  add r6.y, r11.y, r11.x
                  rsq r6.y, r6.y
                  mul r5.w, r5.w, r6.y
                  add r6.y, -r5_abs.w, c111.w
                  rsq r6.y, r6.y
                  rcp r6.y, r6.y
                  mad r8.w, r5_abs.w, c58.x, c58.y
                  mad r8.w, r8.w, r5_abs.w, c58.z
                  mad r8.w, r8.w, r5_abs.w, c58.w
                  mul r6.y, r6.y, r8.w
                  mad r8.w, r6.y, c83.x, c83.y
                  cmp r5.w, r5.w, c111_abs.y, c111_abs.w
                  mad r5.w, r8.w, r5.w, r6.y  // ::h<0>

#line 823
                  add r6.y, -r5.w, c48.w  // ::h<0>
                  cmp r5.w, r11.z, r5.w, r6.y  // ::h<0>

#line 448
                  min r6.y, r10.w, r10.z
                  min r8.w, r6.y, r10.y  // ::GetMinimum<0>

#line 827
                  mad r6.y, r8.w, -c47.w, c47.y  // ::s<0>
                  mul r9.z, r4.w, c83.z  // ::i<0>
                  mul r9.x, r5.w, c83.w  // ::Lrgb_HCY<0>
                  mul r9.y, r6.y, c152.w  // ::Lrgb_HCY<1>

#line 2367
                  mov r1.z, c111.w
                else
                  if_eq r10.x, -c134.x

#line 1027
                    add r10.yzw, -r8.xzyx, r8.xyxz

#line 446
                    cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                    min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                    max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1006
                    add r6.y, -r4.w, r5.w  // ::chroma<0>
                    add r4.w, r4.w, r5.w

#line 1011
                    add r8.w, r4.w, -c111.w
                    rcp r11.x, r4.w
                    add r11.y, -r4.w, -c85.z
                    rcp r11.y, r11.y
                    mul r11.xy, r6.y, r11
                    cmp r11.y, r8.w, r11.y, r11.x  // ::s<0>

#line 1025
                    add r12.xyz, -r5.w, r8.xzyw

#line 1017
                    rcp r5.w, r6.y

#line 1027
                    mul r8.w, r5.w, r10.y  // ::h<0>

#line 1023
                    mad r11.zw, r10.xyyz, r5.w, -c148.xyzx  // ::h<0>

#line 1018
                    cmp r8.w, r10.y, r8.w, r11.z  // ::h<0>

#line 1027
                    mad r5.w, r10.w, r5.w, -c85.z  // ::h<0>
                    cmp r5.w, -r12_abs.z, r5.w, c102.z  // ::h<0>
                    cmp r5.w, -r12_abs.y, r11.w, r5.w  // ::h<0>
                    cmp r5.w, -r12_abs.x, r8.w, r5.w  // ::h<0>
                    mul r11.x, r5.w, c60.x  // ::h<0>
                    cmp r9.xw, -r6_abs.y, c102.z, r11.xyzy  // ::h<0>, ::s<0>
                    mul r9.z, r4.w, c60.y  // ::Lrgb_HSL<2>

#line 2368
                    mul r9.y, r9.w, c152.w
                    mov r1.z, c111.w
                  else
                    if_eq r10.x, -c149.y

#line 932
                      add r10.yzw, -r8.xzxy, r8.xyzx

#line 446
                      cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                      min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                      max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 911
                      add r4.w, -r4.w, r5.w  // ::chroma<0>

#line 920
                      rcp r6.y, r5.w
                      mul r11.y, r4.w, r6.y  // ::_s<0>

#line 931
                      add r12.xyz, -r5.w, r8

#line 924
                      rcp r6.y, r4.w

#line 932
                      mul r8.w, r6.y, r10.y  // ::_h<0>
                      mad r11.zw, r10.xyyw, r6.y, -c148.xyzx  // ::_h<0>

#line 925
                      cmp r8.w, r10.y, r8.w, r11.z  // ::_h<0>

#line 929
                      mad r6.y, r10.z, r6.y, -c85.z  // ::_h<0>

#line 932
                      cmp r10.y, -r12_abs.z, r11.w, c102.z  // ::_h<0>
                      cmp r6.y, -r12_abs.y, r6.y, r10.y  // ::_h<0>
                      cmp r6.y, -r12_abs.x, r8.w, r6.y  // ::_h<0>
                      mul r11.x, r6.y, c60.x  // ::_h<0>
                      cmp r9.xw, -r4_abs.w, c102.z, r11.xyzy  // ::_h<0>, ::_s<0>
                      mul r9.z, r5.w, c152.w  // ::Lrgb_HSB<2>

#line 2369
                      mul r9.y, r9.w, c152.w
                      mov r1.z, c111.w
                    else
                      if_eq r10.x, -c84.x

#line 932
                        add r10.yzw, -r8.xzxy, r8.xyzx

#line 446
                        cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                        min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                        max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 911
                        add r4.w, -r4.w, r5.w  // ::chroma<0>

#line 920
                        rcp r6.y, r5.w
                        mul r11.y, r4.w, r6.y  // ::_s<0>

#line 931
                        add r12.xyz, -r5.w, r8

#line 924
                        rcp r6.y, r4.w

#line 932
                        mul r8.w, r6.y, r10.y  // ::_h<0>
                        mad r11.zw, r10.xyyw, r6.y, -c148.xyzx  // ::_h<0>

#line 925
                        cmp r8.w, r10.y, r8.w, r11.z  // ::_h<0>

#line 929
                        mad r6.y, r10.z, r6.y, -c85.z  // ::_h<0>

#line 932
                        cmp r10.y, -r12_abs.z, r11.w, c102.z  // ::_h<0>
                        cmp r6.y, -r12_abs.y, r6.y, r10.y  // ::_h<0>
                        cmp r6.y, -r12_abs.x, r8.w, r6.y  // ::_h<0>
                        mul r11.x, r6.y, c60.x  // ::_h<0>
                        cmp r9.xw, -r4_abs.w, c102.z, r11.xyzy  // ::_h<0>, ::_s<0>
                        mul r9.z, r5.w, c152.w  // ::Lrgb_HSB<2>

#line 2370
                        mul r9.y, r9.w, c152.w
                        mov r1.z, c111.w
                      else
                        add r4.w, r10.x, c84.z
                        cmp r1.z, -r4_abs.w, c111_abs.w, c111_abs.y

#line 1027
                        add r10.xyz, -r8.zyxw, r8.yxzw

#line 446
                        cmp r11.xy, r10.x, r8.zyzw, r8.yzzw
                        min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                        max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1006
                        add r6.y, -r4.w, r5.w  // ::chroma<0>
                        add r4.w, r4.w, r5.w

#line 1011
                        add r8.w, r4.w, -c111.w
                        rcp r10.w, r4.w
                        mul r10.w, r6.y, r10.w
                        add r11.x, -r4.w, -c85.z
                        rcp r11.x, r11.x
                        mul r11.x, r6.y, r11.x
                        cmp r11.y, r8.w, r11.x, r10.w  // ::s<0>

#line 1025
                        add r12.xyz, -r5.w, r8.xzyw

#line 1017
                        rcp r5.w, r6.y

#line 1027
                        mul r8.w, r5.w, r10.x  // ::h<0>

#line 1023
                        mad r10.yw, r10.xxzy, r5.w, -c148.xzzx  // ::h<0>

#line 1018
                        cmp r8.w, r10.x, r8.w, r10.y  // ::h<0>

#line 1027
                        mad r5.w, r10.z, r5.w, -c85.z  // ::h<0>
                        cmp r5.w, -r12_abs.z, r5.w, c102.z  // ::h<0>
                        cmp r5.w, -r12_abs.y, r10.w, r5.w  // ::h<0>
                        cmp r5.w, -r12_abs.x, r8.w, r5.w  // ::h<0>
                        mul r11.x, r5.w, c60.x  // ::h<0>
                        cmp r9.xw, -r6_abs.y, c102.z, r11.xyzy  // ::h<0>, ::s<0>
                        mul r9.z, r4.w, c60.y  // ::Lrgb_HSL<2>

#line 2371
                        mul r9.y, r9.w, c152.w
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r1.z, -r1.z

#line 2411
          else

#line 2373
            mov r10.x, c0.x  // ::Model<0>
            if_eq r10.x, -c86.x

#line 1027
              add r10.yzw, -r8.xzyx, r8.xyxz

#line 446
              cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
              min r1.z, r11.x, r8.x  // ::GetMinimum<0>
              max r4.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1006
              add r5.w, -r1.z, r4.w  // ::chroma<0>
              add r1.z, r1.z, r4.w

#line 1011
              add r6.y, r1.z, -c111.w
              rcp r8.w, r1.z
              mul r8.w, r5.w, r8.w
              add r11.x, -r1.z, -c85.z
              rcp r11.x, r11.x
              mul r11.x, r5.w, r11.x
              cmp r11.y, r6.y, r11.x, r8.w  // ::s<0>

#line 1025
              add r12.xyz, -r4.w, r8.xzyw

#line 1017
              rcp r4.w, r5.w

#line 1027
              mul r6.y, r4.w, r10.y  // ::h<0>

#line 1023
              mad r11.zw, r10.xyyz, r4.w, -c148.xyzx  // ::h<0>

#line 1018
              cmp r6.y, r10.y, r6.y, r11.z  // ::h<0>

#line 1027
              mad r4.w, r10.w, r4.w, -c85.z  // ::h<0>
              cmp r4.w, -r12_abs.z, r4.w, c102.z  // ::h<0>
              cmp r4.w, -r12_abs.y, r11.w, r4.w  // ::h<0>
              cmp r4.w, -r12_abs.x, r6.y, r4.w  // ::h<0>
              mul r11.x, r4.w, c60.x  // ::h<0>
              cmp r9.xw, -r5_abs.w, c102.z, r11.xyzy  // ::h<0>, ::s<0>
              mul r9.z, r1.z, c60.y  // ::Lrgb_HSL<2>

#line 2373
              mul r9.y, r9.w, c152.w
              mov r1.z, c111.w
            else
              if_eq r10.x, c149.z

#line 1027
                add r10.yzw, -r8.xzyx, r8.xyxz

#line 446
                cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1006
                add r6.y, -r4.w, r5.w  // ::chroma<0>
                add r4.w, r4.w, r5.w

#line 1011
                add r8.w, r4.w, -c111.w
                rcp r11.x, r4.w
                add r11.y, -r4.w, -c85.z
                rcp r11.y, r11.y
                mul r11.xy, r6.y, r11
                cmp r11.y, r8.w, r11.y, r11.x  // ::s<0>

#line 1025
                add r12.xyz, -r5.w, r8.xzyw

#line 1017
                rcp r5.w, r6.y

#line 1027
                mul r8.w, r5.w, r10.y  // ::h<0>

#line 1023
                mad r11.zw, r10.xyyz, r5.w, -c148.xyzx  // ::h<0>

#line 1018
                cmp r8.w, r10.y, r8.w, r11.z  // ::h<0>

#line 1027
                mad r5.w, r10.w, r5.w, -c85.z  // ::h<0>
                cmp r5.w, -r12_abs.z, r5.w, c102.z  // ::h<0>
                cmp r5.w, -r12_abs.y, r11.w, r5.w  // ::h<0>
                cmp r5.w, -r12_abs.x, r8.w, r5.w  // ::h<0>
                mul r11.x, r5.w, c60.x  // ::h<0>
                cmp r9.xw, -r6_abs.y, c102.z, r11.xyzy  // ::h<0>, ::s<0>
                mul r9.z, r4.w, c60.y  // ::Lrgb_HSL<2>

#line 2374
                mul r9.y, r9.w, c152.w
                mov r1.z, c111.w
              else
                if_eq r10.x, -c37.y

#line 1048
                  frc r4.w, c0.x
                  add r4.w, -r4.w, c0.x
                  add r11, r4.w, c134
                  add r12, r4.w, c84
                  add r13, r4.w, c86
                  add r14, r4.w, c37
                  add r15, r4.w, c40
                  add r16, r4.w, c157
                  add r17, r4.w, c158
                  add r18, r4.w, c159
                  add r19, r4.w, c160
                  add r10.yz, r4.w, c85.xzww
                  add r20, r4.w, c56
                  cmp r4.w, -r19_abs.x, c111_abs.w, c111_abs.y
                  cmp r21.xyz, -r19_abs.z, c151.w, r4.w
                  cmp r21.xyz, -r10_abs.y, c111.w, r21
                  cmp r21.xyz, -r20_abs.x, c57.xyyw, r21
                  cmp r21.xyz, -r20_abs.z, c57, r21
                  cmp r21.xyz, -r11_abs.x, c57.xyyw, r21
                  cmp r21.xyz, -r11_abs.z, c57.xyyw, r21
                  cmp r21.xyz, -r12_abs.x, c57.xyyw, r21
                  cmp r21.xyz, -r12_abs.z, c57.xyyw, r21
                  cmp r21.xyz, -r13_abs.x, c57.xyyw, r21
                  cmp r21.xyz, -r14_abs.x, c57.xyyw, r21
                  cmp r21.xyz, -r14_abs.y, c57, r21
                  cmp r14.xyz, -r14_abs.z, c57, r21
                  cmp r14.xyz, -r14_abs.w, c57.xyyw, r14
                  cmp r14.xyz, -r15_abs.x, c111.w, r14
                  cmp r14.xyz, -r15_abs.y, c151.w, r14
                  cmp r14.xyz, -r15_abs.z, c152.w, r14
                  cmp r14.xyz, -r15_abs.w, c57.ywww, r14
                  cmp r14.xyz, -r16_abs.x, c49, r14
                  cmp r14.xyz, -r16_abs.y, c111.w, r14
                  cmp r14.xyz, -r16_abs.z, c111.w, r14
                  cmp r14.xyz, -r16_abs.w, c57.yyxw, r14
                  cmp r14.xyz, -r17_abs.x, c57.yyxw, r14
                  cmp r14.xyz, -r17_abs.y, c153.xxyw, r14
                  cmp r14.xyz, -r17_abs.z, c57.yyxw, r14
                  cmp r14.xyz, -r17_abs.w, c57.yyxw, r14
                  cmp r14.xyz, -r13_abs.y, c111.w, r14
                  cmp r13.xyz, -r13_abs.z, c66, r14
                  cmp r13.xyz, -r18_abs.x, c111.w, r13
                  cmp r13.xyz, -r18_abs.y, c111.w, r13
                  cmp r13.xyz, -r18_abs.z, c66.yzxw, r13
                  cmp r13.xyz, -r18_abs.w, c151.w, r13
                  cmp r13.xyz, -r19_abs.y, c111.w, r13
                  cmp r13.xyz, -r19_abs.w, c153.zwww, r13
                  cmp r10.yzw, -r10_abs.z, c111.w, r13.xxyz
                  cmp r10.yzw, -r20_abs.y, c154.xxyy, r10
                  cmp r10.yzw, -r20_abs.w, c154.xzww, r10
                  cmp r10.yzw, -r11_abs.y, c155.xxyy, r10
                  cmp r10.yzw, -r11_abs.w, c111.w, r10
                  cmp r10.yzw, -r12_abs.y, c155.xxzw, r10
                  cmp r10.yzw, -r12_abs.w, c154.xzww, r10
                  cmp r10.yzw, -r13_abs.w, c154.xzww, r10  // ::max<0,1,2>
                  add r4.w, r8.y, r8.y
                  mad r4.w, r8.x, -c56.z, r4.w
                  add r4.w, r8.z, r4.w

#line 1087
                  mul r5.w, r4.w, c60.z  // ::m<0>

#line 1054
                  mad r11.xyz, r4.w, -c60.z, r8
                  mul r6.y, r11.y, -c56.z
                  mad r6.y, r11.x, -c56.x, -r6.y
                  mad r6.y, r11.z, c56.z, r6.y
                  mul r6.y, r6.y, c60.w  // ::j<0>
                  mul r11.xy, r11, r11
                  add r8.w, r11.y, r11.x
                  mad r8.w, r11.z, r11.z, r8.w
                  rsq r8.w, r8.w
                  mul r6.y, r6.y, r8.w
                  add r9.w, -r6_abs.y, c111.w
                  rsq r9.w, r9.w
                  rcp r9.w, r9.w
                  mad r11.x, r6_abs.y, c58.x, c58.y
                  mad r11.x, r11.x, r6_abs.y, c58.z
                  mad r11.x, r11.x, r6_abs.y, c58.w
                  mul r9.w, r9.w, r11.x
                  mad r11.x, r9.w, c83.x, c83.y
                  cmp r6.y, r6.y, c111_abs.y, c111_abs.w
                  mad r6.y, r11.x, r6.y, r9.w  // ::t<0>
                  add r9.w, -r8.z, r8.y
                  add r11.x, -r6.y, c48.w
                  cmp r6.y, r9.w, r6.y, r11.x  // ::w<0>

#line 1087
                  mad r11.xy, r4.w, -c61.x, c61.yzzw  // Pow2::input<0,0>

#line 486
                  mul r9.w, r11.x, r11.x  // ::Pow2<0>

#line 1067
                  dp2add r9.w, r5.w, r5.w, r9.w  // ::v<0>

#line 309
                  add r11.x, -r4.w, c61.w

#line 1087
                  mad r11.z, r4.w, c146.x, c146.y  // Pow2::input<0>

#line 486
                  mul r11.z, r11.z, r11.z  // ::Pow2<0>

#line 1087
                  dp2add r11.y, r11.y, r11.y, r11.z  // ::v<0>
                  cmp r11.x, r11.x, -c111_abs.w, -c111_abs.y
                  cmp r11.x, -r4.w, c102.z, r11.x
                  cmp r11.x, r11.x, c102.z, r11.y  // ::v<0>
                  cmp r11.y, -r4.w, -c111_abs.w, -c111_abs.y
                  cmp r4.w, r4.w, r11.y, c102.z
                  cmp r4.w, r4.w, r11.x, r9.w  // ::v<0>
                  mul r6.y, r10.y, r6.y
                  rcp r8.w, r8.w
                  rsq r4.w, r4.w
                  mul r4.w, r4.w, r8.w  // ::s<0>
                  mul r9.x, r6.y, c51.z  // ::Lrgb_HSM<0>
                  mul r9.y, r10.z, r4.w  // ::Lrgb_HSM<1>
                  mul r9.z, r10.w, r5.w  // ::Lrgb_HSM<2>

#line 2375
                  mov r1.z, c111.w
                else
                  if_eq r10.x, -c37.z

#line 1227
                    mul r10.yzw, r8.xxyz, c151.w  // ::_input<0,1,2>

#line 1231
                    mul r11.xyz, r10.yzww, r10.yzww
                    mul r11.xy, r11, c146.zwzw
                    add r4.w, r11.y, r11.x
                    mad r4.w, r11.z, c62.x, r4.w
                    rsq r4.w, r4.w
                    rcp r4.w, r4.w  // ::p<0>
                    mad r11.xy, r8.x, c151.w, -r10.wzzw
                    cmp r5.w, -r11_abs.x, c111_abs.w, c111_abs.y
                    cmp r5.w, -r11_abs.y, r5.w, c102.z
                    if_ne r5.w, -r5.w

#line 1236
                      mov r11.zw, c102.z  // ::h<0>, ::s<0>
                    else

#line 1249
                      mad r12.xy, r8.yzzw, c151.w, -r10.wzzw
                      mul r12.zw, r12.xyyx, c124.y

#line 1244
                      rcp r5.w, r11.y
                      mad r13.y, r12.z, -r5.w, c111.w  // ::h<0>
                      rcp r5.w, r10.y

#line 1249
                      rcp r6.y, r11.x
                      mul r13.x, r6.y, r12.w  // ::h<0>
                      mad r13.zw, r10, -r5.w, c111.w  // ::s<0,0>
                      cmp r12.zw, r12.y, r13.xyyz, r13.xyxw  // ::h<0>, ::s<0>
                      cmp r5.w, r11.x, -c111_abs.w, -c111_abs.y
                      cmp r5.w, r11.y, r5.w, c102.z
                      cmp r12.zw, r5.w, c102.z, r12  // ::h<0>, ::s<0>

#line 1279
                      mul r13.xy, r11, c124.y

#line 1259
                      rcp r5.w, r12.x
                      mad r14.y, r13.x, -r5.w, c83.z  // ::h<0>
                      rcp r5.w, r10.z

#line 1264
                      mad r13.xz, r8.yyzw, c151.w, -r10.y

#line 1274
                      mul r15.xy, r13.zxzw, c124.y

#line 1264
                      rcp r6.y, r13.x
                      mad r14.x, r15.x, r6.y, c83.z  // ::h<0>
                      mad r14.zw, r10.xywy, -r5.w, c111.w  // ::s<0,0>
                      cmp r11.xy, r11.x, r14.yzzw, r14.xwzw  // ::h<0>, ::s<0>

#line 1282
                      cmp r14.xy, r12, -c111_abs.w, -c111_abs.y
                      cmp r14.xy, r13.xzzw, r14, c102.z

#line 1267
                      cmp r11.xy, r14.x, r12.zwzw, r11  // ::h<0>, ::s<0>

#line 1274
                      rcp r5.w, r13.z
                      mad r15.y, r15.y, -r5.w, c62.y  // ::h<0>
                      rcp r5.w, r10.w

#line 1279
                      rcp r6.y, r12.y
                      mad r15.x, r13.y, r6.y, c62.y  // ::h<0>
                      mad r15.zw, r10.xyyz, -r5.w, c111.w  // ::s<0,0>
                      cmp r10.yz, r13.x, r15, r15.xxww  // ::h<0>, ::s<0>
                      cmp r11.zw, r14.y, r11.xyxy, r10.xyyz  // ::h<0>, ::s<0>
                    endif
                    mul r9.y, r11.w, c152.w  // ::Lrgb_HSP<1>
                    mad r5.w, r11.z, c62.z, c62.w
                    frc r6.y, r5.w
                    add r9.x, r5.w, -r6.y  // ::Lrgb_HSP<0>
                    add r4.w, r4.w, -c151.y
                    frc r5.w, r4.w
                    add r9.z, r4.w, -r5.w  // ::Lrgb_HSP<2>

#line 2376
                    mov r1.z, c111.w
                  else
                    if_eq r10.x, -c37.w

#line 932
                      add r10.yzw, -r8.xzxy, r8.xyzx

#line 446
                      cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                      min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                      max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 911
                      add r6.y, -r4.w, r5.w  // ::chroma<0>

#line 931
                      add r11.xyz, -r5.w, r8

#line 924
                      rcp r8.w, r6.y

#line 932
                      mul r9.w, r8.w, r10.y  // ::_h<0>
                      mad r12.xy, r10.ywzw, r8.w, -c148.zxzw  // ::_h<0>

#line 925
                      cmp r9.w, r10.y, r9.w, r12.x  // ::_h<0>

#line 929
                      mad r8.w, r10.z, r8.w, -c85.z  // ::_h<0>

#line 932
                      cmp r10.y, -r11_abs.z, r12.y, c102.z  // ::_h<0>
                      cmp r8.w, -r11_abs.y, r8.w, r10.y  // ::_h<0>
                      cmp r8.w, -r11_abs.x, r9.w, r8.w  // ::_h<0>
                      mul r8.w, r8.w, c60.x  // ::_h<0>
                      cmp r9.x, -r6_abs.y, c102.z, r8.w  // ::_h<0>

#line 1316
                      add r5.w, -r5.w, c111.w  // ::black<0>
                      mul r9.y, r4.w, c152.w  // ::Lrgb_HWB<1>
                      mul r9.z, r5.w, c152.w  // ::Lrgb_HWB<2>

#line 2377
                      mov r1.z, c111.w
                    else

#line 2380
                      add r10.yzw, r10.x, c40.xxyz

#line 2086
                      dp3 r4.w, r8, c135  // ::y<0>
                      add r11.xy, -r4.w, r8.zxzw

#line 2130
                      mad r4.w, r4.w, c145.x, c145.y  // ::Lrgb_YCbCr<0>
                      mad r11.xy, r11, c147, c147.z  // ::Lrgb_YCbCr<1,2>

#line 2150
                      mul r5.w, r11.x, c146.w
                      mad r5.w, r4.w, c146.z, r5.w
                      mad r12.x, r11.y, c62.x, r5.w  // ::Lrgb_JPEG<0>
                      mad r5.w, r4.w, -c145.z, c145.w
                      mad r5.w, r11.x, -c135.w, r5.w
                      mad r12.y, r11.y, -c151.y, r5.w  // ::Lrgb_JPEG<1>
                      mad r4.w, r4.w, c147.w, c147.z
                      mad r4.w, r11.x, -c113.x, r4.w
                      mad r12.z, r11.y, -c113.y, r4.w  // ::Lrgb_JPEG<2>

#line 2380
                      cmp r4.w, -r10_abs.w, c111_abs.w, c111_abs.y
                      cmp r11.xyz, -r10_abs.w, c102.z, r9  // ::FLrgb<0,1,2>
                      cmp r11.xyz, -r10_abs.z, r12, r11  // ::FLrgb<0,1,2>
                      cmp r4.w, -r10_abs.z, c111.w, r4.w
                      cmp r9.xyz, -r10_abs.y, r8, r11  // ::FLrgb<0,1,2>
                      cmp r1.z, -r10_abs.y, c111.w, r4.w
                    endif
                  endif
                endif
              endif
            endif
            if_ne r1.z, -r1.z

#line 2411
            else

#line 2382
              if_eq r10.x, -c45.x

#line 496
                abs r1.z, c13.x

#line 500
                rcp r4.w, c13.x
                mul r11.x, r4.w, c12.x  // ::xyY_XYZ<0>
                mov r12.x, c13.x  // ::WhiteY<0>
                add r5.w, -r12.x, -c12.x
                add r5.w, r5.w, c111.w
                mul r11.z, r4.w, r5.w  // ::xyY_XYZ<2>
                mov r11.y, c111.w
                cmp r10.yzw, -r1.z, c113.z, r11.xxyz  // ::xyY_XYZ<0,1,2>

#line 458
                mul r11.xyz, r8.y, c18
                mad r11.xyz, r8.x, c17, r11
                mad r11.xyz, r8.z, c19, r11  // ::x<0>, ::y<0>, ::z<0>

#line 540
                add r12.xy, r10.ywzw, c109

#line 543
                cmp r4.w, -r12_abs.y, -c111_abs.w, -c111_abs.y
                cmp r4.w, -r1.z, c102.z, r4.w
                cmp r4.w, -r12_abs.x, r4.w, c102.z

#line 553
                add r12.xy, r10.zwzw, r10.yzzw
                mul r12.xy, r12, c109.zwzw  // ::Ka<0,0>
                cmp r12.xy, r4.w, r12, c112  // ::ComputeKa<0>, ::ComputeKb<0>

#line 1453
                cmp r1.z, -r1.z, c112.z, c112.w
                mul r1.z, r1.z, r11.y
                rsq r4.w, r1.z
                rcp r5.w, r4.w
                mul r9.x, r5.w, c152.w  // ::L<0>
                rcp r5.w, r10.y
                mad r5.w, r11.x, r5.w, -r1.z
                mul r5.w, r4.w, r5.w
                mul r9.y, r5.w, r12.x  // ::a<0>
                rcp r5.w, r10.w
                mad r1.z, r11.z, -r5.w, r1.z
                mul r1.z, r4.w, r1.z
                mul r9.z, r1.z, r12.y  // ::b<0>

#line 2382
                mov r1.z, c111.w
              else
                if_eq r10.x, -c45.y
                  mov r9.xyz, r8  // ::FLrgb<0,1,2>
                  mov r1.z, c111.w
                else
                  if_eq r10.x, -c45.z

#line 458
                    mul r11, r8.y, c18.yzxy
                    mad r11, r8.x, c17.yzxy, r11
                    mad r11, r8.z, c19.yzxy, r11  // ::y<0>, ::z<0>, ::x<0>, ::y<0>

#line 1502
                    mul r10.yz, r11.xzww, c63.xxyw
                    add r4.w, r10.z, r10.y
                    mad r4.w, r11.y, -c113.w, r4.w  // PerceptualQuantizer::x<0>

#line 472
                    mul r4.w, r4.w, c63.z
                    pow r5.w, r4.w, c52.z  // ::xx<0>
                    mad r10.yz, r5.w, c64.xxyw, c64.xzww
                    rcp r4.w, r10.z
                    mul r4.w, r4.w, r10.y
                    pow r5.w, r4.w, c63.w  // ::result<0>

#line 1503
                    mul r10.yzw, r11.xxzw, c144.xxyz
                    mad r4.w, r11.z, c144.w, r10.y
                    mad r4.w, r11.y, c143.x, r4.w  // PerceptualQuantizer::x<0>

#line 472
                    mul r4.w, r4.w, c63.z
                    pow r6.y, r4.w, c52.z  // ::xx<0>
                    mad r11.xz, r6.y, c64.xyyw, c64.zyww
                    rcp r4.w, r11.z
                    mul r4.w, r4.w, r11.x
                    pow r6.y, r4.w, c63.w  // ::result<0>

#line 1503
                    add r4.w, r10.w, r10.z
                    mad r4.w, r11.y, c143.y, r4.w  // PerceptualQuantizer::x<0>

#line 472
                    mul r4.w, r4.w, c63.z
                    pow r8.w, r4.w, c52.z  // ::xx<0>
                    mad r10.yz, r8.w, c64.xxyw, c64.xzww
                    rcp r4.w, r10.z
                    mul r4.w, r4.w, r10.y
                    pow r8.w, r4.w, c63.w  // ::result<0>

#line 1505
                    add r4.w, r5.w, r6.y

#line 1508
                    mul r10.yz, r6.y, c143.xzww
                    mad r6.y, r5.w, c142.x, -r10.y
                    mad r9.y, r8.w, c142.y, r6.y  // ::az<0>
                    mad r5.w, r5.w, c142.z, r10.z
                    mad r9.z, r8.w, -c142.w, r5.w  // ::bz<0>
                    mul r5.w, r4.w, c65.x
                    mad r4.w, r4.w, -c65.y, c65.z
                    rcp r4.w, r4.w
                    mad r9.x, r5.w, r4.w, c65.w  // ::Jz<0>

#line 2384
                    mov r1.z, c111.w
                  else
                    if_eq r10.x, -c45.w

#line 458
                      mov r11.xyz, c29  // ::LMSk_LABk_x<0,1,2>
                      add r10.yzw, r11.xxyz, c30.xxyz
                      add r9.xyz, r10.yzww, c31  // ::x<0>, ::y<0>, ::z<0>

#line 2385
                      mov r1.z, c111.w
                    else
                      if_eq r10.x, -c46.x
                        mov r9.xyz, c102.z  // ::FLrgb<0,1,2>
                        mov r1.z, c111.w
                      else
                        if_eq r10.x, -c46.y
                          mov r9.xyz, c102.z  // ::FLrgb<0,1,2>
                          mov r1.z, c111.w
                        else
                          if_eq r10.x, -c46.z
                            mov r9.xyz, c102.z  // ::FLrgb<0,1,2>
                            mov r1.z, c111.w
                          else
                            add r4.w, r10.x, c46.w
                            cmp r1.z, -r4_abs.w, c111_abs.w, c111_abs.y
                            if_eq r10.x, -c46.w
                              mov r9.xyz, c102.z  // ::FLrgb<0,1,2>
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r1.z, -r1.z

#line 2411
              else

#line 2391
                if_eq r10.x, -c35.x
                  mov r9.xyz, c102.z  // ::FLrgb<0,1,2>
                  mov r1.z, c111.w
                else
                  if_eq r10.x, -c35.y

#line 458
                    mul r10.yzw, r8.y, c18.xxyz
                    mad r10.yzw, r8.x, c17.xxyz, r10
                    mad r10.yzw, r8.z, c19.xxyz, r10  // ::x<0>, ::y<0>, ::z<0>
                    mul r11.xyz, r10.z, c21
                    mad r11.xyz, r10.y, c20, r11
                    mad r9.xyz, r10.w, c22, r11  // ::x<0>, ::y<0>, ::z<0>

#line 2392
                    mov r1.z, c111.w
                  else
                    if_eq r10.x, -c35.z

#line 496
                      abs r4.w, c13.x

#line 500
                      rcp r5.w, c13.x
                      mul r11.x, r5.w, c12.x  // ::xyY_XYZ<0>
                      mov r12.x, c13.x  // ::WhiteY<0>
                      add r6.y, -r12.x, -c12.x
                      add r6.y, r6.y, c111.w
                      mul r11.z, r5.w, r6.y  // ::xyY_XYZ<2>
                      mov r11.y, c111.w
                      cmp r10.yzw, -r4.w, c113.z, r11.xxyz  // ::xyY_XYZ<0,1,2>

#line 559
                      cmp r11.xy, -r4.w, c125, c125.zwzw

#line 1620
                      mul r4.w, r8.y, r11.x  // ::yr<0>

#line 559
                      mul r5.w, r8.x, -c56.z
                      mad r6.y, r8.y, -c40.y, r8.x
                      mad r6.y, r8.z, -c56.x, r6.y
                      rcp r6.y, r6.y

#line 564
                      mul r8.w, r8.y, r6.y

#line 559
                      add r9.w, r10.y, r11.y
                      mul r10.y, r10.y, -c56.z
                      mad r9.w, r10.w, -c56.x, r9.w
                      rcp r9.w, r9.w
                      mul r10.y, r9.w, r10.y  // ::ComputeKu<0>

#line 564
                      mul r9.w, r10.z, r9.w
                      mul r9.w, r9.w, -c86.x  // ::ComputeKv<0>

#line 1627
                      mad r10.z, r8.y, -r11.x, c105.x
                      mul r4.w, r4.w, c105.y
                      cmp r4.w, r10.z, r4.w, c152.w  // ::L<0>

#line 1630
                      max r9.x, r4.w, c102.z  // ::L<0>

#line 1633
                      mul r4.w, r9.x, -c37.w
                      mad r5.w, r5.w, r6.y, -r10.y
                      mul r9.y, r4.w, r5.w  // ::u<0>

#line 1636
                      mad r5.w, r8.w, -c86.x, -r9.w
                      mul r9.z, r4.w, r5.w  // ::v<0>

#line 2393
                      mov r1.z, c111.w
                    else
                      if_eq r10.x, -c35.w

#line 1351
                        add r4.w, r8.y, r8.x
                        add r4.w, r8.z, r4.w  // ::sum<0>
                        rcp r5.w, r4.w
                        mul r10.yz, r5.w, r8.xxyw
                        cmp r10.yz, -r4_abs.w, c102.z, r10  // ::x<0>, ::y<0>

#line 1356
                        rcp r4.w, r10.z
                        mul r4.w, r4.w, r10.y
                        mov_sat r5.w, r4_abs.w
                        add r6.y, r4_abs.w, -c111.w
                        rcp r8.w, r4_abs.w
                        cmp r6.y, r6.y, r8.w, c111.w
                        mul r5.w, r5.w, r6.y
                        mul r6.y, r5.w, r5.w
                        mad r8.w, r6.y, c48.x, c48.y
                        mad r8.w, r6.y, r8.w, c49.w
                        mad r8.w, r6.y, r8.w, c66.w
                        mad r6.y, r6.y, r8.w, c48.z
                        mul r5.w, r5.w, r6.y
                        add r6.y, -r4_abs.w, c111.w
                        cmp r6.y, r6.y, c111_abs.y, c111_abs.w
                        mad r8.w, r5.w, c50.x, c50.y
                        mad r5.w, r8.w, r6.y, r5.w
                        min r6.y, r4.w, c111.w
                        cmp r4.w, r6.y, c111_abs.y, c111_abs.w
                        add r6.y, r5.w, r5.w
                        mad r4.w, r4.w, -r6.y, r5.w
                        mad r11.xy, r4.w, c67.x, c67.yzzw
                        cmp r4.w, r10.z, c102.z, r11.y
                        cmp r9.x, -r10.z, r4.w, r11.x  // ::tsl<0>
                        mul r10.yz, r10, r10
                        add r4.w, r10.z, r10.y
                        rsq r4.w, r4.w
                        rcp r9.y, r4.w  // ::tsl<1>
                        dp3 r9.z, r8, c161  // ::tsl<2>

#line 2394
                        mov r1.z, c111.w
                      else
                        if_eq r10.x, -c59.x

#line 458
                          mul r10.yzw, r8.y, c18.xxyz
                          mad r10.yzw, r8.x, c17.xxyz, r10
                          mad r10.yzw, r8.z, c19.xxyz, r10  // ::x<0>, ::y<0>, ::z<0>

#line 1853
                          mad r4.w, r10.z, -c56.x, -r10.y
                          add r4.w, r10.w, r4.w
                          mul r9.z, r4.w, -c151.y  // ::Lrgb_UCS<2>

#line 2395
                          mul r9.xy, r10.yzzw, c140
                          mov r1.z, c111.w
                        else
                          if_eq r10.x, -c59.y

#line 496
                            abs r4.w, c13.x

#line 500
                            rcp r5.w, c13.x
                            mul r11.x, r5.w, c12.x  // ::xyY_XYZ<0>
                            mov r12.x, c13.x  // ::WhiteY<0>
                            add r6.y, -r12.x, -c12.x
                            add r6.y, r6.y, c111.w
                            mul r11.z, r5.w, r6.y  // ::xyY_XYZ<2>
                            mov r11.y, c111.w
                            cmp r10.yzw, -r4.w, c113.z, r11.xxyz  // ::xyY_XYZ<0,1,2>

#line 458
                            mul r11, r8.y, c18.xyzx
                            mad r11, r8.x, c17.xyzx, r11
                            mad r11, r8.z, c19.xyzx, r11  // ::x<0>, ::y<0>, ::z<0>, ::x<0>

#line 1891
                            cmp r4.w, -r4.w, c125.y, c125.w
                            add r4.w, r4.w, r10.y
                            mul r5.w, r10.y, -c56.z
                            mad r4.w, r10.w, -c56.x, r4.w
                            rcp r4.w, r4.w
                            mul r6.y, r10.z, r4.w

#line 1895
                            mul r10.yzw, r11.xxyw, c141.xxyz  // ::x<0>
                            add r8.w, r10.z, r10.y
                            mad r8.w, r11.z, c105.z, r8.w  // ::uv<0>
                            rcp r9.w, r8.w
                            mul r10.y, r9.w, r10.w
                            cmp r10.y, -r8_abs.w, c102.z, r10.y  // ::_u<0>
                            mul r9.w, r11.y, r9.w
                            mul r9.w, r9.w, c105.w
                            cmp r8.w, -r8_abs.w, c102.z, r9.w  // ::_v<0>

#line 1899
                            mad r4.w, r5.w, -r4.w, r10.y
                            mul r9.x, r4.w, c67.w  // ::u<0>
                            mad r4.w, r6.y, c149.y, r8.w
                            mul r9.y, r4.w, c67.w  // ::v<0>

#line 2396
                            mov r9.z, -c84.z
                            mov r1.z, c111.w
                          else
                            add r10.yz, r10.x, c59.xzww

#line 2086
                            dp3 r4.w, r8, c135  // ::y<0>
                            add r11.xy, -r4.w, r8.zxzw

#line 2110
                            mad r12.x, r4.w, c145.x, c145.y  // ::Lrgb_xvYCC<0>
                            mad r12.yz, r11.xxyw, c147.xxyw, c147.z  // ::Lrgb_xvYCC<1,2>

#line 2398
                            cmp r4.w, -r10_abs.z, c111_abs.w, c111_abs.y

#line 458
                            mul r11.xyz, r8.y, c18
                            mad r11.xyz, r8.x, c17, r11
                            mad r11.xyz, r8.z, c19.xzyw, r11.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 507
                            add r5.w, r11.z, r11.x
                            add r5.w, r11.y, r5.w  // ::sum<0>

#line 512
                            rcp r6.y, r5.w
                            mul r13.xy, r6.y, r11.xzzw  // ::XYZ_xyY<0,1>
                            cmp r11.xy, -r5_abs.w, c102.z, r13  // ::XYZ_xyY<0,1>

#line 2398
                            cmp r11.xyz, -r10_abs.z, r11, r9  // ::FLrgb<0,1,2>
                            cmp r9.xyz, -r10_abs.y, r12, r11  // ::FLrgb<0,1,2>
                            cmp r1.z, -r10_abs.y, c111.w, r4.w
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
                if_ne r1.z, -r1.z

#line 2411
                else
                  add r1.z, r10.x, c36.w

#line 2400
                  if_eq r10.x, -c68.x

#line 458
                    mul r10.yzw, r8.y, c18.xxyz
                    mad r10.yzw, r8.x, c17.xxyz, r10
                    mad r10.yzw, r8.z, c19.xxzy, r10.xywz  // ::x<0>, ::z<0>, ::y<0>

#line 507
                    add r4.w, r10.w, r10.y
                    add r4.w, r10.z, r4.w  // ::sum<0>

#line 512
                    rcp r5.w, r4.w
                    mul r11.xy, r5.w, r10.ywzw  // ::XYZ_xyY<0,1>
                    cmp r10.yz, -r4_abs.w, c102.z, r11.xxyw  // ::XYZ_xyY<0,1>

#line 2400
                    mov r4.w, c111.w
                  else
                    if_eq r10.x, -c68.y

#line 458
                      mul r11.xyz, r8.y, c18
                      mad r11.xyz, r8.x, c17, r11
                      mad r10.yzw, r8.z, c19.xxyz, r11.xxyz  // ::x<0>, ::y<0>, ::z<0>

#line 2401
                      mov r4.w, c111.w
                    else
                      if_eq r10.x, -c68.z

#line 2086
                        dp3 r5.w, r8, c135  // ::y<0>
                        add r11.xy, -r5.w, r8.zxzw

#line 2130
                        mad r10.y, r5.w, c145.x, c145.y  // ::Lrgb_YCbCr<0>
                        mad r10.zw, r11.xyxy, c147.xyxy, c147.z  // ::Lrgb_YCbCr<1,2>

#line 2402
                        mov r4.w, c111.w
                      else
                        if_eq r10.x, -c68.w

#line 1980
                          mul r11.xyz, r8.xxyw, c71
                          add r11.xy, r11.z, r11
                          mul r5.w, r8.z, -c151.y
                          mad r10.y, r8.z, c67.y, r11.x  // ::Lrgb_YCoCg<0>
                          mad r10.z, r8.z, -c67.y, r11.y  // ::Lrgb_YCoCg<1>
                          mad r10.w, r8.x, -c151.y, -r5.w  // ::Lrgb_YCoCg<2>

#line 2403
                          mov r4.w, c111.w
                        else
                          if_eq c0.x, -r6.x

#line 2000
                            mul r11.xyz, r8.y, c106
                            mad r11.xz, r8.x, c161.xyww, r11
                            mad r5.w, r8.x, c141.w, -r11.y
                            mad r10.z, r8.z, -c151.z, r5.w  // ::Lrgb_YDbDr<1>
                            mad r10.yw, r8.z, c140.xzzw, r11.xxzz  // ::Lrgb_YDbDr<0,2>

#line 2404
                            mov r4.w, c111.w
                          else

#line 2407
                            add r11.xyz, r10.x, c36

#line 2054
                            mul r12, r8.y, c123
                            mad r12, r8.x, c73.xzwy, r12.xzwy  // ::Lrgb_YES<1>
                            mad r12.xyz, r8.z, c74, r12  // ::Lrgb_YES<0,2>, ::y<0>

#line 2057
                            add r13.xy, -r8.yzzw, r8
                            cmp r13.xy, -r13_abs, c111_abs.y, c111_abs.w
                            add r5.w, r13.y, r13.x

#line 2086
                            mul r13.xyz, r8.y, c70
                            mad r13.xyz, r8.x, c69, r13

#line 2059
                            mad r14.y, r8.z, c71.w, r13.x  // ::i<0>

#line 2086
                            mad r14.xz, r8.z, c72.yyxw, r13.zyyw  // ::y<0>, ::q<0>

#line 2061
                            cmp r13.yz, -r5.w, c102.z, r14  // ::i<0>, ::q<0>

#line 2407
                            cmp r5.w, -r11_abs.z, c111_abs.w, c111_abs.y

#line 2088
                            add r15.xy, r8.zxzw, -r14.x
                            mul r14.yz, r15.xxyw, c72.xzww  // ::pb<0>, ::pr<0>

#line 2407
                            cmp r14.xyz, -r11_abs.z, r14, r9  // ::FLrgb<0,1,2>
                            mov r13.x, r12.z
                            cmp r13.xyz, -r11_abs.y, r13, r14  // ::FLrgb<0,1,2>
                            cmp r5.w, -r11_abs.y, c111.w, r5.w
                            cmp r10.yzw, -r11_abs.x, r12.xxwy, r13.xxyz  // ::FLrgb<0,1,2>
                            cmp r4.w, -r11_abs.x, c111.w, r5.w
                          endif
                        endif
                      endif
                    endif
                  endif

#line 2192
                  mul r11.xyz, r8.y, c76
                  mad r11.xyz, r8.x, c75, r11
                  mad r11.xyz, r8.z, c77, r11  // ::y<0>, ::u<0>, ::v<0>

#line 2411
                  cmp r8.xyz, -r1_abs.z, r11, r8  // ::FLrgb<0,1,2>
                  cmp r9.xyz, -r4.w, r8, r10.yzww  // ::FLrgb<0,1,2>
                endif
              endif
            endif
          endif

#line 446
          max r1.z, r7.y, r7.z
          max r4.w, r7.x, r1.z  // ::GetMaximum<0>

#line 2635
          add r1.z, -r4.w, c44.x
          mov r8.x, c6.x  // ::X<0>
          mul r5.w, r8.x, c43.x
          mul r10.x, r5.w, c106.w  // ::tx<0>
          mov r11.x, c7.x  // ::Y<0>
          mul r5.w, r11.x, c43.x
          mul r10.y, r5.w, c106.w  // ::ty<0>
          mov r12.x, c8.x  // ::Z<0>
          mul r5.w, r12.x, c43.x
          mul r10.z, r5.w, c106.w  // ::tz<0>

#line 2642
          add r4.w, -r4.w, c42.x
          mul r5.w, r8.x, c41.x
          mul r13.x, r5.w, c106.w  // ::tx<0>
          mul r5.w, r11.x, c41.x
          mul r13.y, r5.w, c106.w  // ::ty<0>
          mul r5.w, r12.x, c41.x
          mul r13.z, r5.w, c106.w  // ::tz<0>

#line 2651
          mul r5.w, r8.x, c39.x
          mul r8.x, r5.w, c106.w  // ::tx<0>
          mul r5.w, r11.x, c39.x
          mul r8.y, r5.w, c106.w  // ::ty<0>
          mul r5.w, r12.x, c39.x
          mul r8.z, r5.w, c106.w  // ::tz<0>
          cmp r8.xyz, r4.w, r13, r8  // ::tx<0>, ::ty<0>, ::tz<0>
          cmp r8.xyz, r1.z, r10, r8  // ::tx<0>, ::ty<0>, ::tz<0>

#line 339
          add r1.z, r4.x, r5.x
          add r4.w, r5.x, r9.x
          add r1.z, r1.z, -r4.w
          mad r10.z, r1.z, r8.x, r9.x  // ::FLerp<0>
          add r1.z, r4.y, r5.y
          add r4.w, r5.y, r9.y
          add r1.z, r1.z, -r4.w
          mad r11.x, r1.z, r8.y, r9.y  // ::FLerp<1>
          add r1.z, r4.z, r5.z
          add r4.w, r5.z, r9.z
          add r1.z, r1.z, -r4.w
          mul r4.w, r8.z, r1.z
          mad r11.y, r1.z, r8.z, r9.z  // ::FLerp<2>

#line 2418
          if_eq c0.x, r6.w

#line 1802
            min r1.z, r11.y, r11.x
            min r5.w, r1.z, r10.z  // ::white<0>
            add r1.z, -r5.w, r10.z  // ::r<0>
            add r8.xy, -r5.w, r11  // ::y<0>, ::b<0>
            add r6.y, -r8.y, r8.x
            cmp r12.xw, r6.y, r8.xyzy, r8.yyzx  // ::g<0>
            max r6.y, r1.z, r12.x  // ::mY<0>

#line 1812
            add r8.x, r8.x, -r12.w  // ::y<0>
            add r12.z, r8.y, -r12.w  // ::b<0>

#line 1819
            cmp r8.y, -r12.w, -c111_abs.y, -c111_abs.w
            cmp r8.y, -r12.z, c102.z, r8.y
            mul r8.zw, r12, -c85.z
            cmp r12.yz, r8.y, r12.xzww, r8.xzww  // ::b<0>, ::g<0>
            add r12.x, r1.z, r8.x  // ::r<0>
            add r12.w, r8.x, r12.z  // ::g<0>
            max r1.z, r12.w, r12.y
            max r8.x, r12.x, r1.z  // ::mG<0>

#line 1828
            rcp r1.z, r8.x
            mul r1.z, r1.z, r6.y  // ::mN<0>

#line 1832
            mul r8.yzw, r1.z, r12.xxwy  // ::r<0>, ::g<0>, ::b<0>
            cmp r8.xyz, -r8.x, r12.xwyw, r8.yzww  // ::r<0>, ::g<0>, ::b<0>

#line 1837
            add r8.xyz, r5.w, r8  // ::r<0>, ::g<0>, ::b<0>
            frc r9.xyw, r8.xyzz
            add r8.xyz, r8, -r9.xyww
            mul r8.xyz, r8.xzyw, c74.w  // ::RYB_Lrgb<0,2,1>

#line 2418
            mov r1.z, c111.w
          else
            if_eq c0.x, -r6.z

#line 643
              add r8.x, -r10.z, c111.w  // ::CMY_Lrgb<0>
              add r8.yz, -r11.xyxw, c111.w  // ::CMY_Lrgb<2,1>

#line 2419
              mov r1.z, c111.w
            else
              mov r9.x, c0.x  // ::Model<0>
              if_eq r9.x, -c56.x

#line 693
                mul r12, r11.xyyy, c106.w  // ::c<0>, ::g<0,0,0>

#line 701
                if_eq r12.x, c102.z

#line 750
                  mov r8.xyz, r12.ywzw  // ::HCV_Lrgb<0,2,1>
                else

#line 693
                  mul r5.w, r10.z, c70.w  // ::h<0>

#line 701
                  cmp r6.y, r10.z, c119.x, c119.y
                  mul r5.w, r5.w, r6.y
                  frc r5.w, r5.w
                  mul r5.w, r5.w, r6.y
                  mul r6.y, r5.w, -c149.y  // ::hi<0>
                  cmp r5.w, r5.w, c119.x, c119.y
                  mul r8.w, r5.w, r6.y
                  frc r8.w, r8.w
                  mul r13.x, r5.w, r8.w  // ::v<0>

#line 706
                  frc r9.y, r6.y
                  add r6.y, r6.y, -r9.y  // ::fhi<0>

#line 732
                  add r14, r6.y, c162

#line 743
                  mov r13.yz, c111_abs.xyww
                  mad r13.w, r5.w, -r8.w, c111.w
                  cmp r15.xyz, -r14_abs.w, r13, r13.zyww  // ::pure<0,1,2>
                  mad r16.xyz, r13.xzyw, c119.yxxw, c119.xzzw
                  cmp r15.xyz, -r14_abs.z, r16.zxyw, r15  // ::pure<0,1,2>
                  cmp r14.yzw, -r14_abs.y, r13.xyzx, r15.xxyz  // ::pure<0,1,2>
                  cmp r14.xyz, -r14_abs.x, r16, r14.yzww  // ::pure<0,1,2>
                  cmp r13.xyz, -r6_abs.y, r13.zxyw, r14  // ::pure<0,1,2>

#line 749
                  lrp r8.xyz, r12.x, r13.xzyw, r12.w  // ::result<0,2,1>
                endif

#line 2420
                mov r1.z, c111.w
              else
                if_eq r9.x, -c56.z

#line 785
                  cmp r9.yw, r10.z, c78.xxzy, c78.xzzw
                  mul r5.w, r9.w, r10.z
                  frc r5.w, r5.w
                  mad r6.y, r9.y, r5.w, c57.x
                  mul r5.w, r5.w, c57.x
                  cmp r5.w, r10.z, r5.w, r6.y
                  mul r9.yw, r11.xxzy, c115.xxzy  // ::s<0>, ::i<0>

#line 792
                  if_lt r5.w, c69.w
                    mad r6.y, r11.x, -c115.x, c115.z
                    mul r8.y, r6.y, r9.w  // ::b<0>
                    mad r6.y, r5.w, c163.x, c163.y
                    frc r6.y, r6.y
                    mad r6.y, r6.y, c163.z, c163.w
                    sincos r12.x, r6.y
                    mul r6.y, r9.y, r12.x
                    mad r8.w, r5.w, -c79.x, c79.y
                    mad r8.w, r8.w, c79.z, c79.w
                    frc r8.w, r8.w
                    mad r8.w, r8.w, c163.z, c163.w
                    sincos r13.x, r8.w
                    rcp r8.w, r13.x
                    mad r6.y, r6.y, r8.w, c111.w
                    mul r8.x, r6.y, r9.w  // ::r<0>
                    mad r6.y, r12.x, -r8.w, c111.w
                    mad r6.y, r9.y, r6.y, c111.w
                    mul r8.z, r6.y, r9.w  // ::g<0>
                  else
                    if_lt r5.w, c154.y
                      mad r6.y, r5.w, c80.x, c80.y  // ::h<0>
                      mad r8.w, r11.x, -c115.x, c115.z
                      mul r8.x, r8.w, r9.w  // ::r<0>
                      mad r8.w, r6.y, c79.z, c79.w
                      frc r8.w, r8.w
                      mad r8.w, r8.w, c163.z, c163.w
                      sincos r12.x, r8.w
                      mul r8.w, r9.y, r12.x
                      add r6.y, -r6.y, c76.w
                      mad r6.y, r6.y, c79.z, c79.w
                      frc r6.y, r6.y
                      mad r6.y, r6.y, c163.z, c163.w
                      sincos r13.x, r6.y
                      rcp r6.y, r13.x
                      mad r8.w, r8.w, r6.y, c111.w
                      mul r8.z, r8.w, r9.w  // ::g<0>

#line 803
                      mad r6.y, r12.x, -r6.y, c111.w
                      mad r6.y, r9.y, r6.y, c111.w
                      mul r8.y, r6.y, r9.w  // ::b<0>
                    else

#line 807
                      mad r5.w, r5.w, c80.x, c80.z  // ::h<0>
                      mad r6.y, r11.x, -c115.x, c115.z
                      mul r8.z, r6.y, r9.w  // ::g<0>
                      mad r6.y, r5.w, c79.z, c79.w
                      frc r6.y, r6.y
                      mad r6.y, r6.y, c163.z, c163.w
                      sincos r12.x, r6.y
                      mul r6.y, r9.y, r12.x
                      add r5.w, -r5.w, c76.w
                      mad r5.w, r5.w, c79.z, c79.w
                      frc r5.w, r5.w
                      mad r5.w, r5.w, c163.z, c163.w
                      sincos r13.x, r5.w
                      rcp r5.w, r13.x
                      mad r6.y, r6.y, r5.w, c111.w
                      mul r8.y, r6.y, r9.w  // ::b<0>
                      mad r5.w, r12.x, -r5.w, c111.w
                      mad r5.w, r9.y, r5.w, c111.w
                      mul r8.x, r5.w, r9.w  // ::r<0>
                    endif
                  endif

#line 2421
                  mov r1.z, c111.w
                else
                  if_eq r9.x, -c134.x

#line 1662
                    if_lt c152.w, r11.y

#line 1670
                      mad r8.xyz, r10.z, c138.xyxw, c138.zxxw
                    else

#line 1662
                      add r5.w, r11.y, c75.w

#line 1665
                      if_lt r11.y, -c75.w
                        cmp r10.xy, r5.w, c152.wxzw, c152.x  // ::HPLuv_Lrgb<0,1>

#line 1670
                        mov r8.xyz, r10.xzyw  // ::HPLuv_Lrgb<0,2,1>
                      else

#line 374
                        add r5.w, r11.y, c150.w
                        mul r6.y, r5.w, r5.w
                        mul r8.w, r5.w, r6.y
                        mul r8.w, r8.w, c77.w  // ::s1<0>
                        mad r6.y, r5.w, -r6.y, c115.w

#line 1595
                        mul r12, r11.y, c110

#line 375
                        cmp r6.y, r6.y, r12.x, r8.w  // ::s2<0>

#line 360
                        mul r8.w, r11.y, r6.y
                        mul r9.y, r8.w, c80.w  // ::y<0>
                        mul r13.xy, r6.y, c81  // ::x<0>, ::z<0>
                        rcp r9.w, r13.y
                        mul r10.w, r9.w, r13.x  // ::GetBounds2<0>
                        mul r9.y, r9.w, r9.y  // ::GetBounds2<1>

#line 391
                        rcp r13.y, r10.w

#line 354
                        mad r9.w, r13.x, -r9.w, -r13.y
                        rcp r9.w, r9.w
                        mul r9.w, r9.w, r9.y  // ::GetIntersection<0>

#line 392
                        mad r9.y, r9.w, r10.w, r9.y  // GetDistance::input<1>

#line 349
                        mul r9.y, r9.y, r9.y
                        mad r9.y, r9.w, r9.w, r9.y
                        rsq r9.y, r9.y
                        rcp r9.y, r9.y  // ::GetDistance<0>

#line 394
                        min r10.w, r9.y, c81.z  // ::GetChroma1a<0>

#line 360
                        mad r8.w, r8.w, c80.w, -r12.y  // ::y<0>
                        mad r6.y, r6.y, c81.y, c81.w  // ::z<0>
                        rcp r6.y, r6.y
                        mul r9.y, r6.y, r13.x  // ::GetBounds2<0>
                        mul r8.w, r6.y, r8.w  // ::GetBounds2<1>

#line 391
                        rcp r9.w, r9.y

#line 354
                        mad r6.y, r13.x, -r6.y, -r9.w
                        rcp r6.y, r6.y
                        mul r6.y, r6.y, r8.w  // ::GetIntersection<0>

#line 392
                        mad r8.w, r6.y, r9.y, r8.w  // GetDistance::input<1>

#line 349
                        mul r8.w, r8.w, r8.w
                        mad r6.y, r6.y, r6.y, r8.w
                        rsq r6.y, r6.y
                        rcp r6.y, r6.y  // ::GetDistance<0>

#line 394
                        min r8.w, r6.y, r10.w  // ::GetChroma1a<0>

#line 1666
                        mul r6.y, r11.x, r8.w
                        mul r6.y, r6.y, c106.w  // ::C<0>

#line 577
                        mad r8.w, r10.z, c82.x, c82.y
                        frc r8.w, r8.w
                        mad r8.w, r8.w, c163.z, c163.w
                        sincos r13.xy, r8.w
                        mul r9.yw, r6.y, r13.xxzy  // ::a<0>, ::b<0>

#line 496
                        abs r6.y, c13.x

#line 500
                        rcp r8.w, c13.x
                        mul r13.x, r8.w, c12.x  // ::xyY_XYZ<0>
                        mov r14.x, c13.x  // ::WhiteY<0>
                        add r10.w, -r14.x, -c12.x
                        add r10.w, r10.w, c111.w
                        mul r13.z, r8.w, r10.w  // ::xyY_XYZ<2>
                        mov r13.y, c111.w
                        cmp r13.xyz, -r6.y, c113.z, r13  // ::xyY_XYZ<0,1,2>

#line 559
                        cmp r6.y, -r6.y, c125.y, c125.w
                        add r6.y, r6.y, r13.x
                        mul r8.w, r13.x, -c56.z
                        mad r6.y, r13.z, -c56.x, r6.y
                        rcp r6.y, r6.y
                        mul r8.w, r6.y, r8.w  // ::ComputeKu<0>

#line 564
                        mul r6.y, r13.y, r6.y
                        mul r6.y, r6.y, -c86.x  // ::ComputeKv<0>

#line 1593
                        add r10.w, -r11.y, c82.z
                        mul r5.w, r5.w, c82.w
                        mul r12.y, r5.w, r5.w
                        mul r5.w, r5.w, r12.y
                        cmp r5.w, r10.w, r12.x, r5.w  // ::Y<0>
                        mad r8.w, r12.w, r8.w, r9.y
                        rcp r8.w, r8.w
                        mad r8.w, r12.z, r8.w, -c111.w
                        mul r8.w, r8.w, c83.z  // ::a<0>
                        mul r9.y, r5.w, c134.x  // ::b<0>
                        mul r10.w, r11.y, -c36.y
                        mad r6.y, r12.w, r6.y, r9.w
                        rcp r6.y, r6.y
                        mad r6.y, r10.w, r6.y, c134.x
                        mad r6.y, r5.w, r6.y, -r9.y
                        rcp r9.w, r8.w
                        mul r6.y, r6.y, r9.w  // ::X<0>
                        mad r8.w, r6.y, r8.w, r9.y  // ::Z<0>

#line 1604
                        max r9.y, r6.y, c102.z  // ::X<0>

#line 1607
                        max r6.y, r5.w, c102.z  // ::Y<0>

#line 1610
                        max r5.w, r8.w, c102.z  // ::Z<0>

#line 458
                        mul r12.xyz, r6.y, c24
                        mad r12.xyz, r9.y, c23, r12
                        mad r8.xyz, r5.w, c25.xzyw, r12.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 1670
                      endif
                    endif

#line 2422
                    mov r1.z, c111.w
                  else
                    if_eq r9.x, -c149.y

#line 838
                      mul r5.w, r11.x, c106.w  // ::_s<0>
                      mul r12.y, r11.y, c106.w  // ::_b<0>

#line 850
                      mul r6.y, r10.z, c138.w  // ::SectorPosition<0>
                      frc r8.w, r6.y
                      add r6.y, r6.y, -r8.w  // ::SectorNumber<0>

#line 854
                      mad r8.w, r10.z, c138.w, -r6.y  // ::FractionalSector<0>

#line 857
                      mad r9.y, r11.x, -c115.x, c115.z
                      mul r12.z, r9.y, r12.y  // ::p<0>
                      mad r9.y, r5.w, -r8.w, c111.w
                      mul r12.w, r9.y, r12.y  // ::q<0>
                      add r8.w, -r8.w, c111.w
                      mad r8.w, r5.w, -r8.w, c111.w
                      mul r12.x, r8.w, r12.y  // ::t<0>

#line 886
                      add r13, r6.y, c162

#line 892
                      add r8.w, r6.y, c134.x

#line 897
                      cmp r14.xyz, -r8_abs.w, r12.yzww, c102.z  // ::r<0>, ::g<0>, ::b<0>
                      cmp r14.xyz, -r13_abs.w, r12.xzyw, r14  // ::r<0>, ::g<0>, ::b<0>
                      cmp r14.xyz, -r13_abs.z, r12.zwyw, r14  // ::r<0>, ::g<0>, ::b<0>
                      cmp r13.yzw, -r13_abs.y, r12.xzyx, r14.xxyz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r13.xyz, -r13_abs.x, r12.wyzw, r13.yzww  // ::r<0>, ::g<0>, ::b<0>
                      cmp r12.xzw, -r6_abs.y, r12.yyxz, r13.xyyz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r8.xyz, -r5_abs.w, r12.y, r12.xwzw  // ::r<0>, ::b<0>, ::g<0>

#line 2423
                      mov r1.z, c111.w
                    else
                      if_eq r9.x, -c84.x

#line 838
                        mul r5.w, r11.x, c106.w  // ::_s<0>
                        mul r12.y, r11.y, c106.w  // ::_b<0>

#line 850
                        mul r6.y, r10.z, c138.w  // ::SectorPosition<0>
                        frc r8.w, r6.y
                        add r6.y, r6.y, -r8.w  // ::SectorNumber<0>

#line 854
                        mad r8.w, r10.z, c138.w, -r6.y  // ::FractionalSector<0>

#line 857
                        mad r9.y, r11.x, -c115.x, c115.z
                        mul r12.z, r9.y, r12.y  // ::p<0>
                        mad r9.y, r5.w, -r8.w, c111.w
                        mul r12.w, r9.y, r12.y  // ::q<0>
                        add r8.w, -r8.w, c111.w
                        mad r8.w, r5.w, -r8.w, c111.w
                        mul r12.x, r8.w, r12.y  // ::t<0>

#line 886
                        add r13, r6.y, c162

#line 892
                        add r8.w, r6.y, c134.x

#line 897
                        cmp r14.xyz, -r8_abs.w, r12.yzww, c102.z  // ::r<0>, ::g<0>, ::b<0>
                        cmp r14.xyz, -r13_abs.w, r12.xzyw, r14  // ::r<0>, ::g<0>, ::b<0>
                        cmp r14.xyz, -r13_abs.z, r12.zwyw, r14  // ::r<0>, ::g<0>, ::b<0>
                        cmp r13.yzw, -r13_abs.y, r12.xzyx, r14.xxyz  // ::r<0>, ::g<0>, ::b<0>
                        cmp r13.xyz, -r13_abs.x, r12.wyzw, r13.yzww  // ::r<0>, ::g<0>, ::b<0>
                        cmp r12.xzw, -r6_abs.y, r12.yyxz, r13.xyyz  // ::r<0>, ::g<0>, ::b<0>
                        cmp r8.xyz, -r5_abs.w, r12.y, r12.xwzw  // ::r<0>, ::b<0>, ::g<0>

#line 2424
                        mov r1.z, c111.w
                      else
                        add r5.w, r9.x, c84.z
                        cmp r1.z, -r5_abs.w, c111_abs.w, c111_abs.y
                        if_eq r9.x, -c84.z

#line 943
                          mul r8.xyz, r11.y, c106.w  // ::l<0,0,0>

#line 948
                          if_lt -r11.x, c102.z

#line 944
                            mul r5.w, r10.z, c138.w  // ::h<0>

#line 950
                            mul r6.y, r11.x, c106.w  // ::s<0>
                            mad r8.w, r11.y, c117.x, c117.y
                            add r8.w, -r8_abs.w, c111.w
                            mul r12.x, r6.y, r8.w  // ::chroma<0>
                            cmp r9.xy, r10.z, c156, c156.zwzw
                            mul r5.w, r5.w, r9.y
                            frc r5.w, r5.w
                            mad r5.w, r9.x, r5.w, -c111.w
                            add r5.w, -r5_abs.w, c111.w
                            mul r12.y, r5.w, r12.x  // ::v<0>

#line 971
                            add r13, -r10.z, c114

#line 977
                            add r14, r10.z, -c114.wzyx

#line 983
                            add r5.w, r10.z, c117.z
                            add r9.xy, -r10.z, -c117.wzzw

#line 988
                            cmp r9.xy, r9, -c111_abs.w, -c111_abs.y
                            cmp r5.w, r5.w, r9.x, c102.z
                            mov r12.z, c102.z
                            cmp r15.xyz, r5.w, c102.z, r12.xzyw  // ::result<0,1,2>
                            cmp r5.w, r14.w, r9.y, c102.z
                            cmp r9.xyw, r5.w, r15.xyzz, r12.yzzx  // ::result<0,1,2>
                            cmp r13, r13, -c111_abs.w, -c111_abs.y
                            cmp r13.xyz, r14.zyxw, r13, c102.z
                            cmp r9.xyw, r13.x, r9, r12.zyzx  // ::result<0,1,2>
                            cmp r9.xyw, r13.y, r9, r12.zxzy  // ::result<0,1,2>
                            cmp r9.xyw, r13.z, r9, r12.yxzz  // ::result<0,1,2>
                            cmp r5.w, r10.z, r13.w, c102.z
                            cmp r9.xyw, r5.w, r9, r12.xyzz  // ::result<0,1,2>
                            mad r5.w, r12.x, c151.y, r8.y  // ::w<0>

#line 993
                            add r8.xyz, r5.w, r9.xwyw  // ::result<0,2,1>

#line 998
                          endif

#line 2425
                        else
                          mov r8.xyz, c102.z
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r1.z, -r1.z

#line 2465
          else

#line 2427
            mov r9.x, c0.x  // ::Model<0>
            if_eq r9.x, -c86.x

#line 943
              mul r8.xyz, r11.y, c106.w  // ::l<0,0,0>

#line 948
              if_lt -r11.x, c102.z

#line 944
                mul r1.z, r10.z, c138.w  // ::h<0>

#line 950
                mul r5.w, r11.x, c106.w  // ::s<0>
                mad r6.y, r11.y, c117.x, c117.y
                add r6.y, -r6_abs.y, c111.w
                mul r12.x, r5.w, r6.y  // ::chroma<0>
                cmp r9.yw, r10.z, c156.xxzy, c156.xzzw
                mul r1.z, r1.z, r9.w
                frc r1.z, r1.z
                mad r1.z, r9.y, r1.z, -c111.w
                add r1.z, -r1_abs.z, c111.w
                mul r12.y, r1.z, r12.x  // ::v<0>

#line 971
                add r13, -r10.z, c114

#line 977
                add r14, r10.z, -c114.wzyx

#line 983
                add r1.z, r10.z, c117.z
                add r9.yw, -r10.z, -c117.xwzz

#line 988
                cmp r9.yw, r9, -c111_abs.w, -c111_abs.y
                cmp r1.z, r1.z, r9.y, c102.z
                mov r12.z, c102.z
                cmp r15.xyz, r1.z, c102.z, r12.xzyw  // ::result<0,1,2>
                cmp r1.z, r14.w, r9.w, c102.z
                cmp r15.xyz, r1.z, r15, r12.yzxw  // ::result<0,1,2>
                cmp r13, r13, -c111_abs.w, -c111_abs.y
                cmp r13.xyz, r14.zyxw, r13, c102.z
                cmp r14.xyz, r13.x, r15, r12.zyxw  // ::result<0,1,2>
                cmp r14.xyz, r13.y, r14, r12.zxyw  // ::result<0,1,2>
                cmp r13.xyz, r13.z, r14, r12.yxzw  // ::result<0,1,2>
                cmp r1.z, r10.z, r13.w, c102.z
                cmp r12.yzw, r1.z, r13.xxyz, r12.xxyz  // ::result<0,1,2>
                mad r1.z, r12.x, c151.y, r8.y  // ::w<0>

#line 993
                add r8.xyz, r1.z, r12.ywzw  // ::result<0,2,1>

#line 998
              endif

#line 2427
              mov r1.z, c111.w
            else
              if_eq r9.x, c149.z

#line 1707
                if_lt c152.w, r11.y

#line 1715
                  mad r8.xyz, r10.z, c138.xyxw, c138.zxxw
                else

#line 1707
                  add r5.w, r11.y, c75.w

#line 1710
                  if_lt r11.y, -c75.w
                    cmp r8.xz, r5.w, c152.wyxw, c152.x  // ::HSLuv_Lrgb<0,1>

#line 1715
                    mov r8.y, r10.z
                  else

#line 374
                    add r5.w, r11.y, c150.w
                    mul r6.y, r5.w, r5.w
                    mul r8.w, r5.w, r6.y
                    mul r8.w, r8.w, c77.w  // ::s1<0>
                    mad r6.y, r5.w, -r6.y, c115.w

#line 1595
                    mul r12, r11.y, c110

#line 375
                    cmp r6.y, r6.y, r12.x, r8.w  // ::s2<0>

#line 360
                    mul r8.w, r11.y, r6.y
                    mul r9.y, r8.w, c80.w  // ::y<0>
                    mul r13, r6.y, c133  // ::x<0>, ::z<0>, ::x<0>, ::z<0>
                    rcp r9.w, r13.y
                    mul r10.w, r9.w, r13.x  // ::GetBounds2<0>
                    mul r9.y, r9.w, r9.y  // ::GetBounds2<1>
                    mad r8.w, r8.w, c80.w, -r12.y  // ::y<0>
                    mad r14.xy, r6.y, c164, c164.z  // ::z<0,0>
                    rcp r9.w, r14.x
                    mul r13.x, r9.w, r13.x  // ::GetBounds2<0>
                    mul r8.w, r8.w, r9.w  // ::GetBounds2<1>
                    mul r9.w, r6.y, r12.y  // ::y<0>
                    rcp r13.y, r13.w
                    mul r13.w, r13.y, r13.z  // ::GetBounds2<0>
                    mul r13.y, r9.w, r13.y  // ::GetBounds2<1>
                    mad r12.y, r12.y, r6.y, -r12.y  // ::y<0>
                    rcp r14.x, r14.y
                    mul r13.z, r13.z, r14.x  // ::GetBounds2<0>
                    mul r14.x, r12.y, r14.x  // ::GetBounds2<1>
                    mul r14.yz, r6.y, c132.xxyw  // ::x<0>, ::z<0>
                    rcp r14.z, r14.z
                    mul r14.w, r14.z, r14.y  // ::GetBounds2<0>
                    mul r9.w, r9.w, r14.z  // ::GetBounds2<1>
                    mad r6.y, r6.y, c164.w, c164.z  // ::z<0>
                    rcp r6.y, r6.y
                    mul r14.y, r6.y, r14.y  // ::GetBounds2<0>
                    mul r6.y, r6.y, r12.y  // ::GetBounds2<1>

#line 577
                    mad r15.xy, r10.z, c120, c120.z
                    frc r15.xy, r15
                    mad r15.xy, r15, c163.z, c163.w

#line 408
                    sincos r16.xy, r15.x
                    mad r10.w, r10.w, -r16.x, r16.y
                    rcp r10.w, r10.w
                    mul r9.y, r9.y, r10.w  // ::length<0>
                    min r10.w, r9.y, c81.z  // GetChroma2a::result<0>
                    cmp r9.y, r9.y, r10.w, c81.z  // GetChroma2a::result<0>
                    mad r10.w, r13.x, -r16.x, r16.y
                    rcp r10.w, r10.w
                    mul r8.w, r8.w, r10.w  // ::length<0>
                    min r10.w, r8.w, r9.y  // GetChroma2a::result<0>
                    cmp r8.w, r8.w, r10.w, r9.y  // GetChroma2a::result<0>
                    mad r9.y, r13.w, -r16.x, r16.y
                    rcp r9.y, r9.y
                    mul r9.y, r9.y, r13.y  // ::length<0>
                    min r10.w, r9.y, r8.w  // GetChroma2a::result<0>
                    cmp r8.w, r9.y, r10.w, r8.w  // GetChroma2a::result<0>
                    mad r9.y, r13.z, -r16.x, r16.y
                    rcp r9.y, r9.y
                    mul r9.y, r9.y, r14.x  // ::length<0>
                    min r10.w, r9.y, r8.w  // GetChroma2a::result<0>
                    cmp r8.w, r9.y, r10.w, r8.w  // GetChroma2a::result<0>
                    mad r9.y, r14.w, -r16.x, r16.y
                    rcp r9.y, r9.y
                    mul r9.y, r9.y, r9.w  // ::length<0>
                    min r10.w, r9.y, r8.w  // GetChroma2a::result<0>
                    cmp r8.w, r9.y, r10.w, r8.w  // GetChroma2a::result<0>
                    mad r9.y, r14.y, -r16.x, r16.y
                    rcp r9.y, r9.y
                    mul r6.y, r6.y, r9.y  // ::length<0>
                    min r9.y, r6.y, r8.w  // GetChroma2a::result<0>
                    cmp r6.y, r6.y, r9.y, r8.w  // GetChroma2a::result<0>

#line 1711
                    mul r6.y, r11.x, r6.y
                    mul r6.y, r6.y, c106.w  // ::C<0>

#line 577
                    sincos r13.xy, r15.y
                    mul r9.yw, r6.y, r13.xxzy  // ::a<0>, ::b<0>

#line 496
                    abs r6.y, c13.x

#line 500
                    rcp r8.w, c13.x
                    mul r13.x, r8.w, c12.x  // ::xyY_XYZ<0>
                    mov r14.x, c13.x  // ::WhiteY<0>
                    add r10.w, -r14.x, -c12.x
                    add r10.w, r10.w, c111.w
                    mul r13.z, r8.w, r10.w  // ::xyY_XYZ<2>
                    mov r13.y, c111.w
                    cmp r13.xyz, -r6.y, c113.z, r13  // ::xyY_XYZ<0,1,2>

#line 559
                    cmp r6.y, -r6.y, c125.y, c125.w
                    add r6.y, r6.y, r13.x
                    mul r8.w, r13.x, -c56.z
                    mad r6.y, r13.z, -c56.x, r6.y
                    rcp r6.y, r6.y
                    mul r8.w, r6.y, r8.w  // ::ComputeKu<0>

#line 564
                    mul r6.y, r13.y, r6.y
                    mul r6.y, r6.y, -c86.x  // ::ComputeKv<0>

#line 1593
                    add r10.w, -r11.y, c82.z
                    mul r5.w, r5.w, c82.w
                    mul r12.y, r5.w, r5.w
                    mul r5.w, r5.w, r12.y
                    cmp r5.w, r10.w, r12.x, r5.w  // ::Y<0>
                    mad r8.w, r12.w, r8.w, r9.y
                    rcp r8.w, r8.w
                    mad r8.w, r12.z, r8.w, -c111.w
                    mul r8.w, r8.w, c83.z  // ::a<0>
                    mul r9.y, r5.w, c134.x  // ::b<0>
                    mul r10.w, r11.y, -c36.y
                    mad r6.y, r12.w, r6.y, r9.w
                    rcp r6.y, r6.y
                    mad r6.y, r10.w, r6.y, c134.x
                    mad r6.y, r5.w, r6.y, -r9.y
                    rcp r9.w, r8.w
                    mul r6.y, r6.y, r9.w  // ::X<0>
                    mad r8.w, r6.y, r8.w, r9.y  // ::Z<0>

#line 1604
                    max r9.y, r6.y, c102.z  // ::X<0>

#line 1607
                    max r6.y, r5.w, c102.z  // ::Y<0>

#line 1610
                    max r5.w, r8.w, c102.z  // ::Z<0>

#line 458
                    mul r12.xyz, r6.y, c24
                    mad r12.xyz, r9.y, c23, r12
                    mad r8.xyz, r5.w, c25.xzyw, r12.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 1715
                  endif
                endif

#line 2428
                mov r1.z, c111.w
              else
                if_eq r9.x, -c37.y

#line 1042
                  mul r5.w, r11.x, c132.z
                  mad r6.y, r10.z, c120.w, c120.z
                  frc r6.y, r6.y
                  mad r6.y, r6.y, c163.z, c163.w
                  sincos r12.x, r6.y
                  mul r6.y, r5.w, r12.x
                  mul r8.xz, r11.y, c139.xyyw  // ::m<0>
                  mad r5.w, r5.w, r12.x, r8.z
                  mad r5.w, r11.y, -c132.w, r5.w
                  mul r8.z, r5.w, c67.y  // ::g<0>
                  mad r5.w, r11.y, c117.x, -r6.y
                  mul r8.y, r5.w, -c151.y  // ::b<0>

#line 2429
                  mov r1.z, c111.w
                else
                  if_eq r9.x, -c37.z

#line 1108
                    mad r5.w, r11.x, -c115.x, c115.z  // ::minOverMax<0>
                    if_lt -r5.w, c102.z

#line 1113
                      if_lt r10.z, c60.x
                        mul r6.y, r10.z, c138.w  // ::h<0>
                        rcp r8.w, r5.w
                        lrp r9.y, r6.y, r8.w, c111.w  // ::part<0>
                        mul r9.w, r8.w, r8.w
                        mul r9.y, r9.y, r9.y
                        mul r9.y, r9.y, c146.w
                        mad r9.y, r9.w, c146.z, r9.y
                        add r9.y, r9.y, c62.x
                        rsq r9.y, r9.y
                        mul r12.z, r9.y, r11.y  // ::b<0>
                        mul r12.x, r8.w, r12.z  // ::r<0>
                        mad r8.w, r12.z, r8.w, -r12.z
                        mad r12.y, r6.y, r8.w, r12.z  // ::g<0>
                      else
                        if_lt r10.z, c69.w

#line 1124
                          mad r6.y, r10.z, -c139.z, c139.w
                          mul r6.y, r6.y, -c149.y  // ::h<0>
                          rcp r8.w, r5.w
                          lrp r9.y, r6.y, r8.w, c111.w  // ::part<0>
                          mul r9.w, r8.w, r8.w
                          mul r9.y, r9.y, r9.y
                          mul r9.y, r9.y, c146.z
                          mad r9.y, r9.w, c146.w, r9.y
                          add r9.y, r9.y, c62.x
                          rsq r9.y, r9.y
                          mul r12.z, r9.y, r11.y  // ::b<0>
                          mul r12.y, r8.w, r12.z  // ::g<0>
                          mad r8.w, r12.z, r8.w, -r12.z
                          mad r12.x, r6.y, r8.w, r12.z  // ::r<0>
                        else
                          if_lt r10.z, c108.x
                            mad r6.y, r10.z, c108.y, c108.z
                            mul r6.y, r6.y, -c149.y  // ::h<0>
                            rcp r8.w, r5.w
                            lrp r9.y, r6.y, r8.w, c111.w  // ::part<0>

#line 1135
                            mul r9.w, r8.w, r8.w
                            mul r9.y, r9.y, r9.y
                            mul r9.y, r9.y, c62.x
                            mad r9.y, r9.w, c146.w, r9.y
                            add r9.y, r9.y, c146.z
                            rsq r9.y, r9.y
                            mul r12.x, r9.y, r11.y  // ::r<0>
                            mul r12.y, r8.w, r12.x  // ::g<0>
                            mad r8.w, r12.x, r8.w, -r12.x
                            mad r12.z, r6.y, r8.w, r12.x  // ::b<0>
                          else
                            if_lt r10.z, c154.y
                              mad r6.y, r10.z, -c108.y, c108.w
                              mul r6.y, r6.y, -c149.y  // ::h<0>
                              rcp r8.w, r5.w
                              lrp r9.y, r6.y, r8.w, c111.w  // ::part<0>
                              mul r9.w, r8.w, r8.w
                              mul r9.y, r9.y, r9.y
                              mul r9.y, r9.y, c146.w
                              mad r9.y, r9.w, c62.x, r9.y
                              add r9.y, r9.y, c146.z
                              rsq r9.y, r9.y
                              mul r12.x, r9.y, r11.y  // ::r<0>
                              mul r12.z, r8.w, r12.x  // ::b<0>

#line 1146
                              mad r8.w, r12.x, r8.w, -r12.x
                              mad r12.y, r6.y, r8.w, r12.x  // ::g<0>
                            else
                              add r6.y, r10.z, -c105.z
                              mad r8.w, r10.z, c107.x, c107.y
                              mul r8.w, r8.w, -c149.y  // ::h<0>
                              rcp r5.w, r5.w
                              lrp r9.y, r8.w, r5.w, c111.w  // ::part<0>
                              mul r9.w, r5.w, r5.w

#line 1162
                              mul r13.xy, r9.w, c161.zxzw

#line 1153
                              mul r9.y, r9.y, r9.y
                              mad r9.y, r9.y, c146.z, r13.x
                              add r9.y, r9.y, c146.w
                              rsq r9.y, r9.y
                              mul r14.y, r9.y, r11.y  // ::g<0>
                              mul r14.z, r5.w, r14.y  // ::b<0>
                              mad r9.y, r14.y, r5.w, -r14.y
                              mad r14.x, r8.w, r9.y, r14.y  // ::r<0>

#line 1160
                              mad r8.w, r10.z, -c107.x, c107.z
                              mul r8.w, r8.w, -c149.y  // ::h<0>
                              lrp r9.y, r8.w, r5.w, c111.w  // ::part<0>
                              mul r9.y, r9.y, r9.y
                              mad r9.y, r9.y, c62.x, r13.y
                              add r9.y, r9.y, c146.w
                              rsq r9.y, r9.y
                              mul r13.y, r9.y, r11.y  // ::g<0>
                              mul r13.x, r5.w, r13.y  // ::r<0>
                              mad r5.w, r13.y, r5.w, -r13.y
                              mad r13.z, r8.w, r5.w, r13.y  // ::b<0>
                              cmp r12.xyz, r6.y, r13, r14  // ::r<0>, ::g<0>, ::b<0>
                            endif
                          endif
                        endif
                      endif
                    else

#line 1170
                      if_lt r10.z, c60.x
                        mul r5.w, r10.z, c138.w  // ::h<0>
                        mul r6.y, r11.y, r11.y
                        mul r8.w, r10.z, r5.w
                        mad r8.w, r8.w, c121.x, c121.y
                        rcp r8.w, r8.w
                        mul r6.y, r6.y, r8.w
                        rsq r6.y, r6.y
                        rcp r12.x, r6.y  // ::r<0>
                        mul r12.y, r5.w, r12.x  // ::g<0>
                        mov r12.z, c102.z
                      else
                        if_lt r10.z, c69.w
                          mad r5.w, r10.z, -c139.z, c139.w
                          mul r6.y, r5.w, -c149.y  // ::h<0>

#line 1181
                          mul r8.w, r11.y, r11.y
                          mul r5.w, r5.w, r6.y
                          mad r5.w, r5.w, c121.z, c121.w
                          rcp r5.w, r5.w
                          mul r5.w, r5.w, r8.w
                          rsq r5.w, r5.w
                          rcp r12.y, r5.w  // ::g<0>
                          mul r12.x, r6.y, r12.y  // ::r<0>
                          mov r12.z, c102.z
                        else

#line 1204
                          mad r9.yw, r10.z, c107.x, c107.xwzy
                          mul r13.xy, r9.ywzw, -c149.y  // ::h<0,0>

#line 1189
                          mul r5.w, r11.y, r11.y

#line 1205
                          mul r9.yw, r9, r13.xxzy
                          mad r9.yw, r9, c165.xxzy, c165.xzzw

#line 1189
                          rcp r6.y, r9.y
                          mul r6.y, r5.w, r6.y
                          rsq r6.y, r6.y
                          rcp r14.y, r6.y  // ::g<0>
                          mul r14.z, r13.x, r14.y  // ::b<0>

#line 1212
                          mad r13.xz, r10.z, -c107_abs.x, c107_abs.yyzw
                          mul r15.xy, r13.xzzw, -c149.y  // ::h<0,0>
                          mul r13.xz, r13, r15.xyyw
                          mad r13.xz, r13, c122.xyyw, c122.zyww

#line 1197
                          rcp r6.y, r13.x
                          mul r6.y, r5.w, r6.y
                          rsq r6.y, r6.y
                          rcp r16.z, r6.y  // ::b<0>
                          mul r16.y, r15.x, r16.z  // ::g<0>

#line 1202
                          add r15.xzw, r10.z, c118.xyyz

#line 1205
                          rcp r6.y, r9.w
                          mul r6.y, r5.w, r6.y
                          rsq r6.y, r6.y
                          rcp r17.z, r6.y  // ::b<0>
                          mul r17.x, r13.y, r17.z  // ::r<0>

#line 1213
                          rcp r6.y, r13.z
                          mul r5.w, r5.w, r6.y
                          rsq r5.w, r5.w
                          rcp r13.x, r5.w  // ::r<0>
                          mul r13.z, r15.y, r13.x  // ::b<0>
                          mov r13.y, c102.z
                          mov r17.y, c102.z
                          cmp r13.xyz, r15.w, r13, r17  // ::r<0>, ::g<0>, ::b<0>
                          mov r16.x, c102.z
                          cmp r13.xyz, r15.z, r13, r16  // ::r<0>, ::g<0>, ::b<0>
                          mov r14.x, c102.z
                          cmp r12.xyz, r15.x, r13, r14  // ::r<0>, ::g<0>, ::b<0>
                        endif
                      endif
                    endif

#line 1220
                    add r12.xyz, r12, -c151.y
                    frc r13.xyz, r12
                    add r12.xyz, r12, -r13
                    mul_sat r8.xyz, r12.xzyw, c74.w  // ::result<0,2,1>

#line 2430
                    mov r1.z, c111.w
                  else
                    if_eq r9.x, -c37.w

#line 1291
                      mul r9.yw, r11.xxzy, c106.w  // ::white<0>, ::black<0>
                      add r5.w, r9.w, r9.y
                      rcp r6.y, r5.w
                      mul r6.y, r6.y, r9.y  // ::gray<0>

#line 1299
                      add r5.w, r5.w, -c111.w

#line 850
                      mul r8.w, r10.z, c138.w  // ::SectorPosition<0>
                      frc r9.w, r8.w
                      add r8.w, r8.w, -r9.w  // ::SectorNumber<0>

#line 854
                      mad r9.w, r10.z, c138.w, -r8.w  // ::FractionalSector<0>

#line 858
                      add r12.x, -r9.w, c111.w  // ::q<0>

#line 886
                      add r13, r8.w, c162

#line 892
                      add r9.w, r8.w, c134.x
                      cmp r14.x, -r9_abs.w, c111_abs.w, c111_abs.y  // ::r<0>

#line 897
                      mov r12.y, c102.z
                      cmp r14.yz, -r9_abs.w, r12.xyxw, c102.z  // ::g<0>, ::b<0>
                      mad r12.zw, r12.x, c119.xyyz, c119.x
                      cmp r14.xyz, -r13_abs.w, r12.zyww, r14  // ::r<0>, ::g<0>, ::b<0>
                      cmp r14.xyz, -r13_abs.z, r12.yxww, r14  // ::r<0>, ::g<0>, ::b<0>
                      mad r15.xyz, r12.wxyw, c119.xyxw, c119.zxzw
                      cmp r13.yzw, -r13_abs.y, r15.xzxy, r14.xxyz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r12.xyz, -r13_abs.x, r12.xwyw, r13.yzww  // ::r<0>, ::g<0>, ::b<0>
                      cmp r12.xyz, -r8_abs.w, r15, r12  // ::r<0>, ::g<0>, ::b<0>

#line 1302
                      mad r8.w, r11.x, -c115.x, c115.z
                      mad r8.w, r11.y, -c106.w, r8.w

#line 1309
                      mad r12.xyz, r12, r8.w, r9.y  // ::rgb<0,1,2>
                      cmp r8.xyz, r5.w, r6.y, r12.xzyw  // ::HWB_Lrgb<0,2,1>

#line 2431
                      mov r1.z, c111.w
                    else
                      if_eq r9.x, -c40.x

#line 458
                        mul r12.xyz, r11.x, c88
                        mad r12.xyz, r10.z, c87, r12
                        mad r8.xyz, r11.y, c89.xzyw, r12.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2432
                        mov r1.z, c111.w
                      else
                        if_eq r9.x, -c40.y

#line 2138
                          add r9.yw, r11.xyzx, c102.w
                          mad r5.w, r9.w, -c118.w, r10.z
                          mad r5.w, r9.y, -c88.w, r5.w  // ::ycbcr<1>
                          mad r9.yw, r9, c93.xxzy, r10.z  // ::ycbcr<0,2>

#line 2118
                          add r9.yw, r9, -c145
                          add r5.w, r5.w, c102.w

#line 2073
                          mul r12.xy, r9.ywzw, c93.zwzw  // ::ypbpr<0>
                          add r8.x, r12.y, r12.x  // ::r<0>
                          mad r8.y, r5.w, c87.w, r12.x  // ::b<0>
                          mul r5.w, r8.x, c135.x
                          mad r5.w, r9.y, c89.w, -r5.w
                          mad r5.w, r8.y, -c135.z, r5.w
                          mul r8.z, r5.w, c98.x  // ::g<0>

#line 2433
                          mov r1.z, c111.w
                        else
                          add r5.w, r9.x, -c150.w
                          cmp r1.z, -r5_abs.w, c111_abs.w, c111_abs.y

#line 1379
                          add r6.y, r10.z, c150.w
                          mul r8.w, r6.y, c82.w  // ::fy<0>
                          mul r9.y, r11.y, c98.y
                          mad r9.w, r11.x, c98.z, r8.w  // ::fx<0>
                          mad r6.y, r6.y, c82.w, -r9.y  // ::fz<0>
                          mul r9.y, r9.w, r9.w
                          mul r10.w, r9.y, r9.w  // ::fx3<0>
                          mul r12.x, r6.y, r6.y
                          mul r12.y, r6.y, r12.x  // ::fz3<0>
                          mad r9.y, r9.w, -r9.y, c105.x
                          mad r9.w, r9.w, c126.x, c126.y
                          mul r9.w, r9.w, c110.x
                          cmp r9.y, r9.y, r9.w, r10.w  // ::xr<0>
                          add r9.w, -r10.z, c82.z
                          mul r10.w, r8.w, r8.w
                          mul r8.w, r8.w, r10.w
                          mul r10.w, r10.z, c110.x
                          cmp r8.w, r9.w, r10.w, r8.w  // ::yr<0>
                          mad r9.w, r6.y, -r12.x, c105.x
                          mad r6.y, r6.y, c126.x, c126.y
                          mul r6.y, r6.y, c110.x
                          cmp r6.y, r9.w, r6.y, r12.y  // ::zr<0>

#line 496
                          abs r9.w, c13.x

#line 500
                          rcp r10.w, c13.x
                          mul r12.x, r10.w, c12.x  // ::xyY_XYZ<0>
                          mov r13.x, c13.x  // ::WhiteY<0>
                          add r12.w, -r13.x, -c12.x
                          add r12.w, r12.w, c111.w
                          mul r12.z, r10.w, r12.w  // ::xyY_XYZ<2>
                          mov r12.y, c111.w
                          cmp r12.xyz, -r9.w, c113.z, r12  // ::xyY_XYZ<0,1,2>

#line 1391
                          mul r13.x, r9.y, r12.x  // ::Lab_Lrgb<0>
                          mul r13.y, r8.w, r12.y  // ::Lab_Lrgb<1>
                          mul r13.z, r6.y, r12.z  // ::Lab_Lrgb<2>

#line 2434
                          cmp r8.xyz, -r5_abs.w, r13.xzyw, r8  // ::TLrgb<0,2,1>
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r1.z, -r1.z

#line 2465
            else

#line 2436
              if_eq r9.x, -c45.x

#line 496
                abs r1.z, c13.x

#line 500
                rcp r5.w, c13.x
                mul r12.x, r5.w, c12.x  // ::xyY_XYZ<0>
                mov r13.x, c13.x  // ::WhiteY<0>
                add r6.y, -r13.x, -c12.x
                add r6.y, r6.y, c111.w
                mul r12.z, r5.w, r6.y  // ::xyY_XYZ<2>
                mov r12.y, c111.w
                cmp r12.xyz, -r1.z, c113.z, r12  // ::xyY_XYZ<0,1,2>

#line 540
                add r9.yw, r12.xxzz, c109.xxzy

#line 543
                cmp r5.w, -r9_abs.w, -c111_abs.w, -c111_abs.y
                cmp r5.w, -r1.z, c102.z, r5.w
                cmp r5.w, -r9_abs.y, r5.w, c102.z

#line 553
                add r9.yw, r12.xyzz, r12.xxzy
                mul r9.yw, r9, c109.xzzw  // ::Ka<0,0>

#line 1435
                mul r6.y, r10.z, c106.w
                mul r6.y, r6.y, r6.y
                mul r6.y, r12.y, r6.y  // ::Y<0>
                rcp r8.w, r9.y
                cmp r8.w, r5.w, r8.w, c98.w
                mul r8.w, r8.w, r11.x
                cmp r1.z, -r1.z, c112.z, c112.w
                mul r1.z, r1.z, r6.y
                rsq r9.y, r1.z
                rcp r9.y, r9.y
                mad r8.w, r8.w, r9.y, r1.z
                mul r8.w, r12.x, r8.w  // ::X<0>
                rcp r9.w, r9.w
                cmp r5.w, r5.w, r9.w, c126.z
                mul r5.w, r5.w, r11.y
                mad r1.z, r5.w, r9.y, -r1.z
                mul r1.z, -r12.z, r1.z  // ::Z<0>

#line 458
                mul r12.xyz, r6.y, c24
                mad r12.xyz, r8.w, c23, r12
                mad r8.xyz, r1.z, c25.xzyw, r12.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2436
                mov r1.z, c111.w
              else
                if_eq r9.x, -c45.y
                  mov r11.z, r10.z
                  mov r8.xyz, r11.zyxw  // ::TLrgb<0,2,1>
                  mov r1.z, c111.w
                else
                  if_eq r9.x, -c45.z

#line 1481
                    add r5.w, r10.z, -c65.w  // ::Jz<0>
                    mad r6.y, r5.w, c90.x, c90.y
                    rcp r6.y, r6.y

#line 1486
                    mul r9.yw, r11.x, c90.xzzw
                    mad r8.w, r5.w, r6.y, r9.y
                    mad r8.w, r11.y, c126.w, r8.w  // PerceptualQuantizerInverse::X<0>

#line 479
                    pow r10.w, r8.w, c91.x  // ::XX<0>
                    add r8.w, -r10.w, c64.z
                    mad r10.w, r10.w, c91.y, c91.z
                    rcp r10.w, r10.w
                    mul r8.w, r8.w, r10.w
                    pow r10.w, r8.w, c91.w

#line 1486
                    mad r9.yw, r5.w, r6.y, -r9
                    mad r9.yw, r11.y, -c131.xxzy, r9  // PerceptualQuantizerInverse::X<0,0>

#line 479
                    pow r5.w, r9.y, c91.x  // ::XX<0>
                    add r6.y, -r5.w, c64.z
                    mad r5.w, r5.w, c91.y, c91.z
                    rcp r5.w, r5.w
                    mul r5.w, r5.w, r6.y
                    pow r6.y, r5.w, c91.w
                    pow r5.w, r9.w, c91.x  // ::XX<0>
                    add r8.w, -r5.w, c64.z
                    mad r5.w, r5.w, c91.y, c91.z
                    rcp r5.w, r5.w
                    mul r5.w, r5.w, r8.w
                    pow r8.w, r5.w, c91.w

#line 1490
                    mul r12.xyz, r6.y, c130
                    mad r9.yw, r10.w, c131.xzzw, -r12.xxzz
                    mad r5.w, r10.w, c130.w, r12.y
                    mad r5.w, r8.w, -c129.x, r5.w  // ::Y<0>
                    mad r9.yw, r8.w, c129.xyzz, r9  // ::X<0>, ::Z<0>
                    mul r5.w, r5.w, c63.z  // ::xyz<1>
                    mul r9.yw, r9, c63.z  // ::xyz<0,2>

#line 458
                    mul r12.xyz, r5.w, c24
                    mad r12.xyz, r9.y, c23, r12
                    mad r8.xyz, r9.w, c25.xzyw, r12.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2438
                    mov r1.z, c111.w
                  else
                    if_eq r9.x, -c45.w

#line 496
                      abs r5.w, c13.x

#line 500
                      rcp r6.y, c13.x
                      mul r12.x, r6.y, c12.x  // ::xyY_XYZ<0>
                      mov r13.x, c13.x  // ::WhiteY<0>
                      add r8.w, -r13.x, -c12.x
                      add r8.w, r8.w, c111.w
                      mul r12.z, r6.y, r8.w  // ::xyY_XYZ<2>
                      mov r12.y, c111.w
                      cmp r12.xyz, -r5.w, c113.z, r12  // ::xyY_XYZ<0,1,2>

#line 458
                      mul r13.xyz, r11.x, c27
                      mad r13.xyz, r10.z, c26, r13
                      mad r13.xyz, r11.y, c28, r13  // ::x<0>, ::y<0>, ::z<0>

#line 488
                      mul r14.xyz, r13, r13
                      mul r13.xyz, r13, r14  // ::Pow3<0,0,0>

#line 458
                      mul r14.xyz, r13.y, c33
                      mad r13.xyw, r13.x, c32.xyzz, r14.xyzz
                      mad r13.xyz, r13.z, c34, r13.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 1539
                      mul r12.xyz, r12, r13  // ::xyz<0,1,2>

#line 458
                      mul r13.xyz, r12.y, c24
                      mad r12.xyw, r12.x, c23.xyzz, r13.xyzz
                      mad r8.xyz, r12.z, c25.xzyw, r12.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2439
                      mov r1.z, c111.w
                    else
                      if_eq r9.x, -c46.x

#line 577
                        mad r5.w, r11.y, c82.x, c82.y
                        frc r5.w, r5.w
                        mad r5.w, r5.w, c163.z, c163.w
                        sincos r12.xy, r5.w
                        mul r9.yw, r11.x, r12.xxzy  // ::a<0>, ::b<0>

#line 1379
                        add r5.w, r10.z, c150.w
                        mul r6.y, r5.w, c82.w  // ::fy<0>
                        mul r8.w, r9.w, c98.y
                        mad r9.y, r9.y, c98.z, r6.y  // ::fx<0>
                        mad r5.w, r5.w, c82.w, -r8.w  // ::fz<0>
                        mul r8.w, r9.y, r9.y
                        mul r9.w, r8.w, r9.y  // ::fx3<0>
                        mul r10.w, r5.w, r5.w
                        mul r11.z, r5.w, r10.w  // ::fz3<0>
                        mad r8.w, r9.y, -r8.w, c105.x
                        mad r9.y, r9.y, c126.x, c126.y
                        mul r9.y, r9.y, c110.x
                        cmp r8.w, r8.w, r9.y, r9.w  // ::xr<0>
                        add r9.y, -r10.z, c82.z
                        mul r9.w, r6.y, r6.y
                        mul r6.y, r6.y, r9.w
                        mul r9.w, r10.z, c110.x
                        cmp r6.y, r9.y, r9.w, r6.y  // ::yr<0>
                        mad r9.y, r5.w, -r10.w, c105.x
                        mad r5.w, r5.w, c126.x, c126.y
                        mul r5.w, r5.w, c110.x
                        cmp r5.w, r9.y, r5.w, r11.z  // ::zr<0>

#line 496
                        abs r9.y, c13.x

#line 500
                        rcp r9.w, c13.x
                        mul r12.x, r9.w, c12.x  // ::xyY_XYZ<0>
                        mov r13.x, c13.x  // ::WhiteY<0>
                        add r10.w, -r13.x, -c12.x
                        add r10.w, r10.w, c111.w
                        mul r12.z, r9.w, r10.w  // ::xyY_XYZ<2>
                        mov r12.y, c111.w
                        cmp r12.xyz, -r9.y, c113.z, r12  // ::xyY_XYZ<0,1,2>

#line 1391
                        mul r8.x, r8.w, r12.x  // ::Lab_Lrgb<0>
                        mul r8.z, r6.y, r12.y  // ::Lab_Lrgb<1>
                        mul r8.y, r5.w, r12.z  // ::Lab_Lrgb<2>

#line 2440
                        mov r1.z, c111.w
                      else
                        if_eq r9.x, -c46.y

#line 577
                          mad r5.w, r11.y, c82.x, c82.y
                          frc r5.w, r5.w
                          mad r5.w, r5.w, c163.z, c163.w
                          sincos r12.xy, r5.w
                          mul r9.yw, r11.x, r12.xxzy  // ::a<0>, ::b<0>

#line 496
                          abs r5.w, c13.x

#line 500
                          rcp r6.y, c13.x
                          mul r12.x, r6.y, c12.x  // ::xyY_XYZ<0>
                          mov r13.x, c13.x  // ::WhiteY<0>
                          add r8.w, -r13.x, -c12.x
                          add r8.w, r8.w, c111.w
                          mul r12.z, r6.y, r8.w  // ::xyY_XYZ<2>
                          mov r12.y, c111.w
                          cmp r12.xyz, -r5.w, c113.z, r12  // ::xyY_XYZ<0,1,2>

#line 540
                          add r13.xy, r12.xzzw, c109

#line 543
                          cmp r6.y, -r13_abs.y, -c111_abs.w, -c111_abs.y
                          cmp r6.y, -r5.w, c102.z, r6.y
                          cmp r6.y, -r13_abs.x, r6.y, c102.z

#line 553
                          add r13.xy, r12.yzzw, r12
                          mul r13.xy, r13, c109.zwzw  // ::Ka<0,0>

#line 1435
                          mul r8.w, r10.z, c106.w
                          mul r8.w, r8.w, r8.w
                          mul r8.w, r12.y, r8.w  // ::Y<0>
                          rcp r10.w, r13.x
                          cmp r10.w, r6.y, r10.w, c98.w
                          mul r9.y, r9.y, r10.w
                          cmp r5.w, -r5.w, c112.z, c112.w
                          mul r5.w, r5.w, r8.w
                          rsq r10.w, r5.w
                          rcp r10.w, r10.w
                          mad r9.y, r9.y, r10.w, r5.w
                          mul r9.y, r12.x, r9.y  // ::X<0>
                          rcp r11.z, r13.y
                          cmp r6.y, r6.y, r11.z, c126.z
                          mul r6.y, r6.y, r9.w
                          mad r5.w, r6.y, r10.w, -r5.w
                          mul r5.w, -r12.z, r5.w  // ::Z<0>

#line 458
                          mul r12.xyz, r8.w, c24
                          mad r12.xyz, r9.y, c23, r12
                          mad r8.xyz, r5.w, c25.xzyw, r12.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2441
                          mov r1.z, c111.w
                        else
                          if_eq r9.x, -c46.z

#line 577
                            mad r5.w, r11.y, c82.x, c82.y
                            frc r5.w, r5.w
                            mad r5.w, r5.w, c163.z, c163.w
                            sincos r12.xy, r5.w
                            mul r12, r11.x, r12.xyxy  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1481
                            add r5.w, r10.z, -c65.w  // ::Jz<0>
                            mad r6.y, r5.w, c90.x, c90.y
                            rcp r6.y, r6.y

#line 1486
                            mul r9.yw, r12.xxzz, c90.xzzw
                            mad r8.w, r5.w, r6.y, r9.y
                            mad r8.w, r12.y, c126.w, r8.w  // PerceptualQuantizerInverse::X<0>

#line 479
                            pow r10.w, r8.w, c91.x  // ::XX<0>
                            add r8.w, -r10.w, c64.z
                            mad r10.w, r10.w, c91.y, c91.z
                            rcp r10.w, r10.w
                            mul r8.w, r8.w, r10.w
                            pow r10.w, r8.w, c91.w

#line 1486
                            mad r9.yw, r5.w, r6.y, -r9
                            mad r9.yw, r12, -c131.xxzy, r9  // PerceptualQuantizerInverse::X<0,0>

#line 479
                            pow r5.w, r9.y, c91.x  // ::XX<0>
                            add r6.y, -r5.w, c64.z
                            mad r5.w, r5.w, c91.y, c91.z
                            rcp r5.w, r5.w
                            mul r5.w, r5.w, r6.y
                            pow r6.y, r5.w, c91.w
                            pow r5.w, r9.w, c91.x  // ::XX<0>
                            add r8.w, -r5.w, c64.z
                            mad r5.w, r5.w, c91.y, c91.z
                            rcp r5.w, r5.w
                            mul r5.w, r5.w, r8.w
                            pow r8.w, r5.w, c91.w

#line 1490
                            mul r12.xyz, r6.y, c130
                            mad r9.yw, r10.w, c131.xzzw, -r12.xxzz
                            mad r5.w, r10.w, c130.w, r12.y
                            mad r5.w, r8.w, -c129.x, r5.w  // ::Y<0>
                            mad r9.yw, r8.w, c129.xyzz, r9  // ::X<0>, ::Z<0>
                            mul r5.w, r5.w, c63.z  // ::xyz<1>
                            mul r9.yw, r9, c63.z  // ::xyz<0,2>

#line 458
                            mul r12.xyz, r5.w, c24
                            mad r12.xyz, r9.y, c23, r12
                            mad r8.xyz, r9.w, c25.xzyw, r12.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2442
                            mov r1.z, c111.w
                          else
                            add r5.w, r9.x, c46.w
                            cmp r1.z, -r5_abs.w, c111_abs.w, c111_abs.y
                            if_eq r9.x, -c46.w

#line 577
                              mad r5.w, r11.y, c82.x, c82.y
                              frc r5.w, r5.w
                              mad r5.w, r5.w, c163.z, c163.w
                              sincos r12.xy, r5.w
                              mul r9.yw, r11.x, r12.xxzy  // ::a<0>, ::b<0>

#line 496
                              abs r5.w, c13.x

#line 500
                              rcp r6.y, c13.x
                              mul r12.x, r6.y, c12.x  // ::xyY_XYZ<0>
                              mov r13.x, c13.x  // ::WhiteY<0>
                              add r8.w, -r13.x, -c12.x
                              add r8.w, r8.w, c111.w
                              mul r12.z, r6.y, r8.w  // ::xyY_XYZ<2>
                              mov r12.y, c111.w
                              cmp r12.xyz, -r5.w, c113.z, r12  // ::xyY_XYZ<0,1,2>

#line 559
                              cmp r5.w, -r5.w, c125.y, c125.w
                              add r5.w, r5.w, r12.x
                              mul r6.y, r12.x, -c56.z
                              mad r5.w, r12.z, -c56.x, r5.w
                              rcp r5.w, r5.w
                              mul r6.y, r5.w, r6.y  // ::ComputeKu<0>

#line 564
                              mul r5.w, r12.y, r5.w
                              mul r5.w, r5.w, -c86.x  // ::ComputeKv<0>

#line 1593
                              add r8.w, -r10.z, c82.z
                              add r10.w, r10.z, c150.w
                              mul r10.w, r10.w, c82.w
                              mul r11.z, r10.w, r10.w
                              mul r10.w, r10.w, r11.z

#line 1598
                              mul r12, r10.z, c137

#line 1593
                              cmp r8.w, r8.w, r12.x, r10.w  // ::Y<0>
                              mad r6.y, r12.z, r6.y, r9.y
                              rcp r6.y, r6.y
                              mad r6.y, r12.y, r6.y, -c111.w
                              mul r6.y, r6.y, c83.z  // ::a<0>
                              mul r9.y, r8.w, c134.x  // ::b<0>
                              mad r5.w, r12.z, r5.w, r9.w
                              rcp r5.w, r5.w
                              mad r5.w, r12.w, r5.w, c134.x
                              mad r5.w, r8.w, r5.w, -r9.y
                              rcp r9.w, r6.y
                              mul r5.w, r5.w, r9.w  // ::X<0>
                              mad r6.y, r5.w, r6.y, r9.y  // ::Z<0>

#line 1604
                              max r9.y, r5.w, c102.z  // ::X<0>

#line 1607
                              max r5.w, r8.w, c102.z  // ::Y<0>

#line 1610
                              max r8.w, r6.y, c102.z  // ::Z<0>

#line 458
                              mul r12.xyz, r5.w, c24
                              mad r12.xyz, r9.y, c23, r12
                              mad r8.xyz, r8.w, c25.xzyw, r12.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2443
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r1.z, -r1.z

#line 2465
              else

#line 2445
                if_eq r9.x, -c35.x

#line 577
                  mad r1.z, r11.y, c82.x, c82.y
                  frc r1.z, r1.z
                  mad r1.z, r1.z, c163.z, c163.w
                  sincos r12.xy, r1.z
                  mul r10.xy, r11.x, r12  // ::a<0>, ::b<0>

#line 1922
                  add r10.xyw, r10.xyzz, c152.wwzx
                  mul r12.xyz, r10.xyww, c136.xxyw  // ::result<0,1,2>

#line 500
                  mul r1.z, r12.z, r12.x
                  rcp r5.w, r12.y
                  mul r13.x, r1.z, r5.w  // ::xyY_XYZ<0>
                  mad r1.z, r10.y, -c98.y, -r12.x
                  add r1.z, r1.z, c111.w
                  mul r1.z, r12.z, r1.z
                  mul r13.z, r5.w, r1.z  // ::xyY_XYZ<2>
                  mov r13.y, r12.z
                  cmp r10.xyw, -r12_abs.y, c113.z, r13.xyzz  // ::xyY_XYZ<0,1,2>

#line 458
                  mul r12.xyz, r10.y, c24
                  mad r12.xyz, r10.x, c23, r12
                  mad r8.xyz, r10.w, c25.xzyw, r12.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2445
                  mov r1.z, c111.w
                else
                  if_eq r9.x, -c35.y

#line 458
                    mul r10.xyw, r11.x, c15.xyzz
                    mad r10.xyw, r10.z, c14.xyzz, r10
                    mad r10.xyw, r11.y, c16.xyzz, r10  // ::x<0>, ::y<0>, ::z<0>
                    mul r12.xyz, r10.y, c24
                    mad r12.xyz, r10.x, c23, r12
                    mad r8.xyz, r10.w, c25.xzyw, r12.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2446
                    mov r1.z, c111.w
                  else
                    if_eq r9.x, -c35.z

#line 496
                      abs r5.w, c13.x

#line 500
                      rcp r6.y, c13.x
                      mul r12.x, r6.y, c12.x  // ::xyY_XYZ<0>
                      mov r10.x, c13.x  // ::WhiteY<0>
                      add r8.w, -r10.x, -c12.x
                      add r8.w, r8.w, c111.w
                      mul r12.z, r6.y, r8.w  // ::xyY_XYZ<2>
                      mov r12.y, c111.w
                      cmp r10.xyw, -r5.w, c113.z, r12.xyzz  // ::xyY_XYZ<0,1,2>

#line 559
                      cmp r5.w, -r5.w, c125.y, c125.w
                      add r5.w, r5.w, r10.x
                      mul r6.y, r10.x, -c56.z
                      mad r5.w, r10.w, -c56.x, r5.w
                      rcp r5.w, r5.w
                      mul r6.y, r5.w, r6.y  // ::ComputeKu<0>

#line 564
                      mul r5.w, r10.y, r5.w
                      mul r5.w, r5.w, -c86.x  // ::ComputeKv<0>

#line 1593
                      add r8.w, -r10.z, c82.z
                      add r9.y, r10.z, c150.w
                      mul r9.y, r9.y, c82.w
                      mul r9.w, r9.y, r9.y
                      mul r9.y, r9.w, r9.y

#line 1598
                      mul r12, r10.z, c137

#line 1593
                      cmp r8.w, r8.w, r12.x, r9.y  // ::Y<0>
                      mad r6.y, r12.z, r6.y, r11.x
                      rcp r6.y, r6.y
                      mad r6.y, r12.y, r6.y, -c111.w
                      mul r6.y, r6.y, c83.z  // ::a<0>
                      mul r9.y, r8.w, c134.x  // ::b<0>
                      mad r5.w, r12.z, r5.w, r11.y
                      rcp r5.w, r5.w
                      mad r5.w, r12.w, r5.w, c134.x
                      mad r5.w, r8.w, r5.w, -r9.y
                      rcp r9.w, r6.y
                      mul r5.w, r5.w, r9.w  // ::X<0>
                      mad r6.y, r5.w, r6.y, r9.y  // ::Z<0>

#line 1604
                      max r9.y, r5.w, c102.z  // ::X<0>

#line 1607
                      max r5.w, r8.w, c102.z  // ::Y<0>

#line 1610
                      max r8.w, r6.y, c102.z  // ::Z<0>

#line 458
                      mul r10.xyw, r5.w, c24.xyzz
                      mad r10.xyw, r9.y, c23.xyzz, r10
                      mad r8.xyz, r8.w, c25.xzyw, r10.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2447
                      mov r1.z, c111.w
                    else
                      if_eq r9.x, -c35.w

#line 1335
                        mad r5.w, r10.z, c71.x, c71.z
                        frc r5.w, r5.w
                        mad r5.w, r5.w, c163.z, c163.w
                        sincos r12.xy, r5.w
                        rcp r5.w, r12.x
                        mul r5.w, r5.w, r12.y  // ::x<0>
                        mul r6.y, r5.w, r5.w  // ::x<0>
                        mul r8.w, r11.x, r11.x
                        mul r8.w, r8.w, -c134.x
                        rcp r6.y, r6.y
                        add r6.y, r6.y, c111.w
                        mul r6.y, r6.y, -c86.x
                        rcp r6.y, r6.y
                        mul r6.y, r6.y, r8.w
                        rsq r6.y, r6.y
                        rcp r6.y, r6.y  // ::r<0>
                        mad r5.w, r5.w, r5.w, c111.w
                        mul r5.w, r5.w, -c86.x
                        rcp r5.w, r5.w
                        mul r5.w, r5.w, r8.w
                        rsq r5.w, r5.w
                        rcp r5.w, r5.w  // ::g<0>
                        mul r8.w, r5.w, c129.w
                        mad r8.w, r6.y, c136.z, r8.w
                        add r8.w, r8.w, c62.x
                        rcp r8.w, r8.w
                        mul r8.w, r8.w, r11.y  // ::k<0>
                        add r9.y, -r6.y, c111.w
                        add r9.y, -r5.w, r9.y
                        mul r8.y, r8.w, r9.y  // ::B<0>
                        mul r8.z, r5.w, r8.w  // ::G<0>
                        mul r8.x, r6.y, r8.w  // ::R<0>

#line 2448
                        mov r1.z, c111.w
                      else
                        if_eq r9.x, -c59.x

#line 1847
                          mul r5.w, r10.z, c136.w  // XYZ_Lrgb::input<0>
                          mad r6.y, r11.x, c56.x, r5.w
                          mad r6.y, r11.y, -c85.z, r6.y  // XYZ_Lrgb::input<2>

#line 458
                          mul r10.xyw, r11.x, c24.xyzz
                          mad r10.xyw, r5.w, c23.xyzz, r10
                          mad r8.xyz, r6.y, c25.xzyw, r10.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2449
                          mov r1.z, c111.w
                        else
                          if_eq r9.x, -c59.y

#line 1867
                            if_eq r9.z, -r4.w

#line 1880
                              mov r8.xyz, c102.z  // ::UVW_Lrgb<0,2,1>
                            else

#line 496
                              abs r4.w, c13.x

#line 500
                              rcp r5.w, c13.x
                              mul r12.x, r5.w, c12.x  // ::xyY_XYZ<0>
                              mov r10.x, c13.x  // ::WhiteY<0>
                              add r6.y, -r10.x, -c12.x
                              add r6.y, r6.y, c111.w
                              mul r12.z, r5.w, r6.y  // ::xyY_XYZ<2>
                              mov r12.y, c111.w
                              cmp r9.yzw, -r4.w, c113.z, r12.xxyz  // ::xyY_XYZ<0,1,2>

#line 1868
                              cmp r4.w, -r4.w, c125.y, c125.w
                              add r4.w, r4.w, r9.y
                              mul r5.w, r9.y, -c56.z
                              mad r4.w, r9.w, -c56.x, r4.w
                              rcp r4.w, r4.w
                              mul r5.w, r4.w, r5.w  // ::uN<0>
                              mul r4.w, r9.z, r4.w
                              mul r4.w, r4.w, -c149.y  // ::vN<0>
                              add r6.y, r11.y, -c45.x
                              mul r6.y, r6.y, c92.x
                              mul r8.w, r6.y, r6.y
                              mul r6.y, r6.y, r8.w  // ::y<0>
                              mul r8.w, r11.y, -c37.w
                              rcp r9.y, r8.w
                              mad r5.w, r10.z, r9.y, r5.w
                              cmp r5.w, -r8_abs.w, c102.z, r5.w  // ::_u<0>
                              mad r4.w, r11.x, r9.y, r4.w
                              cmp r4.w, -r8_abs.w, c102.z, r4.w  // ::_v<0>
                              mul r8.w, r5.w, r6.y
                              rcp r4.w, r4.w
                              mul r8.w, r4.w, r8.w  // ::x<0>
                              add r9.y, r4.w, r4.w
                              mul r4.w, r5.w, r4.w
                              mad r4.w, r4.w, c151.y, r9.y
                              add r4.w, r4.w, c134.x
                              mul r4.w, r4.w, r6.y  // ::z<0>

#line 1879
                              mul r5.w, r8.w, c106.w  // ::xyz<0>
                              mul r6.y, r6.y, c106.w  // ::xyz<1>
                              mul r4.w, r4.w, c106.w  // ::xyz<2>

#line 458
                              mul r9.yzw, r6.y, c24.xxyz
                              mad r9.yzw, r5.w, c23.xxyz, r9
                              mad r8.xyz, r4.w, c25.xzyw, r9.ywzw  // ::x<0>, ::z<0>, ::y<0>

#line 1880
                            endif

#line 2450
                            mov r1.z, c111.w
                          else
                            add r9.yz, r9.x, c59.xzww

#line 2098
                            add r4.w, r10.z, -c150.w
                            mul r5.w, r4.w, c89.w  // ::ypbpr<0>
                            add r10.xy, r11, c102.w

#line 2074
                            mad r12.xz, r10.yyxw, c92.yyzw, r5.w  // ::r<0>, ::b<0>
                            mul r5.w, r12.x, c135.x
                            mad r4.w, r4.w, c89.w, -r5.w
                            mad r4.w, r12.z, -c135.z, r4.w
                            mul r12.y, r4.w, c98.x  // ::g<0>

#line 2452
                            cmp r4.w, -r9_abs.z, c111_abs.w, c111_abs.y

#line 500
                            mul r5.w, r10.z, r11.y
                            rcp r6.y, r11.x
                            mul r13.x, r5.w, r6.y  // ::xyY_XYZ<0>
                            add r5.w, -r10.z, -r11.x
                            add r5.w, r5.w, c111.w
                            mul r5.w, r11.y, r5.w
                            mul r13.z, r6.y, r5.w  // ::xyY_XYZ<2>
                            mov r13.y, r11.y
                            cmp r10.xyw, -r11_abs.x, c113.z, r13.xyzz  // ::xyY_XYZ<0,1,2>

#line 458
                            mul r13.xyz, r10.y, c24
                            mad r13.xyz, r10.x, c23, r13
                            mad r10.xyw, r10.w, c25.xyzz, r13.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 2452
                            cmp r10.xyw, -r9_abs.z, r10, r8.xzzy  // ::TLrgb<0,1,2>
                            cmp r8.xyz, -r9_abs.y, r12.xzyw, r10.xwyw  // ::TLrgb<0,2,1>
                            cmp r1.z, -r9_abs.y, c111.w, r4.w
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
                if_ne r1.z, -r1.z

#line 2465
                else
                  add r1.z, r9.x, c36.w

#line 2454
                  if_eq r9.x, -c68.x

#line 496
                    abs r4.w, c13.x

#line 500
                    rcp r5.w, c13.x
                    mul r12.x, r5.w, c12.x  // ::xyY_XYZ<0>
                    mov r10.x, c13.x  // ::WhiteY<0>
                    add r6.y, -r10.x, -c12.x
                    add r6.y, r6.y, c111.w
                    mul r12.z, r5.w, r6.y  // ::xyY_XYZ<2>

#line 1939
                    mov r12.y, c111.w
                    mul r9.yzw, r12.xxyz, c152.w
                    cmp r9.yzw, -r4.w, c92.w, r9  // ::white<0,1,2>

#line 1943
                    add r4.w, r9.z, r9.y
                    add r4.w, r9.w, r4.w
                    rcp r5.w, r4.w
                    mul r5.w, r5.w, r9.z  // ::x0<0>
                    mul r4.w, r4.w, c106.w  // ::ew<0>

#line 1948
                    mul r6.y, r11.y, r11.y
                    mul r12.y, r6.y, c106.w  // ::Y<0>

#line 1952
                    mul r9.yz, c38.xyxw, c38.xxzw
                    mul r8.w, r5.w, r6.y
                    mul r9.yz, r11.x, r9
                    mul r9.yw, r9.xyzz, c152.w
                    mad r8.w, r8.w, r4.w, r9.y
                    mul r5.w, r5.w, r9.w
                    mad r5.w, r5.w, -r4.w, r8.w
                    mul r8.w, r11.x, c152.w
                    mul r10.xy, r8.w, c38.xzzw
                    mul r9.y, r4.w, r9.w
                    mad r8.w, r8.w, c38.x, -r9.y
                    mad r8.w, r6.y, r4.w, r8.w
                    rcp r8.w, r8.w
                    mul r5.w, r5.w, r8.w  // ::x<0>
                    mad r6.y, r10.y, c38.x, r6.y
                    mad r6.y, r9.z, -c152.w, r6.y
                    mul r8.w, r4.w, r12.y
                    mad r8.w, r8.w, c152.w, r10.x
                    mad r4.w, r9.w, -r4.w, r8.w
                    rcp r4.w, r4.w
                    mul r8.w, r4.w, r6.y  // ::y<0>

#line 500
                    mul r9.y, r12.y, r5.w
                    rcp r9.z, r8.w
                    mul r12.x, r9.z, r9.y  // ::xyY_XYZ<0>
                    mad r4.w, r6.y, -r4.w, -r5.w
                    add r4.w, r4.w, c111.w
                    mul r4.w, r12.y, r4.w
                    mul r12.z, r9.z, r4.w  // ::xyY_XYZ<2>
                    cmp r9.yzw, -r8_abs.w, c113.z, r12.xxyz  // ::xyY_XYZ<0,1,2>

#line 458
                    mul r10.xyw, r9.z, c24.xyzz
                    mad r10.xyw, r9.y, c23.xyzz, r10
                    mad r9.yzw, r9.w, c25.xxyz, r10.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 2454
                    mov r4.w, c111.w
                  else
                    if_eq r9.x, -c68.y

#line 458
                      mul r10.xyw, r11.x, c24.xyzz
                      mad r10.xyw, r10.z, c23.xyzz, r10
                      mad r9.yzw, r11.y, c25.xxyz, r10.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 2455
                      mov r4.w, c111.w
                    else
                      if_eq r9.x, -c68.z

#line 2118
                        add r5.w, r10.z, -c150.w
                        mul r6.y, r5.w, c89.w  // ::ypbpr<0>
                        add r10.xy, r11, c102.w

#line 2074
                        mad r9.yw, r10.xyzx, c92.xyzz, r6.y  // ::r<0>, ::b<0>
                        mul r6.y, r9.y, c135.x
                        mad r5.w, r5.w, c89.w, -r6.y
                        mad r5.w, r9.w, -c135.z, r5.w
                        mul r9.z, r5.w, c98.x  // ::g<0>

#line 2456
                        mov r4.w, c111.w
                      else
                        if_eq r9.x, -c68.w

#line 1974
                          add r5.w, r10.z, -r11.x  // ::c<0>
                          add r9.y, r11.y, r5.w  // ::YCoCg_Lrgb<0>
                          add r9.z, r10.z, r11.x  // ::YCoCg_Lrgb<1>
                          add r9.w, -r11.y, r5.w  // ::YCoCg_Lrgb<2>

#line 2457
                          mov r4.w, c111.w
                        else
                          if_eq c0.x, -r6.x

#line 1990
                            mad r6.xy, r11.x, c128, r10.z
                            mad r5.w, r11.x, -c128.z, r10.z
                            mad r9.z, r11.y, c128.w, r5.w  // ::g<0>
                            mad r9.yw, r11.y, -c97.xxzy, r6.xxzy  // ::r<0>, ::b<0>

#line 2458
                            mov r4.w, c111.w
                          else

#line 2461
                            add r10.xyw, r9.x, c36.xyzz

#line 2041
                            mad r12, r11.x, c94, r10.z
                            mad r12, r11.y, c95.xxyz, r12  // ::r<0>, ::g<0>, ::b<0>, ::r<0>

#line 2074
                            mad r13.xyz, r11.x, c96, r10.z  // ::b<0>

#line 2042
                            mad r5.w, r11.y, c97.z, r13.x  // ::g<0>
                            mad r6.x, r11.y, c97.w, r13.y  // ::b<0>
                            mov_sat r6.y, r12.w
                            cmp r14.x, r12.w, r6.y, c102.z  // ::r<0>
                            mov_sat r6.y, r5.w
                            cmp r14.y, r5.w, r6.y, c102.z  // ::g<0>
                            mov_sat r5.w, r6.x
                            cmp r14.z, r6.x, r5.w, c102.z  // ::b<0>

#line 2461
                            cmp r5.w, -r10_abs.w, c111_abs.w, c111_abs.y

#line 2073
                            mad r13.x, r11.y, c95.w, r10.z  // ::r<0>
                            mad r6.x, r13.x, -c135.x, r10.z
                            mad r6.x, r13.z, -c135.z, r6.x
                            mul r13.y, r6.x, c98.x  // ::g<0>

#line 2461
                            cmp r13.xyz, -r10_abs.w, r13, r8.xzyw  // ::TLrgb<0,1,2>
                            cmp r13.xyz, -r10_abs.y, r14, r13  // ::TLrgb<0,1,2>
                            cmp r5.w, -r10_abs.y, c111.w, r5.w
                            cmp r9.yzw, -r10_abs.x, r12.xxyz, r13.xxyz  // ::TLrgb<0,1,2>
                            cmp r4.w, -r10_abs.x, c111.w, r5.w
                          endif
                        endif
                      endif
                    endif
                  endif

#line 2168
                  mad r10.xyw, r11.yxzx, c99.xyzz, r10.z  // ::r<0>, ::b<0>

#line 2165
                  mad r5.w, r11.y, c96.w, r10.y  // ::g<0>

#line 2174
                  mov_sat r6.xy, r10.xwzw
                  mov_sat r8.w, r5.w
                  cmp r12.y, r5.w, r8.w, c102.z  // ::g<0>
                  cmp r12.xz, r10.xyww, r6.xyyw, c102.z  // ::r<0>, ::b<0>

#line 2465
                  mov r11.w, r10.z
                  cmp r10.xyz, -r1_abs.z, r12, r11.wxyw  // ::TLrgb<0,1,2>
                  cmp r8.xyz, -r4.w, r10.xzyw, r9.ywzw  // ::TLrgb<0,2,1>
                endif
              endif
            endif
          endif

#line 2287
          rcp r1.z, c11.x
          log r4.w, r8.x
          mul r5.w, r1.z, r4.w
          exp r7.x, r5.w  // ::V<0>

#line 2292
          if_eq c10.x, r0.z

#line 2352
          else

#line 2292
            add r5.w, -r6.w, c10.x

#line 2300
            add r6.x, -r8.x, c111.w
            rsq r6.y, r8.x
            rcp r6.y, r6.y
            mul r6.y, r6.y, -c151.y  // ::Transfer<0>
            cmp r6.x, r6.x, -c111_abs.w, -c111_abs.y
            cmp r6.x, r8.x, r6.x, c102.z
            add r8.w, r8.x, c104.y
            log r8.w, r8.w
            mad r8.w, r8.w, c104.z, c104.w  // ::Transfer<0>
            cmp r6.x, r6.x, r8.w, r6.y  // ::Transfer<0>
            cmp r7.x, -r5_abs.w, r6.x, r7.x  // ::Transfer<0>

#line 2307
            if_eq c10.x, r6.w

#line 2352
            else

#line 2307
              add r5.w, r6.z, c10.x

#line 2310
              add r6.x, -r8.x, c105.x
              mul r6.y, r8.x, c99.w
              cmp r6.x, r6.x, r6.y, c111.w  // ::V<0>
              cmp r7.x, -r5_abs.w, r6.x, r7.x  // ::Transfer<0>

#line 2315
              if_eq c10.x, -r6.z

#line 2352
              else

#line 2315
                mov r6.x, c10.x  // ::Companding<0>
                add r5.w, r6.x, c56.x

#line 2330
                if_eq r6.x, -c56.x

#line 2324
                  mul r6.y, r4.w, c116.x
                  exp r6.y, r6.y
                  add r8.w, r6.y, -c64.z
                  max r9.x, r8.w, c102.z  // ::a<0>
                  mad r6.y, r6.y, -c64.y, c64.x  // ::b<0>
                  rcp r6.y, r6.y
                  mul r6.y, r6.y, r9.x
                  pow r8.w, r6.y, c91.w
                  mul r6.y, r8.w, c116.y  // ::Transfer<0>
                  cmp r7.x, -r5_abs.w, r6.y, r7.x  // ::Transfer<0>

#line 2352
                else

#line 2346
                  add r9.xyz, r6.x, c148

#line 2341
                  add r6.xy, r8.x, c116.zwzw

#line 2349
                  mul r10.xy, r8.x, c127
                  mul r10.zw, r4.w, c127

#line 2333
                  exp r4.w, r10.z

#line 2341
                  mad r11.xy, r4.w, c101, c101.zwzw
                  cmp r6.xy, r6, r11, r10.x  // ::V<0,0>

#line 2349
                  add r4.w, -r8.x, c100.x
                  exp r5.w, r10.w
                  mad r5.w, r5.w, c100.y, c100.z
                  cmp r4.w, r4.w, r10.y, r5.w  // ::V<0>

#line 2352
                  cmp r4.w, -r9_abs.z, r4.w, r8.x  // ::Transfer<0>
                  cmp r4.w, -r9_abs.y, r6.y, r4.w  // ::Transfer<0>
                  cmp r7.x, -r9_abs.x, r6.x, r4.w  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2287
          log r4.w, r8.z
          mul r5.w, r1.z, r4.w
          exp r7.y, r5.w  // ::V<0>

#line 2292
          if_eq c10.x, r0.z

#line 2352
          else

#line 2292
            add r5.w, -r6.w, c10.x

#line 2300
            add r6.x, -r8.z, c111.w
            rsq r6.y, r8.z
            rcp r6.y, r6.y
            mul r6.y, r6.y, -c151.y  // ::Transfer<0>
            cmp r6.x, r6.x, -c111_abs.w, -c111_abs.y
            cmp r6.x, r8.z, r6.x, c102.z
            add r8.x, r8.z, c104.y
            log r8.x, r8.x
            mad r8.x, r8.x, c104.z, c104.w  // ::Transfer<0>
            cmp r6.x, r6.x, r8.x, r6.y  // ::Transfer<0>
            cmp r7.y, -r5_abs.w, r6.x, r7.y  // ::Transfer<0>

#line 2307
            if_eq c10.x, r6.w

#line 2352
            else

#line 2307
              add r5.w, r6.z, c10.x

#line 2310
              add r6.x, -r8.z, c105.x
              mul r6.y, r8.z, c99.w
              cmp r6.x, r6.x, r6.y, c111.w  // ::V<0>
              cmp r7.y, -r5_abs.w, r6.x, r7.y  // ::Transfer<0>

#line 2315
              if_eq c10.x, -r6.z

#line 2352
              else

#line 2315
                mov r6.x, c10.x  // ::Companding<0>
                add r5.w, r6.x, c56.x

#line 2330
                if_eq r6.x, -c56.x

#line 2324
                  mul r6.y, r4.w, c116.x
                  exp r6.y, r6.y
                  add r8.x, r6.y, -c64.z
                  max r9.x, r8.x, c102.z  // ::a<0>
                  mad r6.y, r6.y, -c64.y, c64.x  // ::b<0>
                  rcp r6.y, r6.y
                  mul r6.y, r6.y, r9.x
                  pow r8.x, r6.y, c91.w
                  mul r6.y, r8.x, c116.y  // ::Transfer<0>
                  cmp r7.y, -r5_abs.w, r6.y, r7.y  // ::Transfer<0>

#line 2352
                else

#line 2346
                  add r9.xyz, r6.x, c148

#line 2341
                  add r6.xy, r8.z, c116.zwzw

#line 2349
                  mul r8.xw, r8.z, c127.xyzy
                  mul r10.xy, r4.w, c127.zwzw

#line 2333
                  exp r4.w, r10.x

#line 2341
                  mad r10.xz, r4.w, c101.xyyw, c101.zyww
                  cmp r6.xy, r6, r10.xzzw, r8.x  // ::V<0,0>

#line 2349
                  add r4.w, -r8.z, c100.x
                  exp r5.w, r10.y
                  mad r5.w, r5.w, c100.y, c100.z
                  cmp r4.w, r4.w, r8.w, r5.w  // ::V<0>

#line 2352
                  cmp r4.w, -r9_abs.z, r4.w, r8.z  // ::Transfer<0>
                  cmp r4.w, -r9_abs.y, r6.y, r4.w  // ::Transfer<0>
                  cmp r7.y, -r9_abs.x, r6.x, r4.w  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2287
          log r4.w, r8.y
          mul r1.z, r1.z, r4.w
          exp r7.z, r1.z  // ::V<0>

#line 2292
          if_eq c10.x, r0.z

#line 2352
          else

#line 2292
            add r1.z, -r6.w, c10.x

#line 2300
            add r5.w, -r8.y, c111.w
            rsq r6.x, r8.y
            rcp r6.x, r6.x
            mul r6.x, r6.x, -c151.y  // ::Transfer<0>
            cmp r5.w, r5.w, -c111_abs.w, -c111_abs.y
            cmp r5.w, r8.y, r5.w, c102.z
            add r6.y, r8.y, c104.y
            log r6.y, r6.y
            mad r6.y, r6.y, c104.z, c104.w  // ::Transfer<0>
            cmp r5.w, r5.w, r6.y, r6.x  // ::Transfer<0>
            cmp r7.z, -r1_abs.z, r5.w, r7.z  // ::Transfer<0>

#line 2307
            if_eq c10.x, r6.w

#line 2352
            else

#line 2307
              add r1.z, r6.z, c10.x

#line 2310
              add r5.w, -r8.y, c105.x
              mul r6.x, r8.y, c99.w
              cmp r5.w, r5.w, r6.x, c111.w  // ::V<0>
              cmp r7.z, -r1_abs.z, r5.w, r7.z  // ::Transfer<0>

#line 2315
              if_eq c10.x, -r6.z

#line 2352
              else

#line 2315
                mov r6.x, c10.x  // ::Companding<0>
                add r1.z, r6.x, c56.x

#line 2330
                if_eq r6.x, -c56.x

#line 2324
                  mul r5.w, r4.w, c116.x
                  exp r5.w, r5.w
                  add r6.y, r5.w, -c64.z
                  max r8.x, r6.y, c102.z  // ::a<0>
                  mad r5.w, r5.w, -c64.y, c64.x  // ::b<0>
                  rcp r5.w, r5.w
                  mul r5.w, r5.w, r8.x
                  pow r6.y, r5.w, c91.w
                  mul r5.w, r6.y, c116.y  // ::Transfer<0>
                  cmp r7.z, -r1_abs.z, r5.w, r7.z  // ::Transfer<0>

#line 2352
                else

#line 2346
                  add r6.xyw, r6.x, c148.xyzz

#line 2341
                  add r8.xz, r8.y, c116.zyww

#line 2349
                  mul r9.xy, r8.y, c127
                  mul r9.zw, r4.w, c127

#line 2333
                  exp r1.z, r9.z

#line 2341
                  mad r10.xy, r1.z, c101, c101.zwzw
                  cmp r8.xz, r8, r10.xyyw, r9.x  // ::V<0,0>

#line 2349
                  add r1.z, -r8.y, c100.x
                  exp r4.w, r9.w
                  mad r4.w, r4.w, c100.y, c100.z
                  cmp r1.z, r1.z, r9.y, r4.w  // ::V<0>

#line 2352
                  cmp r1.z, -r6_abs.w, r1.z, r8.y  // ::Transfer<0>
                  cmp r1.z, -r6_abs.y, r8.z, r1.z  // ::Transfer<0>
                  cmp r7.z, -r6_abs.x, r8.x, r1.z  // ::Transfer<0>
                endif
              endif
            endif
          endif

#line 2663
          mov oC0, r7  // ::main<0,1,2,3>
        else
          mov oC0, c102.z  // ::main<0,1,2,3>
        endif
        mov r3.x, r1.w  // ::input4<0>
        mov r3.yz, r2  // ::input4<1,2>
        mov r2.yw, r1.xxzy  // ::input3<0,1>
      endif
    endif
    if_ne r0.w, -r0.w

#line 2681
    else

#line 2665
      if_ge c0.x, r0.y
        mov r0.y, c151.y  // ::Minimum3<109>
        mad r1, r3.xwyz, c5.x, -r0.y
        frc r7, r1
        add r1, r1, -r7
        rcp r0.y, c5.x
        mul r1, r0.y, r1
        cmp r1, -c5.x, r3.xwyz, r1  // ::input4<0,3,1,2>

#line 656
        add r3, -r1, c111.w
        mul r6.xyw, r3.y, r3.xzzw  // ::r<0>, ::g<0>, ::b<0>

#line 2473
        mov r7.x, c0.x  // ::Model<0>
        add r7.xyz, r7.x, c103

#line 679
        mad r3.xzw, r3, r3.y, r1.y  // ::c<0>, ::m<0>, ::y<0>

#line 1765
        mul r8.xyz, r1.xzww, r3.y  // ::r<0>, ::g<0>, ::b<0>

#line 1788
        lrp r9.xyz, r1.xzww, c111.w, r1.y  // ::r<0>, ::g<0>, ::b<0>

#line 2473
        cmp r1.xyz, -r7_abs.y, r8, r9  // ::TLrgb<0,1,2>
        cmp r1.xyz, -r7_abs.x, r3.xzww, r1  // ::TLrgb<0,1,2>
        cmp r1.xyz, -r0_abs.x, r6.xyww, r1  // ::TLrgb<0,1,2>
        cmp r0.y, -r7_abs.z, -c111_abs.w, -c111_abs.y
        cmp r0.y, -r7_abs.y, -c111.w, r0.y
        cmp r0.y, -r7_abs.x, -c111.w, r0.y
        cmp r0.x, -r0_abs.x, -c111.w, r0.y
        cmp r0.xyw, r0.x, c102.z, r1.xyzz  // ::TLrgb<0,1,2>

#line 2287
        rcp r1.x, c11.x
        log r1.y, r0.x
        mul r1.z, r1.y, r1.x
        exp r3.x, r1.z  // ::V<0>

#line 2292
        if_eq c10.x, r0.z

#line 2352
        else

#line 2292
          mov r1.w, c111.w
          add r1.z, -r1.w, c10.x

#line 2300
          add r2.z, -r0.x, c111.w
          rsq r3.w, r0.x
          rcp r3.w, r3.w
          mul r3.w, r3.w, -c151.y  // ::Transfer<0>
          cmp r2.z, r2.z, -c111_abs.w, -c111_abs.y
          cmp r2.z, r0.x, r2.z, c102.z
          add r4.w, r0.x, c104.y
          log r4.w, r4.w
          mad r4.w, r4.w, c104.z, c104.w  // ::Transfer<0>
          cmp r2.z, r2.z, r4.w, r3.w  // ::Transfer<0>
          cmp r3.x, -r1_abs.z, r2.z, r3.x  // ::Transfer<0>

#line 2307
          if_eq c10.x, r1.w

#line 2352
          else

#line 2307
            add r1.z, r6.z, c10.x

#line 2310
            add r1.w, -r0.x, c105.x
            mul r2.z, r0.x, c99.w
            cmp r1.w, r1.w, r2.z, c111.w  // ::V<0>
            cmp r3.x, -r1_abs.z, r1.w, r3.x  // ::Transfer<0>

#line 2315
            if_eq c10.x, -r6.z

#line 2352
            else

#line 2315
              mov r6.x, c10.x  // ::Companding<0>
              add r1.z, r6.x, c56.x

#line 2330
              if_eq r6.x, -c56.x

#line 2324
                mul r1.w, r1.y, c116.x
                exp r1.w, r1.w
                add r2.z, r1.w, -c64.z
                max r3.w, r2.z, c102.z  // ::a<0>
                mad r1.w, r1.w, -c64.y, c64.x  // ::b<0>
                rcp r1.w, r1.w
                mul r1.w, r1.w, r3.w
                pow r2.z, r1.w, c91.w
                mul r1.w, r2.z, c116.y  // ::Transfer<0>
                cmp r3.x, -r1_abs.z, r1.w, r3.x  // ::Transfer<0>

#line 2352
              else

#line 2346
                add r6.xyw, r6.x, c148.xyzz

#line 2341
                add r1.zw, r0.x, c116

#line 2349
                mul r7.xy, r0.x, c127
                mul r7.zw, r1.y, c127

#line 2333
                exp r1.y, r7.z

#line 2341
                mad r8.xy, r1.y, c101, c101.zwzw
                cmp r1.yz, r1.xzww, r8.xxyw, r7.x  // ::V<0,0>

#line 2349
                add r1.w, -r0.x, c100.x
                exp r2.z, r7.w
                mad r2.z, r2.z, c100.y, c100.z
                cmp r1.w, r1.w, r7.y, r2.z  // ::V<0>

#line 2352
                cmp r0.x, -r6_abs.w, r1.w, r0.x  // ::Transfer<0>
                cmp r0.x, -r6_abs.y, r1.z, r0.x  // ::Transfer<0>
                cmp r3.x, -r6_abs.x, r1.y, r0.x  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2287
        log r0.x, r0.y
        mul r1.y, r0.x, r1.x
        exp r3.y, r1.y  // ::V<0>

#line 2292
        if_eq c10.x, r0.z

#line 2352
        else

#line 2292
          mov r1.w, c111.w
          add r1.y, -r1.w, c10.x

#line 2300
          add r1.z, -r0.y, c111.w
          rsq r2.z, r0.y
          rcp r2.z, r2.z
          mul r2.z, r2.z, -c151.y  // ::Transfer<0>
          cmp r1.z, r1.z, -c111_abs.w, -c111_abs.y
          cmp r1.z, r0.y, r1.z, c102.z
          add r3.w, r0.y, c104.y
          log r3.w, r3.w
          mad r3.w, r3.w, c104.z, c104.w  // ::Transfer<0>
          cmp r1.z, r1.z, r3.w, r2.z  // ::Transfer<0>
          cmp r3.y, -r1_abs.y, r1.z, r3.y  // ::Transfer<0>

#line 2307
          if_eq c10.x, r1.w

#line 2352
          else

#line 2307
            add r1.y, r6.z, c10.x

#line 2310
            add r1.z, -r0.y, c105.x
            mul r1.w, r0.y, c99.w
            cmp r1.z, r1.z, r1.w, c111.w  // ::V<0>
            cmp r3.y, -r1_abs.y, r1.z, r3.y  // ::Transfer<0>

#line 2315
            if_eq c10.x, -r6.z

#line 2352
            else

#line 2315
              mov r6.x, c10.x  // ::Companding<0>
              add r1.y, r6.x, c56.x

#line 2330
              if_eq r6.x, -c56.x

#line 2324
                mul r1.z, r0.x, c116.x
                exp r1.z, r1.z
                add r1.w, r1.z, -c64.z
                max r2.z, r1.w, c102.z  // ::a<0>
                mad r1.z, r1.z, -c64.y, c64.x  // ::b<0>
                rcp r1.z, r1.z
                mul r1.z, r1.z, r2.z
                pow r2.z, r1.z, c91.w
                mul r1.z, r2.z, c116.y  // ::Transfer<0>
                cmp r3.y, -r1_abs.y, r1.z, r3.y  // ::Transfer<0>

#line 2352
              else

#line 2346
                add r1.yzw, r6.x, c148.xxyz

#line 2341
                add r6.xy, r0.y, c116.zwzw

#line 2349
                mul r7, r0.yyxx, c127

#line 2333
                exp r0.x, r7.z

#line 2341
                mad r8.xy, r0.x, c101, c101.zwzw
                cmp r6.xy, r6, r8, r7.x  // ::V<0,0>

#line 2349
                add r0.x, -r0.y, c100.x
                exp r2.z, r7.w
                mad r2.z, r2.z, c100.y, c100.z
                cmp r0.x, r0.x, r7.y, r2.z  // ::V<0>

#line 2352
                cmp r0.x, -r1_abs.w, r0.x, r0.y  // ::Transfer<0>
                cmp r0.x, -r1_abs.z, r6.y, r0.x  // ::Transfer<0>
                cmp r3.y, -r1_abs.y, r6.x, r0.x  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2287
        log r0.x, r0.w
        mul r0.y, r0.x, r1.x
        exp r3.z, r0.y  // ::V<0>

#line 2292
        if_eq c10.x, r0.z

#line 2352
        else

#line 2292
          mov r1.w, c111.w
          add r0.y, -r1.w, c10.x

#line 2300
          add r1.x, -r0.w, c111.w
          rsq r1.y, r0.w
          rcp r1.y, r1.y
          mul r1.y, r1.y, -c151.y  // ::Transfer<0>
          cmp r1.x, r1.x, -c111_abs.w, -c111_abs.y
          cmp r1.x, r0.w, r1.x, c102.z
          add r1.z, r0.w, c104.y
          log r1.z, r1.z
          mad r1.z, r1.z, c104.z, c104.w  // ::Transfer<0>
          cmp r1.x, r1.x, r1.z, r1.y  // ::Transfer<0>
          cmp r3.z, -r0_abs.y, r1.x, r3.z  // ::Transfer<0>

#line 2307
          if_eq c10.x, r1.w

#line 2352
          else

#line 2307
            add r0.y, r6.z, c10.x

#line 2310
            add r1.x, -r0.w, c105.x
            mul r1.y, r0.w, c99.w
            cmp r1.x, r1.x, r1.y, c111.w  // ::V<0>
            cmp r3.z, -r0_abs.y, r1.x, r3.z  // ::Transfer<0>

#line 2315
            if_eq c10.x, -r6.z

#line 2352
            else

#line 2315
              mov r1.x, c10.x  // ::Companding<0>
              add r0.y, r1.x, c56.x

#line 2330
              if_eq r1.x, -c56.x

#line 2324
                mul r1.y, r0.x, c116.x
                exp r1.y, r1.y
                add r1.z, r1.y, -c64.z
                max r2.z, r1.z, c102.z  // ::a<0>
                mad r1.y, r1.y, -c64.y, c64.x  // ::b<0>
                rcp r1.y, r1.y
                mul r1.y, r1.y, r2.z
                pow r2.z, r1.y, c91.w
                mul r1.y, r2.z, c116.y  // ::Transfer<0>
                cmp r3.z, -r0_abs.y, r1.y, r3.z  // ::Transfer<0>

#line 2352
              else

#line 2346
                add r1.xyz, r1.x, c148

#line 2341
                add r6.xy, r0.w, c116.zwzw

#line 2349
                mul r7.xy, r0.w, c127
                mul r0.xy, r0.x, c127.zwzw

#line 2333
                exp r0.x, r0.x

#line 2341
                mad r7.zw, r0.x, c101.xyxy, c101
                cmp r6.xy, r6, r7.zwzw, r7.x  // ::V<0,0>

#line 2349
                add r0.x, -r0.w, c100.x
                exp r0.y, r0.y
                mad r0.y, r0.y, c100.y, c100.z
                cmp r0.x, r0.x, r7.y, r0.y  // ::V<0>

#line 2352
                cmp r0.x, -r1_abs.z, r0.x, r0.w  // ::Transfer<0>
                cmp r0.x, -r1_abs.y, r6.y, r0.x  // ::Transfer<0>
                cmp r3.z, -r1_abs.x, r6.x, r0.x  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2671
      else

#line 2674
        mov r0.y, c151.y  // ::Minimum3<109>
        mad r0.xyw, r2.ywzx, c5.x, -r0.y
        frc r1.xyz, r0.xyww
        add r0.xyw, r0, -r1.xyzz
        rcp r1.x, c5.x
        mul r0.xyw, r0, r1.x
        cmp r0.xyw, -c5.x, r2.ywzx, r0  // ::input3<0,1,2>

#line 316
        lrp r1.z, r0.x, r5.x, r4.x  // ::ConvertRange<0>
        lrp r2.x, r0.y, r5.y, r4.y  // ::ConvertRange<0>
        add r0.x, -r4.z, r5.z
        mul r0.x, r0.x, r0.w
        lrp r2.y, r0.w, r5.z, r4.z  // ::ConvertRange<0>

#line 2418
        mov r4.xw, c111
        if_eq c0.x, r4.w

#line 1802
          min r0.y, r2.y, r2.x
          min r3.w, r0.y, r1.z  // ::white<0>
          add r0.y, r1.z, -r3.w  // ::r<0>
          add r5.xy, r2, -r3.w  // ::y<0>, ::b<0>
          add r0.w, -r5.y, r5.x
          cmp r7.xw, r0.w, r5.xyzy, r5.yyzx  // ::g<0>
          max r1.w, r0.y, r7.x  // ::mY<0>

#line 1812
          add r0.w, r5.x, -r7.w  // ::y<0>
          add r7.z, r5.y, -r7.w  // ::b<0>

#line 1819
          cmp r4.y, -r7.w, -c111_abs.y, -c111_abs.w
          cmp r4.y, -r7.z, c102.z, r4.y
          mul r5.xy, r7.zwzw, -c85.z
          cmp r5.yz, r4.y, r7.xzww, r5.xxyw  // ::b<0>, ::g<0>
          add r5.x, r0.w, r0.y  // ::r<0>
          add r5.w, r0.w, r5.z  // ::g<0>
          max r0.y, r5.w, r5.y
          max r4.y, r5.x, r0.y  // ::mG<0>

#line 1828
          rcp r0.y, r4.y
          mul r0.y, r0.y, r1.w  // ::mN<0>

#line 1832
          mul r6.xyw, r0.y, r5.xwzy  // ::r<0>, ::g<0>, ::b<0>
          cmp r5.xyz, -r4.y, r5.xwyw, r6.xyww  // ::r<0>, ::g<0>, ::b<0>

#line 1837
          add r5.xyz, r3.w, r5  // ::r<0>, ::g<0>, ::b<0>
          frc r6.xyw, r5.xyzz
          add r5.xyz, r5, -r6.xyww
          mul r5.xyz, r5.xzyw, c74.w  // ::RYB_Lrgb<0,2,1>

#line 2418
          mov r0.y, c111.w
        else
          if_eq c0.x, -r6.z

#line 643
            add r5.x, -r1.z, c111.w  // ::CMY_Lrgb<0>
            add r5.yz, -r2.xyxw, c111.w  // ::CMY_Lrgb<2,1>

#line 2419
            mov r0.y, c111.w
          else
            mov r6.x, c0.x  // ::Model<0>
            if_eq r6.x, -c56.x

#line 693
              mul r7, r2.xyyy, c106.w  // ::c<0>, ::g<0,0,0>

#line 701
              if_eq r7.x, c102.z

#line 750
                mov r5.xyz, r7.ywzw  // ::HCV_Lrgb<0,2,1>
              else

#line 693
                mul r0.w, r1.z, c70.w  // ::h<0>

#line 701
                cmp r1.w, r1.z, c119.x, c119.y
                mul r0.w, r0.w, r1.w
                frc r0.w, r0.w
                mul r0.w, r0.w, r1.w
                mul r1.w, r0.w, -c149.y  // ::hi<0>
                cmp r0.w, r0.w, c119.x, c119.y
                mul r3.w, r0.w, r1.w
                frc r3.w, r3.w
                mul r8.x, r0.w, r3.w  // ::v<0>

#line 706
                frc r4.y, r1.w
                add r1.w, r1.w, -r4.y  // ::fhi<0>

#line 732
                add r9, r1.w, c162

#line 743
                mov r8.yz, c111_abs.xyww
                mad r8.w, r0.w, -r3.w, c111.w
                cmp r10.xyz, -r9_abs.w, r8, r8.zyww  // ::pure<0,1,2>
                mad r11.xyz, r8.xzyw, c119.yxxw, c119.xzzw
                cmp r10.xyz, -r9_abs.z, r11.zxyw, r10  // ::pure<0,1,2>
                cmp r9.yzw, -r9_abs.y, r8.xyzx, r10.xxyz  // ::pure<0,1,2>
                cmp r9.xyz, -r9_abs.x, r11, r9.yzww  // ::pure<0,1,2>
                cmp r8.xyz, -r1_abs.w, r8.zxyw, r9  // ::pure<0,1,2>

#line 749
                lrp r5.xyz, r7.x, r8.xzyw, r7.w  // ::result<0,2,1>
              endif

#line 2420
              mov r0.y, c111.w
            else
              if_eq r6.x, -c56.z

#line 785
                cmp r6.yw, r1.z, c78.xxzy, c78.xzzw
                mul r0.w, r1.z, r6.w
                frc r0.w, r0.w
                mad r1.w, r6.y, r0.w, c57.x
                mul r0.w, r0.w, c57.x
                cmp r0.w, r1.z, r0.w, r1.w
                mul r6.yw, r2.xxzy, c115.xxzy  // ::s<0>, ::i<0>

#line 792
                if_lt r0.w, c69.w
                  mad r1.w, r2.x, -c115.x, c115.z
                  mul r5.y, r1.w, r6.w  // ::b<0>
                  mad r1.w, r0.w, c163.x, c163.y
                  frc r1.w, r1.w
                  mad r1.w, r1.w, c163.z, c163.w
                  sincos r7.x, r1.w
                  mul r1.w, r6.y, r7.x
                  mad r3.w, r0.w, -c79.x, c79.y
                  mad r3.w, r3.w, c79.z, c79.w
                  frc r3.w, r3.w
                  mad r3.w, r3.w, c163.z, c163.w
                  sincos r8.x, r3.w
                  rcp r3.w, r8.x
                  mad r1.w, r1.w, r3.w, c111.w
                  mul r5.x, r1.w, r6.w  // ::r<0>
                  mad r1.w, r7.x, -r3.w, c111.w
                  mad r1.w, r6.y, r1.w, c111.w
                  mul r5.z, r1.w, r6.w  // ::g<0>
                else
                  if_lt r0.w, c154.y
                    mad r1.w, r0.w, c80.x, c80.y  // ::h<0>
                    mad r3.w, r2.x, -c115.x, c115.z
                    mul r5.x, r3.w, r6.w  // ::r<0>
                    mad r3.w, r1.w, c79.z, c79.w
                    frc r3.w, r3.w
                    mad r3.w, r3.w, c163.z, c163.w
                    sincos r7.x, r3.w
                    mul r3.w, r6.y, r7.x
                    add r1.w, -r1.w, c76.w
                    mad r1.w, r1.w, c79.z, c79.w
                    frc r1.w, r1.w
                    mad r1.w, r1.w, c163.z, c163.w
                    sincos r8.x, r1.w
                    rcp r1.w, r8.x
                    mad r3.w, r3.w, r1.w, c111.w
                    mul r5.z, r3.w, r6.w  // ::g<0>

#line 803
                    mad r1.w, r7.x, -r1.w, c111.w
                    mad r1.w, r6.y, r1.w, c111.w
                    mul r5.y, r1.w, r6.w  // ::b<0>
                  else

#line 807
                    mad r0.w, r0.w, c80.x, c80.z  // ::h<0>
                    mad r1.w, r2.x, -c115.x, c115.z
                    mul r5.z, r1.w, r6.w  // ::g<0>
                    mad r1.w, r0.w, c79.z, c79.w
                    frc r1.w, r1.w
                    mad r1.w, r1.w, c163.z, c163.w
                    sincos r7.x, r1.w
                    mul r1.w, r6.y, r7.x
                    add r0.w, -r0.w, c76.w
                    mad r0.w, r0.w, c79.z, c79.w
                    frc r0.w, r0.w
                    mad r0.w, r0.w, c163.z, c163.w
                    sincos r8.x, r0.w
                    rcp r0.w, r8.x
                    mad r1.w, r1.w, r0.w, c111.w
                    mul r5.y, r1.w, r6.w  // ::b<0>
                    mad r0.w, r7.x, -r0.w, c111.w
                    mad r0.w, r6.y, r0.w, c111.w
                    mul r5.x, r0.w, r6.w  // ::r<0>
                  endif
                endif

#line 2421
                mov r0.y, c111.w
              else
                if_eq r6.x, -c134.x

#line 1662
                  if_lt c152.w, r2.y

#line 1670
                    mad r5.xyz, r1.z, c138.xyxw, c138.zxxw
                  else

#line 1662
                    add r0.w, r2.y, c75.w

#line 1665
                    if_lt r2.y, -c75.w
                      cmp r1.xy, r0.w, c152.wxzw, c152.x  // ::HPLuv_Lrgb<0,1>

#line 1670
                      mov r5.xyz, r1.xzyw  // ::HPLuv_Lrgb<0,2,1>
                    else

#line 374
                      add r0.w, r2.y, c150.w
                      mul r1.w, r0.w, r0.w
                      mul r3.w, r0.w, r1.w
                      mul r3.w, r3.w, c77.w  // ::s1<0>
                      mad r1.w, r0.w, -r1.w, c115.w

#line 1595
                      mul r7, r2.y, c110

#line 375
                      cmp r1.w, r1.w, r7.x, r3.w  // ::s2<0>

#line 360
                      mul r3.w, r2.y, r1.w
                      mul r4.y, r3.w, c80.w  // ::y<0>
                      mul r6.yw, r1.w, c81.xxzy  // ::x<0>, ::z<0>
                      rcp r5.w, r6.w
                      mul r6.w, r5.w, r6.y  // ::GetBounds2<0>
                      mul r4.y, r4.y, r5.w  // ::GetBounds2<1>

#line 391
                      rcp r8.x, r6.w

#line 354
                      mad r5.w, r6.y, -r5.w, -r8.x
                      rcp r5.w, r5.w
                      mul r5.w, r4.y, r5.w  // ::GetIntersection<0>

#line 392
                      mad r4.y, r5.w, r6.w, r4.y  // GetDistance::input<1>

#line 349
                      mul r4.y, r4.y, r4.y
                      mad r4.y, r5.w, r5.w, r4.y
                      rsq r4.y, r4.y
                      rcp r4.y, r4.y  // ::GetDistance<0>

#line 394
                      min r5.w, r4.y, c81.z  // ::GetChroma1a<0>

#line 360
                      mad r3.w, r3.w, c80.w, -r7.y  // ::y<0>
                      mad r1.w, r1.w, c81.y, c81.w  // ::z<0>
                      rcp r1.w, r1.w
                      mul r4.y, r1.w, r6.y  // ::GetBounds2<0>
                      mul r3.w, r1.w, r3.w  // ::GetBounds2<1>

#line 391
                      rcp r6.w, r4.y

#line 354
                      mad r1.w, r6.y, -r1.w, -r6.w
                      rcp r1.w, r1.w
                      mul r1.w, r1.w, r3.w  // ::GetIntersection<0>

#line 392
                      mad r3.w, r1.w, r4.y, r3.w  // GetDistance::input<1>

#line 349
                      mul r3.w, r3.w, r3.w
                      mad r1.w, r1.w, r1.w, r3.w
                      rsq r1.w, r1.w
                      rcp r1.w, r1.w  // ::GetDistance<0>

#line 394
                      min r3.w, r1.w, r5.w  // ::GetChroma1a<0>

#line 1666
                      mul r1.w, r2.x, r3.w
                      mul r1.w, r1.w, c106.w  // ::C<0>

#line 577
                      mad r3.w, r1.z, c82.x, c82.y
                      frc r3.w, r3.w
                      mad r3.w, r3.w, c163.z, c163.w
                      sincos r8.xy, r3.w
                      mul r6.yw, r1.w, r8.xxzy  // ::a<0>, ::b<0>

#line 496
                      abs r1.w, c13.x

#line 500
                      rcp r3.w, c13.x
                      mul r8.x, r3.w, c12.x  // ::xyY_XYZ<0>
                      mov r9.x, c13.x  // ::WhiteY<0>
                      add r4.y, -r9.x, -c12.x
                      add r4.y, r4.y, c111.w
                      mul r8.z, r3.w, r4.y  // ::xyY_XYZ<2>
                      mov r8.y, c111.w
                      cmp r8.xyz, -r1.w, c113.z, r8  // ::xyY_XYZ<0,1,2>

#line 559
                      cmp r1.w, -r1.w, c125.y, c125.w
                      add r1.w, r1.w, r8.x
                      mul r3.w, r8.x, -c56.z
                      mad r1.w, r8.z, -c56.x, r1.w
                      rcp r1.w, r1.w
                      mul r3.w, r1.w, r3.w  // ::ComputeKu<0>

#line 564
                      mul r1.w, r8.y, r1.w
                      mul r1.w, r1.w, -c86.x  // ::ComputeKv<0>

#line 1593
                      add r4.y, -r2.y, c82.z
                      mul r0.w, r0.w, c82.w
                      mul r5.w, r0.w, r0.w
                      mul r0.w, r0.w, r5.w
                      cmp r0.w, r4.y, r7.x, r0.w  // ::Y<0>
                      mad r3.w, r7.w, r3.w, r6.y
                      rcp r3.w, r3.w
                      mad r3.w, r7.z, r3.w, -c111.w
                      mul r3.w, r3.w, c83.z  // ::a<0>
                      mul r4.y, r0.w, c134.x  // ::b<0>
                      mul r5.w, r2.y, -c36.y
                      mad r1.w, r7.w, r1.w, r6.w
                      rcp r1.w, r1.w
                      mad r1.w, r5.w, r1.w, c134.x
                      mad r1.w, r0.w, r1.w, -r4.y
                      rcp r5.w, r3.w
                      mul r1.w, r1.w, r5.w  // ::X<0>
                      mad r3.w, r1.w, r3.w, r4.y  // ::Z<0>

#line 1604
                      max r4.y, r1.w, c102.z  // ::X<0>

#line 1607
                      max r1.w, r0.w, c102.z  // ::Y<0>

#line 1610
                      max r0.w, r3.w, c102.z  // ::Z<0>

#line 458
                      mul r7.xyz, r1.w, c24
                      mad r7.xyz, r4.y, c23, r7
                      mad r5.xyz, r0.w, c25.xzyw, r7.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 1670
                    endif
                  endif

#line 2422
                  mov r0.y, c111.w
                else
                  if_eq r6.x, -c149.y

#line 838
                    mul r0.w, r2.x, c106.w  // ::_s<0>
                    mul r7.y, r2.y, c106.w  // ::_b<0>

#line 850
                    mul r1.w, r1.z, c138.w  // ::SectorPosition<0>
                    frc r3.w, r1.w
                    add r1.w, r1.w, -r3.w  // ::SectorNumber<0>

#line 854
                    mad r3.w, r1.z, c138.w, -r1.w  // ::FractionalSector<0>

#line 857
                    mad r4.y, r2.x, -c115.x, c115.z
                    mul r7.z, r4.y, r7.y  // ::p<0>
                    mad r4.y, r0.w, -r3.w, c111.w
                    mul r7.w, r4.y, r7.y  // ::q<0>
                    add r3.w, -r3.w, c111.w
                    mad r3.w, r0.w, -r3.w, c111.w
                    mul r7.x, r3.w, r7.y  // ::t<0>

#line 886
                    add r8, r1.w, c162

#line 892
                    add r3.w, r1.w, c134.x

#line 897
                    cmp r9.xyz, -r3_abs.w, r7.yzww, c102.z  // ::r<0>, ::g<0>, ::b<0>
                    cmp r9.xyz, -r8_abs.w, r7.xzyw, r9  // ::r<0>, ::g<0>, ::b<0>
                    cmp r9.xyz, -r8_abs.z, r7.zwyw, r9  // ::r<0>, ::g<0>, ::b<0>
                    cmp r8.yzw, -r8_abs.y, r7.xzyx, r9.xxyz  // ::r<0>, ::g<0>, ::b<0>
                    cmp r8.xyz, -r8_abs.x, r7.wyzw, r8.yzww  // ::r<0>, ::g<0>, ::b<0>
                    cmp r7.xzw, -r1_abs.w, r7.yyxz, r8.xyyz  // ::r<0>, ::g<0>, ::b<0>
                    cmp r5.xyz, -r0_abs.w, r7.y, r7.xwzw  // ::r<0>, ::b<0>, ::g<0>

#line 2423
                    mov r0.y, c111.w
                  else
                    if_eq r6.x, -c84.x

#line 838
                      mul r0.w, r2.x, c106.w  // ::_s<0>
                      mul r7.y, r2.y, c106.w  // ::_b<0>

#line 850
                      mul r1.w, r1.z, c138.w  // ::SectorPosition<0>
                      frc r3.w, r1.w
                      add r1.w, r1.w, -r3.w  // ::SectorNumber<0>

#line 854
                      mad r3.w, r1.z, c138.w, -r1.w  // ::FractionalSector<0>

#line 857
                      mad r4.y, r2.x, -c115.x, c115.z
                      mul r7.z, r4.y, r7.y  // ::p<0>
                      mad r4.y, r0.w, -r3.w, c111.w
                      mul r7.w, r4.y, r7.y  // ::q<0>
                      add r3.w, -r3.w, c111.w
                      mad r3.w, r0.w, -r3.w, c111.w
                      mul r7.x, r3.w, r7.y  // ::t<0>

#line 886
                      add r8, r1.w, c162

#line 892
                      add r3.w, r1.w, c134.x

#line 897
                      cmp r9.xyz, -r3_abs.w, r7.yzww, c102.z  // ::r<0>, ::g<0>, ::b<0>
                      cmp r9.xyz, -r8_abs.w, r7.xzyw, r9  // ::r<0>, ::g<0>, ::b<0>
                      cmp r9.xyz, -r8_abs.z, r7.zwyw, r9  // ::r<0>, ::g<0>, ::b<0>
                      cmp r8.yzw, -r8_abs.y, r7.xzyx, r9.xxyz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r8.xyz, -r8_abs.x, r7.wyzw, r8.yzww  // ::r<0>, ::g<0>, ::b<0>
                      cmp r7.xzw, -r1_abs.w, r7.yyxz, r8.xyyz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r5.xyz, -r0_abs.w, r7.y, r7.xwzw  // ::r<0>, ::b<0>, ::g<0>

#line 2424
                      mov r0.y, c111.w
                    else
                      add r0.w, r6.x, c84.z
                      cmp r0.y, -r0_abs.w, c111_abs.w, c111_abs.y
                      if_eq r6.x, -c84.z

#line 943
                        mul r5.xyz, r2.y, c106.w  // ::l<0,0,0>

#line 948
                        if_lt -r2.x, c102.z

#line 944
                          mul r0.w, r1.z, c138.w  // ::h<0>

#line 950
                          mul r1.w, r2.x, c106.w  // ::s<0>
                          mad r3.w, r2.y, c117.x, c117.y
                          add r3.w, -r3_abs.w, c111.w
                          mul r7.x, r1.w, r3.w  // ::chroma<0>
                          cmp r6.xy, r1.z, c156, c156.zwzw
                          mul r0.w, r0.w, r6.y
                          frc r0.w, r0.w
                          mad r0.w, r6.x, r0.w, -c111.w
                          add r0.w, -r0_abs.w, c111.w
                          mul r7.y, r0.w, r7.x  // ::v<0>

#line 971
                          add r8, -r1.z, c114

#line 977
                          add r9, r1.z, -c114.wzyx

#line 983
                          add r0.w, r1.z, c117.z
                          add r6.xy, -r1.z, -c117.wzzw

#line 988
                          cmp r6.xy, r6, -c111_abs.w, -c111_abs.y
                          cmp r0.w, r0.w, r6.x, c102.z
                          mov r7.z, c102.z
                          cmp r10.xyz, r0.w, c102.z, r7.xzyw  // ::result<0,1,2>
                          cmp r0.w, r9.w, r6.y, c102.z
                          cmp r6.xyw, r0.w, r10.xyzz, r7.yzzx  // ::result<0,1,2>
                          cmp r8, r8, -c111_abs.w, -c111_abs.y
                          cmp r8.xyz, r9.zyxw, r8, c102.z
                          cmp r6.xyw, r8.x, r6, r7.zyzx  // ::result<0,1,2>
                          cmp r6.xyw, r8.y, r6, r7.zxzy  // ::result<0,1,2>
                          cmp r6.xyw, r8.z, r6, r7.yxzz  // ::result<0,1,2>
                          cmp r0.w, r1.z, r8.w, c102.z
                          cmp r6.xyw, r0.w, r6, r7.xyzz  // ::result<0,1,2>
                          mad r0.w, r7.x, c151.y, r5.y  // ::w<0>

#line 993
                          add r5.xyz, r0.w, r6.xwyw  // ::result<0,2,1>

#line 998
                        endif

#line 2425
                      else
                        mov r5.xyz, c102.z
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
        if_ne r0.y, -r0.y

#line 2465
        else

#line 2427
          mov r6.x, c0.x  // ::Model<0>
          if_eq r6.x, -c86.x

#line 943
            mul r5.xyz, r2.y, c106.w  // ::l<0,0,0>

#line 948
            if_lt -r2.x, c102.z

#line 944
              mul r0.y, r1.z, c138.w  // ::h<0>

#line 950
              mul r0.w, r2.x, c106.w  // ::s<0>
              mad r1.w, r2.y, c117.x, c117.y
              add r1.w, -r1_abs.w, c111.w
              mul r7.x, r0.w, r1.w  // ::chroma<0>
              cmp r6.yw, r1.z, c156.xxzy, c156.xzzw
              mul r0.y, r0.y, r6.w
              frc r0.y, r0.y
              mad r0.y, r6.y, r0.y, -c111.w
              add r0.y, -r0_abs.y, c111.w
              mul r7.y, r0.y, r7.x  // ::v<0>

#line 971
              add r8, -r1.z, c114

#line 977
              add r9, r1.z, -c114.wzyx

#line 983
              add r0.y, r1.z, c117.z
              add r6.yw, -r1.z, -c117.xwzz

#line 988
              cmp r6.yw, r6, -c111_abs.w, -c111_abs.y
              cmp r0.y, r0.y, r6.y, c102.z
              mov r7.z, c102.z
              cmp r10.xyz, r0.y, c102.z, r7.xzyw  // ::result<0,1,2>
              cmp r0.y, r9.w, r6.w, c102.z
              cmp r10.xyz, r0.y, r10, r7.yzxw  // ::result<0,1,2>
              cmp r8, r8, -c111_abs.w, -c111_abs.y
              cmp r8.xyz, r9.zyxw, r8, c102.z
              cmp r9.xyz, r8.x, r10, r7.zyxw  // ::result<0,1,2>
              cmp r9.xyz, r8.y, r9, r7.zxyw  // ::result<0,1,2>
              cmp r8.xyz, r8.z, r9, r7.yxzw  // ::result<0,1,2>
              cmp r0.y, r1.z, r8.w, c102.z
              cmp r7.yzw, r0.y, r8.xxyz, r7.xxyz  // ::result<0,1,2>
              mad r0.y, r7.x, c151.y, r5.y  // ::w<0>

#line 993
              add r5.xyz, r0.y, r7.ywzw  // ::result<0,2,1>

#line 998
            endif

#line 2427
            mov r0.y, c111.w
          else
            if_eq r6.x, c149.z

#line 1707
              if_lt c152.w, r2.y

#line 1715
                mad r5.xyz, r1.z, c138.xyxw, c138.zxxw
              else

#line 1707
                add r0.w, r2.y, c75.w

#line 1710
                if_lt r2.y, -c75.w
                  cmp r5.xz, r0.w, c152.wyxw, c152.x  // ::HSLuv_Lrgb<0,1>

#line 1715
                  mov r5.y, r1.z
                else

#line 374
                  add r0.w, r2.y, c150.w
                  mul r1.w, r0.w, r0.w
                  mul r3.w, r0.w, r1.w
                  mul r3.w, r3.w, c77.w  // ::s1<0>
                  mad r1.w, r0.w, -r1.w, c115.w

#line 1595
                  mul r7, r2.y, c110

#line 375
                  cmp r1.w, r1.w, r7.x, r3.w  // ::s2<0>

#line 360
                  mul r3.w, r2.y, r1.w
                  mul r4.y, r3.w, c80.w  // ::y<0>
                  mul r8, r1.w, c133  // ::x<0>, ::z<0>, ::x<0>, ::z<0>
                  rcp r5.w, r8.y
                  mul r6.y, r5.w, r8.x  // ::GetBounds2<0>
                  mul r4.y, r4.y, r5.w  // ::GetBounds2<1>
                  mad r3.w, r3.w, c80.w, -r7.y  // ::y<0>
                  mad r9.xy, r1.w, c164, c164.z  // ::z<0,0>
                  rcp r5.w, r9.x
                  mul r6.w, r5.w, r8.x  // ::GetBounds2<0>
                  mul r3.w, r3.w, r5.w  // ::GetBounds2<1>
                  mul r5.w, r1.w, r7.y  // ::y<0>
                  rcp r8.x, r8.w
                  mul r8.y, r8.x, r8.z  // ::GetBounds2<0>
                  mul r8.x, r5.w, r8.x  // ::GetBounds2<1>
                  mad r7.y, r7.y, r1.w, -r7.y  // ::y<0>
                  rcp r8.w, r9.y
                  mul r8.z, r8.w, r8.z  // ::GetBounds2<0>
                  mul r8.w, r7.y, r8.w  // ::GetBounds2<1>
                  mul r9.xy, r1.w, c132  // ::x<0>, ::z<0>
                  rcp r9.y, r9.y
                  mul r9.z, r9.y, r9.x  // ::GetBounds2<0>
                  mul r5.w, r5.w, r9.y  // ::GetBounds2<1>
                  mad r1.w, r1.w, c164.w, c164.z  // ::z<0>
                  rcp r1.w, r1.w
                  mul r9.x, r1.w, r9.x  // ::GetBounds2<0>
                  mul r1.w, r1.w, r7.y  // ::GetBounds2<1>

#line 577
                  mad r9.yw, r1.z, c120.xxzy, c120.z
                  frc r9.yw, r9
                  mad r9.yw, r9, c163.z, c163.w

#line 408
                  sincos r10.xy, r9.y
                  mad r6.y, r6.y, -r10.x, r10.y
                  rcp r6.y, r6.y
                  mul r4.y, r4.y, r6.y  // ::length<0>
                  min r6.y, r4.y, c81.z  // GetChroma2a::result<0>
                  cmp r4.y, r4.y, r6.y, c81.z  // GetChroma2a::result<0>
                  mad r6.y, r6.w, -r10.x, r10.y
                  rcp r6.y, r6.y
                  mul r3.w, r3.w, r6.y  // ::length<0>
                  min r6.y, r3.w, r4.y  // GetChroma2a::result<0>
                  cmp r3.w, r3.w, r6.y, r4.y  // GetChroma2a::result<0>
                  mad r4.y, r8.y, -r10.x, r10.y
                  rcp r4.y, r4.y
                  mul r4.y, r4.y, r8.x  // ::length<0>
                  min r6.y, r4.y, r3.w  // GetChroma2a::result<0>
                  cmp r3.w, r4.y, r6.y, r3.w  // GetChroma2a::result<0>
                  mad r4.y, r8.z, -r10.x, r10.y
                  rcp r4.y, r4.y
                  mul r4.y, r4.y, r8.w  // ::length<0>
                  min r6.y, r4.y, r3.w  // GetChroma2a::result<0>
                  cmp r3.w, r4.y, r6.y, r3.w  // GetChroma2a::result<0>
                  mad r4.y, r9.z, -r10.x, r10.y
                  rcp r4.y, r4.y
                  mul r4.y, r4.y, r5.w  // ::length<0>
                  min r5.w, r4.y, r3.w  // GetChroma2a::result<0>
                  cmp r3.w, r4.y, r5.w, r3.w  // GetChroma2a::result<0>
                  mad r4.y, r9.x, -r10.x, r10.y
                  rcp r4.y, r4.y
                  mul r1.w, r1.w, r4.y  // ::length<0>
                  min r4.y, r1.w, r3.w  // GetChroma2a::result<0>
                  cmp r1.w, r1.w, r4.y, r3.w  // GetChroma2a::result<0>

#line 1711
                  mul r1.w, r2.x, r1.w
                  mul r1.w, r1.w, c106.w  // ::C<0>

#line 577
                  sincos r8.xy, r9.w
                  mul r6.yw, r1.w, r8.xxzy  // ::a<0>, ::b<0>

#line 496
                  abs r1.w, c13.x

#line 500
                  rcp r3.w, c13.x
                  mul r8.x, r3.w, c12.x  // ::xyY_XYZ<0>
                  mov r9.x, c13.x  // ::WhiteY<0>
                  add r4.y, -r9.x, -c12.x
                  add r4.y, r4.y, c111.w
                  mul r8.z, r3.w, r4.y  // ::xyY_XYZ<2>
                  mov r8.y, c111.w
                  cmp r8.xyz, -r1.w, c113.z, r8  // ::xyY_XYZ<0,1,2>

#line 559
                  cmp r1.w, -r1.w, c125.y, c125.w
                  add r1.w, r1.w, r8.x
                  mul r3.w, r8.x, -c56.z
                  mad r1.w, r8.z, -c56.x, r1.w
                  rcp r1.w, r1.w
                  mul r3.w, r1.w, r3.w  // ::ComputeKu<0>

#line 564
                  mul r1.w, r8.y, r1.w
                  mul r1.w, r1.w, -c86.x  // ::ComputeKv<0>

#line 1593
                  add r4.y, -r2.y, c82.z
                  mul r0.w, r0.w, c82.w
                  mul r5.w, r0.w, r0.w
                  mul r0.w, r0.w, r5.w
                  cmp r0.w, r4.y, r7.x, r0.w  // ::Y<0>
                  mad r3.w, r7.w, r3.w, r6.y
                  rcp r3.w, r3.w
                  mad r3.w, r7.z, r3.w, -c111.w
                  mul r3.w, r3.w, c83.z  // ::a<0>
                  mul r4.y, r0.w, c134.x  // ::b<0>
                  mul r5.w, r2.y, -c36.y
                  mad r1.w, r7.w, r1.w, r6.w
                  rcp r1.w, r1.w
                  mad r1.w, r5.w, r1.w, c134.x
                  mad r1.w, r0.w, r1.w, -r4.y
                  rcp r5.w, r3.w
                  mul r1.w, r1.w, r5.w  // ::X<0>
                  mad r3.w, r1.w, r3.w, r4.y  // ::Z<0>

#line 1604
                  max r4.y, r1.w, c102.z  // ::X<0>

#line 1607
                  max r1.w, r0.w, c102.z  // ::Y<0>

#line 1610
                  max r0.w, r3.w, c102.z  // ::Z<0>

#line 458
                  mul r7.xyz, r1.w, c24
                  mad r7.xyz, r4.y, c23, r7
                  mad r5.xyz, r0.w, c25.xzyw, r7.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 1715
                endif
              endif

#line 2428
              mov r0.y, c111.w
            else
              if_eq r6.x, -c37.y

#line 1042
                mul r0.w, r2.x, c132.z
                mad r1.w, r1.z, c120.w, c120.z
                frc r1.w, r1.w
                mad r1.w, r1.w, c163.z, c163.w
                sincos r7.x, r1.w
                mul r1.w, r0.w, r7.x
                mul r5.xz, r2.y, c139.xyyw  // ::m<0>
                mad r0.w, r0.w, r7.x, r5.z
                mad r0.w, r2.y, -c132.w, r0.w
                mul r5.z, r0.w, c67.y  // ::g<0>
                mad r0.w, r2.y, c117.x, -r1.w
                mul r5.y, r0.w, -c151.y  // ::b<0>

#line 2429
                mov r0.y, c111.w
              else
                if_eq r6.x, -c37.z

#line 1108
                  mad r0.w, r2.x, -c115.x, c115.z  // ::minOverMax<0>
                  if_lt -r0.w, c102.z

#line 1113
                    if_lt r1.z, c60.x
                      mul r1.w, r1.z, c138.w  // ::h<0>
                      rcp r3.w, r0.w
                      lrp r4.y, r1.w, r3.w, c111.w  // ::part<0>
                      mul r5.w, r3.w, r3.w
                      mul r4.y, r4.y, r4.y
                      mul r4.y, r4.y, c146.w
                      mad r4.y, r5.w, c146.z, r4.y
                      add r4.y, r4.y, c62.x
                      rsq r4.y, r4.y
                      mul r7.z, r2.y, r4.y  // ::b<0>
                      mul r7.x, r3.w, r7.z  // ::r<0>
                      mad r3.w, r7.z, r3.w, -r7.z
                      mad r7.y, r1.w, r3.w, r7.z  // ::g<0>
                    else
                      if_lt r1.z, c69.w

#line 1124
                        mad r1.w, r1.z, -c139.z, c139.w
                        mul r1.w, r1.w, -c149.y  // ::h<0>
                        rcp r3.w, r0.w
                        lrp r4.y, r1.w, r3.w, c111.w  // ::part<0>
                        mul r5.w, r3.w, r3.w
                        mul r4.y, r4.y, r4.y
                        mul r4.y, r4.y, c146.z
                        mad r4.y, r5.w, c146.w, r4.y
                        add r4.y, r4.y, c62.x
                        rsq r4.y, r4.y
                        mul r7.z, r2.y, r4.y  // ::b<0>
                        mul r7.y, r3.w, r7.z  // ::g<0>
                        mad r3.w, r7.z, r3.w, -r7.z
                        mad r7.x, r1.w, r3.w, r7.z  // ::r<0>
                      else
                        if_lt r1.z, c108.x
                          mad r1.w, r1.z, c108.y, c108.z
                          mul r1.w, r1.w, -c149.y  // ::h<0>
                          rcp r3.w, r0.w
                          lrp r4.y, r1.w, r3.w, c111.w  // ::part<0>

#line 1135
                          mul r5.w, r3.w, r3.w
                          mul r4.y, r4.y, r4.y
                          mul r4.y, r4.y, c62.x
                          mad r4.y, r5.w, c146.w, r4.y
                          add r4.y, r4.y, c146.z
                          rsq r4.y, r4.y
                          mul r7.x, r2.y, r4.y  // ::r<0>
                          mul r7.y, r3.w, r7.x  // ::g<0>
                          mad r3.w, r7.x, r3.w, -r7.x
                          mad r7.z, r1.w, r3.w, r7.x  // ::b<0>
                        else
                          if_lt r1.z, c154.y
                            mad r1.w, r1.z, -c108.y, c108.w
                            mul r1.w, r1.w, -c149.y  // ::h<0>
                            rcp r3.w, r0.w
                            lrp r4.y, r1.w, r3.w, c111.w  // ::part<0>
                            mul r5.w, r3.w, r3.w
                            mul r4.y, r4.y, r4.y
                            mul r4.y, r4.y, c146.w
                            mad r4.y, r5.w, c62.x, r4.y
                            add r4.y, r4.y, c146.z
                            rsq r4.y, r4.y
                            mul r7.x, r2.y, r4.y  // ::r<0>
                            mul r7.z, r3.w, r7.x  // ::b<0>

#line 1146
                            mad r3.w, r7.x, r3.w, -r7.x
                            mad r7.y, r1.w, r3.w, r7.x  // ::g<0>
                          else
                            add r1.w, r1.z, -c105.z
                            mad r3.w, r1.z, c107.x, c107.y
                            mul r3.w, r3.w, -c149.y  // ::h<0>
                            rcp r0.w, r0.w
                            lrp r4.y, r3.w, r0.w, c111.w  // ::part<0>
                            mul r5.w, r0.w, r0.w

#line 1162
                            mul r6.yw, r5.w, c161.xzzx

#line 1153
                            mul r4.y, r4.y, r4.y
                            mad r4.y, r4.y, c146.z, r6.y
                            add r4.y, r4.y, c146.w
                            rsq r4.y, r4.y
                            mul r8.y, r2.y, r4.y  // ::g<0>
                            mul r8.z, r0.w, r8.y  // ::b<0>
                            mad r4.y, r8.y, r0.w, -r8.y
                            mad r8.x, r3.w, r4.y, r8.y  // ::r<0>

#line 1160
                            mad r3.w, r1.z, -c107.x, c107.z
                            mul r3.w, r3.w, -c149.y  // ::h<0>
                            lrp r4.y, r3.w, r0.w, c111.w  // ::part<0>
                            mul r4.y, r4.y, r4.y
                            mad r4.y, r4.y, c62.x, r6.w
                            add r4.y, r4.y, c146.w
                            rsq r4.y, r4.y
                            mul r9.y, r2.y, r4.y  // ::g<0>
                            mul r9.x, r0.w, r9.y  // ::r<0>
                            mad r0.w, r9.y, r0.w, -r9.y
                            mad r9.z, r3.w, r0.w, r9.y  // ::b<0>
                            cmp r7.xyz, r1.w, r9, r8  // ::r<0>, ::g<0>, ::b<0>
                          endif
                        endif
                      endif
                    endif
                  else

#line 1170
                    if_lt r1.z, c60.x
                      mul r0.w, r1.z, c138.w  // ::h<0>
                      mul r1.w, r2.y, r2.y
                      mul r3.w, r1.z, r0.w
                      mad r3.w, r3.w, c121.x, c121.y
                      rcp r3.w, r3.w
                      mul r1.w, r1.w, r3.w
                      rsq r1.w, r1.w
                      rcp r7.x, r1.w  // ::r<0>
                      mul r7.y, r0.w, r7.x  // ::g<0>
                      mov r7.z, c102.z
                    else
                      if_lt r1.z, c69.w
                        mad r0.w, r1.z, -c139.z, c139.w
                        mul r1.w, r0.w, -c149.y  // ::h<0>

#line 1181
                        mul r3.w, r2.y, r2.y
                        mul r0.w, r0.w, r1.w
                        mad r0.w, r0.w, c121.z, c121.w
                        rcp r0.w, r0.w
                        mul r0.w, r0.w, r3.w
                        rsq r0.w, r0.w
                        rcp r7.y, r0.w  // ::g<0>
                        mul r7.x, r1.w, r7.y  // ::r<0>
                        mov r7.z, c102.z
                      else

#line 1204
                        mad r6.yw, r1.z, c107.x, c107.xwzy
                        mul r8.xy, r6.ywzw, -c149.y  // ::h<0,0>

#line 1189
                        mul r0.w, r2.y, r2.y

#line 1205
                        mul r6.yw, r6, r8.xxzy
                        mad r6.yw, r6, c165.xxzy, c165.xzzw

#line 1189
                        rcp r1.w, r6.y
                        mul r1.w, r0.w, r1.w
                        rsq r1.w, r1.w
                        rcp r9.y, r1.w  // ::g<0>
                        mul r9.z, r8.x, r9.y  // ::b<0>

#line 1212
                        mad r8.xz, r1.z, -c107_abs.x, c107_abs.yyzw
                        mul r10.xy, r8.xzzw, -c149.y  // ::h<0,0>
                        mul r8.xz, r8, r10.xyyw
                        mad r8.xz, r8, c122.xyyw, c122.zyww

#line 1197
                        rcp r1.w, r8.x
                        mul r1.w, r0.w, r1.w
                        rsq r1.w, r1.w
                        rcp r11.z, r1.w  // ::b<0>
                        mul r11.y, r10.x, r11.z  // ::g<0>

#line 1202
                        add r10.xzw, r1.z, c118.xyyz

#line 1205
                        rcp r1.w, r6.w
                        mul r1.w, r0.w, r1.w
                        rsq r1.w, r1.w
                        rcp r12.z, r1.w  // ::b<0>
                        mul r12.x, r8.y, r12.z  // ::r<0>

#line 1213
                        rcp r1.w, r8.z
                        mul r0.w, r0.w, r1.w
                        rsq r0.w, r0.w
                        rcp r8.x, r0.w  // ::r<0>
                        mul r8.z, r10.y, r8.x  // ::b<0>
                        mov r8.y, c102.z
                        mov r12.y, c102.z
                        cmp r8.xyz, r10.w, r8, r12  // ::r<0>, ::g<0>, ::b<0>
                        mov r11.x, c102.z
                        cmp r8.xyz, r10.z, r8, r11  // ::r<0>, ::g<0>, ::b<0>
                        mov r9.x, c102.z
                        cmp r7.xyz, r10.x, r8, r9  // ::r<0>, ::g<0>, ::b<0>
                      endif
                    endif
                  endif

#line 1220
                  add r7.xyz, r7, -c151.y
                  frc r8.xyz, r7
                  add r7.xyz, r7, -r8
                  mul_sat r5.xyz, r7.xzyw, c74.w  // ::result<0,2,1>

#line 2430
                  mov r0.y, c111.w
                else
                  if_eq r6.x, -c37.w

#line 1291
                    mul r6.yw, r2.xxzy, c106.w  // ::white<0>, ::black<0>
                    add r0.w, r6.w, r6.y
                    rcp r1.w, r0.w
                    mul r1.w, r1.w, r6.y  // ::gray<0>

#line 1299
                    add r0.w, r0.w, -c111.w

#line 850
                    mul r3.w, r1.z, c138.w  // ::SectorPosition<0>
                    frc r4.y, r3.w
                    add r3.w, r3.w, -r4.y  // ::SectorNumber<0>

#line 854
                    mad r4.y, r1.z, c138.w, -r3.w  // ::FractionalSector<0>

#line 858
                    add r7.x, -r4.y, c111.w  // ::q<0>

#line 886
                    add r8, r3.w, c162

#line 892
                    add r4.y, r3.w, c134.x
                    cmp r9.x, -r4_abs.y, c111_abs.w, c111_abs.y  // ::r<0>

#line 897
                    mov r7.y, c102.z
                    cmp r9.yz, -r4_abs.y, r7.xyxw, c102.z  // ::g<0>, ::b<0>
                    mad r7.zw, r7.x, c119.xyyz, c119.x
                    cmp r9.xyz, -r8_abs.w, r7.zyww, r9  // ::r<0>, ::g<0>, ::b<0>
                    cmp r9.xyz, -r8_abs.z, r7.yxww, r9  // ::r<0>, ::g<0>, ::b<0>
                    mad r10.xyz, r7.wxyw, c119.xyxw, c119.zxzw
                    cmp r8.yzw, -r8_abs.y, r10.xzxy, r9.xxyz  // ::r<0>, ::g<0>, ::b<0>
                    cmp r7.xyz, -r8_abs.x, r7.xwyw, r8.yzww  // ::r<0>, ::g<0>, ::b<0>
                    cmp r7.xyz, -r3_abs.w, r10, r7  // ::r<0>, ::g<0>, ::b<0>

#line 1302
                    mad r3.w, r2.x, -c115.x, c115.z
                    mad r3.w, r2.y, -c106.w, r3.w

#line 1309
                    mad r7.xyz, r7, r3.w, r6.y  // ::rgb<0,1,2>
                    cmp r5.xyz, r0.w, r1.w, r7.xzyw  // ::HWB_Lrgb<0,2,1>

#line 2431
                    mov r0.y, c111.w
                  else
                    if_eq r6.x, -c40.x

#line 458
                      mul r7.xyz, r2.x, c88
                      mad r7.xyz, r1.z, c87, r7
                      mad r5.xyz, r2.y, c89.xzyw, r7.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2432
                      mov r0.y, c111.w
                    else
                      if_eq r6.x, -c40.y

#line 2138
                        add r6.yw, r2.xyzx, c102.w
                        mad r0.w, r6.w, -c118.w, r1.z
                        mad r0.w, r6.y, -c88.w, r0.w  // ::ycbcr<1>
                        mad r6.yw, r6, c93.xxzy, r1.z  // ::ycbcr<0,2>

#line 2118
                        add r6.yw, r6, -c145
                        add r0.w, r0.w, c102.w

#line 2073
                        mul r7.xy, r6.ywzw, c93.zwzw  // ::ypbpr<0>
                        add r5.x, r7.y, r7.x  // ::r<0>
                        mad r5.y, r0.w, c87.w, r7.x  // ::b<0>
                        mul r0.w, r5.x, c135.x
                        mad r0.w, r6.y, c89.w, -r0.w
                        mad r0.w, r5.y, -c135.z, r0.w
                        mul r5.z, r0.w, c98.x  // ::g<0>

#line 2433
                        mov r0.y, c111.w
                      else
                        add r0.w, r6.x, -c150.w
                        cmp r0.y, -r0_abs.w, c111_abs.w, c111_abs.y

#line 1379
                        add r1.w, r1.z, c150.w
                        mul r3.w, r1.w, c82.w  // ::fy<0>
                        mul r4.y, r2.y, c98.y
                        mad r5.w, r2.x, c98.z, r3.w  // ::fx<0>
                        mad r1.w, r1.w, c82.w, -r4.y  // ::fz<0>
                        mul r4.y, r5.w, r5.w
                        mul r6.y, r4.y, r5.w  // ::fx3<0>
                        mul r6.w, r1.w, r1.w
                        mul r7.x, r1.w, r6.w  // ::fz3<0>
                        mad r4.y, r5.w, -r4.y, c105.x
                        mad r5.w, r5.w, c126.x, c126.y
                        mul r5.w, r5.w, c110.x
                        cmp r4.y, r4.y, r5.w, r6.y  // ::xr<0>
                        add r5.w, -r1.z, c82.z
                        mul r6.y, r3.w, r3.w
                        mul r3.w, r3.w, r6.y
                        mul r6.y, r1.z, c110.x
                        cmp r3.w, r5.w, r6.y, r3.w  // ::yr<0>
                        mad r5.w, r1.w, -r6.w, c105.x
                        mad r1.w, r1.w, c126.x, c126.y
                        mul r1.w, r1.w, c110.x
                        cmp r1.w, r5.w, r1.w, r7.x  // ::zr<0>

#line 496
                        abs r5.w, c13.x

#line 500
                        rcp r6.y, c13.x
                        mul r7.x, r6.y, c12.x  // ::xyY_XYZ<0>
                        mov r8.x, c13.x  // ::WhiteY<0>
                        add r6.w, -r8.x, -c12.x
                        add r6.w, r6.w, c111.w
                        mul r7.z, r6.y, r6.w  // ::xyY_XYZ<2>
                        mov r7.y, c111.w
                        cmp r7.xyz, -r5.w, c113.z, r7  // ::xyY_XYZ<0,1,2>

#line 1391
                        mul r8.x, r4.y, r7.x  // ::Lab_Lrgb<0>
                        mul r8.y, r3.w, r7.y  // ::Lab_Lrgb<1>
                        mul r8.z, r1.w, r7.z  // ::Lab_Lrgb<2>

#line 2434
                        cmp r5.xyz, -r0_abs.w, r8.xzyw, r5  // ::TLrgb<0,2,1>
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r0.y, -r0.y

#line 2465
          else

#line 2436
            if_eq r6.x, -c45.x

#line 496
              abs r0.y, c13.x

#line 500
              rcp r0.w, c13.x
              mul r7.x, r0.w, c12.x  // ::xyY_XYZ<0>
              mov r8.x, c13.x  // ::WhiteY<0>
              add r1.w, -r8.x, -c12.x
              add r1.w, r1.w, c111.w
              mul r7.z, r0.w, r1.w  // ::xyY_XYZ<2>
              mov r7.y, c111.w
              cmp r7.xyz, -r0.y, c113.z, r7  // ::xyY_XYZ<0,1,2>

#line 540
              add r6.yw, r7.xxzz, c109.xxzy

#line 543
              cmp r0.w, -r6_abs.w, -c111_abs.w, -c111_abs.y
              cmp r0.w, -r0.y, c102.z, r0.w
              cmp r0.w, -r6_abs.y, r0.w, c102.z

#line 553
              add r6.yw, r7.xyzz, r7.xxzy
              mul r6.yw, r6, c109.xzzw  // ::Ka<0,0>

#line 1435
              mul r1.w, r1.z, c106.w
              mul r1.w, r1.w, r1.w
              mul r1.w, r7.y, r1.w  // ::Y<0>
              rcp r3.w, r6.y
              cmp r3.w, r0.w, r3.w, c98.w
              mul r3.w, r2.x, r3.w
              cmp r0.y, -r0.y, c112.z, c112.w
              mul r0.y, r0.y, r1.w
              rsq r4.y, r0.y
              rcp r4.y, r4.y
              mad r3.w, r3.w, r4.y, r0.y
              mul r3.w, r7.x, r3.w  // ::X<0>
              rcp r5.w, r6.w
              cmp r0.w, r0.w, r5.w, c126.z
              mul r0.w, r0.w, r2.y
              mad r0.y, r0.w, r4.y, -r0.y
              mul r0.y, -r7.z, r0.y  // ::Z<0>

#line 458
              mul r7.xyz, r1.w, c24
              mad r7.xyz, r3.w, c23, r7
              mad r5.xyz, r0.y, c25.xzyw, r7.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2436
              mov r0.y, c111.w
            else
              if_eq r6.x, -c45.y
                mov r2.z, r1.z
                mov r5.xyz, r2.zyxw  // ::TLrgb<0,2,1>
                mov r0.y, c111.w
              else
                if_eq r6.x, -c45.z

#line 1481
                  add r0.w, r1.z, -c65.w  // ::Jz<0>
                  mad r1.w, r0.w, c90.x, c90.y
                  rcp r1.w, r1.w

#line 1486
                  mul r6.yw, r2.x, c90.xzzw
                  mad r2.z, r0.w, r1.w, r6.y
                  mad r2.z, r2.y, c126.w, r2.z  // PerceptualQuantizerInverse::X<0>

#line 479
                  pow r3.w, r2.z, c91.x  // ::XX<0>
                  add r2.z, -r3.w, c64.z
                  mad r3.w, r3.w, c91.y, c91.z
                  rcp r3.w, r3.w
                  mul r2.z, r2.z, r3.w
                  pow r3.w, r2.z, c91.w

#line 1486
                  mad r6.yw, r0.w, r1.w, -r6
                  mad r6.yw, r2.y, -c131.xxzy, r6  // PerceptualQuantizerInverse::X<0,0>

#line 479
                  pow r0.w, r6.y, c91.x  // ::XX<0>
                  add r1.w, -r0.w, c64.z
                  mad r0.w, r0.w, c91.y, c91.z
                  rcp r0.w, r0.w
                  mul r0.w, r0.w, r1.w
                  pow r1.w, r0.w, c91.w
                  pow r0.w, r6.w, c91.x  // ::XX<0>
                  add r2.z, -r0.w, c64.z
                  mad r0.w, r0.w, c91.y, c91.z
                  rcp r0.w, r0.w
                  mul r0.w, r0.w, r2.z
                  pow r2.z, r0.w, c91.w

#line 1490
                  mul r7.xyz, r1.w, c130
                  mad r6.yw, r3.w, c131.xzzw, -r7.xxzz
                  mad r0.w, r3.w, c130.w, r7.y
                  mad r0.w, r2.z, -c129.x, r0.w  // ::Y<0>
                  mad r6.yw, r2.z, c129.xyzz, r6  // ::X<0>, ::Z<0>
                  mul r0.w, r0.w, c63.z  // ::xyz<1>
                  mul r6.yw, r6, c63.z  // ::xyz<0,2>

#line 458
                  mul r7.xyz, r0.w, c24
                  mad r7.xyz, r6.y, c23, r7
                  mad r5.xyz, r6.w, c25.xzyw, r7.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2438
                  mov r0.y, c111.w
                else
                  if_eq r6.x, -c45.w

#line 496
                    abs r0.w, c13.x

#line 500
                    rcp r1.w, c13.x
                    mul r7.x, r1.w, c12.x  // ::xyY_XYZ<0>
                    mov r8.x, c13.x  // ::WhiteY<0>
                    add r2.z, -r8.x, -c12.x
                    add r2.z, r2.z, c111.w
                    mul r7.z, r1.w, r2.z  // ::xyY_XYZ<2>
                    mov r7.y, c111.w
                    cmp r7.xyz, -r0.w, c113.z, r7  // ::xyY_XYZ<0,1,2>

#line 458
                    mul r8.xyz, r2.x, c27
                    mad r8.xyz, r1.z, c26, r8
                    mad r8.xyz, r2.y, c28, r8  // ::x<0>, ::y<0>, ::z<0>

#line 488
                    mul r9.xyz, r8, r8
                    mul r8.xyz, r8, r9  // ::Pow3<0,0,0>

#line 458
                    mul r9.xyz, r8.y, c33
                    mad r8.xyw, r8.x, c32.xyzz, r9.xyzz
                    mad r8.xyz, r8.z, c34, r8.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 1539
                    mul r7.xyz, r7, r8  // ::xyz<0,1,2>

#line 458
                    mul r8.xyz, r7.y, c24
                    mad r7.xyw, r7.x, c23.xyzz, r8.xyzz
                    mad r5.xyz, r7.z, c25.xzyw, r7.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2439
                    mov r0.y, c111.w
                  else
                    if_eq r6.x, -c46.x

#line 577
                      mad r0.w, r2.y, c82.x, c82.y
                      frc r0.w, r0.w
                      mad r0.w, r0.w, c163.z, c163.w
                      sincos r7.xy, r0.w
                      mul r6.yw, r2.x, r7.xxzy  // ::a<0>, ::b<0>

#line 1379
                      add r0.w, r1.z, c150.w
                      mul r1.w, r0.w, c82.w  // ::fy<0>
                      mul r2.z, r6.w, c98.y
                      mad r3.w, r6.y, c98.z, r1.w  // ::fx<0>
                      mad r0.w, r0.w, c82.w, -r2.z  // ::fz<0>
                      mul r2.z, r3.w, r3.w
                      mul r4.y, r2.z, r3.w  // ::fx3<0>
                      mul r5.w, r0.w, r0.w
                      mul r6.y, r0.w, r5.w  // ::fz3<0>
                      mad r2.z, r3.w, -r2.z, c105.x
                      mad r3.w, r3.w, c126.x, c126.y
                      mul r3.w, r3.w, c110.x
                      cmp r2.z, r2.z, r3.w, r4.y  // ::xr<0>
                      add r3.w, -r1.z, c82.z
                      mul r4.y, r1.w, r1.w
                      mul r1.w, r1.w, r4.y
                      mul r4.y, r1.z, c110.x
                      cmp r1.w, r3.w, r4.y, r1.w  // ::yr<0>
                      mad r3.w, r0.w, -r5.w, c105.x
                      mad r0.w, r0.w, c126.x, c126.y
                      mul r0.w, r0.w, c110.x
                      cmp r0.w, r3.w, r0.w, r6.y  // ::zr<0>

#line 496
                      abs r3.w, c13.x

#line 500
                      rcp r4.y, c13.x
                      mul r7.x, r4.y, c12.x  // ::xyY_XYZ<0>
                      mov r8.x, c13.x  // ::WhiteY<0>
                      add r5.w, -r8.x, -c12.x
                      add r5.w, r5.w, c111.w
                      mul r7.z, r4.y, r5.w  // ::xyY_XYZ<2>
                      mov r7.y, c111.w
                      cmp r7.xyz, -r3.w, c113.z, r7  // ::xyY_XYZ<0,1,2>

#line 1391
                      mul r5.x, r2.z, r7.x  // ::Lab_Lrgb<0>
                      mul r5.z, r1.w, r7.y  // ::Lab_Lrgb<1>
                      mul r5.y, r0.w, r7.z  // ::Lab_Lrgb<2>

#line 2440
                      mov r0.y, c111.w
                    else
                      if_eq r6.x, -c46.y

#line 577
                        mad r0.w, r2.y, c82.x, c82.y
                        frc r0.w, r0.w
                        mad r0.w, r0.w, c163.z, c163.w
                        sincos r7.xy, r0.w
                        mul r6.yw, r2.x, r7.xxzy  // ::a<0>, ::b<0>

#line 496
                        abs r0.w, c13.x

#line 500
                        rcp r1.w, c13.x
                        mul r7.x, r1.w, c12.x  // ::xyY_XYZ<0>
                        mov r8.x, c13.x  // ::WhiteY<0>
                        add r2.z, -r8.x, -c12.x
                        add r2.z, r2.z, c111.w
                        mul r7.z, r1.w, r2.z  // ::xyY_XYZ<2>
                        mov r7.y, c111.w
                        cmp r7.xyz, -r0.w, c113.z, r7  // ::xyY_XYZ<0,1,2>

#line 540
                        add r8.xy, r7.xzzw, c109

#line 543
                        cmp r1.w, -r8_abs.y, -c111_abs.w, -c111_abs.y
                        cmp r1.w, -r0.w, c102.z, r1.w
                        cmp r1.w, -r8_abs.x, r1.w, c102.z

#line 553
                        add r8.xy, r7.yzzw, r7
                        mul r8.xy, r8, c109.zwzw  // ::Ka<0,0>

#line 1435
                        mul r2.z, r1.z, c106.w
                        mul r2.z, r2.z, r2.z
                        mul r2.z, r7.y, r2.z  // ::Y<0>
                        rcp r3.w, r8.x
                        cmp r3.w, r1.w, r3.w, c98.w
                        mul r3.w, r3.w, r6.y
                        cmp r0.w, -r0.w, c112.z, c112.w
                        mul r0.w, r0.w, r2.z
                        rsq r4.y, r0.w
                        rcp r4.y, r4.y
                        mad r3.w, r3.w, r4.y, r0.w
                        mul r3.w, r7.x, r3.w  // ::X<0>
                        rcp r5.w, r8.y
                        cmp r1.w, r1.w, r5.w, c126.z
                        mul r1.w, r1.w, r6.w
                        mad r0.w, r1.w, r4.y, -r0.w
                        mul r0.w, -r7.z, r0.w  // ::Z<0>

#line 458
                        mul r7.xyz, r2.z, c24
                        mad r7.xyz, r3.w, c23, r7
                        mad r5.xyz, r0.w, c25.xzyw, r7.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2441
                        mov r0.y, c111.w
                      else
                        if_eq r6.x, -c46.z

#line 577
                          mad r0.w, r2.y, c82.x, c82.y
                          frc r0.w, r0.w
                          mad r0.w, r0.w, c163.z, c163.w
                          sincos r7.xy, r0.w
                          mul r7, r2.x, r7.xyxy  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1481
                          add r0.w, r1.z, -c65.w  // ::Jz<0>
                          mad r1.w, r0.w, c90.x, c90.y
                          rcp r1.w, r1.w

#line 1486
                          mul r6.yw, r7.xxzz, c90.xzzw
                          mad r2.z, r0.w, r1.w, r6.y
                          mad r2.z, r7.y, c126.w, r2.z  // PerceptualQuantizerInverse::X<0>

#line 479
                          pow r3.w, r2.z, c91.x  // ::XX<0>
                          add r2.z, -r3.w, c64.z
                          mad r3.w, r3.w, c91.y, c91.z
                          rcp r3.w, r3.w
                          mul r2.z, r2.z, r3.w
                          pow r3.w, r2.z, c91.w

#line 1486
                          mad r6.yw, r0.w, r1.w, -r6
                          mad r6.yw, r7, -c131.xxzy, r6  // PerceptualQuantizerInverse::X<0,0>

#line 479
                          pow r0.w, r6.y, c91.x  // ::XX<0>
                          add r1.w, -r0.w, c64.z
                          mad r0.w, r0.w, c91.y, c91.z
                          rcp r0.w, r0.w
                          mul r0.w, r0.w, r1.w
                          pow r1.w, r0.w, c91.w
                          pow r0.w, r6.w, c91.x  // ::XX<0>
                          add r2.z, -r0.w, c64.z
                          mad r0.w, r0.w, c91.y, c91.z
                          rcp r0.w, r0.w
                          mul r0.w, r0.w, r2.z
                          pow r2.z, r0.w, c91.w

#line 1490
                          mul r7.xyz, r1.w, c130
                          mad r6.yw, r3.w, c131.xzzw, -r7.xxzz
                          mad r0.w, r3.w, c130.w, r7.y
                          mad r0.w, r2.z, -c129.x, r0.w  // ::Y<0>
                          mad r6.yw, r2.z, c129.xyzz, r6  // ::X<0>, ::Z<0>
                          mul r0.w, r0.w, c63.z  // ::xyz<1>
                          mul r6.yw, r6, c63.z  // ::xyz<0,2>

#line 458
                          mul r7.xyz, r0.w, c24
                          mad r7.xyz, r6.y, c23, r7
                          mad r5.xyz, r6.w, c25.xzyw, r7.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2442
                          mov r0.y, c111.w
                        else
                          add r0.w, r6.x, c46.w
                          cmp r0.y, -r0_abs.w, c111_abs.w, c111_abs.y
                          if_eq r6.x, -c46.w

#line 577
                            mad r0.w, r2.y, c82.x, c82.y
                            frc r0.w, r0.w
                            mad r0.w, r0.w, c163.z, c163.w
                            sincos r7.xy, r0.w
                            mul r6.yw, r2.x, r7.xxzy  // ::a<0>, ::b<0>

#line 496
                            abs r0.w, c13.x

#line 500
                            rcp r1.w, c13.x
                            mul r7.x, r1.w, c12.x  // ::xyY_XYZ<0>
                            mov r8.x, c13.x  // ::WhiteY<0>
                            add r2.z, -r8.x, -c12.x
                            add r2.z, r2.z, c111.w
                            mul r7.z, r1.w, r2.z  // ::xyY_XYZ<2>
                            mov r7.y, c111.w
                            cmp r7.xyz, -r0.w, c113.z, r7  // ::xyY_XYZ<0,1,2>

#line 559
                            cmp r0.w, -r0.w, c125.y, c125.w
                            add r0.w, r0.w, r7.x
                            mul r1.w, r7.x, -c56.z
                            mad r0.w, r7.z, -c56.x, r0.w
                            rcp r0.w, r0.w
                            mul r1.w, r0.w, r1.w  // ::ComputeKu<0>

#line 564
                            mul r0.w, r7.y, r0.w
                            mul r0.w, r0.w, -c86.x  // ::ComputeKv<0>

#line 1593
                            add r2.z, -r1.z, c82.z
                            add r3.w, r1.z, c150.w
                            mul r3.w, r3.w, c82.w
                            mul r4.y, r3.w, r3.w
                            mul r3.w, r3.w, r4.y

#line 1598
                            mul r7, r1.z, c137

#line 1593
                            cmp r2.z, r2.z, r7.x, r3.w  // ::Y<0>
                            mad r1.w, r7.z, r1.w, r6.y
                            rcp r1.w, r1.w
                            mad r1.w, r7.y, r1.w, -c111.w
                            mul r1.w, r1.w, c83.z  // ::a<0>
                            mul r3.w, r2.z, c134.x  // ::b<0>
                            mad r0.w, r7.z, r0.w, r6.w
                            rcp r0.w, r0.w
                            mad r0.w, r7.w, r0.w, c134.x
                            mad r0.w, r2.z, r0.w, -r3.w
                            rcp r4.y, r1.w
                            mul r0.w, r0.w, r4.y  // ::X<0>
                            mad r1.w, r0.w, r1.w, r3.w  // ::Z<0>

#line 1604
                            max r3.w, r0.w, c102.z  // ::X<0>

#line 1607
                            max r0.w, r2.z, c102.z  // ::Y<0>

#line 1610
                            max r2.z, r1.w, c102.z  // ::Z<0>

#line 458
                            mul r7.xyz, r0.w, c24
                            mad r7.xyz, r3.w, c23, r7
                            mad r5.xyz, r2.z, c25.xzyw, r7.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2443
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r0.y, -r0.y

#line 2465
            else

#line 2445
              if_eq r6.x, -c35.x

#line 577
                mad r0.y, r2.y, c82.x, c82.y
                frc r0.y, r0.y
                mad r0.y, r0.y, c163.z, c163.w
                sincos r7.xy, r0.y
                mul r1.xy, r2.x, r7  // ::a<0>, ::b<0>

#line 1922
                add r1.xyw, r1.xyzz, c152.wwzx
                mul r7.xyz, r1.xyww, c136.xxyw  // ::result<0,1,2>

#line 500
                mul r0.y, r7.z, r7.x
                rcp r0.w, r7.y
                mul r8.x, r0.w, r0.y  // ::xyY_XYZ<0>
                mad r0.y, r1.y, -c98.y, -r7.x
                add r0.y, r0.y, c111.w
                mul r0.y, r7.z, r0.y
                mul r8.z, r0.w, r0.y  // ::xyY_XYZ<2>
                mov r8.y, r7.z
                cmp r1.xyw, -r7_abs.y, c113.z, r8.xyzz  // ::xyY_XYZ<0,1,2>

#line 458
                mul r7.xyz, r1.y, c24
                mad r7.xyz, r1.x, c23, r7
                mad r5.xyz, r1.w, c25.xzyw, r7.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2445
                mov r0.y, c111.w
              else
                if_eq r6.x, -c35.y

#line 458
                  mul r1.xyw, r2.x, c15.xyzz
                  mad r1.xyw, r1.z, c14.xyzz, r1
                  mad r1.xyw, r2.y, c16.xyzz, r1  // ::x<0>, ::y<0>, ::z<0>
                  mul r7.xyz, r1.y, c24
                  mad r7.xyz, r1.x, c23, r7
                  mad r5.xyz, r1.w, c25.xzyw, r7.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2446
                  mov r0.y, c111.w
                else
                  if_eq r6.x, -c35.z

#line 496
                    abs r0.w, c13.x

#line 500
                    rcp r1.x, c13.x
                    mul r7.x, r1.x, c12.x  // ::xyY_XYZ<0>
                    mov r8.x, c13.x  // ::WhiteY<0>
                    add r1.y, -r8.x, -c12.x
                    add r1.y, r1.y, c111.w
                    mul r7.z, r1.x, r1.y  // ::xyY_XYZ<2>
                    mov r7.y, c111.w
                    cmp r1.xyw, -r0.w, c113.z, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 559
                    cmp r0.w, -r0.w, c125.y, c125.w
                    add r0.w, r0.w, r1.x
                    mul r1.x, r1.x, -c56.z
                    mad r0.w, r1.w, -c56.x, r0.w
                    rcp r0.w, r0.w
                    mul r1.x, r0.w, r1.x  // ::ComputeKu<0>

#line 564
                    mul r0.w, r1.y, r0.w
                    mul r0.w, r0.w, -c86.x  // ::ComputeKv<0>

#line 1593
                    add r1.y, -r1.z, c82.z
                    add r1.w, r1.z, c150.w
                    mul r1.w, r1.w, c82.w
                    mul r2.z, r1.w, r1.w
                    mul r1.w, r1.w, r2.z

#line 1598
                    mul r7, r1.z, c137

#line 1593
                    cmp r1.y, r1.y, r7.x, r1.w  // ::Y<0>
                    mad r1.x, r7.z, r1.x, r2.x
                    rcp r1.x, r1.x
                    mad r1.x, r7.y, r1.x, -c111.w
                    mul r1.x, r1.x, c83.z  // ::a<0>
                    mul r1.w, r1.y, c134.x  // ::b<0>
                    mad r0.w, r7.z, r0.w, r2.y
                    rcp r0.w, r0.w
                    mad r0.w, r7.w, r0.w, c134.x
                    mad r0.w, r1.y, r0.w, -r1.w
                    rcp r2.z, r1.x
                    mul r0.w, r0.w, r2.z  // ::X<0>
                    mad r1.x, r0.w, r1.x, r1.w  // ::Z<0>

#line 1604
                    max r1.w, r0.w, c102.z  // ::X<0>

#line 1607
                    max r0.w, r1.y, c102.z  // ::Y<0>

#line 1610
                    max r2.z, r1.x, c102.z  // ::Z<0>

#line 458
                    mul r7.xyz, r0.w, c24
                    mad r1.xyw, r1.w, c23.xyzz, r7.xyzz
                    mad r5.xyz, r2.z, c25.xzyw, r1.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 2447
                    mov r0.y, c111.w
                  else
                    if_eq r6.x, -c35.w

#line 1335
                      mad r0.w, r1.z, c71.x, c71.z
                      frc r0.w, r0.w
                      mad r0.w, r0.w, c163.z, c163.w
                      sincos r7.xy, r0.w
                      rcp r0.w, r7.x
                      mul r0.w, r0.w, r7.y  // ::x<0>
                      mul r1.x, r0.w, r0.w  // ::x<0>
                      mul r1.y, r2.x, r2.x
                      mul r1.y, r1.y, -c134.x
                      rcp r1.x, r1.x
                      add r1.x, r1.x, c111.w
                      mul r1.x, r1.x, -c86.x
                      rcp r1.x, r1.x
                      mul r1.x, r1.x, r1.y
                      rsq r1.x, r1.x
                      rcp r1.x, r1.x  // ::r<0>
                      mad r0.w, r0.w, r0.w, c111.w
                      mul r0.w, r0.w, -c86.x
                      rcp r0.w, r0.w
                      mul r0.w, r0.w, r1.y
                      rsq r0.w, r0.w
                      rcp r0.w, r0.w  // ::g<0>
                      mul r1.y, r0.w, c129.w
                      mad r1.y, r1.x, c136.z, r1.y
                      add r1.y, r1.y, c62.x
                      rcp r1.y, r1.y
                      mul r1.y, r1.y, r2.y  // ::k<0>
                      add r1.w, -r1.x, c111.w
                      add r1.w, -r0.w, r1.w
                      mul r5.z, r0.w, r1.y  // ::G<0>
                      mul r5.xy, r1.xwzw, r1.y  // ::R<0>, ::B<0>

#line 2448
                      mov r0.y, c111.w
                    else
                      if_eq r6.x, -c59.x

#line 1847
                        mul r0.w, r1.z, c136.w  // XYZ_Lrgb::input<0>
                        mad r1.x, r2.x, c56.x, r0.w
                        mad r1.x, r2.y, -c85.z, r1.x  // XYZ_Lrgb::input<2>

#line 458
                        mul r7.xyz, r2.x, c24
                        mad r7.xyz, r0.w, c23, r7
                        mad r5.xyz, r1.x, c25.xzyw, r7.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 2449
                        mov r0.y, c111.w
                      else
                        if_eq r6.x, -c59.y

#line 1867
                          if_eq r0.x, -r4.z

#line 1880
                            mov r5.xyz, c102.z  // ::UVW_Lrgb<0,2,1>
                          else

#line 496
                            abs r0.x, c13.x

#line 500
                            rcp r0.w, c13.x
                            mul r7.x, r0.w, c12.x  // ::xyY_XYZ<0>
                            mov r1.x, c13.x  // ::WhiteY<0>
                            add r1.x, -r1.x, -c12.x
                            add r1.x, r1.x, c111.w
                            mul r7.z, r0.w, r1.x  // ::xyY_XYZ<2>
                            mov r7.y, c111.w
                            cmp r1.xyw, -r0.x, c113.z, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 1868
                            cmp r0.x, -r0.x, c125.y, c125.w
                            add r0.x, r0.x, r1.x
                            mul r0.w, r1.x, -c56.z
                            mad r0.x, r1.w, -c56.x, r0.x
                            rcp r0.x, r0.x
                            mul r0.w, r0.x, r0.w  // ::uN<0>
                            mul r0.x, r1.y, r0.x
                            mul r0.x, r0.x, -c149.y  // ::vN<0>
                            add r1.x, r2.y, -c45.x
                            mul r1.x, r1.x, c92.x
                            mul r1.y, r1.x, r1.x
                            mul r1.x, r1.y, r1.x  // ::y<0>
                            mul r1.y, r2.y, -c37.w
                            rcp r1.w, r1.y
                            mad r0.w, r1.z, r1.w, r0.w
                            mad r0.x, r2.x, r1.w, r0.x
                            cmp r0.xw, -r1_abs.y, c102.z, r0  // ::_v<0>, ::_u<0>

#line 1876
                            mul r1.y, r0.w, r1.x
                            rcp r0.x, r0.x
                            mul r1.y, r0.x, r1.y  // ::x<0>
                            add r1.w, r0.x, r0.x
                            mul r0.x, r0.w, r0.x
                            mad r0.x, r0.x, c151.y, r1.w
                            add r0.x, r0.x, c134.x
                            mul r0.x, r0.x, r1.x  // ::z<0>
                            mul r0.w, r1.y, c106.w  // ::xyz<0>
                            mul r1.x, r1.x, c106.w  // ::xyz<1>
                            mul r0.x, r0.x, c106.w  // ::xyz<2>

#line 458
                            mul r1.xyw, r1.x, c24.xyzz
                            mad r1.xyw, r0.w, c23.xyzz, r1
                            mad r5.xyz, r0.x, c25.xzyw, r1.xwyw  // ::x<0>, ::z<0>, ::y<0>

#line 1880
                          endif

#line 2450
                          mov r0.y, c111.w
                        else
                          add r0.xw, r6.x, c59.zyzw

#line 2098
                          add r1.x, r1.z, -c150.w
                          mul r1.y, r1.x, c89.w  // ::ypbpr<0>
                          add r4.yz, r2.xxyw, c102.w

#line 2074
                          mad r7.xz, r4.zyyw, c92.yyzw, r1.y  // ::r<0>, ::b<0>
                          mul r1.y, r7.x, c135.x
                          mad r1.x, r1.x, c89.w, -r1.y
                          mad r1.x, r7.z, -c135.z, r1.x
                          mul r7.y, r1.x, c98.x  // ::g<0>

#line 2452
                          cmp r1.x, -r0_abs.w, c111_abs.w, c111_abs.y

#line 500
                          mul r1.y, r1.z, r2.y
                          rcp r1.w, r2.x
                          mul r8.x, r1.w, r1.y  // ::xyY_XYZ<0>
                          add r1.y, -r1.z, -r2.x
                          add r1.y, r1.y, c111.w
                          mul r1.y, r2.y, r1.y
                          mul r8.z, r1.w, r1.y  // ::xyY_XYZ<2>
                          mov r8.y, r2.y
                          cmp r8.xyz, -r2_abs.x, c113.z, r8  // ::xyY_XYZ<0,1,2>

#line 458
                          mul r9.xyz, r8.y, c24
                          mad r8.xyw, r8.x, c23.xyzz, r9.xyzz
                          mad r8.xyz, r8.z, c25, r8.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 2452
                          cmp r8.xyz, -r0_abs.w, r8, r5.xzyw  // ::TLrgb<0,1,2>
                          cmp r5.xyz, -r0_abs.x, r7.xzyw, r8.xzyw  // ::TLrgb<0,2,1>
                          cmp r0.y, -r0_abs.x, c111.w, r1.x
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r0.y, -r0.y

#line 2465
              else
                add r0.x, r6.x, c36.w

#line 2454
                if_eq r6.x, -c68.x

#line 496
                  abs r0.y, c13.x

#line 500
                  rcp r0.w, c13.x
                  mul r7.x, r0.w, c12.x  // ::xyY_XYZ<0>
                  mov r1.x, c13.x  // ::WhiteY<0>
                  add r1.x, -r1.x, -c12.x
                  add r1.x, r1.x, c111.w
                  mul r7.z, r0.w, r1.x  // ::xyY_XYZ<2>

#line 1939
                  mov r7.y, c111.w
                  mul r1.xyw, r7.xyzz, c152.w
                  cmp r1.xyw, -r0.y, c92.w, r1  // ::white<0,1,2>

#line 1943
                  add r0.y, r1.y, r1.x
                  add r0.y, r1.w, r0.y
                  rcp r0.w, r0.y
                  mul r0.w, r0.w, r1.y  // ::x0<0>
                  mul r0.y, r0.y, c106.w  // ::ew<0>

#line 1948
                  mul r1.x, r2.y, r2.y
                  mul r7.y, r1.x, c106.w  // ::Y<0>

#line 1952
                  mul r1.yw, c38.xyzx, c38.xxzz
                  mul r2.z, r0.w, r1.x
                  mul r1.yw, r2.x, r1
                  mul r4.yz, r1.xyww, c152.w
                  mad r1.y, r2.z, r0.y, r4.y
                  mul r0.w, r0.w, r4.z
                  mad r0.w, r0.w, -r0.y, r1.y
                  mul r1.y, r2.x, c152.w
                  mul r6.yw, r1.y, c38.xxzz
                  mul r2.z, r0.y, r4.z
                  mad r1.y, r1.y, c38.x, -r2.z
                  mad r1.y, r1.x, r0.y, r1.y
                  rcp r1.y, r1.y
                  mul r0.w, r0.w, r1.y  // ::x<0>
                  mad r1.x, r6.w, c38.x, r1.x
                  mad r1.x, r1.w, -c152.w, r1.x
                  mul r1.y, r0.y, r7.y
                  mad r1.y, r1.y, c152.w, r6.y
                  mad r0.y, r4.z, -r0.y, r1.y
                  rcp r0.y, r0.y
                  mul r1.y, r0.y, r1.x  // ::y<0>

#line 500
                  mul r1.w, r7.y, r0.w
                  rcp r2.z, r1.y
                  mul r7.x, r1.w, r2.z  // ::xyY_XYZ<0>
                  mad r0.y, r1.x, -r0.y, -r0.w
                  add r0.y, r0.y, c111.w
                  mul r0.y, r7.y, r0.y
                  mul r7.z, r2.z, r0.y  // ::xyY_XYZ<2>
                  cmp r1.xyw, -r1_abs.y, c113.z, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 458
                  mul r7.xyz, r1.y, c24
                  mad r7.xyz, r1.x, c23, r7
                  mad r1.xyw, r1.w, c25.xyzz, r7.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 2454
                  mov r0.y, c111.w
                else
                  if_eq r6.x, -c68.y

#line 458
                    mul r7.xyz, r2.x, c24
                    mad r7.xyz, r1.z, c23, r7
                    mad r1.xyw, r2.y, c25.xyzz, r7.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 2455
                    mov r0.y, c111.w
                  else
                    if_eq r6.x, -c68.z

#line 2118
                      add r0.w, r1.z, -c150.w
                      mul r2.z, r0.w, c89.w  // ::ypbpr<0>
                      add r4.yz, r2.xxyw, c102.w

#line 2074
                      mad r1.xw, r4.zyzy, c92.yyzz, r2.z  // ::r<0>, ::b<0>
                      mul r2.z, r1.x, c135.x
                      mad r0.w, r0.w, c89.w, -r2.z
                      mad r0.w, r1.w, -c135.z, r0.w
                      mul r1.y, r0.w, c98.x  // ::g<0>

#line 2456
                      mov r0.y, c111.w
                    else
                      if_eq r6.x, -c68.w

#line 1974
                        add r0.w, r1.z, -r2.x  // ::c<0>
                        add r1.x, r2.y, r0.w  // ::YCoCg_Lrgb<0>
                        add r1.y, r1.z, r2.x  // ::YCoCg_Lrgb<1>
                        add r1.w, -r2.y, r0.w  // ::YCoCg_Lrgb<2>

#line 2457
                        mov r0.y, c111.w
                      else
                        if_eq c0.x, -r4.x

#line 1990
                          mad r4.xy, r2.x, c128, r1.z
                          mad r0.w, r2.x, -c128.z, r1.z
                          mad r1.y, r2.y, c128.w, r0.w  // ::g<0>
                          mad r1.xw, r2.y, -c97.xyzy, r4.xyzy  // ::r<0>, ::b<0>

#line 2458
                          mov r0.y, c111.w
                        else

#line 2461
                          add r4.xyz, r6.x, c36

#line 2041
                          mad r7, r2.x, c94, r1.z
                          mad r7, r2.y, c95.xxyz, r7  // ::r<0>, ::g<0>, ::b<0>, ::r<0>

#line 2074
                          mad r6.xyw, r2.x, c96.xyzz, r1.z  // ::b<0>

#line 2042
                          mad r0.w, r2.y, c97.z, r6.x  // ::g<0>
                          mad r2.z, r2.y, c97.w, r6.y  // ::b<0>
                          mov_sat r3.w, r7.w
                          cmp r8.x, r7.w, r3.w, c102.z  // ::r<0>
                          mov_sat r3.w, r0.w
                          cmp r8.y, r0.w, r3.w, c102.z  // ::g<0>
                          mov_sat r0.w, r2.z
                          cmp r8.z, r2.z, r0.w, c102.z  // ::b<0>

#line 2461
                          cmp r0.w, -r4_abs.z, c111_abs.w, c111_abs.y

#line 2073
                          mad r6.x, r2.y, c95.w, r1.z  // ::r<0>
                          mad r2.z, r6.x, -c135.x, r1.z
                          mad r2.z, r6.w, -c135.z, r2.z
                          mul r6.y, r2.z, c98.x  // ::g<0>

#line 2461
                          cmp r6.xyw, -r4_abs.z, r6, r5.xzzy  // ::TLrgb<0,1,2>
                          cmp r6.xyw, -r4_abs.y, r8.xyzz, r6  // ::TLrgb<0,1,2>
                          cmp r0.w, -r4_abs.y, c111.w, r0.w
                          cmp r1.xyw, -r4_abs.x, r7.xyzz, r6  // ::TLrgb<0,1,2>
                          cmp r0.y, -r4_abs.x, c111.w, r0.w
                        endif
                      endif
                    endif
                  endif
                endif

#line 2168
                mad r4.xyz, r2.yxxw, c99, r1.z  // ::r<0>, ::b<0>

#line 2165
                mad r0.w, r2.y, c96.w, r4.y  // ::g<0>

#line 2174
                mov_sat r6.xy, r4.xzzw
                mov_sat r2.z, r0.w
                cmp r7.y, r0.w, r2.z, c102.z  // ::g<0>
                cmp r7.xz, r4, r6.xyyw, c102.z  // ::r<0>, ::b<0>

#line 2465
                mov r2.w, r1.z
                cmp r2.xyz, -r0_abs.x, r7, r2.wxyw  // ::TLrgb<0,1,2>
                cmp r5.xyz, -r0.y, r2.xzyw, r1.xwyw  // ::TLrgb<0,2,1>
              endif
            endif
          endif
        endif

#line 2287
        rcp r0.x, c11.x
        log r0.y, r5.x
        mul r0.w, r0.y, r0.x
        exp r3.x, r0.w  // ::V<0>

#line 2292
        if_eq c10.x, r0.z

#line 2352
        else

#line 2292
          add r0.w, -r4.w, c10.x

#line 2300
          add r1.x, -r5.x, c111.w
          rsq r1.y, r5.x
          rcp r1.y, r1.y
          mul r1.y, r1.y, -c151.y  // ::Transfer<0>
          cmp r1.x, r1.x, -c111_abs.w, -c111_abs.y
          cmp r1.x, r5.x, r1.x, c102.z
          add r1.z, r5.x, c104.y
          log r1.z, r1.z
          mad r1.z, r1.z, c104.z, c104.w  // ::Transfer<0>
          cmp r1.x, r1.x, r1.z, r1.y  // ::Transfer<0>
          cmp r3.x, -r0_abs.w, r1.x, r3.x  // ::Transfer<0>

#line 2307
          if_eq c10.x, r4.w

#line 2352
          else

#line 2307
            add r0.w, r6.z, c10.x

#line 2310
            add r1.x, -r5.x, c105.x
            mul r1.y, r5.x, c99.w
            cmp r1.x, r1.x, r1.y, c111.w  // ::V<0>
            cmp r3.x, -r0_abs.w, r1.x, r3.x  // ::Transfer<0>

#line 2315
            if_eq c10.x, -r6.z

#line 2352
            else

#line 2315
              mov r1.x, c10.x  // ::Companding<0>
              add r0.w, r1.x, c56.x

#line 2330
              if_eq r1.x, -c56.x

#line 2324
                mul r1.y, r0.y, c116.x
                exp r1.y, r1.y
                add r1.z, r1.y, -c64.z
                max r2.x, r1.z, c102.z  // ::a<0>
                mad r1.y, r1.y, -c64.y, c64.x  // ::b<0>
                rcp r1.y, r1.y
                mul r1.y, r1.y, r2.x
                pow r2.x, r1.y, c91.w
                mul r1.y, r2.x, c116.y  // ::Transfer<0>
                cmp r3.x, -r0_abs.w, r1.y, r3.x  // ::Transfer<0>

#line 2352
              else

#line 2346
                add r1.xyz, r1.x, c148

#line 2341
                add r2.xy, r5.x, c116.zwzw

#line 2349
                mul r2.zw, r5.x, c127.xyxy
                mul r0.yw, r0.y, c127.xzzw

#line 2333
                exp r0.y, r0.y

#line 2341
                mad r4.xy, r0.y, c101, c101.zwzw
                cmp r2.xy, r2, r4, r2.z  // ::V<0,0>

#line 2349
                add r0.y, -r5.x, c100.x
                exp r0.w, r0.w
                mad r0.w, r0.w, c100.y, c100.z
                cmp r0.y, r0.y, r2.w, r0.w  // ::V<0>

#line 2352
                cmp r0.y, -r1_abs.z, r0.y, r5.x  // ::Transfer<0>
                cmp r0.y, -r1_abs.y, r2.y, r0.y  // ::Transfer<0>
                cmp r3.x, -r1_abs.x, r2.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2287
        log r0.y, r5.z
        mul r0.w, r0.y, r0.x
        exp r3.y, r0.w  // ::V<0>

#line 2292
        if_eq c10.x, r0.z

#line 2352
        else

#line 2292
          add r0.w, -r4.w, c10.x

#line 2300
          add r1.x, -r5.z, c111.w
          rsq r1.y, r5.z
          rcp r1.y, r1.y
          mul r1.y, r1.y, -c151.y  // ::Transfer<0>
          cmp r1.x, r1.x, -c111_abs.w, -c111_abs.y
          cmp r1.x, r5.z, r1.x, c102.z
          add r1.z, r5.z, c104.y
          log r1.z, r1.z
          mad r1.z, r1.z, c104.z, c104.w  // ::Transfer<0>
          cmp r1.x, r1.x, r1.z, r1.y  // ::Transfer<0>
          cmp r3.y, -r0_abs.w, r1.x, r3.y  // ::Transfer<0>

#line 2307
          if_eq c10.x, r4.w

#line 2352
          else

#line 2307
            add r0.w, r6.z, c10.x

#line 2310
            add r1.x, -r5.z, c105.x
            mul r1.y, r5.z, c99.w
            cmp r1.x, r1.x, r1.y, c111.w  // ::V<0>
            cmp r3.y, -r0_abs.w, r1.x, r3.y  // ::Transfer<0>

#line 2315
            if_eq c10.x, -r6.z

#line 2352
            else

#line 2315
              mov r1.x, c10.x  // ::Companding<0>
              add r0.w, r1.x, c56.x

#line 2330
              if_eq r1.x, -c56.x

#line 2324
                mul r1.y, r0.y, c116.x
                exp r1.y, r1.y
                add r1.z, r1.y, -c64.z
                max r2.x, r1.z, c102.z  // ::a<0>
                mad r1.y, r1.y, -c64.y, c64.x  // ::b<0>
                rcp r1.y, r1.y
                mul r1.y, r1.y, r2.x
                pow r2.x, r1.y, c91.w
                mul r1.y, r2.x, c116.y  // ::Transfer<0>
                cmp r3.y, -r0_abs.w, r1.y, r3.y  // ::Transfer<0>

#line 2352
              else

#line 2346
                add r1.xyz, r1.x, c148

#line 2341
                add r2.xy, r5.z, c116.zwzw

#line 2349
                mul r2.zw, r5.z, c127.xyxy
                mul r0.yw, r0.y, c127.xzzw

#line 2333
                exp r0.y, r0.y

#line 2341
                mad r4.xy, r0.y, c101, c101.zwzw
                cmp r2.xy, r2, r4, r2.z  // ::V<0,0>

#line 2349
                add r0.y, -r5.z, c100.x
                exp r0.w, r0.w
                mad r0.w, r0.w, c100.y, c100.z
                cmp r0.y, r0.y, r2.w, r0.w  // ::V<0>

#line 2352
                cmp r0.y, -r1_abs.z, r0.y, r5.z  // ::Transfer<0>
                cmp r0.y, -r1_abs.y, r2.y, r0.y  // ::Transfer<0>
                cmp r3.y, -r1_abs.x, r2.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2287
        log r0.y, r5.y
        mul r0.x, r0.y, r0.x
        exp r3.z, r0.x  // ::V<0>

#line 2292
        if_eq c10.x, r0.z

#line 2352
        else

#line 2292
          add r0.x, -r4.w, c10.x

#line 2300
          add r0.z, -r5.y, c111.w
          rsq r0.w, r5.y
          rcp r0.w, r0.w
          mul r0.w, r0.w, -c151.y  // ::Transfer<0>
          cmp r0.z, r0.z, -c111_abs.w, -c111_abs.y
          cmp r0.z, r5.y, r0.z, c102.z
          add r1.x, r5.y, c104.y
          log r1.x, r1.x
          mad r1.x, r1.x, c104.z, c104.w  // ::Transfer<0>
          cmp r0.z, r0.z, r1.x, r0.w  // ::Transfer<0>
          cmp r3.z, -r0_abs.x, r0.z, r3.z  // ::Transfer<0>

#line 2307
          if_eq c10.x, r4.w

#line 2352
          else

#line 2307
            add r0.x, r6.z, c10.x

#line 2310
            add r0.z, -r5.y, c105.x
            mul r0.w, r5.y, c99.w
            cmp r0.z, r0.z, r0.w, c111.w  // ::V<0>
            cmp r3.z, -r0_abs.x, r0.z, r3.z  // ::Transfer<0>

#line 2315
            if_eq c10.x, -r6.z

#line 2352
            else

#line 2315
              mov r0.x, c10.x  // ::Companding<0>
              add r0.z, r0.x, c56.x

#line 2330
              if_eq r0.x, -c56.x

#line 2324
                mul r0.w, r0.y, c116.x
                exp r0.w, r0.w
                add r1.x, r0.w, -c64.z
                max r2.x, r1.x, c102.z  // ::a<0>
                mad r0.w, r0.w, -c64.y, c64.x  // ::b<0>
                rcp r0.w, r0.w
                mul r0.w, r0.w, r2.x
                pow r1.x, r0.w, c91.w
                mul r0.w, r1.x, c116.y  // ::Transfer<0>
                cmp r3.z, -r0_abs.z, r0.w, r3.z  // ::Transfer<0>

#line 2352
              else

#line 2346
                add r0.xzw, r0.x, c148.xyyz

#line 2341
                add r1.xy, r5.y, c116.zwzw

#line 2349
                mul r1.zw, r5.y, c127.xyxy
                mul r2.xy, r0.y, c127.zwzw

#line 2333
                exp r0.y, r2.x

#line 2341
                mad r2.xz, r0.y, c101.xyyw, c101.zyww
                cmp r1.xy, r1, r2.xzzw, r1.z  // ::V<0,0>

#line 2349
                add r0.y, -r5.y, c100.x
                exp r1.z, r2.y
                mad r1.z, r1.z, c100.y, c100.z
                cmp r0.y, r0.y, r1.w, r1.z  // ::V<0>

#line 2352
                cmp r0.y, -r0_abs.w, r0.y, r5.y  // ::Transfer<0>
                cmp r0.y, -r0_abs.z, r1.y, r0.y  // ::Transfer<0>
                cmp r3.z, -r0_abs.x, r1.x, r0.y  // ::Transfer<0>
              endif
            endif
          endif
        endif

#line 2678
      endif

#line 2681
      mov oC0.xyz, r3  // ::main<0,1,2>
      mov oC0.w, c111.w  // ::main<3>

#line 2665
    endif

// approximately 5354 instruction slots used (1 texture, 5353 arithmetic)
