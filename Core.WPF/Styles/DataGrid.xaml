<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Imagin.Core.Controls"
    xmlns:Data="clr-namespace:Imagin.Core.Data"
    xmlns:Linq="clr-namespace:Imagin.Core.Linq"
    xmlns:Markup="clr-namespace:Imagin.Core.Markup">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="{local:StyleKey Key=ComboBox}"/>
        <ResourceDictionary Source="{local:StyleKey Key=FrameworkElement}"/>
        <ResourceDictionary Source="{local:StyleKey Key=ItemsControl}"/>
        <ResourceDictionary Source="{local:StyleKey Key=ToggleButton}"/>
    </ResourceDictionary.MergedDictionaries>
    <!-- /// -->

    <ControlTemplate x:Key="{x:Static Linq:XDataGridRow.TemplateKey}" TargetType="{x:Type DataGridRow}">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <Grid>
                <Control x:Name="Selection" Style="{StaticResource {x:Static Linq:XElement.FocusVisualStyleKey}}"/>
                <SelectiveScrollingGrid Margin="1">
                    <SelectiveScrollingGrid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </SelectiveScrollingGrid.ColumnDefinitions>
                    <SelectiveScrollingGrid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </SelectiveScrollingGrid.RowDefinitions>
                    <DataGridCellsPresenter Grid.Column="1"
                        ItemsPanel="{TemplateBinding ItemsPanel}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <DataGridDetailsPresenter 
                        Grid.Column="1"
                        Grid.Row="1"
                        SelectiveScrollingGrid.SelectiveScrollingOrientation="{Data:Ancestor AreRowDetailsFrozen, {x:Type DataGrid}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}}"
                        Visibility="{TemplateBinding DetailsVisibility}" />
                    <DataGridRowHeader Grid.RowSpan="2"
                        SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                        Visibility="{Data:Ancestor HeadersVisibility, {x:Type DataGrid}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}}" />
                </SelectiveScrollingGrid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Linq:XDataGridRow.SelectionVisibility" Value="Collapsed">
                <Setter TargetName="Selection" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Linq:XDataGridRow.SelectionVisibility" Value="Visible">
                <Setter TargetName="Selection" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static Linq:XDataGridRow.ValidationErrorTemplateKey}">
        <TextBlock Text="!" 
            Foreground="{local:ThemeKey Red}"
            Margin="2,0,0,0"
            VerticalAlignment="Center" />
    </ControlTemplate>

    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="Button">
        <Setter Property="Background" Value="{local:ThemeKey DataGridColumnHeaderBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="{Data:Options FontFamily}"/>
        <Setter Property="Foreground" Value="{local:ThemeKey DataGridSelectAllForeground}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="0,0,4,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="PART_Border"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{local:ThemeKey DataGridColumnHeaderBorder}" 
                        BorderThickness="0,0,1,1">
                        <local:ImageElement x:Name="ImageElement"
                            HorizontalAlignment="Right"
                            Margin="{TemplateBinding Padding}"
                            Source="{Markup:SmallImage RightTriangle.png}"
                            Foreground="{TemplateBinding Foreground}"
                            VerticalAlignment="Bottom"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{local:ThemeKey DataGridColumnHeaderMouseOverBorder}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{local:ThemeKey DataGridColumnHeaderPressedBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{local:ThemeKey DataGridColumnHeaderMouseOverBackground}" />
                <Setter Property="Foreground" Value="{local:ThemeKey DataGridSelectAllMouseOverForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{local:ThemeKey DataGridColumnHeaderPressedBackground}" />
                <Setter Property="Foreground" Value="{local:ThemeKey DataGridSelectAllPressedForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- /// -->

    <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{Data:Options FontFamily}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Padding" Value="5,2.5"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{Data:Options FontFamily}"/>
        <Setter Property="Foreground" Value="{local:ThemeKey DataGridRowForeground}" />
        <Setter Property="Linq:XElement.FadeIn" Value="True" />
        <Setter Property="local:ImageElement.Foreground" Value="{local:ThemeKey DataGridRowForeground}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource {x:Static Linq:XDataGridRow.TemplateKey}}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate" Value="{StaticResource {x:Static Linq:XDataGridRow.ValidationErrorTemplateKey}}"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{local:ThemeKey DataGridRowMouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{local:ThemeKey DataGridRowMouseOverBorder}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{local:ThemeKey DataGridRowSelectedBackground}" />
                <Setter Property="BorderBrush" Value="{local:ThemeKey DataGridRowSelectedBorder}" />
                <Setter Property="Foreground" Value="{local:ThemeKey DataGridRowSelectedForeground}" />
                <Setter Property="local:ImageElement.Foreground" Value="{local:ThemeKey DataGridRowSelectedForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{local:ThemeKey DataGridRowSelectedActiveBackground}" />
                <Setter Property="BorderBrush" Value="{local:ThemeKey DataGridRowSelectedActiveBorder}" />
                <Setter Property="Foreground" Value="{local:ThemeKey DataGridRowSelectedActiveForeground}" />
                <Setter Property="local:ImageElement.Foreground" Value="{local:ThemeKey DataGridRowSelectedActiveForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemsControl.AlternationIndex" Value="0" />
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{local:ThemeKey DataGridRowEvenBackground}"/>
                <Setter Property="BorderBrush" Value="{local:ThemeKey DataGridRowEvenBorder}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemsControl.AlternationIndex" Value="1" />
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{local:ThemeKey DataGridRowOddBackground}"/>
                <Setter Property="BorderBrush" Value="{local:ThemeKey DataGridRowOddBorder}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!-- /// -->

    <Style x:Key="Style.DataGridColumnHeader.Thumb" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{local:ThemeKey DataGridColumnHeaderThumb}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="Transparent">
                        <Rectangle 
                            Fill="{TemplateBinding Background}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Width="1"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style.DataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="BorderBrush" Value="{local:ThemeKey DataGridColumnHeaderBorder}" />
        <Setter Property="BorderThickness" Value="1,0,1,1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="{Data:Options FontFamily}"/>
        <Setter Property="Foreground" Value="{local:ThemeKey DataGridColumnHeaderForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="-1,0,0,0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="28" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid Linq:XGrid.Columns="*,Auto">
                        <Border
                            Grid.ColumnSpan="2" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" />
                        <ContentPresenter
                            Margin="6,3" 
                            VerticalAlignment="Center"/>
                        <Path
                            Grid.Column="1" 
                            x:Name="SortArrow" 
                            Data="M0,0 L1,0 0.5,1 z" 
                            Fill="{TemplateBinding Foreground}"
                            Height="6" 
                            Margin="0,0,8,0"  
                            RenderTransformOrigin="0.5,0.4"
                            Stretch="Fill" 
                            VerticalAlignment="Center" 
                            Visibility="Collapsed" 
                            Width="8"/>
                        <Thumb 
                            Grid.ColumnSpan="2" 
                            x:Name="PART_RightHeaderGripper" 
                            Cursor="SizeWE"
                            Margin="-8,0,-9,0"
                            HorizontalAlignment="Right"
                            Style="{StaticResource Style.DataGridColumnHeader.Thumb}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="SortDirection" Value="{x:Null}">
                <Setter Property="Background" Value="{local:ThemeKey DataGridColumnHeaderBackground}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{local:ThemeKey DataGridColumnHeaderMouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{local:ThemeKey DataGridColumnHeaderMouseOverBorder}" />
                <Setter Property="Foreground" Value="{local:ThemeKey DataGridColumnHeaderMouseOverForeground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{local:ThemeKey DataGridColumnHeaderPressedBackground}" />
                <Setter Property="BorderBrush" Value="{local:ThemeKey DataGridColumnHeaderPressedBorder}" />
                <Setter Property="Foreground" Value="{local:ThemeKey DataGridColumnHeaderPressedForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- /// -->

    <Style x:Key="{x:Type DataGridRowHeader}" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{Data:Options FontFamily}"/>
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border 
                            Background="{TemplateBinding Background}"                                     
                            BorderBrush="{Data:Ancestor HorizontalGridLinesBrush, {x:Type DataGrid}}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding ="{TemplateBinding Padding}">
                            <ContentPresenter 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#11000000" />
                        </Trigger>
                        <Trigger Property="IsRowSelected" Value="True">
                            <Setter Property="Background" Value="#55FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type ItemsControl}}">
        <Setter Property="AlternationCount" Value="2" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="Background" Value="{local:ThemeKey DataGridBackground}" />
        <Setter Property="BorderBrush" Value="{local:ThemeKey DataGridBorder}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource Style.DataGridColumnHeader}"/>
        <Setter Property="EnableColumnVirtualization" Value="True" />
        <Setter Property="EnableRowVirtualization" Value="True" />
        <Setter Property="FontFamily" Value="{Data:Options FontFamily}"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="HeadersVisibility" Value="All"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{local:ThemeKey DataGridGridLinesHorizontal}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="Cycle"/>
        <Setter Property="Linq:XItemsControl.CanDragSelect" Value="False"/>
        <Setter Property="Linq:XItemsControl.EmptyTemplateVisibility" Value="Visible"/>
        <Setter Property="Linq:XItemsControl.EnableColumnMenu" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="SelectionMode" Value="Extended"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="Selector.IsSynchronizedWithCurrentItem" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Grid>
                        <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                                <ScrollViewer.Style>
                                    <Style TargetType="{x:Type ScrollViewer}">
                                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                    <Grid Linq:XGrid.Columns="Auto,*,Auto"
                                                        Linq:XGrid.Rows="Auto,*,Auto">
                                                        <Button Focusable="False"
                                                            Command="{x:Static DataGrid.SelectAllCommand}"
                                                            Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, 
                                                            TypeInTargetAssembly={x:Type DataGrid}}}"
                                                            Visibility="{Data:Ancestor HeadersVisibility, {x:Type DataGrid}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}}"
                                                            Width="{Data:Ancestor CellsPanelHorizontalOffset, {x:Type DataGrid}}" />

                                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                            Grid.Column="1"
                                                            Grid.ColumnSpan="2"
                                                            Visibility="Visible"/>
                                                        <!-- Visibility="{Data:Ancestor HeadersVisibility, {x:Type DataGrid}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" /> -->

                                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                            Grid.ColumnSpan="3"
                                                            Grid.Row="1"
                                                            CanContentScroll="{TemplateBinding CanContentScroll}" />

                                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                             Grid.Column="2"
                                                             Grid.Row="1"
                                                             Orientation="Vertical"
                                                             ViewportSize="{TemplateBinding ViewportHeight}"
                                                             Maximum="{TemplateBinding ScrollableHeight}"
                                                             Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                             Value="{Data:TemplatedParent VerticalOffset}"/>

                                                        <Grid Grid.Column="1" Grid.Row="2">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="{Data:Ancestor NonFrozenColumnsViewportHorizontalOffset, {x:Type DataGrid}}" />
                                                                <ColumnDefinition Width="*" />
                                                            </Grid.ColumnDefinitions>
                                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                                Grid.Column="1"
                                                                Orientation="Horizontal"
                                                                ViewportSize="{TemplateBinding ViewportWidth}"
                                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                                Value="{Data:TemplatedParent HorizontalOffset}"/>
                                                        </Grid>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ScrollViewer.Style>
                                <Grid>
                                    <local:EmptyPresenter/>
                                    <local:SelectionPresenter/>
                                    <ItemsPresenter
                                        Margin="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalGridLinesBrush" Value="{local:ThemeKey DataGridGridLinesVertical}"/>
        <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True"/>
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Standard" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Style.Triggers>
            <Trigger Property="AutoGenerateColumns" Value="True">
                <Setter Property="Linq:XDataGrid.ColumnVisibility" Value="True"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger> 
        </Style.Triggers>
    </Style>

    <!-- /// -->

    <Style x:Key="{x:Type DataGridCheckBoxColumn}" TargetType="{x:Type DataGridCheckBoxColumn}">
        <Setter Property="ElementStyle" Value="{StaticResource {x:Type CheckBox}}"/>
    </Style>

    <Style x:Key="{x:Type DataGridComboBoxColumn}" TargetType="{x:Type DataGridComboBoxColumn}">
        <Setter Property="ElementStyle" Value="{StaticResource {x:Type ComboBox}}"/>
    </Style>
</ResourceDictionary>