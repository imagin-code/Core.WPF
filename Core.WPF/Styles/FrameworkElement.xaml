<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Imagin.Core.Controls"
    xmlns:Data="clr-namespace:Imagin.Core.Data"
    xmlns:Linq="clr-namespace:Imagin.Core.Linq">
    <Style x:Key="{x:Static Linq:XElement.FocusVisualStyleKey}" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Stroke="#CC000000"
                        StrokeThickness="1"
                        StrokeDashArray="1 2"
                        SnapsToDevicePixels="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- /// -->

    <Style x:Key="{x:Type FrameworkElement}" TargetType="{x:Type FrameworkElement}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource {x:Static Linq:XElement.FocusVisualStyleKey}}"/>
    </Style>

    <!-- /// -->

    <Style x:Key="{x:Type local:ChildElement}" TargetType="{x:Type local:ChildElement}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <Style x:Key="{x:Type local:FillElement}" TargetType="{x:Type local:FillElement}" BasedOn="{StaticResource {x:Type local:ChildElement}}"/>

    <Style x:Key="{x:Type local:RotateElement}" TargetType="{x:Type local:RotateElement}" BasedOn="{StaticResource {x:Type local:ChildElement}}">
        <Style.Triggers>
            <Trigger Property="Rotate" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Duration="0:0:0.4"
                                From="0"
                                Storyboard.TargetProperty="RotationScale"
                                To="1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Duration="0:0:0.2"
                                From="1"
                                Storyboard.TargetProperty="RotationScale"
                                To="0"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- /// -->

    <Style x:Key="{x:Type local:ImageElement}" TargetType="{x:Type local:ImageElement}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
        <Setter Property="SourceSize" Value="16,16" />
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="{x:Type local:LineElement}" TargetType="{x:Type local:LineElement}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="Stroke" Value="{local:ThemeKey LineStroke}"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="{Data:Self StrokeThickness}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="{Data:Self StrokeThickness}"/>
                <Setter Property="Height" Value="Auto"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- /// -->

    <Style x:Key="{x:Type local:XOrElement}" TargetType="{x:Type local:XOrElement}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <!-- /// -->

    <Style x:Key="{x:Type local:XOrRegion}" TargetType="{x:Type local:XOrRegion}" BasedOn="{StaticResource {x:Type local:XOrElement}}"/>

    <Style x:Key="{x:Type local:XOrEllipse}" TargetType="{x:Type local:XOrEllipse}" BasedOn="{StaticResource {x:Type local:XOrRegion}}"/>

    <Style x:Key="{x:Type local:XOrRectangle}" TargetType="{x:Type local:XOrRectangle}" BasedOn="{StaticResource {x:Type local:XOrRegion}}"/>

    <!-- /// -->

    <Style x:Key="{x:Type local:XOrLine}" TargetType="{x:Type local:XOrLine}" BasedOn="{StaticResource {x:Type local:XOrElement}}"/>

    <Style x:Key="{x:Type local:XOrPolygon}" TargetType="{x:Type local:XOrPolygon}" BasedOn="{StaticResource {x:Type local:XOrElement}}"/>
</ResourceDictionary>