<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:g="urn:gong-wpf-dragdrop"
    xmlns:l="clr-namespace:Imagin.Core.Local.Extensions"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Imagin.Core.Controls"
    xmlns:Converters="clr-namespace:Imagin.Core.Converters"
    xmlns:Data="clr-namespace:Imagin.Core.Data"
    xmlns:Linq="clr-namespace:Imagin.Core.Linq"
    xmlns:Markup="clr-namespace:Imagin.Core.Markup"
    xmlns:Storage="clr-namespace:Imagin.Core.Storage">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="{local:StyleKey Key=Explorer}"/>
        <ResourceDictionary Source="{local:StyleKey Key=TreeView}"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="{x:Type local:Navigator}" TargetType="{x:Type local:Navigator}">
        <Setter Property="Linq:XExplorer.CopyWarningTitle" Value="{l:Loc Copy}"/>
        <Setter Property="Linq:XExplorer.CopyWarningMessage" Value="{l:Loc Continue, Suffix=?}"/>
        <Setter Property="Linq:XExplorer.InvalidPathAlertMessage" Value="{l:Loc FolderDoesNotExist}"/>
        <Setter Property="Linq:XExplorer.InvalidPathAlertTitle" Value="{l:Loc FolderNotFound}"/>
        <Setter Property="Linq:XExplorer.MoveWarningTitle" Value="{l:Loc Move}"/>
        <Setter Property="Linq:XExplorer.MoveWarningMessage" Value="{l:Loc Continue, Suffix=?}"/>
        <Setter Property="Linq:XExplorer.WarnBeforeDrop" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:Navigator">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding Border.CornerRadius}">
                        <Border.Resources>
                            <Data:Reference x:Key="Navigator" Data="{Data:TemplatedParent}"/>
                        </Border.Resources>
                        <TreeView Linq:XElement.Name="{x:Static local:Navigator.TreeViewKey}"
                            AllowDrop="True"
                            Background="Transparent"
                            BorderThickness="0"
                            g:DragDrop.DropHandler="{Data:TemplatedParent DropHandler}"
                            g:DragDrop.IsDropTarget="False"
                            ItemsSource="{TemplateBinding Root}"
                            Linq:XItemsControl.CanDragSelect="{TemplateBinding SelectionMode, Converter={x:Static Converters:ValueEqualsParameterConverter.Default}, ConverterParameter={x:Static local:SelectionMode.Multiple}}"
                            Linq:XItemsControl.SortDirection="{TemplateBinding SortDirection}"
                            Linq:XItemsControl.SortName="{TemplateBinding SortName, Converter={x:Static Converters:ToStringConverter.Default}}"
                            Linq:XTreeView.Mode="{TemplateBinding Mode}"
                            Linq:XTreeView.SelectionMode="{TemplateBinding SelectionMode}"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <TreeView.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type Storage:Favorite}">
                                    <Grid Linq:XGrid.Columns="Auto,*">
                                        <local:Thumbnail
                                            Grid.Column="0" 
                                            Margin="0,0,10,0"
                                            Height="20"
                                            Path="{Binding Path}"
                                            VerticalAlignment="Center"
                                            Width="20"/>
                                        <TextBlock
                                            Grid.Column="1" 
                                            x:Name="PART_Text"  
                                            Margin="0,0,10,0" 
                                            Text="{Binding Path, Converter={x:Static Converters:FileNameConverter.Default}}" 
                                            VerticalAlignment="Center"/>
                                    </Grid>
                                </HierarchicalDataTemplate>
                                <!-- ... -->
                                <HierarchicalDataTemplate DataType="{x:Type local:FolderGroup}" ItemsSource="{Binding Items}">
                                    <Grid Linq:XGrid.Columns="Auto,*">
                                        <local:ImageElement
                                            Grid.Column="0" 
                                            Margin="0,0,10,0"
                                            Source="{Markup:InternalImage Folder.png}"
                                            VerticalAlignment="Center"/>
                                        <TextBlock
                                            Grid.Column="1" 
                                            x:Name="PART_Text"  
                                            Margin="0,0,10,0" 
                                            Text="{Binding Path, Converter={x:Static Converters:FileNameConverter.Default}}" 
                                            VerticalAlignment="Center"/>
                                    </Grid>
                                </HierarchicalDataTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type local:FavoriteGroup}" ItemsSource="{Binding Favorites}">
                                    <Grid Linq:XGrid.Columns="Auto,*">
                                        <local:ImageElement
                                            Grid.Column="0" 
                                            Margin="0,0,10,0"
                                            Source="{Markup:InternalImage Star.png}"
                                            VerticalAlignment="Center"/>
                                        <TextBlock
                                            Grid.Column="1" 
                                            x:Name="PART_Text"  
                                            Margin="0,0,10,0" 
                                            Text="{l:Loc Favorites}" 
                                            VerticalAlignment="Center"/>
                                    </Grid>
                                </HierarchicalDataTemplate>
                                <!-- ... -->
                                <HierarchicalDataTemplate DataType="{x:Type Storage:Container}" ItemsSource="{Binding Items}">
                                    <Grid x:Name="PART_Grid"
                                        Linq:XGrid.Columns="Auto,Auto,*,Auto">
                                        <CheckBox 
                                            IsChecked="{Data:Ancestor IsSelected, {x:Type TreeViewItem}}"
                                            Margin="0,0,5,0"
                                            Visibility="{Binding Data.ViewCheckBoxes, Converter={x:Static Converters:BooleanToVisibilityConverter.Default}, Source={StaticResource Navigator}}"/>
                                        <local:Thumbnail
                                            Grid.Column="1" 
                                            x:Name="PART_Thumbnail"
                                            Path="{Binding Path, Mode=OneWay}"
                                            Margin="0,0,10,0"
                                            Width="20" 
                                            Height="20"
                                            VerticalAlignment="Center"/>
                                        <TextBlock
                                            Grid.Column="2" 
                                            x:Name="PART_Text"  
                                            Margin="0,0,10,0" 
                                            Text="{Binding Path, Converter={x:Static Converters:FileNameConverter.Default}}" 
                                            VerticalAlignment="Center"/>
                                        <local:ProgressCircle 
                                            Grid.Column="3" 
                                            Width="16" 
                                            Height="16"
                                            Visibility="{Binding Items.IsRefreshing, Converter={x:Static Converters:BooleanToVisibilityConverter.Default}}"/>
                                    </Grid>
                                    <HierarchicalDataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsHidden}" Value="True">
                                            <Setter TargetName="PART_Grid" Property="Opacity" Value="{x:Static local:Explorer.HiddenOpacity}"/>
                                        </DataTrigger> 
                                    </HierarchicalDataTemplate.Triggers>
                                </HierarchicalDataTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type Storage:File}">
                                    <Grid x:Name="PART_Grid"
                                        Linq:XGrid.Columns="Auto,Auto,*">
                                        <CheckBox 
                                            IsChecked="{Data:Ancestor IsSelected, {x:Type TreeViewItem}}"
                                            Margin="0,0,5,0"
                                            Visibility="{Binding Data.ViewCheckBoxes, Converter={x:Static Converters:BooleanToVisibilityConverter.Default}, Source={StaticResource Navigator}}"/>
                                        <local:Thumbnail
                                            Grid.Column="1" 
                                            x:Name="PART_Thumbnail"
                                            Path="{Binding Path, Mode=OneWay}"
                                            Margin="0,0,10,0"
                                            Width="20" 
                                            Height="20"
                                            VerticalAlignment="Center"/>
                                        <TextBlock 
                                            Grid.Column="2" 
                                            x:Name="PART_Text"  
                                            VerticalAlignment="Center"/>
                                    </Grid>
                                    <HierarchicalDataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Data.ViewFileExtensions, Source={StaticResource Navigator}}" Value="False">
                                            <Setter TargetName="PART_Text" Property="Text" Value="{Binding Path, Converter={x:Static Converters:FileNameConverter.Default}, ConverterParameter=0}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Data.ViewFileExtensions, Source={StaticResource Navigator}}" Value="True">
                                            <Setter TargetName="PART_Text" Property="Text" Value="{Binding Path, Converter={x:Static Converters:FileNameConverter.Default}, ConverterParameter=1}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsHidden}" Value="True">
                                            <Setter TargetName="PART_Grid" Property="Opacity" Value="{x:Static local:Explorer.HiddenOpacity}"/>
                                        </DataTrigger>
                                    </HierarchicalDataTemplate.Triggers>
                                </HierarchicalDataTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type Storage:Shortcut}" ItemsSource="{Binding Items}">
                                    <Grid x:Name="PART_Grid"
                                        Linq:XGrid.Columns="Auto,Auto,*">
                                        <CheckBox 
                                            IsChecked="{Data:Ancestor IsSelected, {x:Type TreeViewItem}}"
                                            Margin="0,0,5,0"
                                            Visibility="{Binding Data.ViewCheckBoxes, Converter={x:Static Converters:BooleanToVisibilityConverter.Default}, Source={StaticResource Navigator}}"/>
                                        <local:Thumbnail
                                            Grid.Column="1" 
                                            x:Name="PART_Thumbnail"
                                            Path="{Binding Path, Mode=OneWay}"
                                            Margin="0,0,10,0"
                                            Width="20" 
                                            Height="20"
                                            VerticalAlignment="Center"/>
                                        <TextBlock 
                                            Grid.Column="2" 
                                            x:Name="PART_Text"  
                                            Text="{Binding Path, Converter={x:Static Converters:FileNameConverter.Default}, ConverterParameter=0}"
                                            VerticalAlignment="Center"/>
                                    </Grid>
                                    <HierarchicalDataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsHidden}" Value="True">
                                            <Setter TargetName="PART_Grid" Property="Opacity" Value="{x:Static local:Explorer.HiddenOpacity}"/>
                                        </DataTrigger>
                                    </HierarchicalDataTemplate.Triggers>
                                </HierarchicalDataTemplate>
                            </TreeView.Resources>
                            <Linq:XTreeView.Columns>
                                <local:TreeViewColumnCollection>
                                    <local:TreeViewExpanderColumn/>
                                    <local:TreeViewCheckBoxColumn
                                        Header="{x:Null}" 
                                        Member="IsSelected"
                                        Mode="TwoWay"
                                        SortName="IsSelected"/>
                                    <local:TreeViewThumbnailColumn
                                        Header="{x:Null}" 
                                        Member="Path"
                                        SortName="Path">
                                    </local:TreeViewThumbnailColumn>
                                    <local:TreeViewComboBoxColumn
                                        DataType="{x:Type Storage:ItemType}"
                                        Header="{l:Loc Type}" 
                                        IsReadOnly="True"
                                        Member="Type"
                                        SortName="Type"/>
                                    <local:TreeViewTextColumn 
                                        Converter="{x:Static Converters:FileNameConverter.Default}"
                                        Header="{l:Loc Name}" 
                                        Member="Path"
                                        SortName="Path"/>
                                    <local:TreeViewTextColumn 
                                        Converter="{x:Static Converters:FileSizeConverter.Default}"
                                        Header="{l:Loc Size}"
                                        Member="Size"
                                        SortName="Size"/>
                                    <local:TreeViewTextColumn 
                                        Converter="{x:Static Converters:RelativeTimeConverter.Default}"
                                        Header="{l:Loc Accessed}"
                                        Member="Accessed"
                                        SortName="Accessed"/>
                                    <local:TreeViewTextColumn 
                                        Converter="{x:Static Converters:RelativeTimeConverter.Default}"
                                        Header="{l:Loc Created}"
                                        Member="Created"
                                        SortName="Created"/>
                                    <local:TreeViewTextColumn 
                                        Converter="{x:Static Converters:RelativeTimeConverter.Default}"
                                        Header="{l:Loc Modified}"
                                        Member="Modified"
                                        SortName="Modified"/>
                                    <local:TreeViewCheckBoxColumn
                                        Header="{l:Loc Hidden}" 
                                        Member="IsHidden"
                                        Mode="TwoWay"
                                        SortName="IsHidden"/>
                                    <local:TreeViewCheckBoxColumn
                                        Header="{l:Loc ReadOnly}" 
                                        Member="IsReadOnly"
                                        Mode="TwoWay"
                                        SortName="IsReadOnly"/>
                                </local:TreeViewColumnCollection>
                            </Linq:XTreeView.Columns>
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                    <!--<EventSetter Event="MouseDoubleClick" Handler="OnMouseDoubleClick"/>-->

                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="Linq:XElement.FadeIn" Value="True"/>
                                    <Setter Property="Linq:XElement.FadeOut" Value="True"/>
                                    <Setter Property="Linq:XTreeViewItem.SelectedCommand" Value="{Binding Data.SelectCommand, Source={StaticResource Navigator}}"/>
                                    <Setter Property="Linq:XTreeViewItem.SelectedCommandParameter" Value="{Binding}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Data:IsBinding local:NavigatorGroup}" Value="True">
                                            <Setter Property="IsExpanded" Value="True" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Data:IsBinding Storage:Container}" Value="True">
                                            <Setter Property="Linq:XTreeViewItem.ExpandedCommand" Value="{Binding Items.RefreshAsyncCommand}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Data:IsBinding Storage:Item}" Value="True">
                                            <Setter Property="AllowDrop" Value="True"/>
                                            <Setter Property="g:DragDrop.DropHandler" Value="{Binding Data.DropHandler, Source={StaticResource Navigator}}"/>
                                            <Setter Property="g:DragDrop.IsDragSource" Value="True"/>
                                            <Setter Property="g:DragDrop.IsDropTarget" Value="True"/>
                                            <Setter Property="g:DragDrop.UseDefaultDragAdorner" Value="True"/>
                                            <Setter Property="Linq:XElement.ShellContextMenu" Value="{Binding Path}"/>
                                            <Setter Property="Linq:XElement.ToolTipTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource {x:Static Linq:XExplorer.ToolTipTemplateKey}}"/>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="ToolTip" Value="{Binding Path}"/>
                                            <Setter Property="Visibility">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{x:Static local:ItemVisibilityConverter.Default}">
                                                        <Binding/>
                                                        <Binding 
                                                            Path="Data.FileAttributes" 
                                                            Source="{StaticResource Navigator}"/>
                                                        <Binding 
                                                            Path="Data.FileExtensions" 
                                                            Source="{StaticResource Navigator}"/>
                                                        <Binding 
                                                            Path="Data.FolderAttributes" 
                                                            Source="{StaticResource Navigator}"/>
                                                        <Binding
                                                            Path="Data.ViewFiles" 
                                                            Source="{StaticResource Navigator}"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TreeView.ItemContainerStyle>
                        </TreeView>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>